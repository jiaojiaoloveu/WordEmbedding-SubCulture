{"_default": {"1": {"issues": [{"url": "https://api.github.com/repos/google/oauth2client/issues/732", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/732/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/732/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/732/events", "html_url": "https://github.com/google/oauth2client/issues/732", "id": 279817245, "number": 732, "title": "IndentationError: unindent does not match any outer indentation level (reauth_creds.py, line 136)", "user": {"login": "pablopla", "id": 638744, "avatar_url": "https://avatars0.githubusercontent.com/u/638744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pablopla", "html_url": "https://github.com/pablopla", "followers_url": "https://api.github.com/users/pablopla/followers", "following_url": "https://api.github.com/users/pablopla/following{/other_user}", "gists_url": "https://api.github.com/users/pablopla/gists{/gist_id}", "starred_url": "https://api.github.com/users/pablopla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pablopla/subscriptions", "organizations_url": "https://api.github.com/users/pablopla/orgs", "repos_url": "https://api.github.com/users/pablopla/repos", "events_url": "https://api.github.com/users/pablopla/events{/privacy}", "received_events_url": "https://api.github.com/users/pablopla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-06T16:26:14Z", "updated_at": "2017-12-06T16:26:14Z", "closed_at": null, "author_association": "NONE", "body": "google-cloud-sdk still uses this library.\r\n\r\nI'm getting the following error on Ubuntu-16.04:\r\n```bash\r\nSetting up google-cloud-sdk (182.0.0-0) ...\r\nCompiling lib/third_party/oauth2client/contrib/reauth_creds.py ...\r\nSorry: IndentationError: unindent does not match any outer indentation level (reauth_creds.py, line 136)\r\n```\r\nInstalling with:\r\n```bash\r\nexport CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\"\r\necho \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list\r\ncurl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -\r\nsudo apt-get update && sudo apt-get install google-cloud-sdk\r\n```", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/731", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/731/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/731/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/731/events", "html_url": "https://github.com/google/oauth2client/pull/731", "id": 276297520, "number": 731, "title": "Don't use socket.recv with socket.MSG_WAITALL", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 172076254, "url": "https://api.github.com/repos/google/oauth2client/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-23T08:41:12Z", "updated_at": "2017-11-23T08:49:57Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/google/oauth2client/pulls/731", "html_url": "https://github.com/google/oauth2client/pull/731", "diff_url": "https://github.com/google/oauth2client/pull/731.diff", "patch_url": "https://github.com/google/oauth2client/pull/731.patch"}, "body": "socket.MSG_WAITALL is not available on Windows so the call to\r\nsocket.recv with this flag will fail there. Provide a helper method\r\nthat tries to receive an exact number of bytes and use it instead.", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/730", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/730/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/730/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/730/events", "html_url": "https://github.com/google/oauth2client/issues/730", "id": 270491827, "number": 730, "title": "DjangoORMStorage: GOOGLE_OAUTH2_CLIENT_ID and GOOGLE_OAUTH2_CLIENT_SECRET empty in settings.py ", "user": {"login": "mauroka", "id": 13524412, "avatar_url": "https://avatars0.githubusercontent.com/u/13524412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mauroka", "html_url": "https://github.com/mauroka", "followers_url": "https://api.github.com/users/mauroka/followers", "following_url": "https://api.github.com/users/mauroka/following{/other_user}", "gists_url": "https://api.github.com/users/mauroka/gists{/gist_id}", "starred_url": "https://api.github.com/users/mauroka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mauroka/subscriptions", "organizations_url": "https://api.github.com/users/mauroka/orgs", "repos_url": "https://api.github.com/users/mauroka/repos", "events_url": "https://api.github.com/users/mauroka/events{/privacy}", "received_events_url": "https://api.github.com/users/mauroka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-02T00:05:29Z", "updated_at": "2017-11-02T01:32:52Z", "closed_at": null, "author_association": "NONE", "body": "Hello, is there a problem in setting GOOGLE_OAUTH2_CLIENT_ID and GOOGLE_OAUTH2_CLIENT_SECRET empty in settings.py like this?\r\nGOOGLE_OAUTH2_CLIENT_ID = \"\"\r\nGOOGLE_OAUTH2_CLIENT_SECRET = \"\"\r\n\r\nIt's because I am trying to use OAuth2WebServerFlow without a JSON file and load the client_id and client_secret from the Database for everyone of my multiple tenants.\r\n\r\nAnd when I store the credentials using DjangoORMStorage it throws a:\r\nMust specify either GOOGLE_OAUTH2_CLIENT_SECRETS_JSON, or either GOOGLE_OAUTH2_CLIENT_SECRETS_JSON, or both GOOGLE_OAUTH2_CLIENT_ID and GOOGLE_OAUTH2_CLIENT_SECRET in settings.py\r\n\r\nThanks a lot for the help.\r\nCheers.", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/729", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/729/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/729/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/729/events", "html_url": "https://github.com/google/oauth2client/issues/729", "id": 265404458, "number": 729, "title": "unrecognized arguments", "user": {"login": "CostGranda", "id": 5617032, "avatar_url": "https://avatars2.githubusercontent.com/u/5617032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CostGranda", "html_url": "https://github.com/CostGranda", "followers_url": "https://api.github.com/users/CostGranda/followers", "following_url": "https://api.github.com/users/CostGranda/following{/other_user}", "gists_url": "https://api.github.com/users/CostGranda/gists{/gist_id}", "starred_url": "https://api.github.com/users/CostGranda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CostGranda/subscriptions", "organizations_url": "https://api.github.com/users/CostGranda/orgs", "repos_url": "https://api.github.com/users/CostGranda/repos", "events_url": "https://api.github.com/users/CostGranda/events{/privacy}", "received_events_url": "https://api.github.com/users/CostGranda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-13T20:05:21Z", "updated_at": "2017-10-13T20:44:57Z", "closed_at": null, "author_association": "NONE", "body": "Hello, I'm recurring here for help in something. I know that the project is now deprecated but maybe someone is still around here :) the error is something weird, but here we go.\r\nI have a script that is listing my Google Drive files.\r\n```python\r\nfrom apiclient import discovery\r\nfrom httplib2 import Http\r\nfrom oauth2client import file, client, tools\r\n\r\nSCOPES = 'https://www.googleapis.com/auth/drive.readonly.metadata'\r\nstore = file.Storage('storage.json')\r\ncreds = store.get()\r\nif not creds or creds.invalid:\r\n    flow = client.flow_from_clientsecrets('client_secret.json', SCOPES)\r\n    creds = tools.run_flow(flow, store)\r\nDRIVE = discovery.build('drive', 'v3', http=creds.authorize(Http()))\r\n\r\nfiles = DRIVE.files().list().execute().get('files', [])\r\nfor f in files:\r\n    print(f['name'], f['mimeType'],f['id'])\r\n```\r\nIt works perfectly, I download the `client_secret.json` from Google API and save it in the same folder.\r\n\r\nThen I start to edit my file to change de behavior and don't read a file, instead, send the *client_id* and *client_secret* values to the script. Like  this:\r\n```python\r\nimport sys\r\nfrom apiclient import discovery\r\nfrom httplib2 import Http\r\nfrom oauth2client import file, client, tools\r\n\r\n# ID and SECRET arguments\r\nclient_id = sys.argv[1]\r\nclient_secret = sys.argv[2]\r\n\r\nSCOPES = 'https://www.googleapis.com/auth/drive.readonly.metadata'\r\n\r\ndef listFiles(drive):\r\n    \"\"\"Receive the service and list the files\"\"\"\r\n    files = drive.files().list().execute().get('files', [])\r\n    for f in files:\r\n        print(f['name'], f['mimeType'],f['id'])\r\n\r\ndef main():\r\n    store = file.Storage('storage.json')\r\n    creds = store.get()\r\n    if not creds or creds.invalid:\r\n        flow = client.OAuth2WebServerFlow(client_id, client_secret, SCOPES)\r\n        creds = tools.run_flow(flow, store, tools.argparser.parse_args())\r\n    DRIVE = discovery.build('drive', 'v3', http=creds.authorize(Http()))\r\n    listFiles(DRIVE)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\nThe first time that I start this new version of the script it works, because the script in the old version has created the `storage.json` file.\r\nThen I move my new version script to another folder or machine (where the `storage.json` file doesn't exists) to check if it works and then I get this:\r\n\r\n```\r\n$ python3 drive_list.py asdasdasdsa jijfkljflksdjflksdj\r\n\r\n/usr/local/lib/python3.4/dist-packages/oauth2client/_helpers.py:255: UserWarning: Cannot access storage.json: No such file or directory\r\n  warnings.warn(_MISSING_FILE_MESSAGE.format(filename))\r\nusage: drive_list.py [--auth_host_name AUTH_HOST_NAME]\r\n                     [--noauth_local_webserver]\r\n                     [--auth_host_port [AUTH_HOST_PORT [AUTH_HOST_PORT ...]]]\r\n                     [--logging_level {DEBUG,INFO,WARNING,ERROR,CRITICAL}]\r\ndrive_list.py: error: unrecognized arguments: asdasdasdsa jijfkljflksdjflksdj\r\n```\r\n*The warning about the storage.json file appears in both script versions, is part of oauth2.*\r\n\r\nThis is the curios part, why the arguments are recognized when the `storage.json` file exists (ONLY created reading the `client_secret.json`)? if the first time that the script start it creates the file.\r\nIs really weird this error, and I'm just trying to find what is happening exactly.\r\nIf someone can help me, I will be really thankful.", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/727", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/727/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/727/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/727/events", "html_url": "https://github.com/google/oauth2client/issues/727", "id": 262917603, "number": 727, "title": "Secret is logged in crypt.py", "user": {"login": "faizalkassamalisc", "id": 13651018, "avatar_url": "https://avatars0.githubusercontent.com/u/13651018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faizalkassamalisc", "html_url": "https://github.com/faizalkassamalisc", "followers_url": "https://api.github.com/users/faizalkassamalisc/followers", "following_url": "https://api.github.com/users/faizalkassamalisc/following{/other_user}", "gists_url": "https://api.github.com/users/faizalkassamalisc/gists{/gist_id}", "starred_url": "https://api.github.com/users/faizalkassamalisc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faizalkassamalisc/subscriptions", "organizations_url": "https://api.github.com/users/faizalkassamalisc/orgs", "repos_url": "https://api.github.com/users/faizalkassamalisc/repos", "events_url": "https://api.github.com/users/faizalkassamalisc/events{/privacy}", "received_events_url": "https://api.github.com/users/faizalkassamalisc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-04T20:20:11Z", "updated_at": "2017-10-04T20:20:11Z", "closed_at": null, "author_association": "NONE", "body": "**Note**: oauth2client is now deprecated. As such, it is unlikely that we will\r\naddress or respond to your issue. We recommend you use\r\n[google-auth](https://google-auth.readthedocs.io) and [oauthlib](http://oauthlib.readthedocs.io/).\r\n\r\nhttps://github.com/google/oauth2client/blob/master/oauth2client/crypt.py#L100\r\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/726", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/726/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/726/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/726/events", "html_url": "https://github.com/google/oauth2client/pull/726", "id": 260875722, "number": 726, "title": "Add `access_type` as an optional flow parameter", "user": {"login": "orenyomtov", "id": 168856, "avatar_url": "https://avatars2.githubusercontent.com/u/168856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orenyomtov", "html_url": "https://github.com/orenyomtov", "followers_url": "https://api.github.com/users/orenyomtov/followers", "following_url": "https://api.github.com/users/orenyomtov/following{/other_user}", "gists_url": "https://api.github.com/users/orenyomtov/gists{/gist_id}", "starred_url": "https://api.github.com/users/orenyomtov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orenyomtov/subscriptions", "organizations_url": "https://api.github.com/users/orenyomtov/orgs", "repos_url": "https://api.github.com/users/orenyomtov/repos", "events_url": "https://api.github.com/users/orenyomtov/events{/privacy}", "received_events_url": "https://api.github.com/users/orenyomtov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 172076254, "url": "https://api.github.com/repos/google/oauth2client/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-27T07:37:49Z", "updated_at": "2017-09-27T07:37:51Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/google/oauth2client/pulls/726", "html_url": "https://github.com/google/oauth2client/pull/726", "diff_url": "https://github.com/google/oauth2client/pull/726.diff", "patch_url": "https://github.com/google/oauth2client/pull/726.patch"}, "body": "", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/715", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/715/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/715/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/715/events", "html_url": "https://github.com/google/oauth2client/issues/715", "id": 229482932, "number": 715, "title": "Add deprecation notice to docs.", "user": {"login": "tswast", "id": 247555, "avatar_url": "https://avatars3.githubusercontent.com/u/247555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tswast", "html_url": "https://github.com/tswast", "followers_url": "https://api.github.com/users/tswast/followers", "following_url": "https://api.github.com/users/tswast/following{/other_user}", "gists_url": "https://api.github.com/users/tswast/gists{/gist_id}", "starred_url": "https://api.github.com/users/tswast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tswast/subscriptions", "organizations_url": "https://api.github.com/users/tswast/orgs", "repos_url": "https://api.github.com/users/tswast/repos", "events_url": "https://api.github.com/users/tswast/events{/privacy}", "received_events_url": "https://api.github.com/users/tswast/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-17T20:50:48Z", "updated_at": "2017-06-07T02:57:37Z", "closed_at": null, "author_association": "MEMBER", "body": "oauth2client is now deprecated, but when I look at https://oauth2client.readthedocs.io/en/latest/, I wouldn't know.\r\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/706", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/706/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/706/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/706/events", "html_url": "https://github.com/google/oauth2client/issues/706", "id": 217943860, "number": 706, "title": "When performing grant_type=refresh_token, the \"Authorization: Bearer...\" header is applied", "user": {"login": "wtfrank", "id": 1202593, "avatar_url": "https://avatars0.githubusercontent.com/u/1202593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wtfrank", "html_url": "https://github.com/wtfrank", "followers_url": "https://api.github.com/users/wtfrank/followers", "following_url": "https://api.github.com/users/wtfrank/following{/other_user}", "gists_url": "https://api.github.com/users/wtfrank/gists{/gist_id}", "starred_url": "https://api.github.com/users/wtfrank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wtfrank/subscriptions", "organizations_url": "https://api.github.com/users/wtfrank/orgs", "repos_url": "https://api.github.com/users/wtfrank/repos", "events_url": "https://api.github.com/users/wtfrank/events{/privacy}", "received_events_url": "https://api.github.com/users/wtfrank/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-29T17:05:42Z", "updated_at": "2017-03-29T17:05:42Z", "closed_at": null, "author_association": "NONE", "body": "I'm not sure it makes sense to be authorizing with a probably-expired access token in the header, at the same time that in the body you are passing the client id+secret and requesting a new access token", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/702", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/702/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/702/events", "html_url": "https://github.com/google/oauth2client/issues/702", "id": 215966087, "number": 702, "title": "Travis flake8 test failure on bare except", "user": {"login": "cclauss", "id": 3709715, "avatar_url": "https://avatars3.githubusercontent.com/u/3709715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cclauss", "html_url": "https://github.com/cclauss", "followers_url": "https://api.github.com/users/cclauss/followers", "following_url": "https://api.github.com/users/cclauss/following{/other_user}", "gists_url": "https://api.github.com/users/cclauss/gists{/gist_id}", "starred_url": "https://api.github.com/users/cclauss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cclauss/subscriptions", "organizations_url": "https://api.github.com/users/cclauss/orgs", "repos_url": "https://api.github.com/users/cclauss/repos", "events_url": "https://api.github.com/users/cclauss/events{/privacy}", "received_events_url": "https://api.github.com/users/cclauss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-22T06:31:20Z", "updated_at": "2017-03-22T06:31:20Z", "closed_at": null, "author_association": "NONE", "body": "https://travis-ci.org/google/oauth2client/jobs/213718008#L266-L268", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/700", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/700/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/700/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/700/events", "html_url": "https://github.com/google/oauth2client/issues/700", "id": 213054521, "number": 700, "title": "Mandatory slash at the end of oauth_callback URI is incompatible with Google Dev Console credential settings", "user": {"login": "akalmykov", "id": 4420479, "avatar_url": "https://avatars3.githubusercontent.com/u/4420479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akalmykov", "html_url": "https://github.com/akalmykov", "followers_url": "https://api.github.com/users/akalmykov/followers", "following_url": "https://api.github.com/users/akalmykov/following{/other_user}", "gists_url": "https://api.github.com/users/akalmykov/gists{/gist_id}", "starred_url": "https://api.github.com/users/akalmykov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akalmykov/subscriptions", "organizations_url": "https://api.github.com/users/akalmykov/orgs", "repos_url": "https://api.github.com/users/akalmykov/repos", "events_url": "https://api.github.com/users/akalmykov/events{/privacy}", "received_events_url": "https://api.github.com/users/akalmykov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-09T14:33:44Z", "updated_at": "2017-03-09T14:33:44Z", "closed_at": null, "author_association": "NONE", "body": "Mandatory slash at the end of oauth_callback URI is incompatible with Google Dev Console credential settings. In Google Dev console Credential one cannot register a call back URL that end with a slash. But oath client inserts the slash, leading to Error: redirect_uri_mismatch\r\n\r\nThe slash shouldn't be mandatory in oath2 client. Or should be allowed in Google Dev Console settings.\r\n\r\nThis can be reproduced by running any example for python api client, e.g.\r\nhttps://github.com/youtube/api-samples/blob/master/python/upload_video.py\r\n\r\nThe issue is in tools.py:\r\n\r\n```\r\n    if not flags.noauth_local_webserver:\r\n        oauth_callback = 'http://{host}:{port}/'.format(\r\n            host=flags.auth_host_name, port=port_number)\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/699", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/699/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/699/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/699/events", "html_url": "https://github.com/google/oauth2client/pull/699", "id": 207935962, "number": 699, "title": "Add support for reauth in oauth2", "user": {"login": "svalentin", "id": 250871, "avatar_url": "https://avatars2.githubusercontent.com/u/250871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svalentin", "html_url": "https://github.com/svalentin", "followers_url": "https://api.github.com/users/svalentin/followers", "following_url": "https://api.github.com/users/svalentin/following{/other_user}", "gists_url": "https://api.github.com/users/svalentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/svalentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svalentin/subscriptions", "organizations_url": "https://api.github.com/users/svalentin/orgs", "repos_url": "https://api.github.com/users/svalentin/repos", "events_url": "https://api.github.com/users/svalentin/events{/privacy}", "received_events_url": "https://api.github.com/users/svalentin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 172076254, "url": "https://api.github.com/repos/google/oauth2client/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-15T21:38:17Z", "updated_at": "2017-05-24T23:42:32Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/google/oauth2client/pulls/699", "html_url": "https://github.com/google/oauth2client/pull/699", "diff_url": "https://github.com/google/oauth2client/pull/699.diff", "patch_url": "https://github.com/google/oauth2client/pull/699.patch"}, "body": "When the library refreshes an access token, if it fails because a rapt\r\ntoken is required or invalid, we try to refresh the rapt token and then\r\nretry the access token refresh.\r\n\r\nTo refresh the rapt token, we interact with the rapt service to get one.\r\nThis implies getting an access token for just REAUTH_SCOPE (which\r\nshouldn't require a rapt token) then passing that to the reauth service\r\nand answering challenges. Challenges could either be PASSWORD or\r\nSECURITY_KEY. Different accounts can have different policies. Some\r\naccounts might need only password, some can require both.\r\nOnce all challenges are answered, we get back a rapt token, which we use\r\nto get an access token with all scopes, and we return the request as if\r\nthe original access token refresh completed successfully.\r\n\r\nAccess tokens can have a lifespan shorter than a rapt token, and getting\r\na rapt token requires going through the whole reauth flow, where the\r\nuser enters their password/gnubby. An example is 1h expiry time for\r\naccess token, and 24h for rapt token.\r\n\r\nCommunication with the gnubby is done via the pyu2f libary (all python)\r\nhttps://github.com/google/pyu2f/\r\n\r\nThe idea is clients (like gcloud) could come with that library included,\r\nbut if it's not, we can fail elegantly and just tell users we couldn't\r\nrefresh access token.\r\nWe can also include the library in oauth2 if it's appropriate.", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/696", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/696/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/696/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/696/events", "html_url": "https://github.com/google/oauth2client/issues/696", "id": 204471597, "number": 696, "title": "multiprocess_file_storage needs fasteners, but it's not listed as a requirement", "user": {"login": "houglum", "id": 14894525, "avatar_url": "https://avatars0.githubusercontent.com/u/14894525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houglum", "html_url": "https://github.com/houglum", "followers_url": "https://api.github.com/users/houglum/followers", "following_url": "https://api.github.com/users/houglum/following{/other_user}", "gists_url": "https://api.github.com/users/houglum/gists{/gist_id}", "starred_url": "https://api.github.com/users/houglum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houglum/subscriptions", "organizations_url": "https://api.github.com/users/houglum/orgs", "repos_url": "https://api.github.com/users/houglum/repos", "events_url": "https://api.github.com/users/houglum/events{/privacy}", "received_events_url": "https://api.github.com/users/houglum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-01T01:10:31Z", "updated_at": "2017-02-01T22:20:38Z", "closed_at": null, "author_association": "NONE", "body": "I'm looking at migrating gsutil to a current version of oauth2client, which has done away with locked_file, multistore_file, etc. (as mentioned at length in the discussion at https://github.com/google/oauth2client/pull/504).\r\n\r\nWhen trying to import multistore_file's replacement, multiprocessing_file_storage, from oauth2client.contrib, I get the error message:\r\nImportError: No module named fasteners\r\n\r\nI get this both with the repo version and pip-installed version of oauth2client 4.0.0.  It seems that fasteners wasn't added to the list of requirements as part of https://github.com/google/oauth2client/commit/66d47251fd08abf57fd1d80569901346b91cd422.", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/695", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/695/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/695/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/695/events", "html_url": "https://github.com/google/oauth2client/issues/695", "id": 204345081, "number": 695, "title": "Google-oauth is not working inside Jupyter Notebook", "user": {"login": "snarb", "id": 4518007, "avatar_url": "https://avatars3.githubusercontent.com/u/4518007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snarb", "html_url": "https://github.com/snarb", "followers_url": "https://api.github.com/users/snarb/followers", "following_url": "https://api.github.com/users/snarb/following{/other_user}", "gists_url": "https://api.github.com/users/snarb/gists{/gist_id}", "starred_url": "https://api.github.com/users/snarb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snarb/subscriptions", "organizations_url": "https://api.github.com/users/snarb/orgs", "repos_url": "https://api.github.com/users/snarb/repos", "events_url": "https://api.github.com/users/snarb/events{/privacy}", "received_events_url": "https://api.github.com/users/snarb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-31T16:16:16Z", "updated_at": "2017-06-09T23:10:02Z", "closed_at": null, "author_association": "NONE", "body": "When importing modele with recomended code: \r\nflags = argparser.parse_args()\r\ncredentials = run_flow(flow, storage, flags) inside Jupyter Notebook got exception.\r\n\r\nSimple\r\n   from oauth2client.tools import argparser\r\n   argparser.parse_args()\r\n\r\nFailing with:\r\n\r\nusage: __main__.py [--auth_host_name AUTH_HOST_NAME]\r\n                   [--noauth_local_webserver]\r\n                   [--auth_host_port [AUTH_HOST_PORT [AUTH_HOST_PORT ...]]]\r\n                       [--logging_level {DEBUG,INFO,WARNING,ERROR,CRITICAL}]\r\n    __main__.py: error: unrecognized arguments: -f /run/user/1000/jupyter/kernel-c9aa5199-fcea-4884-8e5f-a004c66a733e.json\r\n\r\nSystemExit                                Traceback (most recent call last)\r\n<ipython-input-3-d141fc7aebe0> in <module>()\r\n----> 1 argparser.parse_args()\r\n\r\n/usr/lib/python3.5/argparse.py in parse_args(self, args, namespace)\r\n   1736         if argv:\r\n   1737             msg = _('unrecognized arguments: %s')\r\n-> 1738             self.error(msg % ' '.join(argv))\r\n   1739         return args\r\n   1740 \r\n\r\n/usr/lib/python3.5/argparse.py in error(self, message)\r\n   2392         self.print_usage(_sys.stderr)\r\n   2393         args = {'prog': self.prog, 'message': message}\r\n-> 2394         self.exit(2, _('%(prog)s: error: %(message)s\\n') % args)\r\n\r\n/usr/lib/python3.5/argparse.py in exit(self, status, message)\r\n   2379         if message:\r\n   2380             self._print_message(message, _sys.stderr)\r\n-> 2381         _sys.exit(status)\r\n   2382 \r\n   2383     def error(self, message):\r\n\r\nSystemExit: 2\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/689", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/689/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/689/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/689/events", "html_url": "https://github.com/google/oauth2client/issues/689", "id": 197766822, "number": 689, "title": "Inconsistent definitions of \"expired\" between `access_token_expired()` and `_expires_in()`", "user": {"login": "tamakisquare", "id": 538353, "avatar_url": "https://avatars1.githubusercontent.com/u/538353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamakisquare", "html_url": "https://github.com/tamakisquare", "followers_url": "https://api.github.com/users/tamakisquare/followers", "following_url": "https://api.github.com/users/tamakisquare/following{/other_user}", "gists_url": "https://api.github.com/users/tamakisquare/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamakisquare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamakisquare/subscriptions", "organizations_url": "https://api.github.com/users/tamakisquare/orgs", "repos_url": "https://api.github.com/users/tamakisquare/repos", "events_url": "https://api.github.com/users/tamakisquare/events{/privacy}", "received_events_url": "https://api.github.com/users/tamakisquare/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-27T22:34:07Z", "updated_at": "2017-01-31T21:31:51Z", "closed_at": null, "author_association": "NONE", "body": "I am using a higher-level library, *Pyrebase*, that relies on oauth2client. I have been getting intermittent problem with `OAuth2Credentials.get_access_token()`, in which the token is expired, according to `OAuth2Credentials._expired_in()` that returns an integer `0`, but `OAuth2Credentials.access_token_expired()` thinks otherwise.\r\n\r\nI put in additional logging into the code to see what's going on. I have found out that the intermittent problem that I am getting happens when the expiry time is less than a second away. Here is an example. \r\n\r\n> Now: 2016-12-27 21:55:00.024112, token_expiry: 2016-12-27 21:55:00.204173\r\n\r\n`_expired_in()` would return an integer `0`, indicating that the token has expired, while `access_token_expired()` would return `False` denoting the token is still valid.  The root cause of the problem lies in the fact that the former method has a precision to the nearest second while the latter deals with fraction of a second.\r\n\r\n`access_token_expired()` and `_expires_in()` need to have their definitions of **\"expired\"** aligned with each other.", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/686", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/686/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/686/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/686/events", "html_url": "https://github.com/google/oauth2client/issues/686", "id": 196307048, "number": 686, "title": "Is django_orm deprecated?", "user": {"login": "Cosbgn", "id": 17546283, "avatar_url": "https://avatars3.githubusercontent.com/u/17546283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cosbgn", "html_url": "https://github.com/Cosbgn", "followers_url": "https://api.github.com/users/Cosbgn/followers", "following_url": "https://api.github.com/users/Cosbgn/following{/other_user}", "gists_url": "https://api.github.com/users/Cosbgn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cosbgn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cosbgn/subscriptions", "organizations_url": "https://api.github.com/users/Cosbgn/orgs", "repos_url": "https://api.github.com/users/Cosbgn/repos", "events_url": "https://api.github.com/users/Cosbgn/events{/privacy}", "received_events_url": "https://api.github.com/users/Cosbgn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-12-18T23:32:30Z", "updated_at": "2017-10-07T06:24:45Z", "closed_at": null, "author_association": "NONE", "body": "from [change log](https://github.com/google/oauth2client/blob/master/CHANGELOG.md) of V.2.2.0 I read:` oauth2client.contrib.django_util and oauth2client.contrib.django_orm have been updated to support Django 1.8 - 1.10.`\r\n\r\nHowever `django_orm` is not in the source code and obviously I get an `import error` when running `from oauth2client.contrib.django_orm import CredentialsField`\r\n\r\nIs this deprecated or I need to import something else? I guess then [this official Google guide](https://developers.google.com/api-client-library/python/guide/django) is outdated, right? ", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/686/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/685", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/685/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/685/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/685/events", "html_url": "https://github.com/google/oauth2client/issues/685", "id": 196147583, "number": 685, "title": "Obtain service credentials from dict", "user": {"login": "AP-e", "id": 20714233, "avatar_url": "https://avatars0.githubusercontent.com/u/20714233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AP-e", "html_url": "https://github.com/AP-e", "followers_url": "https://api.github.com/users/AP-e/followers", "following_url": "https://api.github.com/users/AP-e/following{/other_user}", "gists_url": "https://api.github.com/users/AP-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/AP-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AP-e/subscriptions", "organizations_url": "https://api.github.com/users/AP-e/orgs", "repos_url": "https://api.github.com/users/AP-e/repos", "events_url": "https://api.github.com/users/AP-e/events{/privacy}", "received_events_url": "https://api.github.com/users/AP-e/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-16T20:27:38Z", "updated_at": "2016-12-16T20:27:38Z", "closed_at": null, "author_association": "NONE", "body": "Is there a way to supply a dict to `oauth2client.client.flow_from_clientsecrets()` to create a Flow object without reference to the service account .JSON file? My understanding is that this restriction prevents the storage of sensitive information in code, however it seems possible for this file to be unintentionally exposed via source control or otherwise compromised. My current workaround, when deploying to Heroku, involves reconstruction of the credentials file from environment variables.", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/684", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/684/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/684/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/684/events", "html_url": "https://github.com/google/oauth2client/issues/684", "id": 194009790, "number": 684, "title": "Load settings lazily", "user": {"login": "bboogaard", "id": 1597670, "avatar_url": "https://avatars3.githubusercontent.com/u/1597670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bboogaard", "html_url": "https://github.com/bboogaard", "followers_url": "https://api.github.com/users/bboogaard/followers", "following_url": "https://api.github.com/users/bboogaard/following{/other_user}", "gists_url": "https://api.github.com/users/bboogaard/gists{/gist_id}", "starred_url": "https://api.github.com/users/bboogaard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bboogaard/subscriptions", "organizations_url": "https://api.github.com/users/bboogaard/orgs", "repos_url": "https://api.github.com/users/bboogaard/repos", "events_url": "https://api.github.com/users/bboogaard/events{/privacy}", "received_events_url": "https://api.github.com/users/bboogaard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-07T10:18:33Z", "updated_at": "2016-12-07T19:42:32Z", "closed_at": null, "author_association": "NONE", "body": "Would you consider changing the django integration in such a way that the api credentials are not needed compile time (e.g. by wrapping the instantiation of OAuth2Settings in a SimpleLazyObject).\r\n\r\nOr is there another way of skipping the loading of client secrets whenever I import oauth2client.contrib.django_util?", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/681", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/681/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/681/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/681/events", "html_url": "https://github.com/google/oauth2client/issues/681", "id": 191943173, "number": 681, "title": "jsonpickle isn't a dependency?", "user": {"login": "john2x", "id": 332885, "avatar_url": "https://avatars2.githubusercontent.com/u/332885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/john2x", "html_url": "https://github.com/john2x", "followers_url": "https://api.github.com/users/john2x/followers", "following_url": "https://api.github.com/users/john2x/following{/other_user}", "gists_url": "https://api.github.com/users/john2x/gists{/gist_id}", "starred_url": "https://api.github.com/users/john2x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/john2x/subscriptions", "organizations_url": "https://api.github.com/users/john2x/orgs", "repos_url": "https://api.github.com/users/john2x/repos", "events_url": "https://api.github.com/users/john2x/events{/privacy}", "received_events_url": "https://api.github.com/users/john2x/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-28T08:16:38Z", "updated_at": "2016-11-28T08:31:35Z", "closed_at": null, "author_association": "NONE", "body": "I'm getting `ImportError: No module named jsonpickle` with Python 2.7 and the `django_util` module using version `4.0.0`. #672 and #676 seem to suggest that `jsonpickle` should already be a dependency, but it isn't listed in `setup.py`?", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/681/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/677", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/677/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/677/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/677/events", "html_url": "https://github.com/google/oauth2client/issues/677", "id": 190526805, "number": 677, "title": "Restrict access to a specified domain with flask_util.", "user": {"login": "rfinck", "id": 1189568, "avatar_url": "https://avatars1.githubusercontent.com/u/1189568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfinck", "html_url": "https://github.com/rfinck", "followers_url": "https://api.github.com/users/rfinck/followers", "following_url": "https://api.github.com/users/rfinck/following{/other_user}", "gists_url": "https://api.github.com/users/rfinck/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfinck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfinck/subscriptions", "organizations_url": "https://api.github.com/users/rfinck/orgs", "repos_url": "https://api.github.com/users/rfinck/repos", "events_url": "https://api.github.com/users/rfinck/events{/privacy}", "received_events_url": "https://api.github.com/users/rfinck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-11-19T23:08:43Z", "updated_at": "2017-03-30T15:33:58Z", "closed_at": null, "author_association": "NONE", "body": "I am using oauth2client.contrib.flask_util for an application whose access I want to restrict to accounts at a specified Google Apps domain. To do this, I've edited the callback view to check the 'hd' field of the credential's id_token just before saving the credentials to storage. The particular domain is given as a kwarg to init_app, which means that it gets passed to client.OAuth2WebServerFlow, which already recognizes it and adds a helpful message to the log-in page indicating that an email address at that domain is expected. (It appears, however, that that argument is not enough to restrict access, hence the changes to the callback view, although if there is already a built-in way to restrict I'd be happy to use that instead.)\r\n\r\nIf this is something that'd be generally useful, I can make a pull request.", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/675", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/675/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/675/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/675/events", "html_url": "https://github.com/google/oauth2client/issues/675", "id": 189857166, "number": 675, "title": "clientsecrets.py, line 121, in _loadfile     with open(filename, 'r') as fp: TypeError: coercing to Unicode: need string or buffer, dict found", "user": {"login": "suyashgithub", "id": 1293136, "avatar_url": "https://avatars0.githubusercontent.com/u/1293136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suyashgithub", "html_url": "https://github.com/suyashgithub", "followers_url": "https://api.github.com/users/suyashgithub/followers", "following_url": "https://api.github.com/users/suyashgithub/following{/other_user}", "gists_url": "https://api.github.com/users/suyashgithub/gists{/gist_id}", "starred_url": "https://api.github.com/users/suyashgithub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suyashgithub/subscriptions", "organizations_url": "https://api.github.com/users/suyashgithub/orgs", "repos_url": "https://api.github.com/users/suyashgithub/repos", "events_url": "https://api.github.com/users/suyashgithub/events{/privacy}", "received_events_url": "https://api.github.com/users/suyashgithub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-11-16T21:48:33Z", "updated_at": "2016-11-16T21:51:32Z", "closed_at": null, "author_association": "NONE", "body": "I am using django 1.10 with python 2.7 , my setting files is GOOGLE_OAUTH2_CLIENT_SECRETS_JSON ={\r\n    'secret_key': '<secret_code>',\r\n    'client_id': '<client_id>',\r\n    'client_secret': '<client_secret>',\r\n    'scope' : '<scope>',\r\n    'redirect_uri': '<redirect_uri'>'\r\n}\r\nCredentialsModel is :\r\nfrom django.contrib.auth.models import User\r\nfrom django.db import models\r\nfrom oauth2client.contrib.django_util.models import CredentialsField\r\nclass CredentialsModel(models.Model):\r\n  id = models.ForeignKey(User, primary_key=True)\r\n  credential = CredentialsField()\r\n\r\nwhen i am creating the migration  then getting this error\r\n\r\n  File \"/Users/suyash/virtualenvs/sr/lib/python2.7/site-packages/oauth2client/clientsecrets.py\", line 165, in loadfile\r\n    return _loadfile(filename)\r\n  File \"/Users/suyash/virtualenvs/sr/lib/python2.7/site-packages/oauth2client/clientsecrets.py\", line 121, in _loadfile\r\n    with open(filename, 'r') as fp:\r\nTypeError: coercing to Unicode: need string or buffer, dict found", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/672", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/672/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/672/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/672/events", "html_url": "https://github.com/google/oauth2client/issues/672", "id": 188768988, "number": 672, "title": "Unpickle problems when upgrading from Python 2.7 to 3.5", "user": {"login": "chripede", "id": 406836, "avatar_url": "https://avatars3.githubusercontent.com/u/406836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chripede", "html_url": "https://github.com/chripede", "followers_url": "https://api.github.com/users/chripede/followers", "following_url": "https://api.github.com/users/chripede/following{/other_user}", "gists_url": "https://api.github.com/users/chripede/gists{/gist_id}", "starred_url": "https://api.github.com/users/chripede/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chripede/subscriptions", "organizations_url": "https://api.github.com/users/chripede/orgs", "repos_url": "https://api.github.com/users/chripede/repos", "events_url": "https://api.github.com/users/chripede/events{/privacy}", "received_events_url": "https://api.github.com/users/chripede/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-11-11T14:16:34Z", "updated_at": "2016-11-16T23:02:24Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I've been using the Django contrib CredentialsField to store authentications in my database. This all happened in Python 2.7\r\n\r\nI'm trying to upgrade to 3.5, but the pickled CredentialsField is giving me some problems. It seems impossible to unpickle an Python 2.7 object in Python 3 that contains both strings and a datetime. See http://bugs.python.org/issue22005\r\n\r\nIs there any \"best practice\" way to do this, or will I need to convert everything to JSON and the pickle it again?", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/669", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/669/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/669/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/669/events", "html_url": "https://github.com/google/oauth2client/issues/669", "id": 187085058, "number": 669, "title": "Prettify stored credentials", "user": {"login": "jay0lee", "id": 4623536, "avatar_url": "https://avatars2.githubusercontent.com/u/4623536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jay0lee", "html_url": "https://github.com/jay0lee", "followers_url": "https://api.github.com/users/jay0lee/followers", "following_url": "https://api.github.com/users/jay0lee/following{/other_user}", "gists_url": "https://api.github.com/users/jay0lee/gists{/gist_id}", "starred_url": "https://api.github.com/users/jay0lee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jay0lee/subscriptions", "organizations_url": "https://api.github.com/users/jay0lee/orgs", "repos_url": "https://api.github.com/users/jay0lee/repos", "events_url": "https://api.github.com/users/jay0lee/events{/privacy}", "received_events_url": "https://api.github.com/users/jay0lee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-11-03T15:02:31Z", "updated_at": "2016-11-03T15:02:31Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Currently, credentials are stored as minimal JSON. This makes it a challenge when a developer needs to peek at credentials stored to a file in order to find their project_id, client_id, refresh_token or some other detail.\r\n\r\nWe should be able to pretty print the JSON before storage to make it easier for human eyes to read.", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/657", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/657/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/657/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/657/events", "html_url": "https://github.com/google/oauth2client/issues/657", "id": 178989620, "number": 657, "title": "Loading from P12 broken on Python 3", "user": {"login": "msaniscalchi", "id": 6739520, "avatar_url": "https://avatars3.githubusercontent.com/u/6739520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msaniscalchi", "html_url": "https://github.com/msaniscalchi", "followers_url": "https://api.github.com/users/msaniscalchi/followers", "following_url": "https://api.github.com/users/msaniscalchi/following{/other_user}", "gists_url": "https://api.github.com/users/msaniscalchi/gists{/gist_id}", "starred_url": "https://api.github.com/users/msaniscalchi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msaniscalchi/subscriptions", "organizations_url": "https://api.github.com/users/msaniscalchi/orgs", "repos_url": "https://api.github.com/users/msaniscalchi/repos", "events_url": "https://api.github.com/users/msaniscalchi/events{/privacy}", "received_events_url": "https://api.github.com/users/msaniscalchi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-23T22:51:27Z", "updated_at": "2016-09-24T00:02:33Z", "closed_at": null, "author_association": "NONE", "body": "Loading credentials from a P12 file via `oauth2client.service_account.ServiceAccountCredentials.from_p12_keyfile` is broken in Python 3. The relevant portion of the stacktrace is:\n\n```\n...\n  File \"/usr/local/lib/python3.4/dist-packages/oauth2client-3.0.0-py3.4.egg/oauth2client/service_account.py\", line 334, in from_p12_keyfile\n    token_uri=token_uri, revoke_uri=revoke_uri)\n  File \"/usr/local/lib/python3.4/dist-packages/oauth2client-3.0.0-py3.4.egg/oauth2client/service_account.py\", line 291, in _from_p12_keyfile_contents\n    private_key_password)\n  File \"/usr/local/lib/python3.4/dist-packages/oauth2client-3.0.0-py3.4.egg/oauth2client/_openssl_crypt.py\", line 119, in from_string\n    pkey = crypto.load_pkcs12(key, password).get_privatekey()\nTypeError: must be str, not bytes\n```\n\nI've followed the stacktrace to `_openssl_crypt.py's OpenSSLSigner.from_string` method and noticed that the [password defaults to bytes](https://github.com/google/oauth2client/blob/master/oauth2client/_openssl_crypt.py#L100) and is also [converted to bytes](https://github.com/google/oauth2client/blob/master/oauth2client/_openssl_crypt.py#L118) (if it isn't already). This results in the TypeError when it is passed along to [get the private key](https://github.com/google/oauth2client/blob/master/oauth2client/_openssl_crypt.py#L119).\n\nThe issue appears to be resolved if we don't force the password to be bytes, e.g.:\n\n```\n    @staticmethod\n    def from_string(key, password='notasecret'):\n        key = _helpers._to_bytes(key)\n        parsed_pem_key = _helpers._parse_pem_key(key)\n        if parsed_pem_key:\n            pkey = crypto.load_privatekey(crypto.FILETYPE_PEM, parsed_pem_key)\n        else:\n            pkey = crypto.load_pkcs12(key, password).get_privatekey()\n        return OpenSSLSigner(pkey)\n```\n\nI've verified that this works in Python 3, and doesn't seem to introduce any issues to Python 2.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/656", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/656/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/656/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/656/events", "html_url": "https://github.com/google/oauth2client/issues/656", "id": 178416103, "number": 656, "title": "Drop casting of status codes to integers throughout client.py and elsewhere", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 295574385, "url": "https://api.github.com/repos/google/oauth2client/labels/hygiene", "name": "hygiene", "color": "d4c5f9", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-21T17:46:08Z", "updated_at": "2017-10-10T20:04:24Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "I vaguely remember a PR that added all of this, but can't remember the why.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/650", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/650/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/650/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/650/events", "html_url": "https://github.com/google/oauth2client/issues/650", "id": 177516327, "number": 650, "title": "Header keys should all be set as bytes, not unicode.", "user": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64740891, "url": "https://api.github.com/repos/google/oauth2client/labels/bug", "name": "bug", "color": "fc2929", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2016-09-16T20:43:36Z", "updated_at": "2017-10-10T20:04:20Z", "closed_at": null, "author_association": "MEMBER", "body": "Context: #648\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/649", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/649/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/649/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/649/events", "html_url": "https://github.com/google/oauth2client/issues/649", "id": 177470889, "number": 649, "title": "client should do cache eviction on id token certificates", "user": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64740891, "url": "https://api.github.com/repos/google/oauth2client/labels/bug", "name": "bug", "color": "fc2929", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2016-09-16T16:47:25Z", "updated_at": "2016-09-16T16:47:25Z", "closed_at": null, "author_association": "MEMBER", "body": "- We should likely cache and evict based on key id, instead of certificate uri.\n- endpoints uses [memcache as their cache](https://github.com/cloudendpoints/endpoints-python/blob/067490edee4d157f2ff919d4d3e85d38d73a832c/endpoints/users_id_token.py#L200-L201) but we can continue to use an in-memory cache.\n- endpoints evicts based on the [cache control header](https://github.com/cloudendpoints/endpoints-python/blob/067490edee4d157f2ff919d4d3e85d38d73a832c/endpoints/users_id_token.py#L434)\n\n(context #647)\n\n(No milestone assigned, @dhermes and I do not feel like this should block 4.0.0 but it would be nice to have)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/645", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/645/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/645/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/645/events", "html_url": "https://github.com/google/oauth2client/issues/645", "id": 176962381, "number": 645, "title": "Service account info on GCE occasionally is missing keys.", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 442634418, "url": "https://api.github.com/repos/google/oauth2client/labels/google-compute-engine", "name": "google-compute-engine", "color": "1d76db", "default": false}], "state": "open", "locked": false, "assignee": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2016-09-14T16:56:53Z", "updated_at": "2016-09-15T16:34:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "From https://github.com/GoogleCloudPlatform/google-cloud-python/issues/2314\n\nCalls [to `_retrieve_info`](https://github.com/google/oauth2client/blob/9f0618d53481a3afe2d0cf232131ba21dcf583de/oauth2client/contrib/gce.py#L113) seem to be failing in a strange way, i.e. `info` is a valid dictionary but does not contain `email`.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/644", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/644/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/644/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/644/events", "html_url": "https://github.com/google/oauth2client/issues/644", "id": 176748165, "number": 644, "title": "Rename to_json/from_json as json_serialize/json_deserialize", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64740891, "url": "https://api.github.com/repos/google/oauth2client/labels/bug", "name": "bug", "color": "fc2929", "default": true}, {"id": 295574385, "url": "https://api.github.com/repos/google/oauth2client/labels/hygiene", "name": "hygiene", "color": "d4c5f9", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 5, "created_at": "2016-09-13T20:59:41Z", "updated_at": "2017-02-25T09:13:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "People often get these confused with methods they should actually be using.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/642", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/642/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/642/events", "html_url": "https://github.com/google/oauth2client/issues/642", "id": 176744546, "number": 642, "title": "AttributeError when library called from embedded Python (missing sys.argv)", "user": {"login": "sahuguet", "id": 355907, "avatar_url": "https://avatars0.githubusercontent.com/u/355907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sahuguet", "html_url": "https://github.com/sahuguet", "followers_url": "https://api.github.com/users/sahuguet/followers", "following_url": "https://api.github.com/users/sahuguet/following{/other_user}", "gists_url": "https://api.github.com/users/sahuguet/gists{/gist_id}", "starred_url": "https://api.github.com/users/sahuguet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sahuguet/subscriptions", "organizations_url": "https://api.github.com/users/sahuguet/orgs", "repos_url": "https://api.github.com/users/sahuguet/repos", "events_url": "https://api.github.com/users/sahuguet/events{/privacy}", "received_events_url": "https://api.github.com/users/sahuguet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-13T20:44:19Z", "updated_at": "2017-02-14T08:45:12Z", "closed_at": null, "author_association": "NONE", "body": "When the library is used with embedded Python (e.g. Postgres extension written in C calling Python, like Multicorn), sys.argv is not defined, which makes the library misbehave, see below.\n\n```\n      File \"/usr/local/lib/python2.7/dist-packages/oauth2client/tools.py\", line 83, in _CreateArgumentParser\n        parser = argparse.ArgumentParser(add_help=False)\n\n      File \"/usr/lib/python2.7/argparse.py\", line 1575, in __init__\n        prog = _os.path.basename(_sys.argv[0])\n\n    AttributeError: 'module' object has no attribute 'argv'\n\n```\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/639", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/639/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/639/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/639/events", "html_url": "https://github.com/google/oauth2client/issues/639", "id": 174300523, "number": 639, "title": "When using from oauth2client.file.Storage to put and get Credentials the token expiry is not correctly loaded", "user": {"login": "dayimproper", "id": 337599, "avatar_url": "https://avatars2.githubusercontent.com/u/337599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dayimproper", "html_url": "https://github.com/dayimproper", "followers_url": "https://api.github.com/users/dayimproper/followers", "following_url": "https://api.github.com/users/dayimproper/following{/other_user}", "gists_url": "https://api.github.com/users/dayimproper/gists{/gist_id}", "starred_url": "https://api.github.com/users/dayimproper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dayimproper/subscriptions", "organizations_url": "https://api.github.com/users/dayimproper/orgs", "repos_url": "https://api.github.com/users/dayimproper/repos", "events_url": "https://api.github.com/users/dayimproper/events{/privacy}", "received_events_url": "https://api.github.com/users/dayimproper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64740891, "url": "https://api.github.com/repos/google/oauth2client/labels/bug", "name": "bug", "color": "fc2929", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2016-08-31T15:14:32Z", "updated_at": "2016-09-13T21:05:49Z", "closed_at": null, "author_association": "NONE", "body": "The function `_parse_expiry` in `oauth2client.client` is used both to format a datetime to string in the function [`Credentials.to_json()`](https://github.com/google/oauth2client/blob/ebe9ed0bbbe4ce51c1a76de694c795e38906d690/oauth2client/client.py#L264) and to try and parse a string into datetime in [`GoogleCredentials.from_json()`](https://github.com/google/oauth2client/blob/ebe9ed0bbbe4ce51c1a76de694c795e38906d690/oauth2client/client.py#L1125) while it's implementation is a format datetime to string [`_parse_expiry`](https://github.com/google/oauth2client/blob/ebe9ed0bbbe4ce51c1a76de694c795e38906d690/oauth2client/client.py#L183)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/637", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/637/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/637/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/637/events", "html_url": "https://github.com/google/oauth2client/issues/637", "id": 172312339, "number": 637, "title": "xsrfutil.py validate_token() ", "user": {"login": "wasabigeek", "id": 4256705, "avatar_url": "https://avatars2.githubusercontent.com/u/4256705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wasabigeek", "html_url": "https://github.com/wasabigeek", "followers_url": "https://api.github.com/users/wasabigeek/followers", "following_url": "https://api.github.com/users/wasabigeek/following{/other_user}", "gists_url": "https://api.github.com/users/wasabigeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/wasabigeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wasabigeek/subscriptions", "organizations_url": "https://api.github.com/users/wasabigeek/orgs", "repos_url": "https://api.github.com/users/wasabigeek/repos", "events_url": "https://api.github.com/users/wasabigeek/events{/privacy}", "received_events_url": "https://api.github.com/users/wasabigeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-08-21T09:12:29Z", "updated_at": "2016-11-05T18:03:56Z", "closed_at": null, "author_association": "NONE", "body": "I'm trying to use the oauth2client/oauth2client/contrib/xsrfutil.py with Django, but get this error when using `validate_token()`: \"string argument without an encoding\". From the stacktrace it looks like this is the line causing the error: https://github.com/google/oauth2client/blob/master/oauth2client/contrib/xsrfutil.py#L99\n\nI think the problem is with the `token` parameter, which is a string. For [bytearray](https://docs.python.org/3.4/library/functions.html#bytearray) we need to specify the encoding.\n\nPython versions attempted: 2.7.11, 3.4\nDjango versions attempted: 1.8, 1.9.9, 1.10\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/634", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/634/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/634/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/634/events", "html_url": "https://github.com/google/oauth2client/issues/634", "id": 172009417, "number": 634, "title": "Add OS X to Travis", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 247161751, "url": "https://api.github.com/repos/google/oauth2client/labels/testing", "name": "testing", "color": "bfdadc", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-18T21:49:33Z", "updated_at": "2016-08-18T21:50:30Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "See https://docs.travis-ci.com/user/multi-os/ and https://docs.travis-ci.com/user/osx-ci-environment/\n\nNote in particular that\n\n> If you are already using a [build matrix](https://docs.travis-ci.com/user/customizing-the-build/#Build-Matrix) to test multiple versions, the `os` key also multiplies the matrix.\n\nwhich would grow the already hefty matrix from 10 to 20. (IIRC each env in the matrix gets treated as a job when doing Travis scheduling, so it may make sense to collapse the matrix. But I may be wrong.)\n\nRelates to #633 \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/633", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/633/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/633/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/633/events", "html_url": "https://github.com/google/oauth2client/issues/633", "id": 172008910, "number": 633, "title": "Set-up AppVeyor CI", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 247161751, "url": "https://api.github.com/repos/google/oauth2client/labels/testing", "name": "testing", "color": "bfdadc", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-18T21:46:46Z", "updated_at": "2016-08-18T21:51:02Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Was #491 but @jonparrott blew it up, oh noes!\n\nThis will ~~allows~~ allow Windows testing\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/620", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/620/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/620/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/620/events", "html_url": "https://github.com/google/oauth2client/issues/620", "id": 170699407, "number": 620, "title": "Make tox django matrix", "user": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2016-08-11T17:22:22Z", "updated_at": "2016-08-11T19:06:49Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Good to test all combos of py27,py35 x django1.8-django1.10\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/619", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/619/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/619/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/619/events", "html_url": "https://github.com/google/oauth2client/issues/619", "id": 170699284, "number": 619, "title": "Make contrib dependencies optional setup.py deps", "user": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 407154567, "url": "https://api.github.com/repos/google/oauth2client/labels/contrib", "name": "contrib", "color": "bfdadc", "default": false}, {"id": 295574436, "url": "https://api.github.com/repos/google/oauth2client/labels/packaging", "name": "packaging", "color": "006b75", "default": false}], "state": "open", "locked": false, "assignee": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2016-08-11T17:21:49Z", "updated_at": "2016-09-13T21:05:49Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "cc @dhermes @jonparrott \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/618", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/618/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/618/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/618/events", "html_url": "https://github.com/google/oauth2client/issues/618", "id": 170694519, "number": 618, "title": "Add timeout argument to transport.request", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2016-08-11T16:58:05Z", "updated_at": "2016-09-13T21:05:49Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "See https://github.com/google/oauth2client/pull/612#discussion_r74455264\n\nIt's unclear if an `httplib2.Http` request can be made with a timeout if the instance wasn't created with one, though likely it could be fixed with\n\n``` python\norig_timeout = http.timeout\ntry:\n    http.timeout = temp_value\n    do_stuff(http)\nfinally:\n    http.timeout = orig_timeout\n```\n\nMore problematic is when `http.request` has been modified (by our wrappers) and we are unsure what has been passed to `transport.request` (though I have an idea there).\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/613", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/613/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/613/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/613/events", "html_url": "https://github.com/google/oauth2client/issues/613", "id": 170674153, "number": 613, "title": "flake8 should only inspect files in the repository", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 247161751, "url": "https://api.github.com/repos/google/oauth2client/labels/testing", "name": "testing", "color": "bfdadc", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 12, "created_at": "2016-08-11T15:26:52Z", "updated_at": "2017-10-10T20:04:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "/cc @pferate \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/601", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/601/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/601/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/601/events", "html_url": "https://github.com/google/oauth2client/issues/601", "id": 170303976, "number": 601, "title": "Deprecate allowing http OR http.request in transport.request", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 14, "created_at": "2016-08-10T00:45:07Z", "updated_at": "2016-09-15T02:20:46Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "We [allow](https://github.com/google/oauth2client/blob/b1a17432731344d2e44b1ef78ab52f2202bee703/oauth2client/transport.py#L278) `http` OR `http.request` as the first argument to `transport.request` to support callers of non-public methods (e.g. `_refresh` or `_revoke`) that passed `http.request` instead of `http` (from `httplib.Http` objects).\n\nThis should be more restrictive but we should support both to avoid breakage.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/597", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/597/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/597/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/597/events", "html_url": "https://github.com/google/oauth2client/issues/597", "id": 170267405, "number": 597, "title": "[Discussion] post 4.0.0 refactor", "user": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64740893, "url": "https://api.github.com/repos/google/oauth2client/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 64740895, "url": "https://api.github.com/repos/google/oauth2client/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 30, "created_at": "2016-08-09T20:51:13Z", "updated_at": "2016-10-11T20:01:43Z", "closed_at": null, "author_association": "MEMBER", "body": "With 3.0.0 out and 4.0.0 on the way, we've finally addressed most of the \"cruft\" in this library without making huge, sweeping, breaking changes. However, some huge obstacles remain - such as the twisted class hierarchy and the strange naming of some of the credentials classes.\n\nI'd like to start a discussion on refactoring this library post-4.0.0. I'm not one to throw out well-tested and proven code, but the code that is here needs to be better organized to suit our downstream clients and our users.\n\nI want to put forth the idea of this package slowly migrating to two new packages: `google.auth` and `google.oauth2`. During the initial phases we'll retain code inside of and continue to publish the `oauth2client` package, but once complete the `oauth2client` package will be permanently deprecated.\n\nThe `google.auth` package will focus solely on server-to-server authentication. A rough idea of what this package will look like is:\n- `google.auth.default()` returns the application default credentials.\n- `google.auth.service_account.Credentials` credentials using a service account key to obtain an access token.\n- `google.auth.jwt.Credentials` credentials using a service account key to directly assert credentials.\n- `google.auth.gae.Credentials` credentials using App Engine identity credentials.\n- `google.auth.gce.Credentials` credentials using the Compute Engine metadata server.\n- `google.auth.access_token.Credentials` credential using a bare access token.\n\nThis package won't contain anything related to storage or end-user based credentials.\n\nThe `google.oauth2` package will contain the remainder of the current library and focus solely on oauth2 user-specific stuff, better organized:\n- `google.oauth2.flow` - generic flow that can be easily used with web frameworks.\n- `google.oauth2.credentials` - user credentials with access and refresh tokens.\n- `google.oauth2.storage` - a wrapper that allows credentials to be stored.\n  etc.\n\nWhat are you initial thoughts @nathanielmanistaatgoogle @dhermes @waprin @thobrla @anthmgoogle @elibixby @pferate  & any others.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/581", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/581/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/581/events", "html_url": "https://github.com/google/oauth2client/issues/581", "id": 168858162, "number": 581, "title": "oauth2client/contrib/_metadata.py does not retry", "user": {"login": "porridge", "id": 489420, "avatar_url": "https://avatars2.githubusercontent.com/u/489420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/porridge", "html_url": "https://github.com/porridge", "followers_url": "https://api.github.com/users/porridge/followers", "following_url": "https://api.github.com/users/porridge/following{/other_user}", "gists_url": "https://api.github.com/users/porridge/gists{/gist_id}", "starred_url": "https://api.github.com/users/porridge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/porridge/subscriptions", "organizations_url": "https://api.github.com/users/porridge/orgs", "repos_url": "https://api.github.com/users/porridge/repos", "events_url": "https://api.github.com/users/porridge/events{/privacy}", "received_events_url": "https://api.github.com/users/porridge/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 200227130, "url": "https://api.github.com/repos/google/oauth2client/labels/usable%20auth", "name": "usable auth", "color": "fbca04", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 5, "created_at": "2016-08-02T11:01:03Z", "updated_at": "2016-10-20T04:47:19Z", "closed_at": null, "author_association": "MEMBER", "body": "GCE metadata server not only is not 100% reliable, but even does not have an SLA!\nThis means users of oauth2client.contrib.gce.AppAssertionCredentials (for example) are affected by transient \"connection refused\" errors, such as this:\n\n```\nFile \"/usr/local/zync/common/zync/gcp.py\", line 154, in _auth_api credentials.refresh(http) \nFile \"/usr/local/lib/python2.7/dist-packages/oauth2client/client.py\", line 560, in refresh self._refresh(http.request) \nFile \"/usr/local/lib/python2.7/dist-packages/oauth2client/contrib/gce.py\", line 134, in _refresh self._retrieve_info(http_request) \nFile \"/usr/local/lib/python2.7/dist-packages/oauth2client/contrib/gce.py\", line 115, in _retrieve_info service_account=self.service_account_email or 'default') \nFile \"/usr/local/lib/python2.7/dist-packages/oauth2client/contrib/_metadata.py\", line 99, in get_service_account_info recursive=True) \nFile \"/usr/local/lib/python2.7/dist-packages/oauth2client/contrib/_metadata.py\", line 61, in get headers=METADATA_HEADERS \nFile \"/usr/lib/python2.7/dist-packages/httplib2/__init__.py\", line 1569, in request (response, content) = self._request(conn, authority, uri, request_uri, method, body, headers, redirections, cachekey) \nFile \"/usr/lib/python2.7/dist-packages/httplib2/__init__.py\", line 1316, in _request (response, content) = self._conn_request(conn, request_uri, method, body, headers) \nFile \"/usr/lib/python2.7/dist-packages/httplib2/__init__.py\", line 1251, in _conn_request conn.connect() \nFile \"/usr/lib/python2.7/dist-packages/httplib2/__init__.py\", line 912, in connect raise socket.error, msg \nerror: [Errno 111] Connection refused        \n```\n\nThis code should do retries with exponential backoff.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/580", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/580/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/580/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/580/events", "html_url": "https://github.com/google/oauth2client/issues/580", "id": 168780864, "number": 580, "title": "Make sure imported functions / classes are public", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 295574385, "url": "https://api.github.com/repos/google/oauth2client/labels/hygiene", "name": "hygiene", "color": "d4c5f9", "default": false}], "state": "open", "locked": false, "assignee": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2016-08-02T01:42:07Z", "updated_at": "2016-09-13T21:05:49Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "This is @nathanielmanistaatgoogle's preference, maybe he can elaborate.\n\nAFAIK this only applies to things like `_helpers._from_bytes` which can safely be `_helpers.from_bytes` without being public\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/549", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/549/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/549/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/549/events", "html_url": "https://github.com/google/oauth2client/issues/549", "id": 166147694, "number": 549, "title": "Can't safely deepcopy some credentials objects", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64740891, "url": "https://api.github.com/repos/google/oauth2client/labels/bug", "name": "bug", "color": "fc2929", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 13, "created_at": "2016-07-18T17:27:32Z", "updated_at": "2016-09-13T21:05:49Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "See [related thread](https://github.com/GoogleCloudPlatform/gcloud-python/pull/1942/files/a62781c73fa1a86a278958c5db211a6a59234527#r71068638)\n\nAs mentioned there, I'm happy to tackle this if deemed important. We can define `__copy__` and `__deepcopy__`, should we also define a public `copy`?\n\n/cc @waprin \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/535", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/535/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/535/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/535/events", "html_url": "https://github.com/google/oauth2client/issues/535", "id": 163252255, "number": 535, "title": "Move webapp2 into separate contrib module", "user": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 407154567, "url": "https://api.github.com/repos/google/oauth2client/labels/contrib", "name": "contrib", "color": "bfdadc", "default": false}, {"id": 295574385, "url": "https://api.github.com/repos/google/oauth2client/labels/hygiene", "name": "hygiene", "color": "d4c5f9", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2016-06-30T19:50:22Z", "updated_at": "2016-09-13T21:05:49Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Per @jonparrott's [suggestion](https://github.com/google/oauth2client/pull/533#discussion_r69185113), move the webapp2 parts of the `contrib.appengine` module into it's own module, `contrib.webapp2`.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/505", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/505/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/505/events", "html_url": "https://github.com/google/oauth2client/issues/505", "id": 154451936, "number": 505, "title": "GoogleCredentials from_json() should accept json generated files from dashboard", "user": {"login": "txomon", "id": 228250, "avatar_url": "https://avatars3.githubusercontent.com/u/228250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/txomon", "html_url": "https://github.com/txomon", "followers_url": "https://api.github.com/users/txomon/followers", "following_url": "https://api.github.com/users/txomon/following{/other_user}", "gists_url": "https://api.github.com/users/txomon/gists{/gist_id}", "starred_url": "https://api.github.com/users/txomon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/txomon/subscriptions", "organizations_url": "https://api.github.com/users/txomon/orgs", "repos_url": "https://api.github.com/users/txomon/repos", "events_url": "https://api.github.com/users/txomon/events{/privacy}", "received_events_url": "https://api.github.com/users/txomon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 245427359, "url": "https://api.github.com/repos/google/oauth2client/labels/docs", "name": "docs", "color": "5319e7", "default": false}], "state": "open", "locked": false, "assignee": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 10, "created_at": "2016-05-12T10:44:21Z", "updated_at": "2016-07-27T22:31:34Z", "closed_at": null, "author_association": "NONE", "body": "How to load credentials in the official recommended way (JSON file) is not documented. \n\nOne would expect that `from_json()` and `default_credentials()` would work on the same files, but it looks like from_json() only works on an internal json export (??). Instead, To load that json, one needs to call `ServiceAccountCredentials.from_json_keyfile_name()`.\n\nIn a nutshell, loading a json file generated from the [dashboard](https://console.cloud.google.com/iam-admin/serviceaccounts/project) is not intuitive and not documented.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/480", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/480/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/480/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/480/events", "html_url": "https://github.com/google/oauth2client/issues/480", "id": 146450798, "number": 480, "title": "On refresh failures, is the store updated correctly?", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2016-04-06T22:16:11Z", "updated_at": "2016-08-04T19:40:14Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "In the [error case](https://github.com/google/oauth2client/blob/043575aa8c08933a509b6b977c24ca1a7135daa8/oauth2client/client.py#L915-L928), the store is **only** updated with an invalid credential if the response is valid JSON and contains the key `error`. Shouldn't the credential be marked invalid and stored for all errors?\n\nSee #479.\n\n/cc @nathanielmanistaatgoogle @jonparrott \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/466", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/466/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/466/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/466/events", "html_url": "https://github.com/google/oauth2client/issues/466", "id": 141492685, "number": 466, "title": "contrib.appengine.OAuth2Decorator._in_error is unused.", "user": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 407154567, "url": "https://api.github.com/repos/google/oauth2client/labels/contrib", "name": "contrib", "color": "bfdadc", "default": false}, {"id": 295574385, "url": "https://api.github.com/repos/google/oauth2client/labels/hygiene", "name": "hygiene", "color": "d4c5f9", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2016-03-17T06:14:08Z", "updated_at": "2016-09-13T21:05:49Z", "closed_at": null, "author_association": "MEMBER", "body": "", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/463", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/463/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/463/events", "html_url": "https://github.com/google/oauth2client/issues/463", "id": 141147508, "number": 463, "title": "oauth2client.tools should not fail silently without argparse", "user": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 295574385, "url": "https://api.github.com/repos/google/oauth2client/labels/hygiene", "name": "hygiene", "color": "d4c5f9", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2016-03-16T01:47:27Z", "updated_at": "2016-09-13T21:05:49Z", "closed_at": null, "author_association": "MEMBER", "body": "Presently, tools has an import guard against argparse [here](https://github.com/google/oauth2client/blob/master/oauth2client/tools.py#L56) because argparse is optional in py2.6. Instead of silently failing, it should either issue a warning or an exception.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/450", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/450/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/450/events", "html_url": "https://github.com/google/oauth2client/issues/450", "id": 138532274, "number": 450, "title": "Profile info isn't returned like the docs specify", "user": {"login": "mwildehahn", "id": 704593, "avatar_url": "https://avatars3.githubusercontent.com/u/704593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwildehahn", "html_url": "https://github.com/mwildehahn", "followers_url": "https://api.github.com/users/mwildehahn/followers", "following_url": "https://api.github.com/users/mwildehahn/following{/other_user}", "gists_url": "https://api.github.com/users/mwildehahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwildehahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwildehahn/subscriptions", "organizations_url": "https://api.github.com/users/mwildehahn/orgs", "repos_url": "https://api.github.com/users/mwildehahn/repos", "events_url": "https://api.github.com/users/mwildehahn/events{/privacy}", "received_events_url": "https://api.github.com/users/mwildehahn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 7, "created_at": "2016-03-04T17:25:34Z", "updated_at": "2017-08-16T03:03:53Z", "closed_at": null, "author_association": "NONE", "body": "The docs specify that the `/tokeninfo` endpoint will return the following if you have the \"profile\" scope specified:\n\nhttps://developers.google.com/identity/sign-in/web/backend-auth\n\n```\n{\n // These six fields are included in all Google ID Tokens.\n \"iss\": \"https://accounts.google.com\",\n \"sub\": \"110169484474386276334\",\n \"azp\": \"1008719970978-hb24n2dstb40o45d4feuo2ukqmcc6381.apps.googleusercontent.com\",\n \"aud\": \"1008719970978-hb24n2dstb40o45d4feuo2ukqmcc6381.apps.googleusercontent.com\",\n \"iat\": \"1433978353\",\n \"exp\": \"1433981953\",\n\n // These seven fields are only included when the user has granted the \"profile\" and\n // \"email\" OAuth scopes to the application.\n \"email\": \"testuser@gmail.com\",\n \"email_verified\": \"true\",\n \"name\" : \"Test User\",\n \"picture\": \"https://lh4.googleusercontent.com/-kYgzyAWpZzJ/ABCDEFGHI/AAAJKLMNOP/tIXL9Ir44LE/s99-c/photo.jpg\",\n \"given_name\": \"Test\",\n \"family_name\": \"User\",\n \"locale\": \"en\"\n}\n```\n\ni've never been able to receive anything but `email` and `email_verified` from that endpoint, even when requesting the profile scope. \n\ndigging through this code I found this endpoint: https://github.com/google/oauth2client/blob/f9e16edc459654f88c7a1be04cf6fb381016c9b5/scripts/run_system_tests.py#L34 which I can use to get the profile info.\n\nIs there a bug in the code or the documentation?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/450/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/445", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/445/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/445/events", "html_url": "https://github.com/google/oauth2client/issues/445", "id": 137063592, "number": 445, "title": "Allow setting user_agent in ServiceAccountCredentials.from_*", "user": {"login": "eesheesh", "id": 11871180, "avatar_url": "https://avatars1.githubusercontent.com/u/11871180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eesheesh", "html_url": "https://github.com/eesheesh", "followers_url": "https://api.github.com/users/eesheesh/followers", "following_url": "https://api.github.com/users/eesheesh/following{/other_user}", "gists_url": "https://api.github.com/users/eesheesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/eesheesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eesheesh/subscriptions", "organizations_url": "https://api.github.com/users/eesheesh/orgs", "repos_url": "https://api.github.com/users/eesheesh/repos", "events_url": "https://api.github.com/users/eesheesh/events{/privacy}", "received_events_url": "https://api.github.com/users/eesheesh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64740893, "url": "https://api.github.com/repos/google/oauth2client/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2016-02-28T15:27:21Z", "updated_at": "2016-08-04T19:33:22Z", "closed_at": null, "author_association": "NONE", "body": "It should be possible to set the class's `_user_agent` when initializing it with `ServiceAccountCredentials.from_json_keyfile_name()` or the other similar methods.\n\nThis is a regression because `SignedJwtAssertionCredentials` allowed setting user_agent.\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/442", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/442/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/442/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/442/events", "html_url": "https://github.com/google/oauth2client/issues/442", "id": 136559171, "number": 442, "title": "Implement Credentials.copy()", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64740893, "url": "https://api.github.com/repos/google/oauth2client/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2016-02-26T00:44:44Z", "updated_at": "2016-09-13T21:05:49Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "See [discussion](https://github.com/GoogleCloudPlatform/gcloud-python/pull/1539#discussion_r54189835).\n\nIn particular, `ServiceAccountCredentials` objects may have a `_signer` that fails to `copy.deepcopy` due to CFFI not allowing it.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/440", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/440/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/440/events", "html_url": "https://github.com/google/oauth2client/issues/440", "id": 136135328, "number": 440, "title": "Resolve ndb import failure in App Engine-like environments", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 407154567, "url": "https://api.github.com/repos/google/oauth2client/labels/contrib", "name": "contrib", "color": "bfdadc", "default": false}, {"id": 295574385, "url": "https://api.github.com/repos/google/oauth2client/labels/hygiene", "name": "hygiene", "color": "d4c5f9", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-24T17:48:39Z", "updated_at": "2016-07-12T21:26:53Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "See [TODO](https://github.com/google/oauth2client/blob/d3a187c56a0e607030482ed33664cd7d335ea34c/oauth2client/contrib/appengine.py#L49-L50) (being removed in #434).\n\n> Resolve import issue. This is a temporary fix for a Google internal issue.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/439", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/439/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/439/events", "html_url": "https://github.com/google/oauth2client/issues/439", "id": 136134650, "number": 439, "title": "Convert CredentialsNDBProperty into a JsonProperty", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-24T17:46:22Z", "updated_at": "2016-02-24T17:46:22Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "See [TODO](https://github.com/google/oauth2client/blob/d3a187c56a0e607030482ed33664cd7d335ea34c/oauth2client/contrib/appengine.py#L350-L352) (being removed in #434).\n\n> Turn this into a `JsonProperty` and overhaul the `Credentials` and subclass mechanics to use `new_from_dict`, `to_dict`, `from_dict`, etc.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/433", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/433/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/433/events", "html_url": "https://github.com/google/oauth2client/issues/433", "id": 135641635, "number": 433, "title": "Code quality: Remove / reduce functions and classes not defined at global scope", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-02-23T05:45:20Z", "updated_at": "2016-02-23T20:26:15Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Some examples:\n- all the [`ndb` helpers](https://github.com/google/oauth2client/blob/349942b0db8e96c336802dc421fd4f1670e4b7e8/oauth2client/contrib/appengine.py#L94) in the `appengine` module (changes coming)\n- the class created in [`OAuth2Decorator.callback_handler`](https://github.com/google/oauth2client/blob/349942b0db8e96c336802dc421fd4f1670e4b7e8/oauth2client/contrib/appengine.py#L916)\n- version specific [Django config](https://github.com/google/oauth2client/blob/349942b0db8e96c336802dc421fd4f1670e4b7e8/oauth2client/contrib/django_util/apps.py#L29)\n- locked file [`fcntl` helpers](https://github.com/google/oauth2client/blob/349942b0db8e96c336802dc421fd4f1670e4b7e8/oauth2client/contrib/locked_file.py#L179)\n- locked file [`win32` helpers](https://github.com/google/oauth2client/blob/349942b0db8e96c336802dc421fd4f1670e4b7e8/oauth2client/contrib/locked_file.py#L248)\n- class-within-a-class storage [in `multistore_file`](https://github.com/google/oauth2client/blob/349942b0db8e96c336802dc421fd4f1670e4b7e8/oauth2client/contrib/multistore_file.py#L213)\n- monkey-patched [request method](https://github.com/google/oauth2client/blob/349942b0db8e96c336802dc421fd4f1670e4b7e8/oauth2client/client.py#L592) (this is a whole project in itself)\n\nAlso worth noting, but probably not worth changing are decorators:\n- appengine decorators return values ([`oauth_required`](https://github.com/google/oauth2client/blob/349942b0db8e96c336802dc421fd4f1670e4b7e8/oauth2client/contrib/appengine.py#L762) and [`oauth_aware`](https://github.com/google/oauth2client/blob/349942b0db8e96c336802dc421fd4f1670e4b7e8/oauth2client/contrib/appengine.py#L829))\n- [decorators](https://github.com/google/oauth2client/blob/349942b0db8e96c336802dc421fd4f1670e4b7e8/oauth2client/util.py#L120-L122) in `util`\n- [decorators](https://github.com/google/oauth2client/blob/349942b0db8e96c336802dc421fd4f1670e4b7e8/oauth2client/contrib/django_util/decorators.py#L51-L53) in `django_util` ([also](https://github.com/google/oauth2client/blob/349942b0db8e96c336802dc421fd4f1670e4b7e8/oauth2client/contrib/django_util/decorators.py#L102-L104))\n- [decorators](https://github.com/google/oauth2client/blob/349942b0db8e96c336802dc421fd4f1670e4b7e8/oauth2client/contrib/flask_util.py#L500-L502) in `flask_util`\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/428", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/428/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/428/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/428/events", "html_url": "https://github.com/google/oauth2client/issues/428", "id": 135107344, "number": 428, "title": "Drop use of util.positional() / unify oauth2client.util and oauth2client._helpers", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 295574385, "url": "https://api.github.com/repos/google/oauth2client/labels/hygiene", "name": "hygiene", "color": "d4c5f9", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2016-02-20T18:15:08Z", "updated_at": "2016-08-04T19:33:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/422", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/422/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/422/events", "html_url": "https://github.com/google/oauth2client/issues/422", "id": 134993865, "number": 422, "title": "Reign in the service account constructor", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64740895, "url": "https://api.github.com/repos/google/oauth2client/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-19T22:44:18Z", "updated_at": "2016-02-19T22:44:24Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Two current scary points:\n- The \"secret\" info (e.g. `_private_key_pkcs8_pem`) that has to be [copied over](https://github.com/google/oauth2client/blob/0c7996099f9e3d74f7b9a6d32b6f69f44987638a/oauth2client/service_account.py#L441-L443) in a manual way\n- We allow a big surface ([all of [`kwargs`](https://github.com/google/oauth2client/blob/0c7996099f9e3d74f7b9a6d32b6f69f44987638a/oauth2client/service_account.py#L101)) for custom assertions when the `sub` field is likely the only extra one someone has used ([entire JWT assertion spec](https://tools.ietf.org/html/rfc7523)) This was supported in #420.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/408", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/408/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/408/events", "html_url": "https://github.com/google/oauth2client/issues/408", "id": 134106846, "number": 408, "title": "oauth2client installs test files some of the time", "user": {"login": "vapier", "id": 176950, "avatar_url": "https://avatars3.githubusercontent.com/u/176950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vapier", "html_url": "https://github.com/vapier", "followers_url": "https://api.github.com/users/vapier/followers", "following_url": "https://api.github.com/users/vapier/following{/other_user}", "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vapier/subscriptions", "organizations_url": "https://api.github.com/users/vapier/orgs", "repos_url": "https://api.github.com/users/vapier/repos", "events_url": "https://api.github.com/users/vapier/events{/privacy}", "received_events_url": "https://api.github.com/users/vapier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 295574385, "url": "https://api.github.com/repos/google/oauth2client/labels/hygiene", "name": "hygiene", "color": "d4c5f9", "default": false}, {"id": 295574436, "url": "https://api.github.com/repos/google/oauth2client/labels/packaging", "name": "packaging", "color": "006b75", "default": false}], "state": "open", "locked": false, "assignee": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2016-02-16T21:51:30Z", "updated_at": "2016-02-19T19:35:29Z", "closed_at": null, "author_association": "MEMBER", "body": "after commit 93c56c1152dab1fb6f3b9c12f120a3ac77d4c442 by @dhermes, `python setup.py install` now includes the tests/ subdir when it should not.  it seems the change to the MANIFEST file is not sufficient.\n\n```\n$ python setup.py build\n$ python setup.py install --root $PWD/foo\n$ find foo/ -name tests\nfoo/usr/lib64/python3.4/site-packages/tests\n```\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/407", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/407/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/407/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/407/events", "html_url": "https://github.com/google/oauth2client/issues/407", "id": 134087175, "number": 407, "title": "Make sure release only happens in one Travis env.", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 295574436, "url": "https://api.github.com/repos/google/oauth2client/labels/packaging", "name": "packaging", "color": "006b75", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-16T20:21:15Z", "updated_at": "2016-03-09T18:28:13Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "See:\nhttps://travis-ci.org/google/oauth2client/builds/109681347\n\nIt seems every environment pushed the release which [caused the second, third, etc.][1] job to push to give an error:\n\n```\n...\nHTTPError: 400 Client Error: A file named \"oauth2client-2.0.0.tar.gz\" already exists for  oauth2client-2.0.0. To fix problems with that file you should create a new release. for url: https://pypi.python.org/pypi\nrunning upload_docs\ncreating build\ncreating build/docs\n...\n```\n\nAlso there are two warnings that may be worth dealing with:\n\n```\nwarning: sdist: standard file not found: should have one of README, README.rst, README.txt\nrunning check\nwarning: check: missing meta-data: if 'author' supplied, 'author_email' must be supplied too\n```\n\n[1]:\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/393", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/393/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/393/events", "html_url": "https://github.com/google/oauth2client/issues/393", "id": 130834596, "number": 393, "title": "Unable to switch abstract classes to use of abc module", "user": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 295574385, "url": "https://api.github.com/repos/google/oauth2client/labels/hygiene", "name": "hygiene", "color": "d4c5f9", "default": false}, {"id": 247161751, "url": "https://api.github.com/repos/google/oauth2client/labels/testing", "name": "testing", "color": "bfdadc", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-02T22:10:09Z", "updated_at": "2016-02-02T22:10:09Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Since 2.6 the right way to write abstract classes in Python is with use of the `abc` standard library module. I took a stab today at converting `client.Credentials`, `client.Storage`, and `client.AssertionCredentials` to using `abc` and a bunch of tests failed with abstract-class-instantiation errors.\n\nWhich means that currently our tests instantiate nonsense partially-abstract objects and are totally cool with that. That is, in fact, not actually cool, and should be fixed.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/391", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/391/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/391/events", "html_url": "https://github.com/google/oauth2client/issues/391", "id": 130097171, "number": 391, "title": "Refresh token when using AccessTokenCredentials", "user": {"login": "chromafunk", "id": 3601695, "avatar_url": "https://avatars1.githubusercontent.com/u/3601695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chromafunk", "html_url": "https://github.com/chromafunk", "followers_url": "https://api.github.com/users/chromafunk/followers", "following_url": "https://api.github.com/users/chromafunk/following{/other_user}", "gists_url": "https://api.github.com/users/chromafunk/gists{/gist_id}", "starred_url": "https://api.github.com/users/chromafunk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chromafunk/subscriptions", "organizations_url": "https://api.github.com/users/chromafunk/orgs", "repos_url": "https://api.github.com/users/chromafunk/repos", "events_url": "https://api.github.com/users/chromafunk/events{/privacy}", "received_events_url": "https://api.github.com/users/chromafunk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-31T07:38:22Z", "updated_at": "2017-12-29T08:27:32Z", "closed_at": null, "author_association": "NONE", "body": "Sorry to ask this here, but i have been reading everything that is out there on the Google API docs and I might be missing something, cause I can't find the way to refresh a token using Oauth2client when using AccesstokenCredentials as the method to connect. ( It is my own user, I pre-consent it manually )\n\nThis is the code I got so far minus the youtube part : \n\n```\ndef authenticate():\n    httplib2.debuglevel = 4\n    emp_token = None\n    acc_token = \"ya29.egIWwZowy7GF_QfmFlAu6nIKTlhXTwKrKj52Ir\"\n    refresh_token = \"1/ve9S0oXGwlfv7GE7MKG7wk066X8k70KmPnU\"\n    user_agent = 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36'\n    flow = AccessTokenCredentials(acc_token, user_agent)\n    http = httplib2.Http('.cache')\n    http = flow.authorize(http)\n    service = build('youtube', 'v3', http=http)\n```\n\nCould I get to refresh the token when a (401 Unauthorized) jumps in, but how do I refresh the token ?\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/391/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 1, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/388", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/388/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/388/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/388/events", "html_url": "https://github.com/google/oauth2client/issues/388", "id": 129216750, "number": 388, "title": "GoogleCredentials has an inappropriate relationship with its subclasses", "user": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 295574385, "url": "https://api.github.com/repos/google/oauth2client/labels/hygiene", "name": "hygiene", "color": "d4c5f9", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-27T17:37:29Z", "updated_at": "2016-01-27T17:40:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "`GoogleCredentials` contains references to its subclasses; these references should be eliminated.\n\nWhy does anyone ever think implementation inheritance is a good idea?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/367", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/367/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/367/events", "html_url": "https://github.com/google/oauth2client/issues/367", "id": 123375080, "number": 367, "title": "_ServiceAccountCredentials: public access to _kwargs?", "user": {"login": "midnightlynx", "id": 7332681, "avatar_url": "https://avatars0.githubusercontent.com/u/7332681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/midnightlynx", "html_url": "https://github.com/midnightlynx", "followers_url": "https://api.github.com/users/midnightlynx/followers", "following_url": "https://api.github.com/users/midnightlynx/following{/other_user}", "gists_url": "https://api.github.com/users/midnightlynx/gists{/gist_id}", "starred_url": "https://api.github.com/users/midnightlynx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/midnightlynx/subscriptions", "organizations_url": "https://api.github.com/users/midnightlynx/orgs", "repos_url": "https://api.github.com/users/midnightlynx/repos", "events_url": "https://api.github.com/users/midnightlynx/events{/privacy}", "received_events_url": "https://api.github.com/users/midnightlynx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-12-21T22:48:38Z", "updated_at": "2016-03-22T00:52:00Z", "closed_at": null, "author_association": "NONE", "body": "If one gets their service account credentials through a `GoogleCredentials` object's `get_application_default()` or `from_stream(filename)` methods, there's no way to add kwargs to the credential creation process.\n\nIn the docs, it states:\n\"If you have delegated domain-wide access to the service account and you want to impersonate a user account, specify the email address of the user account in the `sub` parameter when you create the Credentials object.\"\n\nI can add the `sub` after the fact, by adding `{'sub': 'foo@bar.com'}` to the credentials object's `_kwargs` dictionary, but accessing private attributes is not a good practice.\n\n`SignedJwtAssertionCredentials` has a public `self.kwargs`, but creating one of those from default credentials or from a json keyfile is non-trivial.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/365", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/365/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/365/events", "html_url": "https://github.com/google/oauth2client/issues/365", "id": 122815444, "number": 365, "title": "Clearer error messaging when token.uri.info is missing and retrieve_scopes() is called", "user": {"login": "kaliberto", "id": 2480892, "avatar_url": "https://avatars3.githubusercontent.com/u/2480892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaliberto", "html_url": "https://github.com/kaliberto", "followers_url": "https://api.github.com/users/kaliberto/followers", "following_url": "https://api.github.com/users/kaliberto/following{/other_user}", "gists_url": "https://api.github.com/users/kaliberto/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaliberto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaliberto/subscriptions", "organizations_url": "https://api.github.com/users/kaliberto/orgs", "repos_url": "https://api.github.com/users/kaliberto/repos", "events_url": "https://api.github.com/users/kaliberto/events{/privacy}", "received_events_url": "https://api.github.com/users/kaliberto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-12-17T20:19:35Z", "updated_at": "2015-12-17T20:19:35Z", "closed_at": null, "author_association": "NONE", "body": "When attempting to refresh the list of scopes available via credentials.retrieve_scopes() you receive the error AttributeError(\"'NoneType' object has no attribute 'find'\",) if token.uri.info is not set on the credentials instance. It's not a very friendly error and it's unclear until you read the code that this value is not set when credentials are generated using flow_from_clientsecrets. When generating credentials from a OAuth2WebServerFlow this value is set to GOOGLE_TOKEN_INFO_URI.\n\nI am not sure the thought process behind token.url.info being set for one flow type vs the other. In any case, better error handling would make the situation clearer. \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/359", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/359/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/359/events", "html_url": "https://github.com/google/oauth2client/issues/359", "id": 121082370, "number": 359, "title": "Drive.json file creation failure when /Users/<username>/.oauth does not exist", "user": {"login": "rothnic", "id": 452052, "avatar_url": "https://avatars0.githubusercontent.com/u/452052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rothnic", "html_url": "https://github.com/rothnic", "followers_url": "https://api.github.com/users/rothnic/followers", "following_url": "https://api.github.com/users/rothnic/following{/other_user}", "gists_url": "https://api.github.com/users/rothnic/gists{/gist_id}", "starred_url": "https://api.github.com/users/rothnic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rothnic/subscriptions", "organizations_url": "https://api.github.com/users/rothnic/orgs", "repos_url": "https://api.github.com/users/rothnic/repos", "events_url": "https://api.github.com/users/rothnic/events{/privacy}", "received_events_url": "https://api.github.com/users/rothnic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-12-08T19:37:51Z", "updated_at": "2015-12-08T20:43:55Z", "closed_at": null, "author_association": "NONE", "body": "Using v1.5.2 with gspread and df2gspread python libraries. I setup the client secrets file as requested, get the permissions screen, then the web client says successful. However, back on the python side it tries to create a drive.json file, but the .oauth folder does not exist. This results in the auth process failing.\n\nI created the .oauth directory, then tried again, and it worked fine. Failure occurred on [this line in file.py](https://github.com/google/oauth2client/blob/2e5c7cb3f0631329dfd28f64edd4ef827df3d534/oauth2client/file.py#L99)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/343", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/343/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/343/events", "html_url": "https://github.com/google/oauth2client/issues/343", "id": 118529890, "number": 343, "title": "Can't call SignedJwtAssertionCredentials.apply() without refresh()", "user": {"login": "dobesv", "id": 327833, "avatar_url": "https://avatars2.githubusercontent.com/u/327833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dobesv", "html_url": "https://github.com/dobesv", "followers_url": "https://api.github.com/users/dobesv/followers", "following_url": "https://api.github.com/users/dobesv/following{/other_user}", "gists_url": "https://api.github.com/users/dobesv/gists{/gist_id}", "starred_url": "https://api.github.com/users/dobesv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dobesv/subscriptions", "organizations_url": "https://api.github.com/users/dobesv/orgs", "repos_url": "https://api.github.com/users/dobesv/repos", "events_url": "https://api.github.com/users/dobesv/events{/privacy}", "received_events_url": "https://api.github.com/users/dobesv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64740891, "url": "https://api.github.com/repos/google/oauth2client/labels/bug", "name": "bug", "color": "fc2929", "default": true}, {"id": 64740895, "url": "https://api.github.com/repos/google/oauth2client/labels/question", "name": "question", "color": "cc317c", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 7, "created_at": "2015-11-24T04:34:33Z", "updated_at": "2017-10-10T20:01:07Z", "closed_at": null, "author_association": "NONE", "body": "Currently if you authenticate an `Http` instance using `SignedJwtAssertionCredentials.authorize` it replaces the `request` method on the `http` instance with an implementation that adds the appropriate authorization header.  In that replacement, if there is no `access_token` set already, it uses `_refresh` to get one.  However, if you try to use `apply` to update headers without this `access_token` previously being set.\n\nIn the `google-api-python-client` I found that if you are trying to do a batch request, it uses `apply` to calculate the authorization header, and if `access_token` is `None` then it blows up, meaning you can't use the batch feature unless you have previously calculated the `access_token`.\n\nSee https://github.com/google/google-api-python-client/issues/137\n\nIt's not clear to me whether this is a problem with `google-api-python-client` or with `oauth2client`.  Perhaps the api client could replicate the `access_token is None` check and call `refresh()`.  However, for \n`SignedJwtAssertionCredentials` no http connection is needed to create credentials, so `SignedJwtAssertionCredentials` could easily override `apply` to set the `access_token` if it isn't already set which would fix it not just for the API client but others who come along and want to use `SignedJwtAssertionCredentials` without attaching it to an `Http` instance.\n\nFood for thought.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/331", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/331/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/331/events", "html_url": "https://github.com/google/oauth2client/issues/331", "id": 112362981, "number": 331, "title": "Please add per-file licenses", "user": {"login": "petrcermak", "id": 2546601, "avatar_url": "https://avatars3.githubusercontent.com/u/2546601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrcermak", "html_url": "https://github.com/petrcermak", "followers_url": "https://api.github.com/users/petrcermak/followers", "following_url": "https://api.github.com/users/petrcermak/following{/other_user}", "gists_url": "https://api.github.com/users/petrcermak/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrcermak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrcermak/subscriptions", "organizations_url": "https://api.github.com/users/petrcermak/orgs", "repos_url": "https://api.github.com/users/petrcermak/repos", "events_url": "https://api.github.com/users/petrcermak/events{/privacy}", "received_events_url": "https://api.github.com/users/petrcermak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 295574385, "url": "https://api.github.com/repos/google/oauth2client/labels/hygiene", "name": "hygiene", "color": "d4c5f9", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 5, "created_at": "2015-10-20T12:58:14Z", "updated_at": "2016-08-04T19:34:14Z", "closed_at": null, "author_association": "NONE", "body": "_(Extension of #231 and #232)_\n\nThe Chromium project (www.chromium.org) pulls in oauth2client indirectly through the catapult (https://github.com/catapult-project/catapult/) and gsutil (https://github.com/GoogleCloudPlatform/gsutil) source repositories. In order for Chromium to be pulled into various Linux source distributions there's a requirement that all of the third party files pass the Linux <tt>licensecheck</tt> utility. Currently there are many files in the oauth2client repository missing per-file licenses. From a current run of <tt>licensecheck</tt>, they are:\n\n```\n$ licensecheck -r . | grep \"No copyright\"\n./tests/test_tools.py: *No copyright* UNKNOWN\n./tests/test_util.py: *No copyright* UNKNOWN\n./tests/__init__.py: *No copyright* Apache (v2.0)\n./oauth2client/__init__.py: *No copyright* UNKNOWN\n./samples/call_compute_service.py: *No copyright* UNKNOWN\n./samples/googleappengine/call_compute_service_from_gae.py: *No copyright* UNKNOWN\n./samples/oauth2_for_devices.py: *No copyright* UNKNOWN\n./scripts/run_system_tests.py: *No copyright* UNKNOWN\n./scripts/fetch_gae_sdk.py: *No copyright* UNKNOWN\n./docs/django_settings.py: *No copyright* UNKNOWN\n```\n\nWe'd like to ask that per-file licenses be added to these files to make it easier to integrate oauth2client not only into Chromium, but also Linux distributions in general. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/327", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/327/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/327/events", "html_url": "https://github.com/google/oauth2client/issues/327", "id": 111951388, "number": 327, "title": "Why new credentials records are created instead of overwriting an existing one when user does not actually have to re-authorize?", "user": {"login": "yushkovskiy", "id": 4921860, "avatar_url": "https://avatars1.githubusercontent.com/u/4921860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yushkovskiy", "html_url": "https://github.com/yushkovskiy", "followers_url": "https://api.github.com/users/yushkovskiy/followers", "following_url": "https://api.github.com/users/yushkovskiy/following{/other_user}", "gists_url": "https://api.github.com/users/yushkovskiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yushkovskiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yushkovskiy/subscriptions", "organizations_url": "https://api.github.com/users/yushkovskiy/orgs", "repos_url": "https://api.github.com/users/yushkovskiy/repos", "events_url": "https://api.github.com/users/yushkovskiy/events{/privacy}", "received_events_url": "https://api.github.com/users/yushkovskiy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-10-17T08:44:40Z", "updated_at": "2015-10-18T22:52:38Z", "closed_at": null, "author_association": "NONE", "body": "I talking about this line\n[https://github.com/google/oauth2client/blob/master/oauth2client/client.py#L891](https://github.com/google/oauth2client/blob/00c7773f3109d3bf9bb0438c9a007d970ece5456/oauth2client/client.py#L891)\nMaybe it is better to do `self.store.locked_put(self, overwrite=True)`\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/323", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/323/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/323/events", "html_url": "https://github.com/google/oauth2client/issues/323", "id": 111052991, "number": 323, "title": "Avoid use of pickle", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-12T20:48:27Z", "updated_at": "2016-06-09T20:11:57Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "See https://github.com/google/oauth2client/pull/322/files#r41799308\n\nWill require making `Flow` objects serializable / de-serializable in some other way (e.g. JSON).\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/317", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/317/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/317/events", "html_url": "https://github.com/google/oauth2client/issues/317", "id": 109562728, "number": 317, "title": "tools.run_flow does not use OAuth2WebServerFlow redirect_uri property.", "user": {"login": "MilkyC", "id": 363889, "avatar_url": "https://avatars2.githubusercontent.com/u/363889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MilkyC", "html_url": "https://github.com/MilkyC", "followers_url": "https://api.github.com/users/MilkyC/followers", "following_url": "https://api.github.com/users/MilkyC/following{/other_user}", "gists_url": "https://api.github.com/users/MilkyC/gists{/gist_id}", "starred_url": "https://api.github.com/users/MilkyC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MilkyC/subscriptions", "organizations_url": "https://api.github.com/users/MilkyC/orgs", "repos_url": "https://api.github.com/users/MilkyC/repos", "events_url": "https://api.github.com/users/MilkyC/events{/privacy}", "received_events_url": "https://api.github.com/users/MilkyC/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-02T20:05:36Z", "updated_at": "2015-10-20T16:24:34Z", "closed_at": null, "author_association": "NONE", "body": "oauth2client.tools.run_flow requires that we pass it an oauth2client.client.OAuth2WebServerFlow object as the 'flow' parameter.  The OAuth2WebServerFlow object has a property 'redirect_uri' that I was assuming would be used by the run_flow function as a callback.  However, when I tried setting that property it was never honored. It looks like run_flow is just setting it to the auth_host:auth_port on this line: https://github.com/google/oauth2client/blob/master/oauth2client/tools.py#L191\n\nIs this by design? Or would it be possible to have run_flow use the redirect_uri set on the OAuth2WebServerFlow object? \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/315", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/315/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/315/events", "html_url": "https://github.com/google/oauth2client/issues/315", "id": 108749033, "number": 315, "title": "Client needs to retry on 502s when requesting refresh token", "user": {"login": "sammcveety", "id": 2364801, "avatar_url": "https://avatars2.githubusercontent.com/u/2364801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sammcveety", "html_url": "https://github.com/sammcveety", "followers_url": "https://api.github.com/users/sammcveety/followers", "following_url": "https://api.github.com/users/sammcveety/following{/other_user}", "gists_url": "https://api.github.com/users/sammcveety/gists{/gist_id}", "starred_url": "https://api.github.com/users/sammcveety/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sammcveety/subscriptions", "organizations_url": "https://api.github.com/users/sammcveety/orgs", "repos_url": "https://api.github.com/users/sammcveety/repos", "events_url": "https://api.github.com/users/sammcveety/events{/privacy}", "received_events_url": "https://api.github.com/users/sammcveety/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-09-28T21:19:10Z", "updated_at": "2015-10-19T21:58:05Z", "closed_at": null, "author_association": "NONE", "body": "This call is expected to be idempotent, and should be retried.\n\nStack trace ~~track~~:\n\n``` python\n<elided>\nin _do_refresh_request\n    raise AccessTokenRefreshError(error_msg)\nAccessTokenRefreshError: Invalid response 502.\n```\n\nAdditional concerns:\n\nPossible conditions include:\nHTTP 5xx\nHTTP 429\nConnection break / socket timeout\nZero-length response from service\nhttplib errors (bad status line, incomplete read, response not ready)\nDNS lookup failure\n\nPossible retry approaches include:\nFail-fast (application prefers to fail as quickly as possible)\nRetry N times with exponential backoff to K seconds\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/295", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/295/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/295/events", "html_url": "https://github.com/google/oauth2client/issues/295", "id": 104332074, "number": 295, "title": "Rework usage of exceptions", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-01T18:56:42Z", "updated_at": "2015-09-01T18:56:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "See comments in https://github.com/google/oauth2client/pull/290 about `AppIdentityError`\n\n> Also `AppIdentityError` does seem like a rather slim class that includes only a fixed message and none of the actual values that led to its generation - would that benefit from being fleshed out a little?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/266", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/266/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/266/events", "html_url": "https://github.com/google/oauth2client/issues/266", "id": 100887869, "number": 266, "title": "Rollback #264 after Travis-Ci upgrades the default version of pypy to 2.6", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-13T23:01:49Z", "updated_at": "2016-01-05T22:16:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/256", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/256/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/256/events", "html_url": "https://github.com/google/oauth2client/issues/256", "id": 100454459, "number": 256, "title": "Invalid response 400. Error: invalid_scope", "user": {"login": "mringg", "id": 1230918, "avatar_url": "https://avatars0.githubusercontent.com/u/1230918?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mringg", "html_url": "https://github.com/mringg", "followers_url": "https://api.github.com/users/mringg/followers", "following_url": "https://api.github.com/users/mringg/following{/other_user}", "gists_url": "https://api.github.com/users/mringg/gists{/gist_id}", "starred_url": "https://api.github.com/users/mringg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mringg/subscriptions", "organizations_url": "https://api.github.com/users/mringg/orgs", "repos_url": "https://api.github.com/users/mringg/repos", "events_url": "https://api.github.com/users/mringg/events{/privacy}", "received_events_url": "https://api.github.com/users/mringg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-12T03:00:28Z", "updated_at": "2015-08-12T03:50:34Z", "closed_at": null, "author_association": "NONE", "body": "I found one problem when I began to try auth Google's Service with oauth2client.\nThe scope is 'https://ddp.googleapis.com/api/ddp/',I can auth that by the api of Java.\nThe information of problem is,oauth2client.client.OAuth2DeviceCodeError: Invalid response 400. Error: invalid_scope.\ntks\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/254", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/254/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/254/events", "html_url": "https://github.com/google/oauth2client/issues/254", "id": 100191911, "number": 254, "title": "Jwt Access Credentials should cache JWTs", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-10T23:40:02Z", "updated_at": "2015-08-11T16:55:22Z", "closed_at": null, "author_association": "NONE", "body": "The JWT Access Credentials should temporarily cache JWTs. Suggested algorithm:\n- Hash JWTs using Audience as key.\n- Also store the timestamp of last use with each JWT.\n- On access clear any JWT unused for more than 1 hour.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/253", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/253/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/253/events", "html_url": "https://github.com/google/oauth2client/issues/253", "id": 100190953, "number": 253, "title": "Promote OAuth2 service account to Jwt Access credentials", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-08-10T23:30:32Z", "updated_at": "2015-08-12T21:15:52Z", "closed_at": null, "author_association": "NONE", "body": "Application Default Credentials can return Oauth2 service account credentials. gRPC can use more efficient JwtAccess credentials in place of this if no scopes have been specified. This tracks logic to detect this case and \"promote\" the credentials to JwtAccess form with the same identity properties if the OAuth2 form is passed in for use by gRPC.\n\nLogic should be similar to this (in Java):\n\n``` java\nif (credentials instanceof ServiceAccountOAuth2Credentials) {\n  ServiceAccountOAuth2Credentials serviceAccount =\n      (ServiceAccountOAuth2Credentials)credentials;\n  if (serviceAccount.getScopes().length() == 0) {\n    credentials = new ServiceAccountJwtAccessCredentials(\n        serviceAccount.getAccountEmail(),\n        serviceAccount.getPrivateKey(),\n        serviceAccount.getPrivateKeyId());\n  }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/252", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/252/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/252/events", "html_url": "https://github.com/google/oauth2client/issues/252", "id": 100186005, "number": 252, "title": "JwtAccess Credentials Feature", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 64740893, "url": "https://api.github.com/repos/google/oauth2client/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 200227130, "url": "https://api.github.com/repos/google/oauth2client/labels/usable%20auth", "name": "usable auth", "color": "fbca04", "default": false}], "state": "open", "locked": false, "assignee": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2015-08-10T22:53:03Z", "updated_at": "2016-02-25T01:01:13Z", "closed_at": null, "author_association": "NONE", "body": "Tracking completion of implementation of JwtAccess Credentials for service accounts for Python. This is a service account that passes a JWT directly as an a bearer token instead of exchanging for an access token. \n\nFor reference, the Java implementation:\nhttps://github.com/google/google-auth-library-java/blob/master/oauth2_http/java/com/google/auth/oauth2/ServiceAccountJwtAccessCredentials.java\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/242", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/242/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/242/events", "html_url": "https://github.com/google/oauth2client/issues/242", "id": 99701019, "number": 242, "title": "Do a docs pass to make sure all content renders as expected", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-07T18:13:13Z", "updated_at": "2015-08-12T22:17:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "This is a child of #241.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/223", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/223/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/223/events", "html_url": "https://github.com/google/oauth2client/issues/223", "id": 96685041, "number": 223, "title": "Implement Decorator 3LO pattern for Django", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-22T22:54:33Z", "updated_at": "2015-10-09T23:53:45Z", "closed_at": null, "author_association": "NONE", "body": "The OAuth2Decorator pattern has been implemented for the WebApp2Framework. See the class OAuth2Decorator here:\nhttps://github.com/google/oauth2client/blob/master/oauth2client/appengine.py\n\nThis pattern if very effective for usability of 3LO and should be extended to other frameworks. This item tracks implementing this pattern for DJango.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/218", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/218/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/218/events", "html_url": "https://github.com/google/oauth2client/issues/218", "id": 94184617, "number": 218, "title": "Add better handling for NO_GCE_CHECK", "user": {"login": "pcostell", "id": 1728051, "avatar_url": "https://avatars2.githubusercontent.com/u/1728051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcostell", "html_url": "https://github.com/pcostell", "followers_url": "https://api.github.com/users/pcostell/followers", "following_url": "https://api.github.com/users/pcostell/following{/other_user}", "gists_url": "https://api.github.com/users/pcostell/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcostell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcostell/subscriptions", "organizations_url": "https://api.github.com/users/pcostell/orgs", "repos_url": "https://api.github.com/users/pcostell/repos", "events_url": "https://api.github.com/users/pcostell/events{/privacy}", "received_events_url": "https://api.github.com/users/pcostell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-07-10T00:47:00Z", "updated_at": "2015-07-10T00:47:00Z", "closed_at": null, "author_association": "MEMBER", "body": "Right now, you have to provide the exact string \"True\" to NO_GCE_CHECK in order to disable the check. This is somewhat error-prone as it's easy to think you've disabled the check but you actually haven't.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/209", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/209/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/209/events", "html_url": "https://github.com/google/oauth2client/issues/209", "id": 92407438, "number": 209, "title": "test framework is fragile to file permissions changes (+x)", "user": {"login": "pcostell", "id": 1728051, "avatar_url": "https://avatars2.githubusercontent.com/u/1728051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcostell", "html_url": "https://github.com/pcostell", "followers_url": "https://api.github.com/users/pcostell/followers", "following_url": "https://api.github.com/users/pcostell/following{/other_user}", "gists_url": "https://api.github.com/users/pcostell/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcostell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcostell/subscriptions", "organizations_url": "https://api.github.com/users/pcostell/orgs", "repos_url": "https://api.github.com/users/pcostell/repos", "events_url": "https://api.github.com/users/pcostell/events{/privacy}", "received_events_url": "https://api.github.com/users/pcostell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-07-01T14:59:30Z", "updated_at": "2015-07-01T17:29:22Z", "closed_at": null, "author_association": "MEMBER", "body": "", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/172", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/172/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/172/events", "html_url": "https://github.com/google/oauth2client/issues/172", "id": 73487914, "number": 172, "title": "Suggest supporting `proxy_rdns` setting while constructing Httplib2.Http in client.py", "user": {"login": "kygx-legend", "id": 2180657, "avatar_url": "https://avatars1.githubusercontent.com/u/2180657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kygx-legend", "html_url": "https://github.com/kygx-legend", "followers_url": "https://api.github.com/users/kygx-legend/followers", "following_url": "https://api.github.com/users/kygx-legend/following{/other_user}", "gists_url": "https://api.github.com/users/kygx-legend/gists{/gist_id}", "starred_url": "https://api.github.com/users/kygx-legend/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kygx-legend/subscriptions", "organizations_url": "https://api.github.com/users/kygx-legend/orgs", "repos_url": "https://api.github.com/users/kygx-legend/repos", "events_url": "https://api.github.com/users/kygx-legend/events{/privacy}", "received_events_url": "https://api.github.com/users/kygx-legend/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-05-06T02:02:52Z", "updated_at": "2015-09-02T03:02:02Z", "closed_at": null, "author_association": "NONE", "body": "Such as class `OAuth2WebServerFlow` in client.py, when call `step*()` functions, it would construct `Httplib2.Http` objects. If using proxy, `Httplib2.Http` would use proxy from environment. However, if the proxy needs _reverse DNS(rdns)_, all requests of `Httplib2.Http` are blocked and there're no methods to set `proxy_rdns` to `True`. The best way is to construct `Httplib2.ProxyInfo` object which has all proxy settings including `proxy_rdns`. Then make this as a parameter to construct `Httplib2.Http`.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/170", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/170/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/170/events", "html_url": "https://github.com/google/oauth2client/issues/170", "id": 72756407, "number": 170, "title": "Suggest supporting passthrough \"state\" in step1_get_authorize_url", "user": {"login": "jorr-at-google", "id": 5599032, "avatar_url": "https://avatars3.githubusercontent.com/u/5599032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorr-at-google", "html_url": "https://github.com/jorr-at-google", "followers_url": "https://api.github.com/users/jorr-at-google/followers", "following_url": "https://api.github.com/users/jorr-at-google/following{/other_user}", "gists_url": "https://api.github.com/users/jorr-at-google/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorr-at-google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorr-at-google/subscriptions", "organizations_url": "https://api.github.com/users/jorr-at-google/orgs", "repos_url": "https://api.github.com/users/jorr-at-google/repos", "events_url": "https://api.github.com/users/jorr-at-google/events{/privacy}", "received_events_url": "https://api.github.com/users/jorr-at-google/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-03T06:15:39Z", "updated_at": "2015-07-09T18:04:18Z", "closed_at": null, "author_association": "NONE", "body": "It is good practice to put an anti-forgery token in the \"state\" field to defend against cross-site attacks. \nSee e.g. https://developers.google.com/identity/protocols/OpenIDConnect#accessingtheservice\n\nSuggest enabling this as a kwarg in step1_get_authorize_url.\nSee: https://github.com/jorr-at-google/oauth2client/commit/a1029673a3f3a541acbed6bc9e46598f7b8122d0\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/166", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/166/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/166/events", "html_url": "https://github.com/google/oauth2client/issues/166", "id": 69261211, "number": 166, "title": "Add a new credential type, IAMCredential", "user": {"login": "tbetbetbe", "id": 9272342, "avatar_url": "https://avatars0.githubusercontent.com/u/9272342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbetbetbe", "html_url": "https://github.com/tbetbetbe", "followers_url": "https://api.github.com/users/tbetbetbe/followers", "following_url": "https://api.github.com/users/tbetbetbe/following{/other_user}", "gists_url": "https://api.github.com/users/tbetbetbe/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbetbetbe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbetbetbe/subscriptions", "organizations_url": "https://api.github.com/users/tbetbetbe/orgs", "repos_url": "https://api.github.com/users/tbetbetbe/repos", "events_url": "https://api.github.com/users/tbetbetbe/events{/privacy}", "received_events_url": "https://api.github.com/users/tbetbetbe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-18T03:24:21Z", "updated_at": "2015-06-18T22:59:24Z", "closed_at": null, "author_association": "NONE", "body": "It is constructed with and holds two fields\n- iam-token\n- iam-authority-selector\n  IAMCredential applies these values to requests as a pair HTTP headers (or an equivalents) keys\n  - \"x-goog-iam-authorization-token\"\n  - \"x-goog-iam-authority-selector\"\n    respectively\n\nN.B, there is no requirement that an IAMCredential be returned by Application Default Credentials.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/165", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/165/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/165/events", "html_url": "https://github.com/google/oauth2client/issues/165", "id": 68987407, "number": 165, "title": "_ServiceAccountCredentials should be public", "user": {"login": "thobrla", "id": 3239120, "avatar_url": "https://avatars2.githubusercontent.com/u/3239120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thobrla", "html_url": "https://github.com/thobrla", "followers_url": "https://api.github.com/users/thobrla/followers", "following_url": "https://api.github.com/users/thobrla/following{/other_user}", "gists_url": "https://api.github.com/users/thobrla/gists{/gist_id}", "starred_url": "https://api.github.com/users/thobrla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thobrla/subscriptions", "organizations_url": "https://api.github.com/users/thobrla/orgs", "repos_url": "https://api.github.com/users/thobrla/repos", "events_url": "https://api.github.com/users/thobrla/events{/privacy}", "received_events_url": "https://api.github.com/users/thobrla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-16T18:53:09Z", "updated_at": "2015-04-22T20:32:55Z", "closed_at": null, "author_association": "MEMBER", "body": "Until https://github.com/google/oauth2client/issues/164 is addressed, users of service account credentials need to subclass _ServiceAccountCredentials to override the to_json and from_json methods; thus we should expose this class as public so that consumers don't need to inherit from a private class.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/164", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/164/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/164/events", "html_url": "https://github.com/google/oauth2client/issues/164", "id": 68166339, "number": 164, "title": "ServiceAccountCredentials need way to modify UserAgent after serialization", "user": {"login": "thobrla", "id": 3239120, "avatar_url": "https://avatars2.githubusercontent.com/u/3239120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thobrla", "html_url": "https://github.com/thobrla", "followers_url": "https://api.github.com/users/thobrla/followers", "following_url": "https://api.github.com/users/thobrla/following{/other_user}", "gists_url": "https://api.github.com/users/thobrla/gists{/gist_id}", "starred_url": "https://api.github.com/users/thobrla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thobrla/subscriptions", "organizations_url": "https://api.github.com/users/thobrla/orgs", "repos_url": "https://api.github.com/users/thobrla/repos", "events_url": "https://api.github.com/users/thobrla/events{/privacy}", "received_events_url": "https://api.github.com/users/thobrla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 200227130, "url": "https://api.github.com/repos/google/oauth2client/labels/usable%20auth", "name": "usable auth", "color": "fbca04", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-13T18:48:28Z", "updated_at": "2015-04-16T03:41:50Z", "closed_at": null, "author_association": "MEMBER", "body": "We accept a user_agent in [**init**](https://github.com/google/oauth2client/blob/master/oauth2client/service_account.py#L40) but that doesn't cover deserialization via the Credentials base class from_json method.\n\nPresently to allow for caching, one must need to inherit from the private _ServiceAccountCredentials and hard-code user agent and scopes into to_json / from_json methods.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/160", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/160/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/160/events", "html_url": "https://github.com/google/oauth2client/issues/160", "id": 67106400, "number": 160, "title": "More userfriendly error message, not just \"No crypto library available\"", "user": {"login": "defuz", "id": 276041, "avatar_url": "https://avatars2.githubusercontent.com/u/276041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/defuz", "html_url": "https://github.com/defuz", "followers_url": "https://api.github.com/users/defuz/followers", "following_url": "https://api.github.com/users/defuz/following{/other_user}", "gists_url": "https://api.github.com/users/defuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/defuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/defuz/subscriptions", "organizations_url": "https://api.github.com/users/defuz/orgs", "repos_url": "https://api.github.com/users/defuz/repos", "events_url": "https://api.github.com/users/defuz/events{/privacy}", "received_events_url": "https://api.github.com/users/defuz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-08T11:17:04Z", "updated_at": "2015-04-15T01:19:52Z", "closed_at": null, "author_association": "NONE", "body": "Guys, could you create a little more understandable (not only telepath) error message:\n\n```\nTraceback (most recent call last):\n  File \"/Applications/GoogleAppEngineLauncher.app/Contents/Resources/GoogleAppEngine-default.bundle/Contents/Resources/google_appengine/google/appengine/tools/devappserver2/python/request_handler.py\", line 225, in handle_interactive_request\n    exec(compiled_code, self._command_globals)\n  File \"<string>\", line 9, in <module>\n  File \"/Users/defuz/Projects/playscape/PublishingKit_Backend/main.py\", line 18, in <module>\n    app = make_app()\n  File \"/Users/defuz/Projects/playscape/PublishingKit_Backend/main.py\", line 11, in make_app\n    app.traffic = TrafficService()\n  File \"/Users/defuz/Projects/playscape/PublishingKit_Backend/models/traffic.py\", line 70, in __init__\n    scope='https://www.googleapis.com/auth/bigquery')\n  File \"/Users/defuz/Projects/playscape/PublishingKit_Backend/libraries/oauth2client/util.py\", line 137, in positional_wrapper\n    return wrapped(*args, **kwargs)\n  File \"/Users/defuz/Projects/playscape/PublishingKit_Backend/libraries/oauth2client/client.py\", line 1458, in __init__\n    _RequireCryptoOrDie()\n  File \"/Users/defuz/Projects/playscape/PublishingKit_Backend/libraries/oauth2client/client.py\", line 1412, in _RequireCryptoOrDie\n    raise CryptoUnavailableError('No crypto library available')\nCryptoUnavailableError: No crypto library available\n```\n\nWhat do you think I should do after receiving this error message?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/150", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/150/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/150/events", "html_url": "https://github.com/google/oauth2client/issues/150", "id": 64701907, "number": 150, "title": "issue with AppAssertionCredentials and Python3", "user": {"login": "ptone", "id": 40845, "avatar_url": "https://avatars3.githubusercontent.com/u/40845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptone", "html_url": "https://github.com/ptone", "followers_url": "https://api.github.com/users/ptone/followers", "following_url": "https://api.github.com/users/ptone/following{/other_user}", "gists_url": "https://api.github.com/users/ptone/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptone/subscriptions", "organizations_url": "https://api.github.com/users/ptone/orgs", "repos_url": "https://api.github.com/users/ptone/repos", "events_url": "https://api.github.com/users/ptone/events{/privacy}", "received_events_url": "https://api.github.com/users/ptone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-03-27T05:52:19Z", "updated_at": "2015-03-27T05:52:19Z", "closed_at": null, "author_association": "NONE", "body": "seem to be a few edge cases for Python3 - seems similar to #106 \n\nhttps://gist.github.com/ptone/7e45323e91097ed3cc2f\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/146", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/146/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/146/events", "html_url": "https://github.com/google/oauth2client/issues/146", "id": 62731701, "number": 146, "title": "No support for flows that require no redirect_url at all", "user": {"login": "lnenov", "id": 4178825, "avatar_url": "https://avatars3.githubusercontent.com/u/4178825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnenov", "html_url": "https://github.com/lnenov", "followers_url": "https://api.github.com/users/lnenov/followers", "following_url": "https://api.github.com/users/lnenov/following{/other_user}", "gists_url": "https://api.github.com/users/lnenov/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnenov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnenov/subscriptions", "organizations_url": "https://api.github.com/users/lnenov/orgs", "repos_url": "https://api.github.com/users/lnenov/repos", "events_url": "https://api.github.com/users/lnenov/events{/privacy}", "received_events_url": "https://api.github.com/users/lnenov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-03-18T16:13:12Z", "updated_at": "2015-03-18T16:13:12Z", "closed_at": null, "author_association": "NONE", "body": "Recently I had to use a flow that fails if redirect_url is provided.\nI monkey patched an oauth2client(1.2) almost like https://github.com/google/oauth2client/commit/a0d99b9168cefcd6dab19ce68e0b59aef7770bfd and it works fine for me. \n\nBut given what a bad practise monkey patching is, it would be great if you can include the possibility to exchange codes without providing any redirect_url.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/135", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/135/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/135/events", "html_url": "https://github.com/google/oauth2client/issues/135", "id": 58431536, "number": 135, "title": "Refresh expired access tokens before waiting for a 401 response", "user": {"login": "thobrla", "id": 3239120, "avatar_url": "https://avatars2.githubusercontent.com/u/3239120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thobrla", "html_url": "https://github.com/thobrla", "followers_url": "https://api.github.com/users/thobrla/followers", "following_url": "https://api.github.com/users/thobrla/following{/other_user}", "gists_url": "https://api.github.com/users/thobrla/gists{/gist_id}", "starred_url": "https://api.github.com/users/thobrla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thobrla/subscriptions", "organizations_url": "https://api.github.com/users/thobrla/orgs", "repos_url": "https://api.github.com/users/thobrla/repos", "events_url": "https://api.github.com/users/thobrla/events{/privacy}", "received_events_url": "https://api.github.com/users/thobrla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-21T00:59:29Z", "updated_at": "2015-02-22T19:10:36Z", "closed_at": null, "author_association": "MEMBER", "body": "new_request potentially makes a request even if self.access_token_expired is True: https://github.com/google/oauth2client/blob/933e1d0073d676d6a80d39616405b19fc6f7ccbd/oauth2client/client.py#L550\n\nIf the token is expired, the server will return a 401, new_request will refresh the token, and then it will retry the request.\n\nIt should refresh beforehand if the access token is known to be expired, avoiding an unnecessary HTTP call.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/128", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/128/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/128/events", "html_url": "https://github.com/google/oauth2client/issues/128", "id": 56602379, "number": 128, "title": "Enable BYO http library", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/google/oauth2client/milestones/2", "html_url": "https://github.com/google/oauth2client/milestone/2", "labels_url": "https://api.github.com/repos/google/oauth2client/milestones/2/labels", "id": 1908296, "number": 2, "title": "4.0.0", "description": "", "creator": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "open_issues": 23, "closed_issues": 16, "state": "open", "created_at": "2016-07-27T22:29:57Z", "updated_at": "2016-10-14T16:55:07Z", "due_on": null, "closed_at": null}, "comments": 51, "created_at": "2015-02-04T23:10:17Z", "updated_at": "2016-09-13T21:51:01Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "If this is a duplicate I apologize.\n\nISTM this requires\n- [x] Move all uses of `httplib2` into a module (call it `transport` probably) (#554, #559, #561, #577)\n- [ ] Determine what assumed interface of `httplib2.Http` is needed\n- [ ] Optional. Try to reduce the interface needed\n- [x] Factor out the hard dependencies on `httplib2` and just use these interfaces\n- [ ] Document the interface and allow credentials constructors to optionally take a custom `Http` object from any old library, e.g. `twisted` or `requests`.\n- [ ] Revisit all changes and ensure consistency\n- [ ] Revisit query string update hackery in #622\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/123", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/123/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/123/events", "html_url": "https://github.com/google/oauth2client/issues/123", "id": 56067951, "number": 123, "title": "Mock out implicit behavior so that test_get_application_default_environment_not_set_up always passes", "user": {"login": "soltanmm", "id": 4889063, "avatar_url": "https://avatars3.githubusercontent.com/u/4889063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soltanmm", "html_url": "https://github.com/soltanmm", "followers_url": "https://api.github.com/users/soltanmm/followers", "following_url": "https://api.github.com/users/soltanmm/following{/other_user}", "gists_url": "https://api.github.com/users/soltanmm/gists{/gist_id}", "starred_url": "https://api.github.com/users/soltanmm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soltanmm/subscriptions", "organizations_url": "https://api.github.com/users/soltanmm/orgs", "repos_url": "https://api.github.com/users/soltanmm/repos", "events_url": "https://api.github.com/users/soltanmm/events{/privacy}", "received_events_url": "https://api.github.com/users/soltanmm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-01-30T18:32:54Z", "updated_at": "2015-03-25T20:05:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "Fails on some Ubuntu 14.04 LTS machines for both py27 and py34.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/113", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/113/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/113/events", "html_url": "https://github.com/google/oauth2client/issues/113", "id": 54249444, "number": 113, "title": "Add support for incremental OAuth 2.0", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-01-13T21:17:28Z", "updated_at": "2015-01-13T21:17:28Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "See:\nhttps://developers.google.com/accounts/docs/OAuth2WebServer#incrementalAuth\n\nBy sending the query parameter `include_granted_scopes=true`, previous authorizations can be wrapped into new tokens (when new scopes are needed).\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/110", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/110/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/110/events", "html_url": "https://github.com/google/oauth2client/issues/110", "id": 53788195, "number": 110, "title": "Tests aren't insulated from the network.", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-08T19:11:27Z", "updated_at": "2015-08-14T01:41:07Z", "closed_at": null, "author_association": "MEMBER", "body": "Currently there are a large number of tests that test networking-related functionality **without** mocking it out. This means that tests will fail in surprising ways on different environments. \n\n(One example: GCE detection doesn't mock out the network, so we see the behavior intended in the tests in \"most\" environments, but on GCE we will accidentally pick up the metadata service, and on AWS, we'll see a different codepath as we _can_ fetch `169.254.169.254`, but it won't have the expected Google metadata header.)\n\nThis needs to be cleaned up throughout the tests.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/100", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/100/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/100/events", "html_url": "https://github.com/google/oauth2client/issues/100", "id": 52514520, "number": 100, "title": "Python Application Default Credentials should checked for GCE environment last", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-12-19T18:38:52Z", "updated_at": "2014-12-19T18:38:52Z", "closed_at": null, "author_association": "NONE", "body": "The implementation of get_application_default has an issue that it detects the environement before fetching the credentials. However, the check for GCE can hang on certain networks for up to 30 seconds (See #93). \nThis should be changed to match the Java implementation where this is not queried until the end because of its side effects. This means that the can can only occur in a failure case.\n\nTo give a little more detail; the java code roughly says:\n\nif (testForWellKnownFile(...)) {\n  return credsFromWellKnownFile();\n} else if (testForGae(...)) {\n  return credsFromGae();\n} else if (testForGce(...)) {\n  return credsFromGce();\n}\n\non the flip side, the python code says:\n\nif (well_known_file_exists()):\n  env = 'WELL_KNOWN_FILE'\nelif (detect_gae()):\n  env = 'GAE'\nelif (detect_gce()):\n  env = 'GCE'\n...\nreturn CredsFromEnv(env)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/96", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/96/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/96/events", "html_url": "https://github.com/google/oauth2client/issues/96", "id": 52318818, "number": 96, "title": "Enable GAE-related tests.", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-12-18T02:32:09Z", "updated_at": "2015-01-12T23:45:35Z", "closed_at": null, "author_association": "MEMBER", "body": "This repo contains a number of tests of `oauth2client/appengine.py`, but they're currently disabled in tox/travis. We should download the SDK and re-enable them.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/96/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/93", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/93/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/93/events", "html_url": "https://github.com/google/oauth2client/issues/93", "id": 52084992, "number": 93, "title": "Detecting GCE sometimes takes forever.", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2014-12-16T08:24:03Z", "updated_at": "2015-03-18T16:48:13Z", "closed_at": null, "author_association": "MEMBER", "body": "on some networks (@dhermes has one at home), doing a lookup on a bogus URL takes ~20-30s. this means that the default way of discovering the current environment (say for fetching the application default credential) can be insanely slow.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/93/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/62", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/62/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/62/events", "html_url": "https://github.com/google/oauth2client/issues/62", "id": 47030120, "number": 62, "title": "save_to_well_known_file() takes only GoogleCredentials", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-10-28T14:12:04Z", "updated_at": "2015-10-29T16:33:38Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body": "This function should probably take any sort of Credentials object, and either convert or raise an exception, depending on which type comes in.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/62/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/44", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/44/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/44/events", "html_url": "https://github.com/google/oauth2client/issues/44", "id": 40868041, "number": 44, "title": "Move DefaultCredential format and validation logic to default_credential_model module", "user": {"login": "37thStreet", "id": 8507116, "avatar_url": "https://avatars2.githubusercontent.com/u/8507116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/37thStreet", "html_url": "https://github.com/37thStreet", "followers_url": "https://api.github.com/users/37thStreet/followers", "following_url": "https://api.github.com/users/37thStreet/following{/other_user}", "gists_url": "https://api.github.com/users/37thStreet/gists{/gist_id}", "starred_url": "https://api.github.com/users/37thStreet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/37thStreet/subscriptions", "organizations_url": "https://api.github.com/users/37thStreet/orgs", "repos_url": "https://api.github.com/users/37thStreet/repos", "events_url": "https://api.github.com/users/37thStreet/events{/privacy}", "received_events_url": "https://api.github.com/users/37thStreet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-08-22T01:16:24Z", "updated_at": "2014-09-05T18:33:43Z", "closed_at": null, "author_association": "NONE", "body": "I was thinking of moving the DefaultCredential format definition and validation logic recently added to client.GoogleCredentials into a separate class. This predominantly concerns the validation code in _get_application_default_credential_from_file() starting here:\nhttps://github.com/google/oauth2client/blob/master/oauth2client/client.py#L1162\n\nWhat I'm hoping to accomplish:\n- Consolidate the DefaultCredential format/model definition making it easier to implement and verify correctness of implementations in other languages\n- Allow validation method to be called from non-file loader contexts\n- Remove hardcoded strings for field names when serializing\n- Add optional fields for token_uri and revoke_uri in the model and remove related references to constants in _get_application_default_credential_from_file()\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/44/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/35", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/35/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/35/events", "html_url": "https://github.com/google/oauth2client/issues/35", "id": 39866056, "number": 35, "title": "Allow for overriding the GCE metadata service root URL.", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-08T21:49:08Z", "updated_at": "2014-08-08T21:51:37Z", "closed_at": null, "author_association": "MEMBER", "body": "In particular, there are cases where DNS resolution causes problems -- we need to make this configurable.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/35/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/30", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/30/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/30/events", "html_url": "https://github.com/google/oauth2client/issues/30", "id": 38973575, "number": 30, "title": "easy_install doesn't work", "user": {"login": "pcolmer", "id": 1979931, "avatar_url": "https://avatars2.githubusercontent.com/u/1979931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcolmer", "html_url": "https://github.com/pcolmer", "followers_url": "https://api.github.com/users/pcolmer/followers", "following_url": "https://api.github.com/users/pcolmer/following{/other_user}", "gists_url": "https://api.github.com/users/pcolmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcolmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcolmer/subscriptions", "organizations_url": "https://api.github.com/users/pcolmer/orgs", "repos_url": "https://api.github.com/users/pcolmer/repos", "events_url": "https://api.github.com/users/pcolmer/events{/privacy}", "received_events_url": "https://api.github.com/users/pcolmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-07-29T09:50:59Z", "updated_at": "2014-07-29T16:02:48Z", "closed_at": null, "author_association": "NONE", "body": "The README file says to do this to install:\neasy_install --upgrade oauth2client\nHowever, I get the error \"Couldn't find a setup script\". This is both with a clone of the git repo and also the tarball.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/30/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/17", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/17/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/17/events", "html_url": "https://github.com/google/oauth2client/issues/17", "id": 35702894, "number": 17, "title": "Add clientsecrets.py ability to report on Errors.", "user": {"login": "byuksel", "id": 7056322, "avatar_url": "https://avatars2.githubusercontent.com/u/7056322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/byuksel", "html_url": "https://github.com/byuksel", "followers_url": "https://api.github.com/users/byuksel/followers", "following_url": "https://api.github.com/users/byuksel/following{/other_user}", "gists_url": "https://api.github.com/users/byuksel/gists{/gist_id}", "starred_url": "https://api.github.com/users/byuksel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/byuksel/subscriptions", "organizations_url": "https://api.github.com/users/byuksel/orgs", "repos_url": "https://api.github.com/users/byuksel/repos", "events_url": "https://api.github.com/users/byuksel/events{/privacy}", "received_events_url": "https://api.github.com/users/byuksel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-06-13T20:08:07Z", "updated_at": "2014-06-13T20:08:07Z", "closed_at": null, "author_association": "NONE", "body": "Proposed code change for oauth2client/clientsecrets.py\n\nclass InvalidClientSecretsError(Error):\n  \"\"\"Format of ClientSecrets file is invalid.\"\"\"\n  def **init**(self, Error):\n    logging.info(\"Error:\"+str(Error))\n  pass\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/17/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/16", "repository_url": "https://api.github.com/repos/google/oauth2client", "labels_url": "https://api.github.com/repos/google/oauth2client/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/16/comments", "events_url": "https://api.github.com/repos/google/oauth2client/issues/16/events", "html_url": "https://github.com/google/oauth2client/issues/16", "id": 35702772, "number": 16, "title": "ClientSecrets JSON file from AppEngine does not have redirect_urls property", "user": {"login": "byuksel", "id": 7056322, "avatar_url": "https://avatars2.githubusercontent.com/u/7056322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/byuksel", "html_url": "https://github.com/byuksel", "followers_url": "https://api.github.com/users/byuksel/followers", "following_url": "https://api.github.com/users/byuksel/following{/other_user}", "gists_url": "https://api.github.com/users/byuksel/gists{/gist_id}", "starred_url": "https://api.github.com/users/byuksel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/byuksel/subscriptions", "organizations_url": "https://api.github.com/users/byuksel/orgs", "repos_url": "https://api.github.com/users/byuksel/repos", "events_url": "https://api.github.com/users/byuksel/events{/privacy}", "received_events_url": "https://api.github.com/users/byuksel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-06-13T20:06:19Z", "updated_at": "2017-09-25T03:20:09Z", "closed_at": null, "author_association": "NONE", "body": "I downloaded the clientsecrets JSON file from a standard AppEngine instance and when I try to do oauth with \n\nfrom oauth2client.client import flow_from_clientsecrets\nflow = flow_from_clientsecrets(secrets_file, scope=scope,\n                                 message=MISSING_CLIENT_SECRETS_MESSAGE)\n\nI get the following error:\nError:Missing property \"redirect_uris\" in a client type of \"web\". \n\nWe may need to remove the \"redirect_uris\" from required tags list. \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/16/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commits": [{"sha": "3071457064f3705bab1b041bd624a10d5a2d2619", "commit": {"author": {"name": "Jay Lee", "email": "jay0lee@gmail.com", "date": "2017-10-06T16:04:35Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2017-10-06T16:04:35Z"}, "message": "link to oauth2client deprecation explanation. (#728)", "tree": {"sha": "31f5e6bc830b086b765bc3c4e180029d8ef47156", "url": "https://api.github.com/repos/google/oauth2client/git/trees/31f5e6bc830b086b765bc3c4e180029d8ef47156"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/3071457064f3705bab1b041bd624a10d5a2d2619", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/3071457064f3705bab1b041bd624a10d5a2d2619", "html_url": "https://github.com/google/oauth2client/commit/3071457064f3705bab1b041bd624a10d5a2d2619", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/3071457064f3705bab1b041bd624a10d5a2d2619/comments", "author": {"login": "jay0lee", "id": 4623536, "avatar_url": "https://avatars2.githubusercontent.com/u/4623536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jay0lee", "html_url": "https://github.com/jay0lee", "followers_url": "https://api.github.com/users/jay0lee/followers", "following_url": "https://api.github.com/users/jay0lee/following{/other_user}", "gists_url": "https://api.github.com/users/jay0lee/gists{/gist_id}", "starred_url": "https://api.github.com/users/jay0lee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jay0lee/subscriptions", "organizations_url": "https://api.github.com/users/jay0lee/orgs", "repos_url": "https://api.github.com/users/jay0lee/repos", "events_url": "https://api.github.com/users/jay0lee/events{/privacy}", "received_events_url": "https://api.github.com/users/jay0lee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c56925cbc83b9dd8a5112a60e62e0aa73a33b5f", "url": "https://api.github.com/repos/google/oauth2client/commits/1c56925cbc83b9dd8a5112a60e62e0aa73a33b5f", "html_url": "https://github.com/google/oauth2client/commit/1c56925cbc83b9dd8a5112a60e62e0aa73a33b5f"}]}, {"sha": "1c56925cbc83b9dd8a5112a60e62e0aa73a33b5f", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2017-07-31T21:41:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-31T21:41:47Z"}, "message": "Escape error reason for oauth2 callback in django_util (#724)", "tree": {"sha": "a57ee9423b030486b60c12f30b13ef0ed1ed2c05", "url": "https://api.github.com/repos/google/oauth2client/git/trees/a57ee9423b030486b60c12f30b13ef0ed1ed2c05"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/1c56925cbc83b9dd8a5112a60e62e0aa73a33b5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/1c56925cbc83b9dd8a5112a60e62e0aa73a33b5f", "html_url": "https://github.com/google/oauth2client/commit/1c56925cbc83b9dd8a5112a60e62e0aa73a33b5f", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/1c56925cbc83b9dd8a5112a60e62e0aa73a33b5f/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d94570eb39d6901695153adbaf4c5dbccda80471", "url": "https://api.github.com/repos/google/oauth2client/commits/d94570eb39d6901695153adbaf4c5dbccda80471", "html_url": "https://github.com/google/oauth2client/commit/d94570eb39d6901695153adbaf4c5dbccda80471"}]}, {"sha": "d94570eb39d6901695153adbaf4c5dbccda80471", "commit": {"author": {"name": "Spyros Trigazis", "email": "strigazi@gmail.com", "date": "2017-06-29T19:08:07Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2017-06-29T19:08:07Z"}, "message": "Release v4.1.2 (#721)\n\nSigned-off-by: Spyros Trigazis <strigazi@gmail.com>", "tree": {"sha": "94ee004c336440a97897a50dc650eda33c356ece", "url": "https://api.github.com/repos/google/oauth2client/git/trees/94ee004c336440a97897a50dc650eda33c356ece"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/d94570eb39d6901695153adbaf4c5dbccda80471", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/d94570eb39d6901695153adbaf4c5dbccda80471", "html_url": "https://github.com/google/oauth2client/commit/d94570eb39d6901695153adbaf4c5dbccda80471", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/d94570eb39d6901695153adbaf4c5dbccda80471/comments", "author": {"login": "strigazi", "id": 3639690, "avatar_url": "https://avatars1.githubusercontent.com/u/3639690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/strigazi", "html_url": "https://github.com/strigazi", "followers_url": "https://api.github.com/users/strigazi/followers", "following_url": "https://api.github.com/users/strigazi/following{/other_user}", "gists_url": "https://api.github.com/users/strigazi/gists{/gist_id}", "starred_url": "https://api.github.com/users/strigazi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/strigazi/subscriptions", "organizations_url": "https://api.github.com/users/strigazi/orgs", "repos_url": "https://api.github.com/users/strigazi/repos", "events_url": "https://api.github.com/users/strigazi/events{/privacy}", "received_events_url": "https://api.github.com/users/strigazi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98c0a1a8c82cf46549bc7337343039c5af941730", "url": "https://api.github.com/repos/google/oauth2client/commits/98c0a1a8c82cf46549bc7337343039c5af941730", "html_url": "https://github.com/google/oauth2client/commit/98c0a1a8c82cf46549bc7337343039c5af941730"}]}, {"sha": "98c0a1a8c82cf46549bc7337343039c5af941730", "commit": {"author": {"name": "Spyros Trigazis", "email": "strigazi@gmail.com", "date": "2017-06-29T16:52:05Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2017-06-29T16:52:05Z"}, "message": "Exclude test in find_packages (#720)\n\nTo avoid conflicts with projects that have tests in their top-level\r\ndirectory:\r\n\r\n* exlude tests in find_packages\r\n* add include in MANIFEST.in\r\n\r\nCloses: #688\r\n\r\nSigned-off-by: Spyros Trigazis <strigazi@gmail.com>", "tree": {"sha": "5191f19ccfa1a01c2e098b0eb39d466bd50ac8a4", "url": "https://api.github.com/repos/google/oauth2client/git/trees/5191f19ccfa1a01c2e098b0eb39d466bd50ac8a4"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/98c0a1a8c82cf46549bc7337343039c5af941730", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/98c0a1a8c82cf46549bc7337343039c5af941730", "html_url": "https://github.com/google/oauth2client/commit/98c0a1a8c82cf46549bc7337343039c5af941730", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/98c0a1a8c82cf46549bc7337343039c5af941730/comments", "author": {"login": "strigazi", "id": 3639690, "avatar_url": "https://avatars1.githubusercontent.com/u/3639690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/strigazi", "html_url": "https://github.com/strigazi", "followers_url": "https://api.github.com/users/strigazi/followers", "following_url": "https://api.github.com/users/strigazi/following{/other_user}", "gists_url": "https://api.github.com/users/strigazi/gists{/gist_id}", "starred_url": "https://api.github.com/users/strigazi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/strigazi/subscriptions", "organizations_url": "https://api.github.com/users/strigazi/orgs", "repos_url": "https://api.github.com/users/strigazi/repos", "events_url": "https://api.github.com/users/strigazi/events{/privacy}", "received_events_url": "https://api.github.com/users/strigazi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97320af2733f7bdbe47f067327610e348f953ae1", "url": "https://api.github.com/repos/google/oauth2client/commits/97320af2733f7bdbe47f067327610e348f953ae1", "html_url": "https://github.com/google/oauth2client/commit/97320af2733f7bdbe47f067327610e348f953ae1"}]}, {"sha": "97320af2733f7bdbe47f067327610e348f953ae1", "commit": {"author": {"name": "Tomas Reimers", "email": "tomasreimers@gmail.com", "date": "2017-06-06T16:04:26Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2017-06-06T16:04:26Z"}, "message": "Release v4.1.1 (#718)", "tree": {"sha": "7445001c6a6eb284512d7fd34fa52c64622b8a68", "url": "https://api.github.com/repos/google/oauth2client/git/trees/7445001c6a6eb284512d7fd34fa52c64622b8a68"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/97320af2733f7bdbe47f067327610e348f953ae1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/97320af2733f7bdbe47f067327610e348f953ae1", "html_url": "https://github.com/google/oauth2client/commit/97320af2733f7bdbe47f067327610e348f953ae1", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/97320af2733f7bdbe47f067327610e348f953ae1/comments", "author": {"login": "tomasreimers", "id": 1188925, "avatar_url": "https://avatars0.githubusercontent.com/u/1188925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasreimers", "html_url": "https://github.com/tomasreimers", "followers_url": "https://api.github.com/users/tomasreimers/followers", "following_url": "https://api.github.com/users/tomasreimers/following{/other_user}", "gists_url": "https://api.github.com/users/tomasreimers/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasreimers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasreimers/subscriptions", "organizations_url": "https://api.github.com/users/tomasreimers/orgs", "repos_url": "https://api.github.com/users/tomasreimers/repos", "events_url": "https://api.github.com/users/tomasreimers/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasreimers/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1da72d15c653c7bd5221211c9a2e7ce2e6341a5", "url": "https://api.github.com/repos/google/oauth2client/commits/a1da72d15c653c7bd5221211c9a2e7ce2e6341a5", "html_url": "https://github.com/google/oauth2client/commit/a1da72d15c653c7bd5221211c9a2e7ce2e6341a5"}]}, {"sha": "a1da72d15c653c7bd5221211c9a2e7ce2e6341a5", "commit": {"author": {"name": "Tomas Reimers", "email": "tomasreimers@gmail.com", "date": "2017-06-01T19:28:58Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2017-06-01T19:28:58Z"}, "message": "Pass prompt='consent' from flow_from_clientsecrets (#717)", "tree": {"sha": "03e146e9dbeea2f98eda457130984c9bdd96dc52", "url": "https://api.github.com/repos/google/oauth2client/git/trees/03e146e9dbeea2f98eda457130984c9bdd96dc52"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/a1da72d15c653c7bd5221211c9a2e7ce2e6341a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/a1da72d15c653c7bd5221211c9a2e7ce2e6341a5", "html_url": "https://github.com/google/oauth2client/commit/a1da72d15c653c7bd5221211c9a2e7ce2e6341a5", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/a1da72d15c653c7bd5221211c9a2e7ce2e6341a5/comments", "author": {"login": "tomasreimers", "id": 1188925, "avatar_url": "https://avatars0.githubusercontent.com/u/1188925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasreimers", "html_url": "https://github.com/tomasreimers", "followers_url": "https://api.github.com/users/tomasreimers/followers", "following_url": "https://api.github.com/users/tomasreimers/following{/other_user}", "gists_url": "https://api.github.com/users/tomasreimers/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasreimers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasreimers/subscriptions", "organizations_url": "https://api.github.com/users/tomasreimers/orgs", "repos_url": "https://api.github.com/users/tomasreimers/repos", "events_url": "https://api.github.com/users/tomasreimers/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasreimers/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00926f2058e23da7f6772ad6477e64d7506415e5", "url": "https://api.github.com/repos/google/oauth2client/commits/00926f2058e23da7f6772ad6477e64d7506415e5", "html_url": "https://github.com/google/oauth2client/commit/00926f2058e23da7f6772ad6477e64d7506415e5"}]}, {"sha": "00926f2058e23da7f6772ad6477e64d7506415e5", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2017-05-10T23:11:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-10T23:11:19Z"}, "message": "Release v4.1.0 and deprecate the library (#714)", "tree": {"sha": "546c2882464f8d743201da6dc1d15b3063b76363", "url": "https://api.github.com/repos/google/oauth2client/git/trees/546c2882464f8d743201da6dc1d15b3063b76363"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/00926f2058e23da7f6772ad6477e64d7506415e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/00926f2058e23da7f6772ad6477e64d7506415e5", "html_url": "https://github.com/google/oauth2client/commit/00926f2058e23da7f6772ad6477e64d7506415e5", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/00926f2058e23da7f6772ad6477e64d7506415e5/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "119b90cbc91ed9d892df45413be5b551d90406e2", "url": "https://api.github.com/repos/google/oauth2client/commits/119b90cbc91ed9d892df45413be5b551d90406e2", "html_url": "https://github.com/google/oauth2client/commit/119b90cbc91ed9d892df45413be5b551d90406e2"}]}, {"sha": "119b90cbc91ed9d892df45413be5b551d90406e2", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2017-05-09T21:46:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-09T21:46:47Z"}, "message": "Fix system tests (#713)\n\nUpdate user key to fix system tests", "tree": {"sha": "78893ebee66e3acdaa2f36f892b31f6a853f80fc", "url": "https://api.github.com/repos/google/oauth2client/git/trees/78893ebee66e3acdaa2f36f892b31f6a853f80fc"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/119b90cbc91ed9d892df45413be5b551d90406e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/119b90cbc91ed9d892df45413be5b551d90406e2", "html_url": "https://github.com/google/oauth2client/commit/119b90cbc91ed9d892df45413be5b551d90406e2", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/119b90cbc91ed9d892df45413be5b551d90406e2/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efe567a8f03739a5a340fa9f6909690db340caf6", "url": "https://api.github.com/repos/google/oauth2client/commits/efe567a8f03739a5a340fa9f6909690db340caf6", "html_url": "https://github.com/google/oauth2client/commit/efe567a8f03739a5a340fa9f6909690db340caf6"}]}, {"sha": "efe567a8f03739a5a340fa9f6909690db340caf6", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2017-05-09T19:54:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-09T19:54:17Z"}, "message": "Fix ci (#712)\n\n* Add missing docs files\r\n\r\n* Fix app engine sdk download command\r\n\r\n* Remove PyPy, as cryptography updates seems to have broken oauth2client support since at least v2.0.0", "tree": {"sha": "0077abb1cb3c675cda1b2a69cfe6dc648680a265", "url": "https://api.github.com/repos/google/oauth2client/git/trees/0077abb1cb3c675cda1b2a69cfe6dc648680a265"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/efe567a8f03739a5a340fa9f6909690db340caf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/efe567a8f03739a5a340fa9f6909690db340caf6", "html_url": "https://github.com/google/oauth2client/commit/efe567a8f03739a5a340fa9f6909690db340caf6", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/efe567a8f03739a5a340fa9f6909690db340caf6/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf13958d7d66dfa99492ac0cc91d75e276066be1", "url": "https://api.github.com/repos/google/oauth2client/commits/cf13958d7d66dfa99492ac0cc91d75e276066be1", "html_url": "https://github.com/google/oauth2client/commit/cf13958d7d66dfa99492ac0cc91d75e276066be1"}]}, {"sha": "cf13958d7d66dfa99492ac0cc91d75e276066be1", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2017-05-09T19:30:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-09T19:30:32Z"}, "message": "Escape callback error code (#710)", "tree": {"sha": "dde63505da466376219e3d8c6a1f4e60cf4aa162", "url": "https://api.github.com/repos/google/oauth2client/git/trees/dde63505da466376219e3d8c6a1f4e60cf4aa162"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/cf13958d7d66dfa99492ac0cc91d75e276066be1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/cf13958d7d66dfa99492ac0cc91d75e276066be1", "html_url": "https://github.com/google/oauth2client/commit/cf13958d7d66dfa99492ac0cc91d75e276066be1", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/cf13958d7d66dfa99492ac0cc91d75e276066be1/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "feec15f070903069347b9386a24fb73148f97411", "url": "https://api.github.com/repos/google/oauth2client/commits/feec15f070903069347b9386a24fb73148f97411", "html_url": "https://github.com/google/oauth2client/commit/feec15f070903069347b9386a24fb73148f97411"}]}, {"sha": "feec15f070903069347b9386a24fb73148f97411", "commit": {"author": {"name": "Craig Citro", "email": "craigcitro@gmail.com", "date": "2017-03-27T16:47:44Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2017-03-27T16:47:44Z"}, "message": "Allow customizing the GCE metadata service address via an env var. (#704)\n\nThe goal here is to make it possible for a user of a binary that depends on\r\nthis library (eg the google cloud SDK) to be able to customize where it looks\r\nfor the GCE metadata service. (An adventurous user can already customize the\r\nGCE metadata service location via the existing global vars in this library.)\r\n\r\nThe only bit of awkwardness here is really the test: since this is a top-level\r\nstatement, reloading is the only way to ensure it works.", "tree": {"sha": "f90c1a0a8aeb25024c247763bd55969a45c3560d", "url": "https://api.github.com/repos/google/oauth2client/git/trees/f90c1a0a8aeb25024c247763bd55969a45c3560d"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/feec15f070903069347b9386a24fb73148f97411", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/feec15f070903069347b9386a24fb73148f97411", "html_url": "https://github.com/google/oauth2client/commit/feec15f070903069347b9386a24fb73148f97411", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/feec15f070903069347b9386a24fb73148f97411/comments", "author": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3cf56b659e067dea8ead933f81e4a6f42d30ed8", "url": "https://api.github.com/repos/google/oauth2client/commits/a3cf56b659e067dea8ead933f81e4a6f42d30ed8", "html_url": "https://github.com/google/oauth2client/commit/a3cf56b659e067dea8ead933f81e4a6f42d30ed8"}]}, {"sha": "a3cf56b659e067dea8ead933f81e4a6f42d30ed8", "commit": {"author": {"name": "Craig Citro", "email": "craigcitro@gmail.com", "date": "2017-03-27T16:39:27Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2017-03-27T16:39:27Z"}, "message": "Make `tox -e flake8` pass. (#705)\n\nThis library is in maintenance mode, but no reason to leave travis broken. Two\r\ndisables and a better `except` in a test and it's green again.", "tree": {"sha": "d47b704b34b54fb9db38cbab9f2ab4b0cfb5e7e8", "url": "https://api.github.com/repos/google/oauth2client/git/trees/d47b704b34b54fb9db38cbab9f2ab4b0cfb5e7e8"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/a3cf56b659e067dea8ead933f81e4a6f42d30ed8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/a3cf56b659e067dea8ead933f81e4a6f42d30ed8", "html_url": "https://github.com/google/oauth2client/commit/a3cf56b659e067dea8ead933f81e4a6f42d30ed8", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/a3cf56b659e067dea8ead933f81e4a6f42d30ed8/comments", "author": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c055e7f7f5b7f7f9fe8ba12bbf7e297fccc2b59b", "url": "https://api.github.com/repos/google/oauth2client/commits/c055e7f7f5b7f7f9fe8ba12bbf7e297fccc2b59b", "html_url": "https://github.com/google/oauth2client/commit/c055e7f7f5b7f7f9fe8ba12bbf7e297fccc2b59b"}]}, {"sha": "c055e7f7f5b7f7f9fe8ba12bbf7e297fccc2b59b", "commit": {"author": {"name": "Craig Citro", "email": "craigcitro@gmail.com", "date": "2017-02-03T17:39:13Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2017-02-03T17:39:13Z"}, "message": "Typo fix. (#697)\n\nI normally try to restrain my inner copyeditor, but this one was in a docstring that someone might copy-paste.", "tree": {"sha": "a4c2d998b5f453784e23bdf3966c27c60bb05374", "url": "https://api.github.com/repos/google/oauth2client/git/trees/a4c2d998b5f453784e23bdf3966c27c60bb05374"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/c055e7f7f5b7f7f9fe8ba12bbf7e297fccc2b59b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/c055e7f7f5b7f7f9fe8ba12bbf7e297fccc2b59b", "html_url": "https://github.com/google/oauth2client/commit/c055e7f7f5b7f7f9fe8ba12bbf7e297fccc2b59b", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/c055e7f7f5b7f7f9fe8ba12bbf7e297fccc2b59b/comments", "author": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc3e7d13a4f33cb10ce8fe2acfe02b853b1774c3", "url": "https://api.github.com/repos/google/oauth2client/commits/cc3e7d13a4f33cb10ce8fe2acfe02b853b1774c3", "html_url": "https://github.com/google/oauth2client/commit/cc3e7d13a4f33cb10ce8fe2acfe02b853b1774c3"}]}, {"sha": "cc3e7d13a4f33cb10ce8fe2acfe02b853b1774c3", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2017-01-17T20:25:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-17T20:25:11Z"}, "message": "Include LICENSE in Manifest.in (#694)", "tree": {"sha": "00df607b9c34372df5d084a711add1464e514588", "url": "https://api.github.com/repos/google/oauth2client/git/trees/00df607b9c34372df5d084a711add1464e514588"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/cc3e7d13a4f33cb10ce8fe2acfe02b853b1774c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/cc3e7d13a4f33cb10ce8fe2acfe02b853b1774c3", "html_url": "https://github.com/google/oauth2client/commit/cc3e7d13a4f33cb10ce8fe2acfe02b853b1774c3", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/cc3e7d13a4f33cb10ce8fe2acfe02b853b1774c3/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f75203e64cafa2ca63fe383bd99e6a0ac0373dae", "url": "https://api.github.com/repos/google/oauth2client/commits/f75203e64cafa2ca63fe383bd99e6a0ac0373dae", "html_url": "https://github.com/google/oauth2client/commit/f75203e64cafa2ca63fe383bd99e6a0ac0373dae"}]}, {"sha": "f75203e64cafa2ca63fe383bd99e6a0ac0373dae", "commit": {"author": {"name": "Brendan McCollam", "email": "brendan@mccoll.am", "date": "2016-12-06T17:42:20Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-12-06T17:42:20Z"}, "message": "Remove b64 padding from PKCE values, per RFC7636 (#683)", "tree": {"sha": "d0e19ade998912e1734d1f833d78523cdf5fc9c1", "url": "https://api.github.com/repos/google/oauth2client/git/trees/d0e19ade998912e1734d1f833d78523cdf5fc9c1"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/f75203e64cafa2ca63fe383bd99e6a0ac0373dae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/f75203e64cafa2ca63fe383bd99e6a0ac0373dae", "html_url": "https://github.com/google/oauth2client/commit/f75203e64cafa2ca63fe383bd99e6a0ac0373dae", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/f75203e64cafa2ca63fe383bd99e6a0ac0373dae/comments", "author": {"login": "bjmc", "id": 328557, "avatar_url": "https://avatars3.githubusercontent.com/u/328557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjmc", "html_url": "https://github.com/bjmc", "followers_url": "https://api.github.com/users/bjmc/followers", "following_url": "https://api.github.com/users/bjmc/following{/other_user}", "gists_url": "https://api.github.com/users/bjmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjmc/subscriptions", "organizations_url": "https://api.github.com/users/bjmc/orgs", "repos_url": "https://api.github.com/users/bjmc/repos", "events_url": "https://api.github.com/users/bjmc/events{/privacy}", "received_events_url": "https://api.github.com/users/bjmc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7f656d6aa0ac111a6692ded3eaaa7b1caf1fedc", "url": "https://api.github.com/repos/google/oauth2client/commits/f7f656d6aa0ac111a6692ded3eaaa7b1caf1fedc", "html_url": "https://github.com/google/oauth2client/commit/f7f656d6aa0ac111a6692ded3eaaa7b1caf1fedc"}]}, {"sha": "f7f656d6aa0ac111a6692ded3eaaa7b1caf1fedc", "commit": {"author": {"name": "Clancy Childs", "email": "clancychilds@users.noreply.github.com", "date": "2016-11-28T19:09:30Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-11-28T19:09:30Z"}, "message": "Store original encoded and signed identity JWT in OAuth2Credentials (#680)", "tree": {"sha": "1bc48780b38f534cd06f37612a12b725e60508e6", "url": "https://api.github.com/repos/google/oauth2client/git/trees/1bc48780b38f534cd06f37612a12b725e60508e6"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/f7f656d6aa0ac111a6692ded3eaaa7b1caf1fedc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/f7f656d6aa0ac111a6692ded3eaaa7b1caf1fedc", "html_url": "https://github.com/google/oauth2client/commit/f7f656d6aa0ac111a6692ded3eaaa7b1caf1fedc", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/f7f656d6aa0ac111a6692ded3eaaa7b1caf1fedc/comments", "author": {"login": "clancychilds", "id": 8244623, "avatar_url": "https://avatars0.githubusercontent.com/u/8244623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clancychilds", "html_url": "https://github.com/clancychilds", "followers_url": "https://api.github.com/users/clancychilds/followers", "following_url": "https://api.github.com/users/clancychilds/following{/other_user}", "gists_url": "https://api.github.com/users/clancychilds/gists{/gist_id}", "starred_url": "https://api.github.com/users/clancychilds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clancychilds/subscriptions", "organizations_url": "https://api.github.com/users/clancychilds/orgs", "repos_url": "https://api.github.com/users/clancychilds/repos", "events_url": "https://api.github.com/users/clancychilds/events{/privacy}", "received_events_url": "https://api.github.com/users/clancychilds/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2da8ccde3f74507990cb551fe48f6d25820e6ab3", "url": "https://api.github.com/repos/google/oauth2client/commits/2da8ccde3f74507990cb551fe48f6d25820e6ab3", "html_url": "https://github.com/google/oauth2client/commit/2da8ccde3f74507990cb551fe48f6d25820e6ab3"}]}, {"sha": "2da8ccde3f74507990cb551fe48f6d25820e6ab3", "commit": {"author": {"name": "Bill Prin", "email": "waprin@gmail.com", "date": "2016-11-17T20:00:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-17T20:00:05Z"}, "message": "Merge pull request #676 from chripede/django-jsonpickle\n\nUse jsonpickle in django contrib", "tree": {"sha": "5ceeec7e4b33691feec295d6536b1a4ba7a3dfc4", "url": "https://api.github.com/repos/google/oauth2client/git/trees/5ceeec7e4b33691feec295d6536b1a4ba7a3dfc4"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/2da8ccde3f74507990cb551fe48f6d25820e6ab3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/2da8ccde3f74507990cb551fe48f6d25820e6ab3", "html_url": "https://github.com/google/oauth2client/commit/2da8ccde3f74507990cb551fe48f6d25820e6ab3", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/2da8ccde3f74507990cb551fe48f6d25820e6ab3/comments", "author": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92e4ad332992b91d4674335f3d83a7181e38967d", "url": "https://api.github.com/repos/google/oauth2client/commits/92e4ad332992b91d4674335f3d83a7181e38967d", "html_url": "https://github.com/google/oauth2client/commit/92e4ad332992b91d4674335f3d83a7181e38967d"}, {"sha": "d0078709c2be1a0ecbcfd2cdceaaf867e7147e45", "url": "https://api.github.com/repos/google/oauth2client/commits/d0078709c2be1a0ecbcfd2cdceaaf867e7147e45", "html_url": "https://github.com/google/oauth2client/commit/d0078709c2be1a0ecbcfd2cdceaaf867e7147e45"}]}, {"sha": "d0078709c2be1a0ecbcfd2cdceaaf867e7147e45", "commit": {"author": {"name": "Christian Pedersen", "email": "chripede@gmail.com", "date": "2016-11-16T22:40:43Z"}, "committer": {"name": "Christian Pedersen", "email": "hp@etargmedia.dk", "date": "2016-11-17T07:53:01Z"}, "message": "Use jsonpickle if possible\n\nFallback to pickle if jsonpickle is not installed", "tree": {"sha": "5ceeec7e4b33691feec295d6536b1a4ba7a3dfc4", "url": "https://api.github.com/repos/google/oauth2client/git/trees/5ceeec7e4b33691feec295d6536b1a4ba7a3dfc4"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/d0078709c2be1a0ecbcfd2cdceaaf867e7147e45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/d0078709c2be1a0ecbcfd2cdceaaf867e7147e45", "html_url": "https://github.com/google/oauth2client/commit/d0078709c2be1a0ecbcfd2cdceaaf867e7147e45", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/d0078709c2be1a0ecbcfd2cdceaaf867e7147e45/comments", "author": {"login": "chripede", "id": 406836, "avatar_url": "https://avatars3.githubusercontent.com/u/406836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chripede", "html_url": "https://github.com/chripede", "followers_url": "https://api.github.com/users/chripede/followers", "following_url": "https://api.github.com/users/chripede/following{/other_user}", "gists_url": "https://api.github.com/users/chripede/gists{/gist_id}", "starred_url": "https://api.github.com/users/chripede/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chripede/subscriptions", "organizations_url": "https://api.github.com/users/chripede/orgs", "repos_url": "https://api.github.com/users/chripede/repos", "events_url": "https://api.github.com/users/chripede/events{/privacy}", "received_events_url": "https://api.github.com/users/chripede/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chripede", "id": 406836, "avatar_url": "https://avatars3.githubusercontent.com/u/406836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chripede", "html_url": "https://github.com/chripede", "followers_url": "https://api.github.com/users/chripede/followers", "following_url": "https://api.github.com/users/chripede/following{/other_user}", "gists_url": "https://api.github.com/users/chripede/gists{/gist_id}", "starred_url": "https://api.github.com/users/chripede/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chripede/subscriptions", "organizations_url": "https://api.github.com/users/chripede/orgs", "repos_url": "https://api.github.com/users/chripede/repos", "events_url": "https://api.github.com/users/chripede/events{/privacy}", "received_events_url": "https://api.github.com/users/chripede/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92e4ad332992b91d4674335f3d83a7181e38967d", "url": "https://api.github.com/repos/google/oauth2client/commits/92e4ad332992b91d4674335f3d83a7181e38967d", "html_url": "https://github.com/google/oauth2client/commit/92e4ad332992b91d4674335f3d83a7181e38967d"}]}, {"sha": "92e4ad332992b91d4674335f3d83a7181e38967d", "commit": {"author": {"name": "Aditya", "email": "code.aditya@gmail.com", "date": "2016-10-26T15:24:41Z"}, "committer": {"name": "Brian J. Watson", "email": "brianwatson@google.com", "date": "2016-10-26T15:24:41Z"}, "message": "Fix typo in changelog: aetting --> setting (#668)", "tree": {"sha": "72933391626ad4511855f3b2a02dd6a695bddc9d", "url": "https://api.github.com/repos/google/oauth2client/git/trees/72933391626ad4511855f3b2a02dd6a695bddc9d"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/92e4ad332992b91d4674335f3d83a7181e38967d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/92e4ad332992b91d4674335f3d83a7181e38967d", "html_url": "https://github.com/google/oauth2client/commit/92e4ad332992b91d4674335f3d83a7181e38967d", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/92e4ad332992b91d4674335f3d83a7181e38967d/comments", "author": {"login": "codeaditya", "id": 2553617, "avatar_url": "https://avatars1.githubusercontent.com/u/2553617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codeaditya", "html_url": "https://github.com/codeaditya", "followers_url": "https://api.github.com/users/codeaditya/followers", "following_url": "https://api.github.com/users/codeaditya/following{/other_user}", "gists_url": "https://api.github.com/users/codeaditya/gists{/gist_id}", "starred_url": "https://api.github.com/users/codeaditya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codeaditya/subscriptions", "organizations_url": "https://api.github.com/users/codeaditya/orgs", "repos_url": "https://api.github.com/users/codeaditya/repos", "events_url": "https://api.github.com/users/codeaditya/events{/privacy}", "received_events_url": "https://api.github.com/users/codeaditya/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjwatson", "id": 471755, "avatar_url": "https://avatars3.githubusercontent.com/u/471755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjwatson", "html_url": "https://github.com/bjwatson", "followers_url": "https://api.github.com/users/bjwatson/followers", "following_url": "https://api.github.com/users/bjwatson/following{/other_user}", "gists_url": "https://api.github.com/users/bjwatson/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjwatson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjwatson/subscriptions", "organizations_url": "https://api.github.com/users/bjwatson/orgs", "repos_url": "https://api.github.com/users/bjwatson/repos", "events_url": "https://api.github.com/users/bjwatson/events{/privacy}", "received_events_url": "https://api.github.com/users/bjwatson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a731be362014d61630044c46495c5b750437ab88", "url": "https://api.github.com/repos/google/oauth2client/commits/a731be362014d61630044c46495c5b750437ab88", "html_url": "https://github.com/google/oauth2client/commit/a731be362014d61630044c46495c5b750437ab88"}]}, {"sha": "a731be362014d61630044c46495c5b750437ab88", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-10-14T17:53:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-14T17:53:53Z"}, "message": "Release v4.0.0 (#666)", "tree": {"sha": "5037224d7f66c5b9e5ee825d4b3214638f90e1bc", "url": "https://api.github.com/repos/google/oauth2client/git/trees/5037224d7f66c5b9e5ee825d4b3214638f90e1bc"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/a731be362014d61630044c46495c5b750437ab88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/a731be362014d61630044c46495c5b750437ab88", "html_url": "https://github.com/google/oauth2client/commit/a731be362014d61630044c46495c5b750437ab88", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/a731be362014d61630044c46495c5b750437ab88/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3eb691fc469ed6afe6f7a8b7bfe00c95dad46c73", "url": "https://api.github.com/repos/google/oauth2client/commits/3eb691fc469ed6afe6f7a8b7bfe00c95dad46c73", "html_url": "https://github.com/google/oauth2client/commit/3eb691fc469ed6afe6f7a8b7bfe00c95dad46c73"}]}, {"sha": "3eb691fc469ed6afe6f7a8b7bfe00c95dad46c73", "commit": {"author": {"name": "Arthur D. Cherba", "email": "arthur.cherba@gmail.com", "date": "2016-10-14T17:44:47Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-10-14T17:44:47Z"}, "message": "Include expanded version of Apache 2.0 license. (#663)", "tree": {"sha": "a29fca337917525386e4c5a3994d1da966b0b223", "url": "https://api.github.com/repos/google/oauth2client/git/trees/a29fca337917525386e4c5a3994d1da966b0b223"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/3eb691fc469ed6afe6f7a8b7bfe00c95dad46c73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/3eb691fc469ed6afe6f7a8b7bfe00c95dad46c73", "html_url": "https://github.com/google/oauth2client/commit/3eb691fc469ed6afe6f7a8b7bfe00c95dad46c73", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/3eb691fc469ed6afe6f7a8b7bfe00c95dad46c73/comments", "author": {"login": "cherba", "id": 11074390, "avatar_url": "https://avatars1.githubusercontent.com/u/11074390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cherba", "html_url": "https://github.com/cherba", "followers_url": "https://api.github.com/users/cherba/followers", "following_url": "https://api.github.com/users/cherba/following{/other_user}", "gists_url": "https://api.github.com/users/cherba/gists{/gist_id}", "starred_url": "https://api.github.com/users/cherba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cherba/subscriptions", "organizations_url": "https://api.github.com/users/cherba/orgs", "repos_url": "https://api.github.com/users/cherba/repos", "events_url": "https://api.github.com/users/cherba/events{/privacy}", "received_events_url": "https://api.github.com/users/cherba/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "480c558b7fb962ec61c62ecadca004af0b71fc7a", "url": "https://api.github.com/repos/google/oauth2client/commits/480c558b7fb962ec61c62ecadca004af0b71fc7a", "html_url": "https://github.com/google/oauth2client/commit/480c558b7fb962ec61c62ecadca004af0b71fc7a"}]}, {"sha": "480c558b7fb962ec61c62ecadca004af0b71fc7a", "commit": {"author": {"name": "Adam Chainz", "email": "me@adamj.eu", "date": "2016-10-14T17:08:31Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-10-14T17:08:31Z"}, "message": "Release as a universal wheel (#665)", "tree": {"sha": "7152e5a1258f954c14261b277fa63157b94f2e97", "url": "https://api.github.com/repos/google/oauth2client/git/trees/7152e5a1258f954c14261b277fa63157b94f2e97"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/480c558b7fb962ec61c62ecadca004af0b71fc7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/480c558b7fb962ec61c62ecadca004af0b71fc7a", "html_url": "https://github.com/google/oauth2client/commit/480c558b7fb962ec61c62ecadca004af0b71fc7a", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/480c558b7fb962ec61c62ecadca004af0b71fc7a/comments", "author": {"login": "adamchainz", "id": 857609, "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "999de3ac8bf377b511824f1ec88c651dde5a1d4f", "url": "https://api.github.com/repos/google/oauth2client/commits/999de3ac8bf377b511824f1ec88c651dde5a1d4f", "html_url": "https://github.com/google/oauth2client/commit/999de3ac8bf377b511824f1ec88c651dde5a1d4f"}]}, {"sha": "999de3ac8bf377b511824f1ec88c651dde5a1d4f", "commit": {"author": {"name": "Liran Nuna", "email": "liranuna@gmail.com", "date": "2016-10-06T19:53:16Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-10-06T19:53:16Z"}, "message": "Try to revoke token with POST when getting a 405 (#662)\n\nThe OAuth spec does not specify the HTTP verb explicitly but it does hint that POST is the correct verb.\r\nWhen using the client library with other OAuth services that implement revocation token via a POST, revoking the token will fail.\r\n\r\nThis commit adds the ability to re-try the revocation process if we get a 405 with the POST verb.", "tree": {"sha": "b3e235240361323a4ac05074c921d6b7388f308d", "url": "https://api.github.com/repos/google/oauth2client/git/trees/b3e235240361323a4ac05074c921d6b7388f308d"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/999de3ac8bf377b511824f1ec88c651dde5a1d4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/999de3ac8bf377b511824f1ec88c651dde5a1d4f", "html_url": "https://github.com/google/oauth2client/commit/999de3ac8bf377b511824f1ec88c651dde5a1d4f", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/999de3ac8bf377b511824f1ec88c651dde5a1d4f/comments", "author": {"login": "LiraNuna", "id": 205628, "avatar_url": "https://avatars2.githubusercontent.com/u/205628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LiraNuna", "html_url": "https://github.com/LiraNuna", "followers_url": "https://api.github.com/users/LiraNuna/followers", "following_url": "https://api.github.com/users/LiraNuna/following{/other_user}", "gists_url": "https://api.github.com/users/LiraNuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/LiraNuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LiraNuna/subscriptions", "organizations_url": "https://api.github.com/users/LiraNuna/orgs", "repos_url": "https://api.github.com/users/LiraNuna/repos", "events_url": "https://api.github.com/users/LiraNuna/events{/privacy}", "received_events_url": "https://api.github.com/users/LiraNuna/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f9fdbd5a3e590e6e53e42a59ca96d1010c0cec7", "url": "https://api.github.com/repos/google/oauth2client/commits/3f9fdbd5a3e590e6e53e42a59ca96d1010c0cec7", "html_url": "https://github.com/google/oauth2client/commit/3f9fdbd5a3e590e6e53e42a59ca96d1010c0cec7"}]}, {"sha": "3f9fdbd5a3e590e6e53e42a59ca96d1010c0cec7", "commit": {"author": {"name": "Bill Prin", "email": "waprin@gmail.com", "date": "2016-09-20T19:28:47Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-09-20T19:28:47Z"}, "message": "Add Django Samples (#636)\n\nContains two sets of samples - one for the \u201cGoogle auth\u201d system and one for the \u201cDjango\r\nuser auth\u201d system.", "tree": {"sha": "32c100ce32f226b9810622913b01f63d60e34140", "url": "https://api.github.com/repos/google/oauth2client/git/trees/32c100ce32f226b9810622913b01f63d60e34140"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/3f9fdbd5a3e590e6e53e42a59ca96d1010c0cec7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/3f9fdbd5a3e590e6e53e42a59ca96d1010c0cec7", "html_url": "https://github.com/google/oauth2client/commit/3f9fdbd5a3e590e6e53e42a59ca96d1010c0cec7", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/3f9fdbd5a3e590e6e53e42a59ca96d1010c0cec7/comments", "author": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a6e3b2a34561fb575ceecbb0f598347d47786e3", "url": "https://api.github.com/repos/google/oauth2client/commits/8a6e3b2a34561fb575ceecbb0f598347d47786e3", "html_url": "https://github.com/google/oauth2client/commit/8a6e3b2a34561fb575ceecbb0f598347d47786e3"}]}, {"sha": "8a6e3b2a34561fb575ceecbb0f598347d47786e3", "commit": {"author": {"name": "Bill Prin", "email": "waprin@gmail.com", "date": "2016-09-16T22:50:17Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-09-16T22:50:16Z"}, "message": "Fix django authorization redirect by correctly checking validity of credentials (#651)", "tree": {"sha": "b2b69bcf4b7a7f5e5af13584038b98be2b6eddc8", "url": "https://api.github.com/repos/google/oauth2client/git/trees/b2b69bcf4b7a7f5e5af13584038b98be2b6eddc8"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/8a6e3b2a34561fb575ceecbb0f598347d47786e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/8a6e3b2a34561fb575ceecbb0f598347d47786e3", "html_url": "https://github.com/google/oauth2client/commit/8a6e3b2a34561fb575ceecbb0f598347d47786e3", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/8a6e3b2a34561fb575ceecbb0f598347d47786e3/comments", "author": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f0618d53481a3afe2d0cf232131ba21dcf583de", "url": "https://api.github.com/repos/google/oauth2client/commits/9f0618d53481a3afe2d0cf232131ba21dcf583de", "html_url": "https://github.com/google/oauth2client/commit/9f0618d53481a3afe2d0cf232131ba21dcf583de"}]}, {"sha": "9f0618d53481a3afe2d0cf232131ba21dcf583de", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-08-20T17:59:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-20T17:59:00Z"}, "message": "Merge pull request #635 from waprin/django_flake8\n\nFix flake8 error.", "tree": {"sha": "299387da3fd6270adc0ebc90dcc89a3be081b2c9", "url": "https://api.github.com/repos/google/oauth2client/git/trees/299387da3fd6270adc0ebc90dcc89a3be081b2c9"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/9f0618d53481a3afe2d0cf232131ba21dcf583de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/9f0618d53481a3afe2d0cf232131ba21dcf583de", "html_url": "https://github.com/google/oauth2client/commit/9f0618d53481a3afe2d0cf232131ba21dcf583de", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/9f0618d53481a3afe2d0cf232131ba21dcf583de/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51ae8761eaf5ec044aa5ab221020b05be8fe2a71", "url": "https://api.github.com/repos/google/oauth2client/commits/51ae8761eaf5ec044aa5ab221020b05be8fe2a71", "html_url": "https://github.com/google/oauth2client/commit/51ae8761eaf5ec044aa5ab221020b05be8fe2a71"}, {"sha": "5315cd9d4e1bbb418c363614553b6c54aa0575fc", "url": "https://api.github.com/repos/google/oauth2client/commits/5315cd9d4e1bbb418c363614553b6c54aa0575fc", "html_url": "https://github.com/google/oauth2client/commit/5315cd9d4e1bbb418c363614553b6c54aa0575fc"}]}, {"sha": "5315cd9d4e1bbb418c363614553b6c54aa0575fc", "commit": {"author": {"name": "Bill Prin", "email": "waprin@google.com", "date": "2016-08-20T00:07:09Z"}, "committer": {"name": "Bill Prin", "email": "waprin@google.com", "date": "2016-08-20T00:07:09Z"}, "message": "Fix flake8 error", "tree": {"sha": "299387da3fd6270adc0ebc90dcc89a3be081b2c9", "url": "https://api.github.com/repos/google/oauth2client/git/trees/299387da3fd6270adc0ebc90dcc89a3be081b2c9"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/5315cd9d4e1bbb418c363614553b6c54aa0575fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/5315cd9d4e1bbb418c363614553b6c54aa0575fc", "html_url": "https://github.com/google/oauth2client/commit/5315cd9d4e1bbb418c363614553b6c54aa0575fc", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/5315cd9d4e1bbb418c363614553b6c54aa0575fc/comments", "author": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51ae8761eaf5ec044aa5ab221020b05be8fe2a71", "url": "https://api.github.com/repos/google/oauth2client/commits/51ae8761eaf5ec044aa5ab221020b05be8fe2a71", "html_url": "https://github.com/google/oauth2client/commit/51ae8761eaf5ec044aa5ab221020b05be8fe2a71"}]}, {"sha": "51ae8761eaf5ec044aa5ab221020b05be8fe2a71", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-17T22:59:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-17T22:59:57Z"}, "message": "Merge pull request #622 from dhermes/allow-repeated-params\n\nCorrect query loss when using parse_qsl to dict", "tree": {"sha": "4bfe3e9c6ccd639ae4a598456daa0ec437e0221c", "url": "https://api.github.com/repos/google/oauth2client/git/trees/4bfe3e9c6ccd639ae4a598456daa0ec437e0221c"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/51ae8761eaf5ec044aa5ab221020b05be8fe2a71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/51ae8761eaf5ec044aa5ab221020b05be8fe2a71", "html_url": "https://github.com/google/oauth2client/commit/51ae8761eaf5ec044aa5ab221020b05be8fe2a71", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/51ae8761eaf5ec044aa5ab221020b05be8fe2a71/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c7b3be5a101454e2c641a9835e652a92d16800e", "url": "https://api.github.com/repos/google/oauth2client/commits/4c7b3be5a101454e2c641a9835e652a92d16800e", "html_url": "https://github.com/google/oauth2client/commit/4c7b3be5a101454e2c641a9835e652a92d16800e"}, {"sha": "ebe9ed0bbbe4ce51c1a76de694c795e38906d690", "url": "https://api.github.com/repos/google/oauth2client/commits/ebe9ed0bbbe4ce51c1a76de694c795e38906d690", "html_url": "https://github.com/google/oauth2client/commit/ebe9ed0bbbe4ce51c1a76de694c795e38906d690"}]}, {"sha": "ebe9ed0bbbe4ce51c1a76de694c795e38906d690", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-17T22:18:29Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-17T22:56:41Z"}, "message": "Correct query loss when using parse_qsl to dict", "tree": {"sha": "4bfe3e9c6ccd639ae4a598456daa0ec437e0221c", "url": "https://api.github.com/repos/google/oauth2client/git/trees/4bfe3e9c6ccd639ae4a598456daa0ec437e0221c"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/ebe9ed0bbbe4ce51c1a76de694c795e38906d690", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/ebe9ed0bbbe4ce51c1a76de694c795e38906d690", "html_url": "https://github.com/google/oauth2client/commit/ebe9ed0bbbe4ce51c1a76de694c795e38906d690", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/ebe9ed0bbbe4ce51c1a76de694c795e38906d690/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c7b3be5a101454e2c641a9835e652a92d16800e", "url": "https://api.github.com/repos/google/oauth2client/commits/4c7b3be5a101454e2c641a9835e652a92d16800e", "html_url": "https://github.com/google/oauth2client/commit/4c7b3be5a101454e2c641a9835e652a92d16800e"}]}, {"sha": "4c7b3be5a101454e2c641a9835e652a92d16800e", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-16T22:25:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-16T22:25:37Z"}, "message": "Merge pull request #612 from dhermes/fix-599\n\nUse transport module for GCE environment check.", "tree": {"sha": "9d9ae2a3d0fc6bfcb900e21e6f8855e529cfd5c3", "url": "https://api.github.com/repos/google/oauth2client/git/trees/9d9ae2a3d0fc6bfcb900e21e6f8855e529cfd5c3"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/4c7b3be5a101454e2c641a9835e652a92d16800e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/4c7b3be5a101454e2c641a9835e652a92d16800e", "html_url": "https://github.com/google/oauth2client/commit/4c7b3be5a101454e2c641a9835e652a92d16800e", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/4c7b3be5a101454e2c641a9835e652a92d16800e/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "547d600c7e370e8190c134867f69f3e9d974d6a8", "url": "https://api.github.com/repos/google/oauth2client/commits/547d600c7e370e8190c134867f69f3e9d974d6a8", "html_url": "https://github.com/google/oauth2client/commit/547d600c7e370e8190c134867f69f3e9d974d6a8"}, {"sha": "e332a51cc8cd8eb98ebd54a81a93e573f51ef6d2", "url": "https://api.github.com/repos/google/oauth2client/commits/e332a51cc8cd8eb98ebd54a81a93e573f51ef6d2", "html_url": "https://github.com/google/oauth2client/commit/e332a51cc8cd8eb98ebd54a81a93e573f51ef6d2"}]}, {"sha": "e332a51cc8cd8eb98ebd54a81a93e573f51ef6d2", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-11T01:43:38Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-16T21:47:14Z"}, "message": "Use transport module for GCE environment check.\n\nFixes #599.", "tree": {"sha": "9d9ae2a3d0fc6bfcb900e21e6f8855e529cfd5c3", "url": "https://api.github.com/repos/google/oauth2client/git/trees/9d9ae2a3d0fc6bfcb900e21e6f8855e529cfd5c3"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/e332a51cc8cd8eb98ebd54a81a93e573f51ef6d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/e332a51cc8cd8eb98ebd54a81a93e573f51ef6d2", "html_url": "https://github.com/google/oauth2client/commit/e332a51cc8cd8eb98ebd54a81a93e573f51ef6d2", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/e332a51cc8cd8eb98ebd54a81a93e573f51ef6d2/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "547d600c7e370e8190c134867f69f3e9d974d6a8", "url": "https://api.github.com/repos/google/oauth2client/commits/547d600c7e370e8190c134867f69f3e9d974d6a8", "html_url": "https://github.com/google/oauth2client/commit/547d600c7e370e8190c134867f69f3e9d974d6a8"}]}, {"sha": "547d600c7e370e8190c134867f69f3e9d974d6a8", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-08-15T17:48:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-15T17:48:42Z"}, "message": "Merge pull request #627 from jonparrott/no-author\n\nRemove __author__ lines and add contributors.md.", "tree": {"sha": "534fa89947f81fe3997ab9c7b15625356c168384", "url": "https://api.github.com/repos/google/oauth2client/git/trees/534fa89947f81fe3997ab9c7b15625356c168384"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/547d600c7e370e8190c134867f69f3e9d974d6a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/547d600c7e370e8190c134867f69f3e9d974d6a8", "html_url": "https://github.com/google/oauth2client/commit/547d600c7e370e8190c134867f69f3e9d974d6a8", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/547d600c7e370e8190c134867f69f3e9d974d6a8/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "687fdbdb86fc2dacf904890debc02a7aeb97514a", "url": "https://api.github.com/repos/google/oauth2client/commits/687fdbdb86fc2dacf904890debc02a7aeb97514a", "html_url": "https://github.com/google/oauth2client/commit/687fdbdb86fc2dacf904890debc02a7aeb97514a"}, {"sha": "a1136db2ebf19243ec43cd4ff6958812ad114ef8", "url": "https://api.github.com/repos/google/oauth2client/commits/a1136db2ebf19243ec43cd4ff6958812ad114ef8", "html_url": "https://github.com/google/oauth2client/commit/a1136db2ebf19243ec43cd4ff6958812ad114ef8"}]}, {"sha": "a1136db2ebf19243ec43cd4ff6958812ad114ef8", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-11T21:02:10Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-15T17:26:34Z"}, "message": "Remove __author__ lines, add contributors.md\n\nResolves #626", "tree": {"sha": "7d9dd0b637eb2feace689c2a5ae90086c3736ed3", "url": "https://api.github.com/repos/google/oauth2client/git/trees/7d9dd0b637eb2feace689c2a5ae90086c3736ed3"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/a1136db2ebf19243ec43cd4ff6958812ad114ef8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/a1136db2ebf19243ec43cd4ff6958812ad114ef8", "html_url": "https://github.com/google/oauth2client/commit/a1136db2ebf19243ec43cd4ff6958812ad114ef8", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/a1136db2ebf19243ec43cd4ff6958812ad114ef8/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6b30bf420b3e63ed086c1fecad4b7aa2adb5089", "url": "https://api.github.com/repos/google/oauth2client/commits/c6b30bf420b3e63ed086c1fecad4b7aa2adb5089", "html_url": "https://github.com/google/oauth2client/commit/c6b30bf420b3e63ed086c1fecad4b7aa2adb5089"}]}, {"sha": "687fdbdb86fc2dacf904890debc02a7aeb97514a", "commit": {"author": {"name": "Pat Ferate", "email": "pferate@users.noreply.github.com", "date": "2016-08-15T17:16:15Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-15T17:16:15Z"}, "message": "Update helper b64 encode/decode tests (#631)", "tree": {"sha": "d20a50c4e36df0ee9d28fa6a61f9a8374c06c702", "url": "https://api.github.com/repos/google/oauth2client/git/trees/d20a50c4e36df0ee9d28fa6a61f9a8374c06c702"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/687fdbdb86fc2dacf904890debc02a7aeb97514a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/687fdbdb86fc2dacf904890debc02a7aeb97514a", "html_url": "https://github.com/google/oauth2client/commit/687fdbdb86fc2dacf904890debc02a7aeb97514a", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/687fdbdb86fc2dacf904890debc02a7aeb97514a/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "499375cea4c9c3e462ad09b3fa36554c92f85d91", "url": "https://api.github.com/repos/google/oauth2client/commits/499375cea4c9c3e462ad09b3fa36554c92f85d91", "html_url": "https://github.com/google/oauth2client/commit/499375cea4c9c3e462ad09b3fa36554c92f85d91"}]}, {"sha": "499375cea4c9c3e462ad09b3fa36554c92f85d91", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-15T16:56:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-15T16:56:57Z"}, "message": "Enable cover tox env on Travis (#628)\n\nReplace fragile app engine sdk download script with gcprepotools script -\r\nthis ensures the SDK is up-to-date and is a no-op if the SDK is installed\r\nand up-to-date.\r\n\r\nResolves #617", "tree": {"sha": "0bc5fb7606536c12c21bd2eb4835e4d637745c50", "url": "https://api.github.com/repos/google/oauth2client/git/trees/0bc5fb7606536c12c21bd2eb4835e4d637745c50"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/499375cea4c9c3e462ad09b3fa36554c92f85d91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/499375cea4c9c3e462ad09b3fa36554c92f85d91", "html_url": "https://github.com/google/oauth2client/commit/499375cea4c9c3e462ad09b3fa36554c92f85d91", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/499375cea4c9c3e462ad09b3fa36554c92f85d91/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c1ece5ce4655fde6b665aaf2c2abf04a6f0a87d", "url": "https://api.github.com/repos/google/oauth2client/commits/9c1ece5ce4655fde6b665aaf2c2abf04a6f0a87d", "html_url": "https://github.com/google/oauth2client/commit/9c1ece5ce4655fde6b665aaf2c2abf04a6f0a87d"}]}, {"sha": "9c1ece5ce4655fde6b665aaf2c2abf04a6f0a87d", "commit": {"author": {"name": "Pat Ferate", "email": "pferate@users.noreply.github.com", "date": "2016-08-15T15:55:56Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-15T15:55:56Z"}, "message": "Check for `bin` directory before cloning pyenv (#630)\n\nTravis creates cached directories if they are not present, so the pyenv\r\nrepo was never getting cloned if the cache was empty.", "tree": {"sha": "3e3b471ad0db26756a69958e4cdffa18646801e5", "url": "https://api.github.com/repos/google/oauth2client/git/trees/3e3b471ad0db26756a69958e4cdffa18646801e5"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/9c1ece5ce4655fde6b665aaf2c2abf04a6f0a87d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/9c1ece5ce4655fde6b665aaf2c2abf04a6f0a87d", "html_url": "https://github.com/google/oauth2client/commit/9c1ece5ce4655fde6b665aaf2c2abf04a6f0a87d", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/9c1ece5ce4655fde6b665aaf2c2abf04a6f0a87d/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5137d7e8377266ef4beffe1c59c638c05c82cf10", "url": "https://api.github.com/repos/google/oauth2client/commits/5137d7e8377266ef4beffe1c59c638c05c82cf10", "html_url": "https://github.com/google/oauth2client/commit/5137d7e8377266ef4beffe1c59c638c05c82cf10"}]}, {"sha": "5137d7e8377266ef4beffe1c59c638c05c82cf10", "commit": {"author": {"name": "Pat Ferate", "email": "pferate@users.noreply.github.com", "date": "2016-08-12T21:15:31Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-12T21:15:31Z"}, "message": "Complete branches from partial test coverages (#629)", "tree": {"sha": "0d3744551ca792253d184e8f65a9721d29e434ec", "url": "https://api.github.com/repos/google/oauth2client/git/trees/0d3744551ca792253d184e8f65a9721d29e434ec"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/5137d7e8377266ef4beffe1c59c638c05c82cf10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/5137d7e8377266ef4beffe1c59c638c05c82cf10", "html_url": "https://github.com/google/oauth2client/commit/5137d7e8377266ef4beffe1c59c638c05c82cf10", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/5137d7e8377266ef4beffe1c59c638c05c82cf10/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9b4b07525730338f2e560981b3fbe295d2146ab", "url": "https://api.github.com/repos/google/oauth2client/commits/c9b4b07525730338f2e560981b3fbe295d2146ab", "html_url": "https://github.com/google/oauth2client/commit/c9b4b07525730338f2e560981b3fbe295d2146ab"}]}, {"sha": "c9b4b07525730338f2e560981b3fbe295d2146ab", "commit": {"author": {"name": "Bill Prin", "email": "waprin@gmail.com", "date": "2016-08-12T19:01:08Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-12T19:01:08Z"}, "message": "Switch django models from pickle to jsonpickle (#614)", "tree": {"sha": "101a05d3eddab66444ad99da8732966b89f1db19", "url": "https://api.github.com/repos/google/oauth2client/git/trees/101a05d3eddab66444ad99da8732966b89f1db19"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/c9b4b07525730338f2e560981b3fbe295d2146ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/c9b4b07525730338f2e560981b3fbe295d2146ab", "html_url": "https://github.com/google/oauth2client/commit/c9b4b07525730338f2e560981b3fbe295d2146ab", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/c9b4b07525730338f2e560981b3fbe295d2146ab/comments", "author": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6b30bf420b3e63ed086c1fecad4b7aa2adb5089", "url": "https://api.github.com/repos/google/oauth2client/commits/c6b30bf420b3e63ed086c1fecad4b7aa2adb5089", "html_url": "https://github.com/google/oauth2client/commit/c6b30bf420b3e63ed086c1fecad4b7aa2adb5089"}]}, {"sha": "c6b30bf420b3e63ed086c1fecad4b7aa2adb5089", "commit": {"author": {"name": "Pat Ferate", "email": "pferate@users.noreply.github.com", "date": "2016-08-11T20:25:56Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-11T20:25:56Z"}, "message": "Clean up imports (#625)\n\n* Treat `tests` as part of the local package\r\n* Import modules instead of objects\r\n\r\nSome imports that slipped by last time this was cleaned up.", "tree": {"sha": "b0ecb30b9ad67faad3fe8a2d8ba3c3bcc3cbbcfe", "url": "https://api.github.com/repos/google/oauth2client/git/trees/b0ecb30b9ad67faad3fe8a2d8ba3c3bcc3cbbcfe"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/c6b30bf420b3e63ed086c1fecad4b7aa2adb5089", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/c6b30bf420b3e63ed086c1fecad4b7aa2adb5089", "html_url": "https://github.com/google/oauth2client/commit/c6b30bf420b3e63ed086c1fecad4b7aa2adb5089", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/c6b30bf420b3e63ed086c1fecad4b7aa2adb5089/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4ad1beeb482016ed6276b4c0c6aee8a6f49b9ef", "url": "https://api.github.com/repos/google/oauth2client/commits/e4ad1beeb482016ed6276b4c0c6aee8a6f49b9ef", "html_url": "https://github.com/google/oauth2client/commit/e4ad1beeb482016ed6276b4c0c6aee8a6f49b9ef"}]}, {"sha": "e4ad1beeb482016ed6276b4c0c6aee8a6f49b9ef", "commit": {"author": {"name": "Pat Ferate", "email": "pferate@users.noreply.github.com", "date": "2016-08-11T20:18:21Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-11T20:18:21Z"}, "message": "Remove `unittest2` from PKCE test (#624)\n\nThis test snuck by the recent removal of `unittest2`", "tree": {"sha": "176cc1673578f01d4347399af7ff15cf3ba054f1", "url": "https://api.github.com/repos/google/oauth2client/git/trees/176cc1673578f01d4347399af7ff15cf3ba054f1"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/e4ad1beeb482016ed6276b4c0c6aee8a6f49b9ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/e4ad1beeb482016ed6276b4c0c6aee8a6f49b9ef", "html_url": "https://github.com/google/oauth2client/commit/e4ad1beeb482016ed6276b4c0c6aee8a6f49b9ef", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/e4ad1beeb482016ed6276b4c0c6aee8a6f49b9ef/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3614fd147a51e68548bc48295b63a96239735ac5", "url": "https://api.github.com/repos/google/oauth2client/commits/3614fd147a51e68548bc48295b63a96239735ac5", "html_url": "https://github.com/google/oauth2client/commit/3614fd147a51e68548bc48295b63a96239735ac5"}]}, {"sha": "3614fd147a51e68548bc48295b63a96239735ac5", "commit": {"author": {"name": "Brendan McCollam", "email": "brendan@mccoll.am", "date": "2016-08-11T19:28:19Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-11T19:28:19Z"}, "message": "Add support for RFC7636 PKCE (#588)\n\nRFC7636 extends OAuth2 to include a challenge-response protocol\r\ncalled \"Proof Key for Code Exchange\" (PKCE) in order to mitigate\r\nattacks in situations where clients that cannot protect a client\r\nsecret (e.g.installed desktop applications).", "tree": {"sha": "866dfe36a5432c3c08b3c81e762ca46f4a883ed6", "url": "https://api.github.com/repos/google/oauth2client/git/trees/866dfe36a5432c3c08b3c81e762ca46f4a883ed6"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/3614fd147a51e68548bc48295b63a96239735ac5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/3614fd147a51e68548bc48295b63a96239735ac5", "html_url": "https://github.com/google/oauth2client/commit/3614fd147a51e68548bc48295b63a96239735ac5", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/3614fd147a51e68548bc48295b63a96239735ac5/comments", "author": {"login": "bjmc", "id": 328557, "avatar_url": "https://avatars3.githubusercontent.com/u/328557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjmc", "html_url": "https://github.com/bjmc", "followers_url": "https://api.github.com/users/bjmc/followers", "following_url": "https://api.github.com/users/bjmc/following{/other_user}", "gists_url": "https://api.github.com/users/bjmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjmc/subscriptions", "organizations_url": "https://api.github.com/users/bjmc/orgs", "repos_url": "https://api.github.com/users/bjmc/repos", "events_url": "https://api.github.com/users/bjmc/events{/privacy}", "received_events_url": "https://api.github.com/users/bjmc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "619dff806e12a616683842447fbac90a76d663a0", "url": "https://api.github.com/repos/google/oauth2client/commits/619dff806e12a616683842447fbac90a76d663a0", "html_url": "https://github.com/google/oauth2client/commit/619dff806e12a616683842447fbac90a76d663a0"}]}, {"sha": "619dff806e12a616683842447fbac90a76d663a0", "commit": {"author": {"name": "Bill Prin", "email": "waprin@gmail.com", "date": "2016-08-11T19:11:33Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-11T19:11:33Z"}, "message": "Support new MIDDLEWARE Django 1.10 Setting (#623)", "tree": {"sha": "6a4726bac8a1216e3369f88a20864920588dc955", "url": "https://api.github.com/repos/google/oauth2client/git/trees/6a4726bac8a1216e3369f88a20864920588dc955"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/619dff806e12a616683842447fbac90a76d663a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/619dff806e12a616683842447fbac90a76d663a0", "html_url": "https://github.com/google/oauth2client/commit/619dff806e12a616683842447fbac90a76d663a0", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/619dff806e12a616683842447fbac90a76d663a0/comments", "author": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f439dcbef4137d3c5ee6ba1d92b90e7c0ff2d8f5", "url": "https://api.github.com/repos/google/oauth2client/commits/f439dcbef4137d3c5ee6ba1d92b90e7c0ff2d8f5", "html_url": "https://github.com/google/oauth2client/commit/f439dcbef4137d3c5ee6ba1d92b90e7c0ff2d8f5"}]}, {"sha": "f439dcbef4137d3c5ee6ba1d92b90e7c0ff2d8f5", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-11T18:16:18Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-11T18:16:18Z"}, "message": "Change status access from header to attribute. (#616)\n\nThis is to unify all the times a status is used from the\r\nresponse (containing header info) of an HTTP request.", "tree": {"sha": "02f919fefa822be76df7ad0ef18829e27ce99f11", "url": "https://api.github.com/repos/google/oauth2client/git/trees/02f919fefa822be76df7ad0ef18829e27ce99f11"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/f439dcbef4137d3c5ee6ba1d92b90e7c0ff2d8f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/f439dcbef4137d3c5ee6ba1d92b90e7c0ff2d8f5", "html_url": "https://github.com/google/oauth2client/commit/f439dcbef4137d3c5ee6ba1d92b90e7c0ff2d8f5", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/f439dcbef4137d3c5ee6ba1d92b90e7c0ff2d8f5/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a12a1fb58a32603396535cc1ef8789bbde9c49b", "url": "https://api.github.com/repos/google/oauth2client/commits/6a12a1fb58a32603396535cc1ef8789bbde9c49b", "html_url": "https://github.com/google/oauth2client/commit/6a12a1fb58a32603396535cc1ef8789bbde9c49b"}]}, {"sha": "6a12a1fb58a32603396535cc1ef8789bbde9c49b", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-11T18:14:46Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-11T18:14:46Z"}, "message": "Remove usage of os.environ.setdefault (#621)\n\nThis is somewhat misleading, since it doesn't change the\r\nvalue of the env. var. in the shell.", "tree": {"sha": "c4d25c9948174ea9b1838d5cfa2760f99fda70d4", "url": "https://api.github.com/repos/google/oauth2client/git/trees/c4d25c9948174ea9b1838d5cfa2760f99fda70d4"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/6a12a1fb58a32603396535cc1ef8789bbde9c49b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/6a12a1fb58a32603396535cc1ef8789bbde9c49b", "html_url": "https://github.com/google/oauth2client/commit/6a12a1fb58a32603396535cc1ef8789bbde9c49b", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/6a12a1fb58a32603396535cc1ef8789bbde9c49b/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5190fd70bba7d7938b6dd2b020a949fc32141703", "url": "https://api.github.com/repos/google/oauth2client/commits/5190fd70bba7d7938b6dd2b020a949fc32141703", "html_url": "https://github.com/google/oauth2client/commit/5190fd70bba7d7938b6dd2b020a949fc32141703"}]}, {"sha": "5190fd70bba7d7938b6dd2b020a949fc32141703", "commit": {"author": {"name": "Pat Ferate", "email": "pferate@users.noreply.github.com", "date": "2016-08-11T16:25:09Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-11T16:25:09Z"}, "message": "Add branch coverage (#615)\n\nIt was unintentionally dropped during the migration to pytest.", "tree": {"sha": "2512798e220bd645365fdabd88ab3f4e0d50e537", "url": "https://api.github.com/repos/google/oauth2client/git/trees/2512798e220bd645365fdabd88ab3f4e0d50e537"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/5190fd70bba7d7938b6dd2b020a949fc32141703", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/5190fd70bba7d7938b6dd2b020a949fc32141703", "html_url": "https://github.com/google/oauth2client/commit/5190fd70bba7d7938b6dd2b020a949fc32141703", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/5190fd70bba7d7938b6dd2b020a949fc32141703/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6b70bd3b3b5608de82c78978604a0cb7d21126c", "url": "https://api.github.com/repos/google/oauth2client/commits/c6b70bd3b3b5608de82c78978604a0cb7d21126c", "html_url": "https://github.com/google/oauth2client/commit/c6b70bd3b3b5608de82c78978604a0cb7d21126c"}]}, {"sha": "c6b70bd3b3b5608de82c78978604a0cb7d21126c", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-11T16:08:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-11T16:08:42Z"}, "message": "Merge pull request #607 from dhermes/use-transport-request-in-tests\n\nUse transport.request in tests.", "tree": {"sha": "471923facc270209d3db2b182d83cc5918d91f0a", "url": "https://api.github.com/repos/google/oauth2client/git/trees/471923facc270209d3db2b182d83cc5918d91f0a"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/c6b70bd3b3b5608de82c78978604a0cb7d21126c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/c6b70bd3b3b5608de82c78978604a0cb7d21126c", "html_url": "https://github.com/google/oauth2client/commit/c6b70bd3b3b5608de82c78978604a0cb7d21126c", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/c6b70bd3b3b5608de82c78978604a0cb7d21126c/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7f3eca135994d4541a51cd88583562ab2e81069", "url": "https://api.github.com/repos/google/oauth2client/commits/b7f3eca135994d4541a51cd88583562ab2e81069", "html_url": "https://github.com/google/oauth2client/commit/b7f3eca135994d4541a51cd88583562ab2e81069"}, {"sha": "1a0c4dbf92eddda508164a8578a62147590521ed", "url": "https://api.github.com/repos/google/oauth2client/commits/1a0c4dbf92eddda508164a8578a62147590521ed", "html_url": "https://github.com/google/oauth2client/commit/1a0c4dbf92eddda508164a8578a62147590521ed"}]}, {"sha": "1a0c4dbf92eddda508164a8578a62147590521ed", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-10T23:53:46Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-11T15:43:51Z"}, "message": "Use transport.request in tests.\n\nIn the process\n\n- \"spring clean\" the modules that were touched\n- use HttpMock when HttpMockSequence not needed\n- add some verifications on new HttpMock's", "tree": {"sha": "471923facc270209d3db2b182d83cc5918d91f0a", "url": "https://api.github.com/repos/google/oauth2client/git/trees/471923facc270209d3db2b182d83cc5918d91f0a"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/1a0c4dbf92eddda508164a8578a62147590521ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/1a0c4dbf92eddda508164a8578a62147590521ed", "html_url": "https://github.com/google/oauth2client/commit/1a0c4dbf92eddda508164a8578a62147590521ed", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/1a0c4dbf92eddda508164a8578a62147590521ed/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7f3eca135994d4541a51cd88583562ab2e81069", "url": "https://api.github.com/repos/google/oauth2client/commits/b7f3eca135994d4541a51cd88583562ab2e81069", "html_url": "https://github.com/google/oauth2client/commit/b7f3eca135994d4541a51cd88583562ab2e81069"}]}, {"sha": "b7f3eca135994d4541a51cd88583562ab2e81069", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-11T15:21:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-11T15:21:44Z"}, "message": "Merge pull request #610 from dhermes/drop-unittest2\n\nDrop unittest2 dependency", "tree": {"sha": "006a8bdec77d0434df11b4c0342fd45ba52c231d", "url": "https://api.github.com/repos/google/oauth2client/git/trees/006a8bdec77d0434df11b4c0342fd45ba52c231d"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/b7f3eca135994d4541a51cd88583562ab2e81069", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/b7f3eca135994d4541a51cd88583562ab2e81069", "html_url": "https://github.com/google/oauth2client/commit/b7f3eca135994d4541a51cd88583562ab2e81069", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/b7f3eca135994d4541a51cd88583562ab2e81069/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d08ba40a0c6ccb9717102d1fcc3717ec5026203", "url": "https://api.github.com/repos/google/oauth2client/commits/5d08ba40a0c6ccb9717102d1fcc3717ec5026203", "html_url": "https://github.com/google/oauth2client/commit/5d08ba40a0c6ccb9717102d1fcc3717ec5026203"}, {"sha": "0f21a3d6ab2ed39a991e02730c64d7b8efc87c5c", "url": "https://api.github.com/repos/google/oauth2client/commits/0f21a3d6ab2ed39a991e02730c64d7b8efc87c5c", "html_url": "https://github.com/google/oauth2client/commit/0f21a3d6ab2ed39a991e02730c64d7b8efc87c5c"}]}, {"sha": "0f21a3d6ab2ed39a991e02730c64d7b8efc87c5c", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-11T00:13:50Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-11T15:14:08Z"}, "message": "Drop unittest2 dependency\n\nNo longer needed since Python 2.6 support has been dropped.", "tree": {"sha": "006a8bdec77d0434df11b4c0342fd45ba52c231d", "url": "https://api.github.com/repos/google/oauth2client/git/trees/006a8bdec77d0434df11b4c0342fd45ba52c231d"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/0f21a3d6ab2ed39a991e02730c64d7b8efc87c5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/0f21a3d6ab2ed39a991e02730c64d7b8efc87c5c", "html_url": "https://github.com/google/oauth2client/commit/0f21a3d6ab2ed39a991e02730c64d7b8efc87c5c", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/0f21a3d6ab2ed39a991e02730c64d7b8efc87c5c/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d08ba40a0c6ccb9717102d1fcc3717ec5026203", "url": "https://api.github.com/repos/google/oauth2client/commits/5d08ba40a0c6ccb9717102d1fcc3717ec5026203", "html_url": "https://github.com/google/oauth2client/commit/5d08ba40a0c6ccb9717102d1fcc3717ec5026203"}]}, {"sha": "5d08ba40a0c6ccb9717102d1fcc3717ec5026203", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-08-11T00:10:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-11T00:10:53Z"}, "message": "Merge pull request #608 from dhermes/remove-line-continuations\n\nRemove backslash line continuations.", "tree": {"sha": "4f35abee6c70f2ab5dcac9676abb132c4d45937e", "url": "https://api.github.com/repos/google/oauth2client/git/trees/4f35abee6c70f2ab5dcac9676abb132c4d45937e"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/5d08ba40a0c6ccb9717102d1fcc3717ec5026203", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/5d08ba40a0c6ccb9717102d1fcc3717ec5026203", "html_url": "https://github.com/google/oauth2client/commit/5d08ba40a0c6ccb9717102d1fcc3717ec5026203", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/5d08ba40a0c6ccb9717102d1fcc3717ec5026203/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "380b3e1c0a8b99fcb8a8d48218d0ec0baa9948af", "url": "https://api.github.com/repos/google/oauth2client/commits/380b3e1c0a8b99fcb8a8d48218d0ec0baa9948af", "html_url": "https://github.com/google/oauth2client/commit/380b3e1c0a8b99fcb8a8d48218d0ec0baa9948af"}, {"sha": "a10eb17fbaf6c092e9f7f9d5fd3f381b848a6d03", "url": "https://api.github.com/repos/google/oauth2client/commits/a10eb17fbaf6c092e9f7f9d5fd3f381b848a6d03", "html_url": "https://github.com/google/oauth2client/commit/a10eb17fbaf6c092e9f7f9d5fd3f381b848a6d03"}]}, {"sha": "a10eb17fbaf6c092e9f7f9d5fd3f381b848a6d03", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-11T00:01:11Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-11T00:02:26Z"}, "message": "Remove backslash line continuations", "tree": {"sha": "4f35abee6c70f2ab5dcac9676abb132c4d45937e", "url": "https://api.github.com/repos/google/oauth2client/git/trees/4f35abee6c70f2ab5dcac9676abb132c4d45937e"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/a10eb17fbaf6c092e9f7f9d5fd3f381b848a6d03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/a10eb17fbaf6c092e9f7f9d5fd3f381b848a6d03", "html_url": "https://github.com/google/oauth2client/commit/a10eb17fbaf6c092e9f7f9d5fd3f381b848a6d03", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/a10eb17fbaf6c092e9f7f9d5fd3f381b848a6d03/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "380b3e1c0a8b99fcb8a8d48218d0ec0baa9948af", "url": "https://api.github.com/repos/google/oauth2client/commits/380b3e1c0a8b99fcb8a8d48218d0ec0baa9948af", "html_url": "https://github.com/google/oauth2client/commit/380b3e1c0a8b99fcb8a8d48218d0ec0baa9948af"}]}, {"sha": "380b3e1c0a8b99fcb8a8d48218d0ec0baa9948af", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-10T23:05:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-10T23:05:29Z"}, "message": "Merge pull request #606 from dhermes/fix-up-system-tests-httplib2\n\nUse transport helpers in system tests", "tree": {"sha": "ee2b17414359d6f0ef8e7b461aff264d2622bb7e", "url": "https://api.github.com/repos/google/oauth2client/git/trees/ee2b17414359d6f0ef8e7b461aff264d2622bb7e"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/380b3e1c0a8b99fcb8a8d48218d0ec0baa9948af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/380b3e1c0a8b99fcb8a8d48218d0ec0baa9948af", "html_url": "https://github.com/google/oauth2client/commit/380b3e1c0a8b99fcb8a8d48218d0ec0baa9948af", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/380b3e1c0a8b99fcb8a8d48218d0ec0baa9948af/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c442070d526d72972acc3120b4d6f00eeac71bb", "url": "https://api.github.com/repos/google/oauth2client/commits/2c442070d526d72972acc3120b4d6f00eeac71bb", "html_url": "https://github.com/google/oauth2client/commit/2c442070d526d72972acc3120b4d6f00eeac71bb"}, {"sha": "e0b2256e3db98c5376258f9b98ca8fe31a24be28", "url": "https://api.github.com/repos/google/oauth2client/commits/e0b2256e3db98c5376258f9b98ca8fe31a24be28", "html_url": "https://github.com/google/oauth2client/commit/e0b2256e3db98c5376258f9b98ca8fe31a24be28"}]}, {"sha": "e0b2256e3db98c5376258f9b98ca8fe31a24be28", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-10T22:21:57Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-10T22:23:02Z"}, "message": "Use transport helpers in system tests", "tree": {"sha": "ee2b17414359d6f0ef8e7b461aff264d2622bb7e", "url": "https://api.github.com/repos/google/oauth2client/git/trees/ee2b17414359d6f0ef8e7b461aff264d2622bb7e"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/e0b2256e3db98c5376258f9b98ca8fe31a24be28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/e0b2256e3db98c5376258f9b98ca8fe31a24be28", "html_url": "https://github.com/google/oauth2client/commit/e0b2256e3db98c5376258f9b98ca8fe31a24be28", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/e0b2256e3db98c5376258f9b98ca8fe31a24be28/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c442070d526d72972acc3120b4d6f00eeac71bb", "url": "https://api.github.com/repos/google/oauth2client/commits/2c442070d526d72972acc3120b4d6f00eeac71bb", "html_url": "https://github.com/google/oauth2client/commit/2c442070d526d72972acc3120b4d6f00eeac71bb"}]}, {"sha": "2c442070d526d72972acc3120b4d6f00eeac71bb", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-10T22:11:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-10T22:11:59Z"}, "message": "Merge pull request #605 from dhermes/unify-http-mocks\n\nClean up usage of HTTP mocks in tests.", "tree": {"sha": "c0a19dee54ddd97479eefef900accf50ae814bcb", "url": "https://api.github.com/repos/google/oauth2client/git/trees/c0a19dee54ddd97479eefef900accf50ae814bcb"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/2c442070d526d72972acc3120b4d6f00eeac71bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/2c442070d526d72972acc3120b4d6f00eeac71bb", "html_url": "https://github.com/google/oauth2client/commit/2c442070d526d72972acc3120b4d6f00eeac71bb", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/2c442070d526d72972acc3120b4d6f00eeac71bb/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "724181f46bbd2d7c5f5bf11d5ab6fe2d801cac17", "url": "https://api.github.com/repos/google/oauth2client/commits/724181f46bbd2d7c5f5bf11d5ab6fe2d801cac17", "html_url": "https://github.com/google/oauth2client/commit/724181f46bbd2d7c5f5bf11d5ab6fe2d801cac17"}, {"sha": "8299c5867f878c99f51ae593f97b38f0b511ff61", "url": "https://api.github.com/repos/google/oauth2client/commits/8299c5867f878c99f51ae593f97b38f0b511ff61", "html_url": "https://github.com/google/oauth2client/commit/8299c5867f878c99f51ae593f97b38f0b511ff61"}]}, {"sha": "8299c5867f878c99f51ae593f97b38f0b511ff61", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-10T21:05:16Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-10T21:56:28Z"}, "message": "Clean up usage of HTTP mocks in tests.", "tree": {"sha": "c0a19dee54ddd97479eefef900accf50ae814bcb", "url": "https://api.github.com/repos/google/oauth2client/git/trees/c0a19dee54ddd97479eefef900accf50ae814bcb"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/8299c5867f878c99f51ae593f97b38f0b511ff61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/8299c5867f878c99f51ae593f97b38f0b511ff61", "html_url": "https://github.com/google/oauth2client/commit/8299c5867f878c99f51ae593f97b38f0b511ff61", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/8299c5867f878c99f51ae593f97b38f0b511ff61/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "724181f46bbd2d7c5f5bf11d5ab6fe2d801cac17", "url": "https://api.github.com/repos/google/oauth2client/commits/724181f46bbd2d7c5f5bf11d5ab6fe2d801cac17", "html_url": "https://github.com/google/oauth2client/commit/724181f46bbd2d7c5f5bf11d5ab6fe2d801cac17"}]}, {"sha": "724181f46bbd2d7c5f5bf11d5ab6fe2d801cac17", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-10T17:54:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-10T17:54:33Z"}, "message": "Merge pull request #598 from dhermes/remove-magic-mock\n\nRemove all uses of MagicMock", "tree": {"sha": "cb439fa8e68392ae028fa541000373c6c6e177a5", "url": "https://api.github.com/repos/google/oauth2client/git/trees/cb439fa8e68392ae028fa541000373c6c6e177a5"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/724181f46bbd2d7c5f5bf11d5ab6fe2d801cac17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/724181f46bbd2d7c5f5bf11d5ab6fe2d801cac17", "html_url": "https://github.com/google/oauth2client/commit/724181f46bbd2d7c5f5bf11d5ab6fe2d801cac17", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/724181f46bbd2d7c5f5bf11d5ab6fe2d801cac17/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d427333c947a17f88b5f7399c1d2f2bcf865350", "url": "https://api.github.com/repos/google/oauth2client/commits/1d427333c947a17f88b5f7399c1d2f2bcf865350", "html_url": "https://github.com/google/oauth2client/commit/1d427333c947a17f88b5f7399c1d2f2bcf865350"}, {"sha": "7c4acacd414416da142ac64cb2233dcf9546dbbd", "url": "https://api.github.com/repos/google/oauth2client/commits/7c4acacd414416da142ac64cb2233dcf9546dbbd", "html_url": "https://github.com/google/oauth2client/commit/7c4acacd414416da142ac64cb2233dcf9546dbbd"}]}, {"sha": "7c4acacd414416da142ac64cb2233dcf9546dbbd", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-09T23:50:57Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-10T17:47:24Z"}, "message": "Remove all uses of MagicMock\n\nMagicMock is a version of Mock with extra features for\ntests that need to test usage of magic methods (i.e.\n__nonzero__, __cmp__, etc.).\n\nNone of the oauth2client tests actually need these\nextra features though.", "tree": {"sha": "cb439fa8e68392ae028fa541000373c6c6e177a5", "url": "https://api.github.com/repos/google/oauth2client/git/trees/cb439fa8e68392ae028fa541000373c6c6e177a5"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/7c4acacd414416da142ac64cb2233dcf9546dbbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/7c4acacd414416da142ac64cb2233dcf9546dbbd", "html_url": "https://github.com/google/oauth2client/commit/7c4acacd414416da142ac64cb2233dcf9546dbbd", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/7c4acacd414416da142ac64cb2233dcf9546dbbd/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d427333c947a17f88b5f7399c1d2f2bcf865350", "url": "https://api.github.com/repos/google/oauth2client/commits/1d427333c947a17f88b5f7399c1d2f2bcf865350", "html_url": "https://github.com/google/oauth2client/commit/1d427333c947a17f88b5f7399c1d2f2bcf865350"}]}, {"sha": "1d427333c947a17f88b5f7399c1d2f2bcf865350", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-10T17:45:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-10T17:45:57Z"}, "message": "Merge pull request #604 from dhermes/drop-33\n\nDrop Python 3.3 support", "tree": {"sha": "63bbe3e8bcc7d0f7f01dd8dfc8fd23df6d082ec8", "url": "https://api.github.com/repos/google/oauth2client/git/trees/63bbe3e8bcc7d0f7f01dd8dfc8fd23df6d082ec8"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/1d427333c947a17f88b5f7399c1d2f2bcf865350", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/1d427333c947a17f88b5f7399c1d2f2bcf865350", "html_url": "https://github.com/google/oauth2client/commit/1d427333c947a17f88b5f7399c1d2f2bcf865350", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/1d427333c947a17f88b5f7399c1d2f2bcf865350/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f774a6660d171c76f168ff5b289825efcf269125", "url": "https://api.github.com/repos/google/oauth2client/commits/f774a6660d171c76f168ff5b289825efcf269125", "html_url": "https://github.com/google/oauth2client/commit/f774a6660d171c76f168ff5b289825efcf269125"}, {"sha": "49d565d2deb47bfc51416654c33dbc391b8c06e9", "url": "https://api.github.com/repos/google/oauth2client/commits/49d565d2deb47bfc51416654c33dbc391b8c06e9", "html_url": "https://github.com/google/oauth2client/commit/49d565d2deb47bfc51416654c33dbc391b8c06e9"}]}, {"sha": "49d565d2deb47bfc51416654c33dbc391b8c06e9", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-10T17:12:27Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-10T17:40:08Z"}, "message": "Drop Python 3.3 support\n\nAlso remove some trailing whitespace in tox.ini and fixing\nup some double quote / single quote mixing in setup.py.\n\nFixes #603.", "tree": {"sha": "63bbe3e8bcc7d0f7f01dd8dfc8fd23df6d082ec8", "url": "https://api.github.com/repos/google/oauth2client/git/trees/63bbe3e8bcc7d0f7f01dd8dfc8fd23df6d082ec8"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/49d565d2deb47bfc51416654c33dbc391b8c06e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/49d565d2deb47bfc51416654c33dbc391b8c06e9", "html_url": "https://github.com/google/oauth2client/commit/49d565d2deb47bfc51416654c33dbc391b8c06e9", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/49d565d2deb47bfc51416654c33dbc391b8c06e9/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f774a6660d171c76f168ff5b289825efcf269125", "url": "https://api.github.com/repos/google/oauth2client/commits/f774a6660d171c76f168ff5b289825efcf269125", "html_url": "https://github.com/google/oauth2client/commit/f774a6660d171c76f168ff5b289825efcf269125"}]}, {"sha": "f774a6660d171c76f168ff5b289825efcf269125", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-08-10T02:53:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-10T02:53:30Z"}, "message": "Merge pull request #569 from pferate/pytest_runner\n\nMigrate test runner to py.test.", "tree": {"sha": "8e64764186e5aad1a4ca65f56b5cd8dd29be2a23", "url": "https://api.github.com/repos/google/oauth2client/git/trees/8e64764186e5aad1a4ca65f56b5cd8dd29be2a23"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/f774a6660d171c76f168ff5b289825efcf269125", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/f774a6660d171c76f168ff5b289825efcf269125", "html_url": "https://github.com/google/oauth2client/commit/f774a6660d171c76f168ff5b289825efcf269125", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/f774a6660d171c76f168ff5b289825efcf269125/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f282a9260e858b4f7aecfc69336d18c42f988655", "url": "https://api.github.com/repos/google/oauth2client/commits/f282a9260e858b4f7aecfc69336d18c42f988655", "html_url": "https://github.com/google/oauth2client/commit/f282a9260e858b4f7aecfc69336d18c42f988655"}, {"sha": "4cac96d1a829e3e4e7b28c58c121db728a4d39c6", "url": "https://api.github.com/repos/google/oauth2client/commits/4cac96d1a829e3e4e7b28c58c121db728a4d39c6", "html_url": "https://github.com/google/oauth2client/commit/4cac96d1a829e3e4e7b28c58c121db728a4d39c6"}]}, {"sha": "f282a9260e858b4f7aecfc69336d18c42f988655", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-10T02:49:56Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-08-10T02:49:56Z"}, "message": "Remove distinction between http and http.request (#602)", "tree": {"sha": "4a62c366efabb2a1c7178474ecfb9ef48ea60f98", "url": "https://api.github.com/repos/google/oauth2client/git/trees/4a62c366efabb2a1c7178474ecfb9ef48ea60f98"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/f282a9260e858b4f7aecfc69336d18c42f988655", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/f282a9260e858b4f7aecfc69336d18c42f988655", "html_url": "https://github.com/google/oauth2client/commit/f282a9260e858b4f7aecfc69336d18c42f988655", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/f282a9260e858b4f7aecfc69336d18c42f988655/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1a17432731344d2e44b1ef78ab52f2202bee703", "url": "https://api.github.com/repos/google/oauth2client/commits/b1a17432731344d2e44b1ef78ab52f2202bee703", "html_url": "https://github.com/google/oauth2client/commit/b1a17432731344d2e44b1ef78ab52f2202bee703"}]}, {"sha": "b1a17432731344d2e44b1ef78ab52f2202bee703", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-09T23:11:31Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-08-09T23:11:31Z"}, "message": "Using transport helper for calling http.request() (#586)\n\nThis assumes (for now) that http is an instance of\r\nhttplib.Http.", "tree": {"sha": "e33fc782d0cec5629223b9f222bba7e8b79f5254", "url": "https://api.github.com/repos/google/oauth2client/git/trees/e33fc782d0cec5629223b9f222bba7e8b79f5254"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/b1a17432731344d2e44b1ef78ab52f2202bee703", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/b1a17432731344d2e44b1ef78ab52f2202bee703", "html_url": "https://github.com/google/oauth2client/commit/b1a17432731344d2e44b1ef78ab52f2202bee703", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/b1a17432731344d2e44b1ef78ab52f2202bee703/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fd8c61d93711e23a31f07c613f042caa0c0b6ee", "url": "https://api.github.com/repos/google/oauth2client/commits/0fd8c61d93711e23a31f07c613f042caa0c0b6ee", "html_url": "https://github.com/google/oauth2client/commit/0fd8c61d93711e23a31f07c613f042caa0c0b6ee"}]}, {"sha": "4cac96d1a829e3e4e7b28c58c121db728a4d39c6", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-08T21:52:13Z"}, "committer": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-08-09T21:41:14Z"}, "message": "Re-configure App engine tests", "tree": {"sha": "90680217c51715ca3e8b4a20924aa10b89a58c60", "url": "https://api.github.com/repos/google/oauth2client/git/trees/90680217c51715ca3e8b4a20924aa10b89a58c60"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/4cac96d1a829e3e4e7b28c58c121db728a4d39c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/4cac96d1a829e3e4e7b28c58c121db728a4d39c6", "html_url": "https://github.com/google/oauth2client/commit/4cac96d1a829e3e4e7b28c58c121db728a4d39c6", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/4cac96d1a829e3e4e7b28c58c121db728a4d39c6/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c359c401e74f26c2b73403f7a756ccb93b571f32", "url": "https://api.github.com/repos/google/oauth2client/commits/c359c401e74f26c2b73403f7a756ccb93b571f32", "html_url": "https://github.com/google/oauth2client/commit/c359c401e74f26c2b73403f7a756ccb93b571f32"}]}, {"sha": "c359c401e74f26c2b73403f7a756ccb93b571f32", "commit": {"author": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-26T16:47:22Z"}, "committer": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-08-09T21:15:13Z"}, "message": "Migrate test runner to py.test\n\nMigrating test runner from `unittest2`/`nose` to `pytest`.\nThe pytest runner is also compatible with both unittest and nose tests.\nSome of the benefits of PyTest include:\n    * using plain asserts\n    * function-based fixtures instead of setUp and tearDown\n    * no strange camelCase methods", "tree": {"sha": "1fb118866cd5e73ad04e7a9d275bd29ffae72c48", "url": "https://api.github.com/repos/google/oauth2client/git/trees/1fb118866cd5e73ad04e7a9d275bd29ffae72c48"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/c359c401e74f26c2b73403f7a756ccb93b571f32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/c359c401e74f26c2b73403f7a756ccb93b571f32", "html_url": "https://github.com/google/oauth2client/commit/c359c401e74f26c2b73403f7a756ccb93b571f32", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/c359c401e74f26c2b73403f7a756ccb93b571f32/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fd8c61d93711e23a31f07c613f042caa0c0b6ee", "url": "https://api.github.com/repos/google/oauth2client/commits/0fd8c61d93711e23a31f07c613f042caa0c0b6ee", "html_url": "https://github.com/google/oauth2client/commit/0fd8c61d93711e23a31f07c613f042caa0c0b6ee"}]}, {"sha": "0fd8c61d93711e23a31f07c613f042caa0c0b6ee", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-09T21:09:50Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-08-09T21:09:50Z"}, "message": "Fix pypy environment in Travis", "tree": {"sha": "1779858d8732ba523cb37826016e4e0ec2c4fa75", "url": "https://api.github.com/repos/google/oauth2client/git/trees/1779858d8732ba523cb37826016e4e0ec2c4fa75"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/0fd8c61d93711e23a31f07c613f042caa0c0b6ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/0fd8c61d93711e23a31f07c613f042caa0c0b6ee", "html_url": "https://github.com/google/oauth2client/commit/0fd8c61d93711e23a31f07c613f042caa0c0b6ee", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/0fd8c61d93711e23a31f07c613f042caa0c0b6ee/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e8d1bea6464476d4e34801e59695adc95fd6b9e", "url": "https://api.github.com/repos/google/oauth2client/commits/2e8d1bea6464476d4e34801e59695adc95fd6b9e", "html_url": "https://github.com/google/oauth2client/commit/2e8d1bea6464476d4e34801e59695adc95fd6b9e"}]}, {"sha": "2e8d1bea6464476d4e34801e59695adc95fd6b9e", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-09T18:25:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-09T18:25:31Z"}, "message": "Drop support for Python 2.6 (#590)\n\n* Drop support for Python 2.6\r\n* Re-organize Travis matrix", "tree": {"sha": "9479eff936216092f126658af5ac0c0aa8779b67", "url": "https://api.github.com/repos/google/oauth2client/git/trees/9479eff936216092f126658af5ac0c0aa8779b67"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/2e8d1bea6464476d4e34801e59695adc95fd6b9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/2e8d1bea6464476d4e34801e59695adc95fd6b9e", "html_url": "https://github.com/google/oauth2client/commit/2e8d1bea6464476d4e34801e59695adc95fd6b9e", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/2e8d1bea6464476d4e34801e59695adc95fd6b9e/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "248dc6c58d534f33517f94f048899a9ed5c5732e", "url": "https://api.github.com/repos/google/oauth2client/commits/248dc6c58d534f33517f94f048899a9ed5c5732e", "html_url": "https://github.com/google/oauth2client/commit/248dc6c58d534f33517f94f048899a9ed5c5732e"}]}, {"sha": "248dc6c58d534f33517f94f048899a9ed5c5732e", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-08-05T16:28:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-05T16:28:20Z"}, "message": "Merge pull request #579 from pferate/refactor_helpers\n\nMerge util.py and _helpers.py.", "tree": {"sha": "43b2f5f72197c16f391a8ad26c607a3ef73040ce", "url": "https://api.github.com/repos/google/oauth2client/git/trees/43b2f5f72197c16f391a8ad26c607a3ef73040ce"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/248dc6c58d534f33517f94f048899a9ed5c5732e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/248dc6c58d534f33517f94f048899a9ed5c5732e", "html_url": "https://github.com/google/oauth2client/commit/248dc6c58d534f33517f94f048899a9ed5c5732e", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/248dc6c58d534f33517f94f048899a9ed5c5732e/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dc30bc03375f7dd4525b95f4f641417e947f28b", "url": "https://api.github.com/repos/google/oauth2client/commits/0dc30bc03375f7dd4525b95f4f641417e947f28b", "html_url": "https://github.com/google/oauth2client/commit/0dc30bc03375f7dd4525b95f4f641417e947f28b"}, {"sha": "2f5c53b1fa6a2325427da0a3b63d4dc7ddc4261e", "url": "https://api.github.com/repos/google/oauth2client/commits/2f5c53b1fa6a2325427da0a3b63d4dc7ddc4261e", "html_url": "https://github.com/google/oauth2client/commit/2f5c53b1fa6a2325427da0a3b63d4dc7ddc4261e"}]}, {"sha": "2f5c53b1fa6a2325427da0a3b63d4dc7ddc4261e", "commit": {"author": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-08-01T20:17:14Z"}, "committer": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-08-04T21:11:25Z"}, "message": "Merge util.py and _helpers.py\n\nA new file, `_helpers.py`, was created without realizing that\n`utils.py` existed for the same purpose.\n\nMoving all to `_helpers.py`.", "tree": {"sha": "43b2f5f72197c16f391a8ad26c607a3ef73040ce", "url": "https://api.github.com/repos/google/oauth2client/git/trees/43b2f5f72197c16f391a8ad26c607a3ef73040ce"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/2f5c53b1fa6a2325427da0a3b63d4dc7ddc4261e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/2f5c53b1fa6a2325427da0a3b63d4dc7ddc4261e", "html_url": "https://github.com/google/oauth2client/commit/2f5c53b1fa6a2325427da0a3b63d4dc7ddc4261e", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/2f5c53b1fa6a2325427da0a3b63d4dc7ddc4261e/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dc30bc03375f7dd4525b95f4f641417e947f28b", "url": "https://api.github.com/repos/google/oauth2client/commits/0dc30bc03375f7dd4525b95f4f641417e947f28b", "html_url": "https://github.com/google/oauth2client/commit/0dc30bc03375f7dd4525b95f4f641417e947f28b"}]}, {"sha": "0dc30bc03375f7dd4525b95f4f641417e947f28b", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-04T19:24:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-04T19:24:45Z"}, "message": "Remove contrib.multistore_file (#589)\n\nRemove dependent modules as well. Resolves #470.", "tree": {"sha": "933bc3a5a7d6509cc13d63892553b219b8362ca3", "url": "https://api.github.com/repos/google/oauth2client/git/trees/933bc3a5a7d6509cc13d63892553b219b8362ca3"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/0dc30bc03375f7dd4525b95f4f641417e947f28b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/0dc30bc03375f7dd4525b95f4f641417e947f28b", "html_url": "https://github.com/google/oauth2client/commit/0dc30bc03375f7dd4525b95f4f641417e947f28b", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/0dc30bc03375f7dd4525b95f4f641417e947f28b/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f04d5213d4d864faf9929a43f307f1651da6c481", "url": "https://api.github.com/repos/google/oauth2client/commits/f04d5213d4d864faf9929a43f307f1651da6c481", "html_url": "https://github.com/google/oauth2client/commit/f04d5213d4d864faf9929a43f307f1651da6c481"}]}, {"sha": "f04d5213d4d864faf9929a43f307f1651da6c481", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-03T17:13:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-03T17:13:30Z"}, "message": "Merge pull request #585 from dhermes/remove-httplib2-from-unit-tests\n\nRemoves usage of httplib2 in unit tests.", "tree": {"sha": "707d948d4fcc237f5f2cba77384ccd34f6b460a1", "url": "https://api.github.com/repos/google/oauth2client/git/trees/707d948d4fcc237f5f2cba77384ccd34f6b460a1"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/f04d5213d4d864faf9929a43f307f1651da6c481", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/f04d5213d4d864faf9929a43f307f1651da6c481", "html_url": "https://github.com/google/oauth2client/commit/f04d5213d4d864faf9929a43f307f1651da6c481", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/f04d5213d4d864faf9929a43f307f1651da6c481/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c456547a8ad6058a6a3322940c28ecf5398f5ade", "url": "https://api.github.com/repos/google/oauth2client/commits/c456547a8ad6058a6a3322940c28ecf5398f5ade", "html_url": "https://github.com/google/oauth2client/commit/c456547a8ad6058a6a3322940c28ecf5398f5ade"}, {"sha": "ed42b28cbd82bdd0878ca206bbfeb965cd9e3433", "url": "https://api.github.com/repos/google/oauth2client/commits/ed42b28cbd82bdd0878ca206bbfeb965cd9e3433", "html_url": "https://github.com/google/oauth2client/commit/ed42b28cbd82bdd0878ca206bbfeb965cd9e3433"}]}, {"sha": "ed42b28cbd82bdd0878ca206bbfeb965cd9e3433", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-03T01:35:05Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-03T01:35:05Z"}, "message": "Fixing line length. To be squashed.", "tree": {"sha": "cdc680a1654afd10eaea62753d99d77a20514f5f", "url": "https://api.github.com/repos/google/oauth2client/git/trees/cdc680a1654afd10eaea62753d99d77a20514f5f"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/ed42b28cbd82bdd0878ca206bbfeb965cd9e3433", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/ed42b28cbd82bdd0878ca206bbfeb965cd9e3433", "html_url": "https://github.com/google/oauth2client/commit/ed42b28cbd82bdd0878ca206bbfeb965cd9e3433", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/ed42b28cbd82bdd0878ca206bbfeb965cd9e3433/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a70341761c8201b8da8be30367e1456cbc78f2c", "url": "https://api.github.com/repos/google/oauth2client/commits/1a70341761c8201b8da8be30367e1456cbc78f2c", "html_url": "https://github.com/google/oauth2client/commit/1a70341761c8201b8da8be30367e1456cbc78f2c"}]}, {"sha": "c456547a8ad6058a6a3322940c28ecf5398f5ade", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-02T23:45:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-02T23:45:20Z"}, "message": "Merge pull request #584 from dhermes/remove-old-dep-ref\n\nRemove reference to old dependency in LICENSE", "tree": {"sha": "0216e251c00250edf7d6653d32ad48708124cff4", "url": "https://api.github.com/repos/google/oauth2client/git/trees/0216e251c00250edf7d6653d32ad48708124cff4"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/c456547a8ad6058a6a3322940c28ecf5398f5ade", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/c456547a8ad6058a6a3322940c28ecf5398f5ade", "html_url": "https://github.com/google/oauth2client/commit/c456547a8ad6058a6a3322940c28ecf5398f5ade", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/c456547a8ad6058a6a3322940c28ecf5398f5ade/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd825cc561170be36509d32f5fc23fcbeb4c0f12", "url": "https://api.github.com/repos/google/oauth2client/commits/cd825cc561170be36509d32f5fc23fcbeb4c0f12", "html_url": "https://github.com/google/oauth2client/commit/cd825cc561170be36509d32f5fc23fcbeb4c0f12"}, {"sha": "fa23cc20136a0690040584d4c02c9fd41e50fe3d", "url": "https://api.github.com/repos/google/oauth2client/commits/fa23cc20136a0690040584d4c02c9fd41e50fe3d", "html_url": "https://github.com/google/oauth2client/commit/fa23cc20136a0690040584d4c02c9fd41e50fe3d"}]}, {"sha": "fa23cc20136a0690040584d4c02c9fd41e50fe3d", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-02T22:43:03Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-02T23:39:06Z"}, "message": "Remove reference to old dependency in LICENSE", "tree": {"sha": "0216e251c00250edf7d6653d32ad48708124cff4", "url": "https://api.github.com/repos/google/oauth2client/git/trees/0216e251c00250edf7d6653d32ad48708124cff4"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/fa23cc20136a0690040584d4c02c9fd41e50fe3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/fa23cc20136a0690040584d4c02c9fd41e50fe3d", "html_url": "https://github.com/google/oauth2client/commit/fa23cc20136a0690040584d4c02c9fd41e50fe3d", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/fa23cc20136a0690040584d4c02c9fd41e50fe3d/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd825cc561170be36509d32f5fc23fcbeb4c0f12", "url": "https://api.github.com/repos/google/oauth2client/commits/cd825cc561170be36509d32f5fc23fcbeb4c0f12", "html_url": "https://github.com/google/oauth2client/commit/cd825cc561170be36509d32f5fc23fcbeb4c0f12"}]}, {"sha": "1a70341761c8201b8da8be30367e1456cbc78f2c", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-02T23:36:53Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-02T23:36:53Z"}, "message": "Address review comments. To be squashed.", "tree": {"sha": "6f7b0a5eec364f3851c5d515c40fc483094f6ae6", "url": "https://api.github.com/repos/google/oauth2client/git/trees/6f7b0a5eec364f3851c5d515c40fc483094f6ae6"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/1a70341761c8201b8da8be30367e1456cbc78f2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/1a70341761c8201b8da8be30367e1456cbc78f2c", "html_url": "https://github.com/google/oauth2client/commit/1a70341761c8201b8da8be30367e1456cbc78f2c", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/1a70341761c8201b8da8be30367e1456cbc78f2c/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "256d48dab8918f90701204565acfa0b803e6a0be", "url": "https://api.github.com/repos/google/oauth2client/commits/256d48dab8918f90701204565acfa0b803e6a0be", "html_url": "https://github.com/google/oauth2client/commit/256d48dab8918f90701204565acfa0b803e6a0be"}]}, {"sha": "256d48dab8918f90701204565acfa0b803e6a0be", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-02T22:51:12Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-02T22:51:12Z"}, "message": "Removes usage of httplib2 in unit tests.\n\nThe only remaining unit test module utilizing httplib2\nis test_transport since it utilizes httplib2 directly\nat the moment.", "tree": {"sha": "fa734f2bb998836c6441d5e3ac7f2b50eb7bb947", "url": "https://api.github.com/repos/google/oauth2client/git/trees/fa734f2bb998836c6441d5e3ac7f2b50eb7bb947"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/256d48dab8918f90701204565acfa0b803e6a0be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/256d48dab8918f90701204565acfa0b803e6a0be", "html_url": "https://github.com/google/oauth2client/commit/256d48dab8918f90701204565acfa0b803e6a0be", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/256d48dab8918f90701204565acfa0b803e6a0be/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd825cc561170be36509d32f5fc23fcbeb4c0f12", "url": "https://api.github.com/repos/google/oauth2client/commits/cd825cc561170be36509d32f5fc23fcbeb4c0f12", "html_url": "https://github.com/google/oauth2client/commit/cd825cc561170be36509d32f5fc23fcbeb4c0f12"}]}, {"sha": "cd825cc561170be36509d32f5fc23fcbeb4c0f12", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-01T22:13:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-01T22:13:18Z"}, "message": "Merge pull request #577 from dhermes/towards-554-part3\n\nRemove httplib2 imports from non-transport modules.", "tree": {"sha": "4a39d91b340a4297a761322ba704bc713a3a6785", "url": "https://api.github.com/repos/google/oauth2client/git/trees/4a39d91b340a4297a761322ba704bc713a3a6785"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/cd825cc561170be36509d32f5fc23fcbeb4c0f12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/cd825cc561170be36509d32f5fc23fcbeb4c0f12", "html_url": "https://github.com/google/oauth2client/commit/cd825cc561170be36509d32f5fc23fcbeb4c0f12", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/cd825cc561170be36509d32f5fc23fcbeb4c0f12/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb019c2dadfbcefccfcaff4d58fc2112ed584825", "url": "https://api.github.com/repos/google/oauth2client/commits/eb019c2dadfbcefccfcaff4d58fc2112ed584825", "html_url": "https://github.com/google/oauth2client/commit/eb019c2dadfbcefccfcaff4d58fc2112ed584825"}, {"sha": "80fff4bda1be77c479c954cdf5ad8a2ba238cf6d", "url": "https://api.github.com/repos/google/oauth2client/commits/80fff4bda1be77c479c954cdf5ad8a2ba238cf6d", "html_url": "https://github.com/google/oauth2client/commit/80fff4bda1be77c479c954cdf5ad8a2ba238cf6d"}]}, {"sha": "80fff4bda1be77c479c954cdf5ad8a2ba238cf6d", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-07-29T18:24:17Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-08-01T22:08:46Z"}, "message": "Remove httplib2 imports from non-transport modules.\n\nNow all usage of httplib2 is concentrated in tests and\nin the oauth2client.transport module. This does not yet\ncover all behavior that implicitly relies on httplib2\nin these modules, so there is still work to be done.", "tree": {"sha": "4a39d91b340a4297a761322ba704bc713a3a6785", "url": "https://api.github.com/repos/google/oauth2client/git/trees/4a39d91b340a4297a761322ba704bc713a3a6785"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/80fff4bda1be77c479c954cdf5ad8a2ba238cf6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/80fff4bda1be77c479c954cdf5ad8a2ba238cf6d", "html_url": "https://github.com/google/oauth2client/commit/80fff4bda1be77c479c954cdf5ad8a2ba238cf6d", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/80fff4bda1be77c479c954cdf5ad8a2ba238cf6d/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb019c2dadfbcefccfcaff4d58fc2112ed584825", "url": "https://api.github.com/repos/google/oauth2client/commits/eb019c2dadfbcefccfcaff4d58fc2112ed584825", "html_url": "https://github.com/google/oauth2client/commit/eb019c2dadfbcefccfcaff4d58fc2112ed584825"}]}, {"sha": "eb019c2dadfbcefccfcaff4d58fc2112ed584825", "commit": {"author": {"name": "Pat Ferate", "email": "pferate@users.noreply.github.com", "date": "2016-08-01T16:49:02Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-08-01T16:49:02Z"}, "message": "Handle missing storage files (#576)\n\n* Move `validate_file` to `oauth2client.util`\r\n* Warn user if storage file is missing\r\n* Raise an `IOError` exception if the given filename is a directory.\r\n* Raise an `IOError` exception if the given filename is a symbolic link.\r\n      (Previously raised `CredentialsFileSymbolicLinkError`)\r\n* (test) Expanding single-letter variables\r\n* (test) `assertEqual(None, <obj>)` -> `assertIsNone(<obj>)`\r\n* (test) `assertNotEqual(None, <obj>)` -> `assertIsNotNone(<obj>)`", "tree": {"sha": "8d68cc57d33a47c8f73a395fb2562915280b1e3f", "url": "https://api.github.com/repos/google/oauth2client/git/trees/8d68cc57d33a47c8f73a395fb2562915280b1e3f"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/eb019c2dadfbcefccfcaff4d58fc2112ed584825", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/eb019c2dadfbcefccfcaff4d58fc2112ed584825", "html_url": "https://github.com/google/oauth2client/commit/eb019c2dadfbcefccfcaff4d58fc2112ed584825", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/eb019c2dadfbcefccfcaff4d58fc2112ed584825/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae73312942d3cf0e98f097dfbb40f136c2a7c463", "url": "https://api.github.com/repos/google/oauth2client/commits/ae73312942d3cf0e98f097dfbb40f136c2a7c463", "html_url": "https://github.com/google/oauth2client/commit/ae73312942d3cf0e98f097dfbb40f136c2a7c463"}]}, {"sha": "ae73312942d3cf0e98f097dfbb40f136c2a7c463", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-07-28T18:50:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-28T18:50:44Z"}, "message": "Merge pull request #575 from jonparrott/cut-3.0.0\n\nRelease 3.0.0.", "tree": {"sha": "5654a61211208c5bedb4b8e32e44f99a7e8d8de1", "url": "https://api.github.com/repos/google/oauth2client/git/trees/5654a61211208c5bedb4b8e32e44f99a7e8d8de1"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/ae73312942d3cf0e98f097dfbb40f136c2a7c463", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/ae73312942d3cf0e98f097dfbb40f136c2a7c463", "html_url": "https://github.com/google/oauth2client/commit/ae73312942d3cf0e98f097dfbb40f136c2a7c463", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/ae73312942d3cf0e98f097dfbb40f136c2a7c463/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b364c2b5809d4e23a2cc628208bb4977cd395d5", "url": "https://api.github.com/repos/google/oauth2client/commits/7b364c2b5809d4e23a2cc628208bb4977cd395d5", "html_url": "https://github.com/google/oauth2client/commit/7b364c2b5809d4e23a2cc628208bb4977cd395d5"}, {"sha": "b306c63f2d626a4b564f413818bd5f8afd74d226", "url": "https://api.github.com/repos/google/oauth2client/commits/b306c63f2d626a4b564f413818bd5f8afd74d226", "html_url": "https://github.com/google/oauth2client/commit/b306c63f2d626a4b564f413818bd5f8afd74d226"}]}, {"sha": "b306c63f2d626a4b564f413818bd5f8afd74d226", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-28T17:41:41Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-28T17:41:41Z"}, "message": "Update changelog for v3.0.0", "tree": {"sha": "5654a61211208c5bedb4b8e32e44f99a7e8d8de1", "url": "https://api.github.com/repos/google/oauth2client/git/trees/5654a61211208c5bedb4b8e32e44f99a7e8d8de1"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/b306c63f2d626a4b564f413818bd5f8afd74d226", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/b306c63f2d626a4b564f413818bd5f8afd74d226", "html_url": "https://github.com/google/oauth2client/commit/b306c63f2d626a4b564f413818bd5f8afd74d226", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/b306c63f2d626a4b564f413818bd5f8afd74d226/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c12eabbe503e1716f55fbfad004aaa14ca1f5ae0", "url": "https://api.github.com/repos/google/oauth2client/commits/c12eabbe503e1716f55fbfad004aaa14ca1f5ae0", "html_url": "https://github.com/google/oauth2client/commit/c12eabbe503e1716f55fbfad004aaa14ca1f5ae0"}]}, {"sha": "c12eabbe503e1716f55fbfad004aaa14ca1f5ae0", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-28T17:41:24Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-28T17:41:24Z"}, "message": "Update version number to v3.0.0", "tree": {"sha": "afc5a5a6cd2a89756b8a27aacb0d18f6724ba562", "url": "https://api.github.com/repos/google/oauth2client/git/trees/afc5a5a6cd2a89756b8a27aacb0d18f6724ba562"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/c12eabbe503e1716f55fbfad004aaa14ca1f5ae0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/c12eabbe503e1716f55fbfad004aaa14ca1f5ae0", "html_url": "https://github.com/google/oauth2client/commit/c12eabbe503e1716f55fbfad004aaa14ca1f5ae0", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/c12eabbe503e1716f55fbfad004aaa14ca1f5ae0/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b364c2b5809d4e23a2cc628208bb4977cd395d5", "url": "https://api.github.com/repos/google/oauth2client/commits/7b364c2b5809d4e23a2cc628208bb4977cd395d5", "html_url": "https://github.com/google/oauth2client/commit/7b364c2b5809d4e23a2cc628208bb4977cd395d5"}]}, {"sha": "7b364c2b5809d4e23a2cc628208bb4977cd395d5", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-07-27T22:43:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-27T22:43:22Z"}, "message": "Merge pull request #572 from jonparrott/auth-approval-prompt\n\nAdd warnings and helpers for prompt='consent'.", "tree": {"sha": "13c7c7a8e5392332f2fdeb36cb3ee1fde73322ae", "url": "https://api.github.com/repos/google/oauth2client/git/trees/13c7c7a8e5392332f2fdeb36cb3ee1fde73322ae"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/7b364c2b5809d4e23a2cc628208bb4977cd395d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/7b364c2b5809d4e23a2cc628208bb4977cd395d5", "html_url": "https://github.com/google/oauth2client/commit/7b364c2b5809d4e23a2cc628208bb4977cd395d5", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/7b364c2b5809d4e23a2cc628208bb4977cd395d5/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ab7bbe63b50292a44fa2754a7fc6d25c2360241", "url": "https://api.github.com/repos/google/oauth2client/commits/3ab7bbe63b50292a44fa2754a7fc6d25c2360241", "html_url": "https://github.com/google/oauth2client/commit/3ab7bbe63b50292a44fa2754a7fc6d25c2360241"}, {"sha": "e9bcd2d9d779c462386f523ecc6419477d6fed2c", "url": "https://api.github.com/repos/google/oauth2client/commits/e9bcd2d9d779c462386f523ecc6419477d6fed2c", "html_url": "https://github.com/google/oauth2client/commit/e9bcd2d9d779c462386f523ecc6419477d6fed2c"}]}, {"sha": "3ab7bbe63b50292a44fa2754a7fc6d25c2360241", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-07-27T22:42:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-27T22:42:06Z"}, "message": "Merge pull request #574 from jonparrott/warn-about-multistore-file\n\nAdd deprecation warning to multistore_file.", "tree": {"sha": "df1b8cd97149f50db58062381bf21fa224a16604", "url": "https://api.github.com/repos/google/oauth2client/git/trees/df1b8cd97149f50db58062381bf21fa224a16604"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/3ab7bbe63b50292a44fa2754a7fc6d25c2360241", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/3ab7bbe63b50292a44fa2754a7fc6d25c2360241", "html_url": "https://github.com/google/oauth2client/commit/3ab7bbe63b50292a44fa2754a7fc6d25c2360241", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/3ab7bbe63b50292a44fa2754a7fc6d25c2360241/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e4a7d6b9527068d67f5f13b08932f9b75dcaea0", "url": "https://api.github.com/repos/google/oauth2client/commits/1e4a7d6b9527068d67f5f13b08932f9b75dcaea0", "html_url": "https://github.com/google/oauth2client/commit/1e4a7d6b9527068d67f5f13b08932f9b75dcaea0"}, {"sha": "6807d7d263118c5db30e5f692c6605cb2a849260", "url": "https://api.github.com/repos/google/oauth2client/commits/6807d7d263118c5db30e5f692c6605cb2a849260", "html_url": "https://github.com/google/oauth2client/commit/6807d7d263118c5db30e5f692c6605cb2a849260"}]}, {"sha": "6807d7d263118c5db30e5f692c6605cb2a849260", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-27T22:18:39Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-27T22:18:39Z"}, "message": "Add deprecation warning to multistore_file.", "tree": {"sha": "df1b8cd97149f50db58062381bf21fa224a16604", "url": "https://api.github.com/repos/google/oauth2client/git/trees/df1b8cd97149f50db58062381bf21fa224a16604"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/6807d7d263118c5db30e5f692c6605cb2a849260", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/6807d7d263118c5db30e5f692c6605cb2a849260", "html_url": "https://github.com/google/oauth2client/commit/6807d7d263118c5db30e5f692c6605cb2a849260", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/6807d7d263118c5db30e5f692c6605cb2a849260/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e4a7d6b9527068d67f5f13b08932f9b75dcaea0", "url": "https://api.github.com/repos/google/oauth2client/commits/1e4a7d6b9527068d67f5f13b08932f9b75dcaea0", "html_url": "https://github.com/google/oauth2client/commit/1e4a7d6b9527068d67f5f13b08932f9b75dcaea0"}]}, {"sha": "1e4a7d6b9527068d67f5f13b08932f9b75dcaea0", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-27T22:09:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-27T22:09:51Z"}, "message": "Fix system test reference to GOOGLE_TOKEN_URI. (#573)", "tree": {"sha": "1048f7e95b1fb4292edcfc765cb0976932227344", "url": "https://api.github.com/repos/google/oauth2client/git/trees/1048f7e95b1fb4292edcfc765cb0976932227344"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/1e4a7d6b9527068d67f5f13b08932f9b75dcaea0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/1e4a7d6b9527068d67f5f13b08932f9b75dcaea0", "html_url": "https://github.com/google/oauth2client/commit/1e4a7d6b9527068d67f5f13b08932f9b75dcaea0", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/1e4a7d6b9527068d67f5f13b08932f9b75dcaea0/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "323e5fabd4bd7f7963e63bf62864abeae7c60bc4", "url": "https://api.github.com/repos/google/oauth2client/commits/323e5fabd4bd7f7963e63bf62864abeae7c60bc4", "html_url": "https://github.com/google/oauth2client/commit/323e5fabd4bd7f7963e63bf62864abeae7c60bc4"}]}, {"sha": "e9bcd2d9d779c462386f523ecc6419477d6fed2c", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-27T21:17:39Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-27T21:54:17Z"}, "message": "Add warnings and helpers for prompt='consent'.", "tree": {"sha": "059f69672be47200d197ff0c7322e339b91193b0", "url": "https://api.github.com/repos/google/oauth2client/git/trees/059f69672be47200d197ff0c7322e339b91193b0"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/e9bcd2d9d779c462386f523ecc6419477d6fed2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/e9bcd2d9d779c462386f523ecc6419477d6fed2c", "html_url": "https://github.com/google/oauth2client/commit/e9bcd2d9d779c462386f523ecc6419477d6fed2c", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/e9bcd2d9d779c462386f523ecc6419477d6fed2c/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb2386ea51b330765b7c44461465bdceb0be09b4", "url": "https://api.github.com/repos/google/oauth2client/commits/bb2386ea51b330765b7c44461465bdceb0be09b4", "html_url": "https://github.com/google/oauth2client/commit/bb2386ea51b330765b7c44461465bdceb0be09b4"}]}, {"sha": "323e5fabd4bd7f7963e63bf62864abeae7c60bc4", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-07-27T21:02:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-27T21:02:05Z"}, "message": "Merge pull request #571 from jonparrott/fix-gce-timeout\n\nAdd configurable timeout for metadata server.", "tree": {"sha": "3ea91cdc59b540f30345f64df09c9c51ebd73ba9", "url": "https://api.github.com/repos/google/oauth2client/git/trees/3ea91cdc59b540f30345f64df09c9c51ebd73ba9"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/323e5fabd4bd7f7963e63bf62864abeae7c60bc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/323e5fabd4bd7f7963e63bf62864abeae7c60bc4", "html_url": "https://github.com/google/oauth2client/commit/323e5fabd4bd7f7963e63bf62864abeae7c60bc4", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/323e5fabd4bd7f7963e63bf62864abeae7c60bc4/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86bd966cf29eef94fe2ecb41ace3122eb539e152", "url": "https://api.github.com/repos/google/oauth2client/commits/86bd966cf29eef94fe2ecb41ace3122eb539e152", "html_url": "https://github.com/google/oauth2client/commit/86bd966cf29eef94fe2ecb41ace3122eb539e152"}, {"sha": "216c7c9407ffdc320a9225cee3b2315d086a2327", "url": "https://api.github.com/repos/google/oauth2client/commits/216c7c9407ffdc320a9225cee3b2315d086a2327", "html_url": "https://github.com/google/oauth2client/commit/216c7c9407ffdc320a9225cee3b2315d086a2327"}]}, {"sha": "86bd966cf29eef94fe2ecb41ace3122eb539e152", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-07-27T20:59:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-27T20:59:28Z"}, "message": "Merge pull request #570 from jonparrott/fix-adc-order\n\nFix Application Default Credentials resolution order.", "tree": {"sha": "846e7242e7d0dfd138309ac39ce811c6c9a044d1", "url": "https://api.github.com/repos/google/oauth2client/git/trees/846e7242e7d0dfd138309ac39ce811c6c9a044d1"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/86bd966cf29eef94fe2ecb41ace3122eb539e152", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/86bd966cf29eef94fe2ecb41ace3122eb539e152", "html_url": "https://github.com/google/oauth2client/commit/86bd966cf29eef94fe2ecb41ace3122eb539e152", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/86bd966cf29eef94fe2ecb41ace3122eb539e152/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb2386ea51b330765b7c44461465bdceb0be09b4", "url": "https://api.github.com/repos/google/oauth2client/commits/bb2386ea51b330765b7c44461465bdceb0be09b4", "html_url": "https://github.com/google/oauth2client/commit/bb2386ea51b330765b7c44461465bdceb0be09b4"}, {"sha": "2d270b0cf7e3cd9c513d185019edfa2f84503236", "url": "https://api.github.com/repos/google/oauth2client/commits/2d270b0cf7e3cd9c513d185019edfa2f84503236", "html_url": "https://github.com/google/oauth2client/commit/2d270b0cf7e3cd9c513d185019edfa2f84503236"}]}, {"sha": "216c7c9407ffdc320a9225cee3b2315d086a2327", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-27T20:53:27Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-27T20:53:27Z"}, "message": "Add configurable timeout for metadata server.", "tree": {"sha": "8b07f136ad4f496caaef5feeeba4d69adbdc789f", "url": "https://api.github.com/repos/google/oauth2client/git/trees/8b07f136ad4f496caaef5feeeba4d69adbdc789f"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/216c7c9407ffdc320a9225cee3b2315d086a2327", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/216c7c9407ffdc320a9225cee3b2315d086a2327", "html_url": "https://github.com/google/oauth2client/commit/216c7c9407ffdc320a9225cee3b2315d086a2327", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/216c7c9407ffdc320a9225cee3b2315d086a2327/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb2386ea51b330765b7c44461465bdceb0be09b4", "url": "https://api.github.com/repos/google/oauth2client/commits/bb2386ea51b330765b7c44461465bdceb0be09b4", "html_url": "https://github.com/google/oauth2client/commit/bb2386ea51b330765b7c44461465bdceb0be09b4"}]}, {"sha": "2d270b0cf7e3cd9c513d185019edfa2f84503236", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-27T20:44:02Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-27T20:44:02Z"}, "message": "Change Application Default Credentials resolution order.", "tree": {"sha": "846e7242e7d0dfd138309ac39ce811c6c9a044d1", "url": "https://api.github.com/repos/google/oauth2client/git/trees/846e7242e7d0dfd138309ac39ce811c6c9a044d1"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/2d270b0cf7e3cd9c513d185019edfa2f84503236", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/2d270b0cf7e3cd9c513d185019edfa2f84503236", "html_url": "https://github.com/google/oauth2client/commit/2d270b0cf7e3cd9c513d185019edfa2f84503236", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/2d270b0cf7e3cd9c513d185019edfa2f84503236/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb2386ea51b330765b7c44461465bdceb0be09b4", "url": "https://api.github.com/repos/google/oauth2client/commits/bb2386ea51b330765b7c44461465bdceb0be09b4", "html_url": "https://github.com/google/oauth2client/commit/bb2386ea51b330765b7c44461465bdceb0be09b4"}]}, {"sha": "bb2386ea51b330765b7c44461465bdceb0be09b4", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-07-27T19:12:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-27T19:12:12Z"}, "message": "Merge pull request #562 from pferate/import_refactor\n\nUpdate imports to only packages or modules.", "tree": {"sha": "f0ec338c1f685db7c11f82a78727075384519e46", "url": "https://api.github.com/repos/google/oauth2client/git/trees/f0ec338c1f685db7c11f82a78727075384519e46"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/bb2386ea51b330765b7c44461465bdceb0be09b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/bb2386ea51b330765b7c44461465bdceb0be09b4", "html_url": "https://github.com/google/oauth2client/commit/bb2386ea51b330765b7c44461465bdceb0be09b4", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/bb2386ea51b330765b7c44461465bdceb0be09b4/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25165adbc18101567ac0b75b086a072745b07f41", "url": "https://api.github.com/repos/google/oauth2client/commits/25165adbc18101567ac0b75b086a072745b07f41", "html_url": "https://github.com/google/oauth2client/commit/25165adbc18101567ac0b75b086a072745b07f41"}, {"sha": "f31e1e014fa9632fd5d71ccd03d19a14320c95d0", "url": "https://api.github.com/repos/google/oauth2client/commits/f31e1e014fa9632fd5d71ccd03d19a14320c95d0", "html_url": "https://github.com/google/oauth2client/commit/f31e1e014fa9632fd5d71ccd03d19a14320c95d0"}]}, {"sha": "f31e1e014fa9632fd5d71ccd03d19a14320c95d0", "commit": {"author": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-21T21:42:27Z"}, "committer": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-27T18:41:18Z"}, "message": "Update imports to only Packages or Modules\n\nAlso cleaned up some nested attribute access.", "tree": {"sha": "f0ec338c1f685db7c11f82a78727075384519e46", "url": "https://api.github.com/repos/google/oauth2client/git/trees/f0ec338c1f685db7c11f82a78727075384519e46"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/f31e1e014fa9632fd5d71ccd03d19a14320c95d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/f31e1e014fa9632fd5d71ccd03d19a14320c95d0", "html_url": "https://github.com/google/oauth2client/commit/f31e1e014fa9632fd5d71ccd03d19a14320c95d0", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/f31e1e014fa9632fd5d71ccd03d19a14320c95d0/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25165adbc18101567ac0b75b086a072745b07f41", "url": "https://api.github.com/repos/google/oauth2client/commits/25165adbc18101567ac0b75b086a072745b07f41", "html_url": "https://github.com/google/oauth2client/commit/25165adbc18101567ac0b75b086a072745b07f41"}]}, {"sha": "25165adbc18101567ac0b75b086a072745b07f41", "commit": {"author": {"name": "Bill Prin", "email": "waprin@gmail.com", "date": "2016-07-26T19:04:48Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-26T19:04:48Z"}, "message": "Refactor Django helpers (#546)\n\n* Move all Django code into contrib.django_util.\r\n* Add DjangORMStorage. This is backwards compatible with old django_orm storage.\r\n* Add new functionality to decorators and views that integrate with Django ORM-based storage.\r\n* Fix issue where Django storage always creates new Models.\r\n* Move tests into Django package and have them create an actual test app to create test databases etc.\r\n* Remove FlowField.", "tree": {"sha": "828e1c431dc068628cc6f0347befe4ffd971fee6", "url": "https://api.github.com/repos/google/oauth2client/git/trees/828e1c431dc068628cc6f0347befe4ffd971fee6"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/25165adbc18101567ac0b75b086a072745b07f41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/25165adbc18101567ac0b75b086a072745b07f41", "html_url": "https://github.com/google/oauth2client/commit/25165adbc18101567ac0b75b086a072745b07f41", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/25165adbc18101567ac0b75b086a072745b07f41/comments", "author": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ba3c60b3eab5939c78d872362aef4e2052cc8b9", "url": "https://api.github.com/repos/google/oauth2client/commits/3ba3c60b3eab5939c78d872362aef4e2052cc8b9", "html_url": "https://github.com/google/oauth2client/commit/3ba3c60b3eab5939c78d872362aef4e2052cc8b9"}]}, {"sha": "3ba3c60b3eab5939c78d872362aef4e2052cc8b9", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-25T23:58:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-25T23:58:04Z"}, "message": "Silence flask app logger during tests. (#566)", "tree": {"sha": "cc283b5845df240c79d8c5febe485fe2133fbc5e", "url": "https://api.github.com/repos/google/oauth2client/git/trees/cc283b5845df240c79d8c5febe485fe2133fbc5e"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/3ba3c60b3eab5939c78d872362aef4e2052cc8b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/3ba3c60b3eab5939c78d872362aef4e2052cc8b9", "html_url": "https://github.com/google/oauth2client/commit/3ba3c60b3eab5939c78d872362aef4e2052cc8b9", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/3ba3c60b3eab5939c78d872362aef4e2052cc8b9/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2a7c0f90899044c39dce17837ec929f3bb5ec3d", "url": "https://api.github.com/repos/google/oauth2client/commits/a2a7c0f90899044c39dce17837ec929f3bb5ec3d", "html_url": "https://github.com/google/oauth2client/commit/a2a7c0f90899044c39dce17837ec929f3bb5ec3d"}]}, {"sha": "a2a7c0f90899044c39dce17837ec929f3bb5ec3d", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-25T17:28:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-25T17:28:56Z"}, "message": "Add unittest2 dependency to gce-system-tests tox env. (#567)", "tree": {"sha": "19d18df04318d838d56671302a8da226a60b234d", "url": "https://api.github.com/repos/google/oauth2client/git/trees/19d18df04318d838d56671302a8da226a60b234d"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/a2a7c0f90899044c39dce17837ec929f3bb5ec3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/a2a7c0f90899044c39dce17837ec929f3bb5ec3d", "html_url": "https://github.com/google/oauth2client/commit/a2a7c0f90899044c39dce17837ec929f3bb5ec3d", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/a2a7c0f90899044c39dce17837ec929f3bb5ec3d/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cf26816936c87c89692e8541fd08f7f4f33979d", "url": "https://api.github.com/repos/google/oauth2client/commits/2cf26816936c87c89692e8541fd08f7f4f33979d", "html_url": "https://github.com/google/oauth2client/commit/2cf26816936c87c89692e8541fd08f7f4f33979d"}]}, {"sha": "2cf26816936c87c89692e8541fd08f7f4f33979d", "commit": {"author": {"name": "Pat Ferate", "email": "pferate@users.noreply.github.com", "date": "2016-07-25T16:44:43Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-25T16:44:43Z"}, "message": "Fix `self.assertTrue(isinstance(` statements (#565)\n\nReplace self.assertTrue(isinstance()) with self.assertIsInstance()", "tree": {"sha": "1dab3ccf9af5cb525133d7bfc3361d4e5d2cbc73", "url": "https://api.github.com/repos/google/oauth2client/git/trees/1dab3ccf9af5cb525133d7bfc3361d4e5d2cbc73"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/2cf26816936c87c89692e8541fd08f7f4f33979d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/2cf26816936c87c89692e8541fd08f7f4f33979d", "html_url": "https://github.com/google/oauth2client/commit/2cf26816936c87c89692e8541fd08f7f4f33979d", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/2cf26816936c87c89692e8541fd08f7f4f33979d/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fd860dd4ff1910e9f96f729f1cdd3520e11ed16", "url": "https://api.github.com/repos/google/oauth2client/commits/9fd860dd4ff1910e9f96f729f1cdd3520e11ed16", "html_url": "https://github.com/google/oauth2client/commit/9fd860dd4ff1910e9f96f729f1cdd3520e11ed16"}]}, {"sha": "9fd860dd4ff1910e9f96f729f1cdd3520e11ed16", "commit": {"author": {"name": "Pat Ferate", "email": "pferate@users.noreply.github.com", "date": "2016-07-22T20:22:45Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-22T20:22:45Z"}, "message": "Add tests to contrib modules to restore coverage to 100%", "tree": {"sha": "c21b2d991d8742225bc010e6696ee38cccd37bc1", "url": "https://api.github.com/repos/google/oauth2client/git/trees/c21b2d991d8742225bc010e6696ee38cccd37bc1"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/9fd860dd4ff1910e9f96f729f1cdd3520e11ed16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/9fd860dd4ff1910e9f96f729f1cdd3520e11ed16", "html_url": "https://github.com/google/oauth2client/commit/9fd860dd4ff1910e9f96f729f1cdd3520e11ed16", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/9fd860dd4ff1910e9f96f729f1cdd3520e11ed16/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d16816051a864255b00cb00405b2cc871bbf9175", "url": "https://api.github.com/repos/google/oauth2client/commits/d16816051a864255b00cb00405b2cc871bbf9175", "html_url": "https://github.com/google/oauth2client/commit/d16816051a864255b00cb00405b2cc871bbf9175"}]}, {"sha": "d16816051a864255b00cb00405b2cc871bbf9175", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-07-21T19:53:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-21T19:53:14Z"}, "message": "Merge pull request #561 from dhermes/service-account-to-transport\n\nRemove httplib2 parts from service_account module.", "tree": {"sha": "8bf57c76c976e3bbd6b2fe226e84356299a2c989", "url": "https://api.github.com/repos/google/oauth2client/git/trees/8bf57c76c976e3bbd6b2fe226e84356299a2c989"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/d16816051a864255b00cb00405b2cc871bbf9175", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/d16816051a864255b00cb00405b2cc871bbf9175", "html_url": "https://github.com/google/oauth2client/commit/d16816051a864255b00cb00405b2cc871bbf9175", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/d16816051a864255b00cb00405b2cc871bbf9175/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11482ad72431c5ae7fb58bdb6957a744ae4517b9", "url": "https://api.github.com/repos/google/oauth2client/commits/11482ad72431c5ae7fb58bdb6957a744ae4517b9", "html_url": "https://github.com/google/oauth2client/commit/11482ad72431c5ae7fb58bdb6957a744ae4517b9"}, {"sha": "2bbada516746e815a16007889a92130f62568f44", "url": "https://api.github.com/repos/google/oauth2client/commits/2bbada516746e815a16007889a92130f62568f44", "html_url": "https://github.com/google/oauth2client/commit/2bbada516746e815a16007889a92130f62568f44"}]}, {"sha": "2bbada516746e815a16007889a92130f62568f44", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-07-21T18:15:03Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-07-21T18:15:48Z"}, "message": "Remove httplib2 parts from service_account module.\n\nTowards #554.", "tree": {"sha": "8bf57c76c976e3bbd6b2fe226e84356299a2c989", "url": "https://api.github.com/repos/google/oauth2client/git/trees/8bf57c76c976e3bbd6b2fe226e84356299a2c989"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/2bbada516746e815a16007889a92130f62568f44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/2bbada516746e815a16007889a92130f62568f44", "html_url": "https://github.com/google/oauth2client/commit/2bbada516746e815a16007889a92130f62568f44", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/2bbada516746e815a16007889a92130f62568f44/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11482ad72431c5ae7fb58bdb6957a744ae4517b9", "url": "https://api.github.com/repos/google/oauth2client/commits/11482ad72431c5ae7fb58bdb6957a744ae4517b9", "html_url": "https://github.com/google/oauth2client/commit/11482ad72431c5ae7fb58bdb6957a744ae4517b9"}]}, {"sha": "11482ad72431c5ae7fb58bdb6957a744ae4517b9", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-07-21T17:23:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-21T17:23:52Z"}, "message": "Merge pull request #559 from dhermes/begin-transport-module\n\nBegin transport module for httplib2 specific pieces.", "tree": {"sha": "16ae10025c7ed7f9a37076a899f03b9fbc3af58e", "url": "https://api.github.com/repos/google/oauth2client/git/trees/16ae10025c7ed7f9a37076a899f03b9fbc3af58e"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/11482ad72431c5ae7fb58bdb6957a744ae4517b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/11482ad72431c5ae7fb58bdb6957a744ae4517b9", "html_url": "https://github.com/google/oauth2client/commit/11482ad72431c5ae7fb58bdb6957a744ae4517b9", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/11482ad72431c5ae7fb58bdb6957a744ae4517b9/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e9b857ffac0399af392843a5b0abc55a69d3378", "url": "https://api.github.com/repos/google/oauth2client/commits/3e9b857ffac0399af392843a5b0abc55a69d3378", "html_url": "https://github.com/google/oauth2client/commit/3e9b857ffac0399af392843a5b0abc55a69d3378"}, {"sha": "213050dd6744556741a443b55c0d8803e095a6cd", "url": "https://api.github.com/repos/google/oauth2client/commits/213050dd6744556741a443b55c0d8803e095a6cd", "html_url": "https://github.com/google/oauth2client/commit/213050dd6744556741a443b55c0d8803e095a6cd"}]}, {"sha": "213050dd6744556741a443b55c0d8803e095a6cd", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-07-20T20:24:41Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-07-21T17:12:03Z"}, "message": "Begin transport module for httplib2 specific pieces.\n\nTowards #554.", "tree": {"sha": "16ae10025c7ed7f9a37076a899f03b9fbc3af58e", "url": "https://api.github.com/repos/google/oauth2client/git/trees/16ae10025c7ed7f9a37076a899f03b9fbc3af58e"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/213050dd6744556741a443b55c0d8803e095a6cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/213050dd6744556741a443b55c0d8803e095a6cd", "html_url": "https://github.com/google/oauth2client/commit/213050dd6744556741a443b55c0d8803e095a6cd", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/213050dd6744556741a443b55c0d8803e095a6cd/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e9b857ffac0399af392843a5b0abc55a69d3378", "url": "https://api.github.com/repos/google/oauth2client/commits/3e9b857ffac0399af392843a5b0abc55a69d3378", "html_url": "https://github.com/google/oauth2client/commit/3e9b857ffac0399af392843a5b0abc55a69d3378"}]}, {"sha": "3e9b857ffac0399af392843a5b0abc55a69d3378", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-07-20T23:43:15Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-20T23:43:15Z"}, "message": "Send the coverage report to coveralls in gae env. (#560)", "tree": {"sha": "23461c0a73f792ad1276b0b109d3b97718810333", "url": "https://api.github.com/repos/google/oauth2client/git/trees/23461c0a73f792ad1276b0b109d3b97718810333"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/3e9b857ffac0399af392843a5b0abc55a69d3378", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/3e9b857ffac0399af392843a5b0abc55a69d3378", "html_url": "https://github.com/google/oauth2client/commit/3e9b857ffac0399af392843a5b0abc55a69d3378", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/3e9b857ffac0399af392843a5b0abc55a69d3378/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ceafaa7f32df85c3bf967d58886f50806fb5483e", "url": "https://api.github.com/repos/google/oauth2client/commits/ceafaa7f32df85c3bf967d58886f50806fb5483e", "html_url": "https://github.com/google/oauth2client/commit/ceafaa7f32df85c3bf967d58886f50806fb5483e"}]}, {"sha": "ceafaa7f32df85c3bf967d58886f50806fb5483e", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-07-19T17:18:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-19T17:18:12Z"}, "message": "Merge pull request #552 from pferate/string_format\n\nUpdate string formatters to new style.", "tree": {"sha": "0f215a60381757ea99950679057ad18f4c51be37", "url": "https://api.github.com/repos/google/oauth2client/git/trees/0f215a60381757ea99950679057ad18f4c51be37"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/ceafaa7f32df85c3bf967d58886f50806fb5483e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/ceafaa7f32df85c3bf967d58886f50806fb5483e", "html_url": "https://github.com/google/oauth2client/commit/ceafaa7f32df85c3bf967d58886f50806fb5483e", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/ceafaa7f32df85c3bf967d58886f50806fb5483e/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f7b6c3305817a8a91aefe4993d611c5af994c3f", "url": "https://api.github.com/repos/google/oauth2client/commits/0f7b6c3305817a8a91aefe4993d611c5af994c3f", "html_url": "https://github.com/google/oauth2client/commit/0f7b6c3305817a8a91aefe4993d611c5af994c3f"}, {"sha": "a7cddf20a668be0369f797d9093629fb3dc0c270", "url": "https://api.github.com/repos/google/oauth2client/commits/a7cddf20a668be0369f797d9093629fb3dc0c270", "html_url": "https://github.com/google/oauth2client/commit/a7cddf20a668be0369f797d9093629fb3dc0c270"}]}, {"sha": "0f7b6c3305817a8a91aefe4993d611c5af994c3f", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-07-19T16:38:26Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-19T16:38:26Z"}, "message": "Link style guide and commit rules in CONTRIBUTING (#553)", "tree": {"sha": "7d155ab006f337d2b0aa6677f21cc748d6978ec6", "url": "https://api.github.com/repos/google/oauth2client/git/trees/7d155ab006f337d2b0aa6677f21cc748d6978ec6"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/0f7b6c3305817a8a91aefe4993d611c5af994c3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/0f7b6c3305817a8a91aefe4993d611c5af994c3f", "html_url": "https://github.com/google/oauth2client/commit/0f7b6c3305817a8a91aefe4993d611c5af994c3f", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/0f7b6c3305817a8a91aefe4993d611c5af994c3f/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00afef9eb0b9af44cd462b5c1928737239e49bc0", "url": "https://api.github.com/repos/google/oauth2client/commits/00afef9eb0b9af44cd462b5c1928737239e49bc0", "html_url": "https://github.com/google/oauth2client/commit/00afef9eb0b9af44cd462b5c1928737239e49bc0"}]}, {"sha": "a7cddf20a668be0369f797d9093629fb3dc0c270", "commit": {"author": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-18T19:14:11Z"}, "committer": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-19T13:45:42Z"}, "message": "Update string formatters to new style\n\nChanging `%` style string formatters to `.format()`.\nLeaving `logging` strings in old style for Python 2 compatibility.\n\nResolves: Issue #541", "tree": {"sha": "a1c9de3d66069569f8c3c7f3f246ff2da7a22103", "url": "https://api.github.com/repos/google/oauth2client/git/trees/a1c9de3d66069569f8c3c7f3f246ff2da7a22103"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/a7cddf20a668be0369f797d9093629fb3dc0c270", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/a7cddf20a668be0369f797d9093629fb3dc0c270", "html_url": "https://github.com/google/oauth2client/commit/a7cddf20a668be0369f797d9093629fb3dc0c270", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/a7cddf20a668be0369f797d9093629fb3dc0c270/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00afef9eb0b9af44cd462b5c1928737239e49bc0", "url": "https://api.github.com/repos/google/oauth2client/commits/00afef9eb0b9af44cd462b5c1928737239e49bc0", "html_url": "https://github.com/google/oauth2client/commit/00afef9eb0b9af44cd462b5c1928737239e49bc0"}]}, {"sha": "00afef9eb0b9af44cd462b5c1928737239e49bc0", "commit": {"author": {"name": "Bill Prin", "email": "waprin@gmail.com", "date": "2016-07-18T19:11:06Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-18T19:11:06Z"}, "message": "Fix Flask Autodoc (#551)", "tree": {"sha": "47f9467e916d6bb54536749f5ed245b1eae6a277", "url": "https://api.github.com/repos/google/oauth2client/git/trees/47f9467e916d6bb54536749f5ed245b1eae6a277"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/00afef9eb0b9af44cd462b5c1928737239e49bc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/00afef9eb0b9af44cd462b5c1928737239e49bc0", "html_url": "https://github.com/google/oauth2client/commit/00afef9eb0b9af44cd462b5c1928737239e49bc0", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/00afef9eb0b9af44cd462b5c1928737239e49bc0/comments", "author": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd635f4d1e2ce1a70155a52deb0e22ad6da1e6e5", "url": "https://api.github.com/repos/google/oauth2client/commits/cd635f4d1e2ce1a70155a52deb0e22ad6da1e6e5", "html_url": "https://github.com/google/oauth2client/commit/cd635f4d1e2ce1a70155a52deb0e22ad6da1e6e5"}]}, {"sha": "cd635f4d1e2ce1a70155a52deb0e22ad6da1e6e5", "commit": {"author": {"name": "Pat Ferate", "email": "pferate@users.noreply.github.com", "date": "2016-07-12T23:16:03Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-12T23:16:03Z"}, "message": "Remove custom contrib.appengine exceptions (#533)\n\n* Remove InvalidClientSecretsError duplicated from oauth2client\r\n* Remove internal-only InvalidXsrfTokenError and rework logic without exception.", "tree": {"sha": "8e5c701a4c6342996c48f4caa21a7ffd21e04756", "url": "https://api.github.com/repos/google/oauth2client/git/trees/8e5c701a4c6342996c48f4caa21a7ffd21e04756"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/cd635f4d1e2ce1a70155a52deb0e22ad6da1e6e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/cd635f4d1e2ce1a70155a52deb0e22ad6da1e6e5", "html_url": "https://github.com/google/oauth2client/commit/cd635f4d1e2ce1a70155a52deb0e22ad6da1e6e5", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/cd635f4d1e2ce1a70155a52deb0e22ad6da1e6e5/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66d47251fd08abf57fd1d80569901346b91cd422", "url": "https://api.github.com/repos/google/oauth2client/commits/66d47251fd08abf57fd1d80569901346b91cd422", "html_url": "https://github.com/google/oauth2client/commit/66d47251fd08abf57fd1d80569901346b91cd422"}]}, {"sha": "66d47251fd08abf57fd1d80569901346b91cd422", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-12T23:06:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-12T23:06:01Z"}, "message": "Add oauth2client.contrib.multiprocess_storage (#504)\n\nThis module supercedes functionality found in `oauth2client.contrib.multistore_file`.", "tree": {"sha": "95ac50ac6650e964a8f700e8ce004727de66f959", "url": "https://api.github.com/repos/google/oauth2client/git/trees/95ac50ac6650e964a8f700e8ce004727de66f959"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/66d47251fd08abf57fd1d80569901346b91cd422", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/66d47251fd08abf57fd1d80569901346b91cd422", "html_url": "https://github.com/google/oauth2client/commit/66d47251fd08abf57fd1d80569901346b91cd422", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/66d47251fd08abf57fd1d80569901346b91cd422/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac4385c9cc2d9094e1ab29748ed6cc62aa1b70a0", "url": "https://api.github.com/repos/google/oauth2client/commits/ac4385c9cc2d9094e1ab29748ed6cc62aa1b70a0", "html_url": "https://github.com/google/oauth2client/commit/ac4385c9cc2d9094e1ab29748ed6cc62aa1b70a0"}]}, {"sha": "ac4385c9cc2d9094e1ab29748ed6cc62aa1b70a0", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-07-11T16:48:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-11T16:48:24Z"}, "message": "Merge pull request #540 from pferate/pep8_cleanup\n\nPEP8 cleanup.", "tree": {"sha": "52c85f368086af0dc904bc8b1df47d0b863d6bad", "url": "https://api.github.com/repos/google/oauth2client/git/trees/52c85f368086af0dc904bc8b1df47d0b863d6bad"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/ac4385c9cc2d9094e1ab29748ed6cc62aa1b70a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/ac4385c9cc2d9094e1ab29748ed6cc62aa1b70a0", "html_url": "https://github.com/google/oauth2client/commit/ac4385c9cc2d9094e1ab29748ed6cc62aa1b70a0", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/ac4385c9cc2d9094e1ab29748ed6cc62aa1b70a0/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f25b7abfafb8610b8434b023cc0a77eb8f4c0b67", "url": "https://api.github.com/repos/google/oauth2client/commits/f25b7abfafb8610b8434b023cc0a77eb8f4c0b67", "html_url": "https://github.com/google/oauth2client/commit/f25b7abfafb8610b8434b023cc0a77eb8f4c0b67"}, {"sha": "09e9420ab7b0d6e0f21c25f2377ecee7d027fc02", "url": "https://api.github.com/repos/google/oauth2client/commits/09e9420ab7b0d6e0f21c25f2377ecee7d027fc02", "html_url": "https://github.com/google/oauth2client/commit/09e9420ab7b0d6e0f21c25f2377ecee7d027fc02"}]}, {"sha": "09e9420ab7b0d6e0f21c25f2377ecee7d027fc02", "commit": {"author": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-11T00:24:18Z"}, "committer": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-11T15:14:03Z"}, "message": "Check for Google import order style in flake8", "tree": {"sha": "52c85f368086af0dc904bc8b1df47d0b863d6bad", "url": "https://api.github.com/repos/google/oauth2client/git/trees/52c85f368086af0dc904bc8b1df47d0b863d6bad"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/09e9420ab7b0d6e0f21c25f2377ecee7d027fc02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/09e9420ab7b0d6e0f21c25f2377ecee7d027fc02", "html_url": "https://github.com/google/oauth2client/commit/09e9420ab7b0d6e0f21c25f2377ecee7d027fc02", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/09e9420ab7b0d6e0f21c25f2377ecee7d027fc02/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b6c56d3ee60c749f74f746300934e3ae18c56c1", "url": "https://api.github.com/repos/google/oauth2client/commits/6b6c56d3ee60c749f74f746300934e3ae18c56c1", "html_url": "https://github.com/google/oauth2client/commit/6b6c56d3ee60c749f74f746300934e3ae18c56c1"}]}, {"sha": "6b6c56d3ee60c749f74f746300934e3ae18c56c1", "commit": {"author": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-08T20:31:15Z"}, "committer": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-11T15:13:53Z"}, "message": "More general PEP8 cleanup", "tree": {"sha": "8f89b057b82a748530feededb879850989d29557", "url": "https://api.github.com/repos/google/oauth2client/git/trees/8f89b057b82a748530feededb879850989d29557"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/6b6c56d3ee60c749f74f746300934e3ae18c56c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/6b6c56d3ee60c749f74f746300934e3ae18c56c1", "html_url": "https://github.com/google/oauth2client/commit/6b6c56d3ee60c749f74f746300934e3ae18c56c1", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/6b6c56d3ee60c749f74f746300934e3ae18c56c1/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8eb3aa2f955dd4ad31aeb3cb1e43c783aaebb85a", "url": "https://api.github.com/repos/google/oauth2client/commits/8eb3aa2f955dd4ad31aeb3cb1e43c783aaebb85a", "html_url": "https://github.com/google/oauth2client/commit/8eb3aa2f955dd4ad31aeb3cb1e43c783aaebb85a"}]}, {"sha": "8eb3aa2f955dd4ad31aeb3cb1e43c783aaebb85a", "commit": {"author": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-08T20:30:17Z"}, "committer": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-11T15:11:08Z"}, "message": "Add new tox env: flake8", "tree": {"sha": "db5d7bc6796a75242d2c9b2a0bcda1d154856159", "url": "https://api.github.com/repos/google/oauth2client/git/trees/db5d7bc6796a75242d2c9b2a0bcda1d154856159"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/8eb3aa2f955dd4ad31aeb3cb1e43c783aaebb85a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/8eb3aa2f955dd4ad31aeb3cb1e43c783aaebb85a", "html_url": "https://github.com/google/oauth2client/commit/8eb3aa2f955dd4ad31aeb3cb1e43c783aaebb85a", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/8eb3aa2f955dd4ad31aeb3cb1e43c783aaebb85a/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ef8bb0950b62ba18b9c05344cdf32aca5671e2f", "url": "https://api.github.com/repos/google/oauth2client/commits/5ef8bb0950b62ba18b9c05344cdf32aca5671e2f", "html_url": "https://github.com/google/oauth2client/commit/5ef8bb0950b62ba18b9c05344cdf32aca5671e2f"}]}, {"sha": "5ef8bb0950b62ba18b9c05344cdf32aca5671e2f", "commit": {"author": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-08T16:10:16Z"}, "committer": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-08T17:26:07Z"}, "message": "Resolve lines over 80 characters", "tree": {"sha": "20efee4b76cbaaafa56fbd8fb9950c47f4966fd7", "url": "https://api.github.com/repos/google/oauth2client/git/trees/20efee4b76cbaaafa56fbd8fb9950c47f4966fd7"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/5ef8bb0950b62ba18b9c05344cdf32aca5671e2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/5ef8bb0950b62ba18b9c05344cdf32aca5671e2f", "html_url": "https://github.com/google/oauth2client/commit/5ef8bb0950b62ba18b9c05344cdf32aca5671e2f", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/5ef8bb0950b62ba18b9c05344cdf32aca5671e2f/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f9dbc22f1a7dac3cf7dcf8469525a55134363d8", "url": "https://api.github.com/repos/google/oauth2client/commits/9f9dbc22f1a7dac3cf7dcf8469525a55134363d8", "html_url": "https://github.com/google/oauth2client/commit/9f9dbc22f1a7dac3cf7dcf8469525a55134363d8"}]}, {"sha": "9f9dbc22f1a7dac3cf7dcf8469525a55134363d8", "commit": {"author": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-08T15:49:04Z"}, "committer": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-08T17:26:07Z"}, "message": "Clean up command line messages\n\nMove messages split up by multiple print calls to multi-line strings.", "tree": {"sha": "8c7d9a909307519578c44c2e44044568369b8390", "url": "https://api.github.com/repos/google/oauth2client/git/trees/8c7d9a909307519578c44c2e44044568369b8390"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/9f9dbc22f1a7dac3cf7dcf8469525a55134363d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/9f9dbc22f1a7dac3cf7dcf8469525a55134363d8", "html_url": "https://github.com/google/oauth2client/commit/9f9dbc22f1a7dac3cf7dcf8469525a55134363d8", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/9f9dbc22f1a7dac3cf7dcf8469525a55134363d8/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1934bfb1796f27076be6c3b7ba20d3a30fc7cf99", "url": "https://api.github.com/repos/google/oauth2client/commits/1934bfb1796f27076be6c3b7ba20d3a30fc7cf99", "html_url": "https://github.com/google/oauth2client/commit/1934bfb1796f27076be6c3b7ba20d3a30fc7cf99"}]}, {"sha": "1934bfb1796f27076be6c3b7ba20d3a30fc7cf99", "commit": {"author": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-08T17:24:21Z"}, "committer": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-08T17:26:01Z"}, "message": "Clean up whitespace", "tree": {"sha": "1427bb8a226c47809480d07cd36eeab8952274c1", "url": "https://api.github.com/repos/google/oauth2client/git/trees/1427bb8a226c47809480d07cd36eeab8952274c1"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/1934bfb1796f27076be6c3b7ba20d3a30fc7cf99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/1934bfb1796f27076be6c3b7ba20d3a30fc7cf99", "html_url": "https://github.com/google/oauth2client/commit/1934bfb1796f27076be6c3b7ba20d3a30fc7cf99", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/1934bfb1796f27076be6c3b7ba20d3a30fc7cf99/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "514c1707460038494598f88f6569cec388724cf1", "url": "https://api.github.com/repos/google/oauth2client/commits/514c1707460038494598f88f6569cec388724cf1", "html_url": "https://github.com/google/oauth2client/commit/514c1707460038494598f88f6569cec388724cf1"}]}, {"sha": "514c1707460038494598f88f6569cec388724cf1", "commit": {"author": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-07T21:11:02Z"}, "committer": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-08T17:25:33Z"}, "message": "Remove unused local variable assignment\n\nFixed flake8 F841 errors: local variable is assigned to but never used.", "tree": {"sha": "58646a0c90185f83576858f0b6462cfd1fa5a4ba", "url": "https://api.github.com/repos/google/oauth2client/git/trees/58646a0c90185f83576858f0b6462cfd1fa5a4ba"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/514c1707460038494598f88f6569cec388724cf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/514c1707460038494598f88f6569cec388724cf1", "html_url": "https://github.com/google/oauth2client/commit/514c1707460038494598f88f6569cec388724cf1", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/514c1707460038494598f88f6569cec388724cf1/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8640c0d72945c5224af673fa3f24bb8068fc59d", "url": "https://api.github.com/repos/google/oauth2client/commits/c8640c0d72945c5224af673fa3f24bb8068fc59d", "html_url": "https://github.com/google/oauth2client/commit/c8640c0d72945c5224af673fa3f24bb8068fc59d"}]}, {"sha": "c8640c0d72945c5224af673fa3f24bb8068fc59d", "commit": {"author": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-07T20:55:38Z"}, "committer": {"name": "Pat Ferate", "email": "pferate+github@gmail.com", "date": "2016-07-07T20:55:38Z"}, "message": "Remove unused imports", "tree": {"sha": "9f317a4b15b97be3ae8c0ace412008d1f934fbd1", "url": "https://api.github.com/repos/google/oauth2client/git/trees/9f317a4b15b97be3ae8c0ace412008d1f934fbd1"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/c8640c0d72945c5224af673fa3f24bb8068fc59d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/c8640c0d72945c5224af673fa3f24bb8068fc59d", "html_url": "https://github.com/google/oauth2client/commit/c8640c0d72945c5224af673fa3f24bb8068fc59d", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/c8640c0d72945c5224af673fa3f24bb8068fc59d/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f25b7abfafb8610b8434b023cc0a77eb8f4c0b67", "url": "https://api.github.com/repos/google/oauth2client/commits/f25b7abfafb8610b8434b023cc0a77eb8f4c0b67", "html_url": "https://github.com/google/oauth2client/commit/f25b7abfafb8610b8434b023cc0a77eb8f4c0b67"}]}, {"sha": "f25b7abfafb8610b8434b023cc0a77eb8f4c0b67", "commit": {"author": {"name": "Pat Ferate", "email": "pferate@users.noreply.github.com", "date": "2016-07-06T19:45:49Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-07-06T19:45:49Z"}, "message": "Use context manager for assertRaises (#537)\n\n* Use context manager for assertRaises, fixes #536.\r\n* Update usage of unittest to unittest2.\r\n* Remove unneeded `if __name__ == '__main__':` clauses in test files.", "tree": {"sha": "69ad92ae6aeabe0f09c45401035cb4f80cf0b68a", "url": "https://api.github.com/repos/google/oauth2client/git/trees/69ad92ae6aeabe0f09c45401035cb4f80cf0b68a"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/f25b7abfafb8610b8434b023cc0a77eb8f4c0b67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/f25b7abfafb8610b8434b023cc0a77eb8f4c0b67", "html_url": "https://github.com/google/oauth2client/commit/f25b7abfafb8610b8434b023cc0a77eb8f4c0b67", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/f25b7abfafb8610b8434b023cc0a77eb8f4c0b67/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "267bbc59caad625b3905eec29c040f61aab3b4f0", "url": "https://api.github.com/repos/google/oauth2client/commits/267bbc59caad625b3905eec29c040f61aab3b4f0", "html_url": "https://github.com/google/oauth2client/commit/267bbc59caad625b3905eec29c040f61aab3b4f0"}]}, {"sha": "267bbc59caad625b3905eec29c040f61aab3b4f0", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-06-29T20:21:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-29T20:21:37Z"}, "message": "Merge pull request #527 from miedzinski/sqlalchemy-storage\n\nAdd SQLAlchemy storage.", "tree": {"sha": "ccc286c6b3da6662e7ebdcda222362fa6c7c7dd5", "url": "https://api.github.com/repos/google/oauth2client/git/trees/ccc286c6b3da6662e7ebdcda222362fa6c7c7dd5"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/267bbc59caad625b3905eec29c040f61aab3b4f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/267bbc59caad625b3905eec29c040f61aab3b4f0", "html_url": "https://github.com/google/oauth2client/commit/267bbc59caad625b3905eec29c040f61aab3b4f0", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/267bbc59caad625b3905eec29c040f61aab3b4f0/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4e34317d5b2565cd9194471cbc9d806ce9aceae", "url": "https://api.github.com/repos/google/oauth2client/commits/a4e34317d5b2565cd9194471cbc9d806ce9aceae", "html_url": "https://github.com/google/oauth2client/commit/a4e34317d5b2565cd9194471cbc9d806ce9aceae"}, {"sha": "5048d8380c9ff34f98fc944677b0e1dc49329616", "url": "https://api.github.com/repos/google/oauth2client/commits/5048d8380c9ff34f98fc944677b0e1dc49329616", "html_url": "https://github.com/google/oauth2client/commit/5048d8380c9ff34f98fc944677b0e1dc49329616"}]}, {"sha": "a4e34317d5b2565cd9194471cbc9d806ce9aceae", "commit": {"author": {"name": "Pat Ferate", "email": "pferate@users.noreply.github.com", "date": "2016-06-29T16:26:04Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-06-29T16:26:04Z"}, "message": "Add exception text to exit message (#530)\n\nIf `clientsecrets.InvalidClientSecretsError` is raised with additional\r\ntext and a predefined failure message is given, include exception text\r\nin the exit message.", "tree": {"sha": "dbf16468b549228a6ba98f2bd0a4a59de3ab0364", "url": "https://api.github.com/repos/google/oauth2client/git/trees/dbf16468b549228a6ba98f2bd0a4a59de3ab0364"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/a4e34317d5b2565cd9194471cbc9d806ce9aceae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/a4e34317d5b2565cd9194471cbc9d806ce9aceae", "html_url": "https://github.com/google/oauth2client/commit/a4e34317d5b2565cd9194471cbc9d806ce9aceae", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/a4e34317d5b2565cd9194471cbc9d806ce9aceae/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61c61a014005b8e7955424c3d5ac27db22142bd5", "url": "https://api.github.com/repos/google/oauth2client/commits/61c61a014005b8e7955424c3d5ac27db22142bd5", "html_url": "https://github.com/google/oauth2client/commit/61c61a014005b8e7955424c3d5ac27db22142bd5"}]}, {"sha": "61c61a014005b8e7955424c3d5ac27db22142bd5", "commit": {"author": {"name": "Pat Ferate", "email": "pferate@users.noreply.github.com", "date": "2016-06-29T16:25:51Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-06-29T16:25:51Z"}, "message": "Adding Python 3.5 capability (#531)\n\nIn Python 3.5, `http.HTTPStatus` was added, previously HTTP statuses\r\nwere int.  Casting `http.HTTPStatus` as int to maintain backwards\r\nmaintainability.", "tree": {"sha": "9c5675b1e57ffc8b6489396779bb799dc0fe15c2", "url": "https://api.github.com/repos/google/oauth2client/git/trees/9c5675b1e57ffc8b6489396779bb799dc0fe15c2"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/61c61a014005b8e7955424c3d5ac27db22142bd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/61c61a014005b8e7955424c3d5ac27db22142bd5", "html_url": "https://github.com/google/oauth2client/commit/61c61a014005b8e7955424c3d5ac27db22142bd5", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/61c61a014005b8e7955424c3d5ac27db22142bd5/comments", "author": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5454867160f7f0d5aca8a75ad702ef1c13134011", "url": "https://api.github.com/repos/google/oauth2client/commits/5454867160f7f0d5aca8a75ad702ef1c13134011", "html_url": "https://github.com/google/oauth2client/commit/5454867160f7f0d5aca8a75ad702ef1c13134011"}]}, {"sha": "5048d8380c9ff34f98fc944677b0e1dc49329616", "commit": {"author": {"name": "Dominik Miedzi\u0144ski", "email": "dominik@mdzn.pl", "date": "2015-11-30T10:26:49Z"}, "committer": {"name": "Dominik Miedzi\u0144ski", "email": "dominik@mdzn.pl", "date": "2016-06-28T21:57:28Z"}, "message": "Add SQLAlchemy storage", "tree": {"sha": "b00d33b647319d410438cd9ac2cbb41ec6e2af26", "url": "https://api.github.com/repos/google/oauth2client/git/trees/b00d33b647319d410438cd9ac2cbb41ec6e2af26"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/5048d8380c9ff34f98fc944677b0e1dc49329616", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/5048d8380c9ff34f98fc944677b0e1dc49329616", "html_url": "https://github.com/google/oauth2client/commit/5048d8380c9ff34f98fc944677b0e1dc49329616", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/5048d8380c9ff34f98fc944677b0e1dc49329616/comments", "author": {"login": "miedzinski", "id": 12597084, "avatar_url": "https://avatars1.githubusercontent.com/u/12597084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miedzinski", "html_url": "https://github.com/miedzinski", "followers_url": "https://api.github.com/users/miedzinski/followers", "following_url": "https://api.github.com/users/miedzinski/following{/other_user}", "gists_url": "https://api.github.com/users/miedzinski/gists{/gist_id}", "starred_url": "https://api.github.com/users/miedzinski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miedzinski/subscriptions", "organizations_url": "https://api.github.com/users/miedzinski/orgs", "repos_url": "https://api.github.com/users/miedzinski/repos", "events_url": "https://api.github.com/users/miedzinski/events{/privacy}", "received_events_url": "https://api.github.com/users/miedzinski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "miedzinski", "id": 12597084, "avatar_url": "https://avatars1.githubusercontent.com/u/12597084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miedzinski", "html_url": "https://github.com/miedzinski", "followers_url": "https://api.github.com/users/miedzinski/followers", "following_url": "https://api.github.com/users/miedzinski/following{/other_user}", "gists_url": "https://api.github.com/users/miedzinski/gists{/gist_id}", "starred_url": "https://api.github.com/users/miedzinski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miedzinski/subscriptions", "organizations_url": "https://api.github.com/users/miedzinski/orgs", "repos_url": "https://api.github.com/users/miedzinski/repos", "events_url": "https://api.github.com/users/miedzinski/events{/privacy}", "received_events_url": "https://api.github.com/users/miedzinski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c82816cf7a8a4a3b587b3690937069d502e609f3", "url": "https://api.github.com/repos/google/oauth2client/commits/c82816cf7a8a4a3b587b3690937069d502e609f3", "html_url": "https://github.com/google/oauth2client/commit/c82816cf7a8a4a3b587b3690937069d502e609f3"}]}, {"sha": "5454867160f7f0d5aca8a75ad702ef1c13134011", "commit": {"author": {"name": "elibixby", "email": "elibixby@google.com", "date": "2016-06-28T19:59:18Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-06-28T19:59:18Z"}, "message": "Populate scopes for gce.AppAssertionCredentials (#524)\n\n* Populate Scopes for gce.AppAssertionCredentials\r\n* _retrieve_scopes -> _retrieve_info\r\n* Add note about credentials being initially invalid", "tree": {"sha": "d63a884c31829ca1e05d95fa65880c9ee4aa516f", "url": "https://api.github.com/repos/google/oauth2client/git/trees/d63a884c31829ca1e05d95fa65880c9ee4aa516f"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/5454867160f7f0d5aca8a75ad702ef1c13134011", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/5454867160f7f0d5aca8a75ad702ef1c13134011", "html_url": "https://github.com/google/oauth2client/commit/5454867160f7f0d5aca8a75ad702ef1c13134011", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/5454867160f7f0d5aca8a75ad702ef1c13134011/comments", "author": {"login": "elibixby", "id": 6596957, "avatar_url": "https://avatars0.githubusercontent.com/u/6596957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elibixby", "html_url": "https://github.com/elibixby", "followers_url": "https://api.github.com/users/elibixby/followers", "following_url": "https://api.github.com/users/elibixby/following{/other_user}", "gists_url": "https://api.github.com/users/elibixby/gists{/gist_id}", "starred_url": "https://api.github.com/users/elibixby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elibixby/subscriptions", "organizations_url": "https://api.github.com/users/elibixby/orgs", "repos_url": "https://api.github.com/users/elibixby/repos", "events_url": "https://api.github.com/users/elibixby/events{/privacy}", "received_events_url": "https://api.github.com/users/elibixby/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c82816cf7a8a4a3b587b3690937069d502e609f3", "url": "https://api.github.com/repos/google/oauth2client/commits/c82816cf7a8a4a3b587b3690937069d502e609f3", "html_url": "https://github.com/google/oauth2client/commit/c82816cf7a8a4a3b587b3690937069d502e609f3"}]}, {"sha": "c82816cf7a8a4a3b587b3690937069d502e609f3", "commit": {"author": {"name": "elibixby", "email": "elibixby@google.com", "date": "2016-06-10T21:36:44Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-06-10T21:36:44Z"}, "message": "Move compute engine metadata interface into a separate module (#520)", "tree": {"sha": "b814a0fe5c02b6264aa07ef4184ba98413b62103", "url": "https://api.github.com/repos/google/oauth2client/git/trees/b814a0fe5c02b6264aa07ef4184ba98413b62103"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/c82816cf7a8a4a3b587b3690937069d502e609f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/c82816cf7a8a4a3b587b3690937069d502e609f3", "html_url": "https://github.com/google/oauth2client/commit/c82816cf7a8a4a3b587b3690937069d502e609f3", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/c82816cf7a8a4a3b587b3690937069d502e609f3/comments", "author": {"login": "elibixby", "id": 6596957, "avatar_url": "https://avatars0.githubusercontent.com/u/6596957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elibixby", "html_url": "https://github.com/elibixby", "followers_url": "https://api.github.com/users/elibixby/followers", "following_url": "https://api.github.com/users/elibixby/following{/other_user}", "gists_url": "https://api.github.com/users/elibixby/gists{/gist_id}", "starred_url": "https://api.github.com/users/elibixby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elibixby/subscriptions", "organizations_url": "https://api.github.com/users/elibixby/orgs", "repos_url": "https://api.github.com/users/elibixby/repos", "events_url": "https://api.github.com/users/elibixby/events{/privacy}", "received_events_url": "https://api.github.com/users/elibixby/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54d7dce687ecfd87075ce3df4deeb62565ecc2dc", "url": "https://api.github.com/repos/google/oauth2client/commits/54d7dce687ecfd87075ce3df4deeb62565ecc2dc", "html_url": "https://github.com/google/oauth2client/commit/54d7dce687ecfd87075ce3df4deeb62565ecc2dc"}]}, {"sha": "54d7dce687ecfd87075ce3df4deeb62565ecc2dc", "commit": {"author": {"name": "Ben Demaree", "email": "bendemaree@gmail.com", "date": "2016-06-10T16:29:53Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-06-10T16:29:53Z"}, "message": "Populate token expiry for GCE credentials (#473)\n\nPopulates the token_expiry property for GCE App Assertion credentials\r\n(thus enabling access_token_expired). This corrects assumptions like the\r\none in the access_token_expired property on GCE specifically: it's stated\r\nthere \"If the token_expiry isn't set, we assume the token doesn't expire\"\r\nwhich seems to be incorrect for tokens retrieved from the GCE Metadata service.", "tree": {"sha": "df39252e2cb5a058382041c3d61525d223bf0473", "url": "https://api.github.com/repos/google/oauth2client/git/trees/df39252e2cb5a058382041c3d61525d223bf0473"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/54d7dce687ecfd87075ce3df4deeb62565ecc2dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/54d7dce687ecfd87075ce3df4deeb62565ecc2dc", "html_url": "https://github.com/google/oauth2client/commit/54d7dce687ecfd87075ce3df4deeb62565ecc2dc", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/54d7dce687ecfd87075ce3df4deeb62565ecc2dc/comments", "author": {"login": "bendemaree", "id": 1188702, "avatar_url": "https://avatars2.githubusercontent.com/u/1188702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bendemaree", "html_url": "https://github.com/bendemaree", "followers_url": "https://api.github.com/users/bendemaree/followers", "following_url": "https://api.github.com/users/bendemaree/following{/other_user}", "gists_url": "https://api.github.com/users/bendemaree/gists{/gist_id}", "starred_url": "https://api.github.com/users/bendemaree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bendemaree/subscriptions", "organizations_url": "https://api.github.com/users/bendemaree/orgs", "repos_url": "https://api.github.com/users/bendemaree/repos", "events_url": "https://api.github.com/users/bendemaree/events{/privacy}", "received_events_url": "https://api.github.com/users/bendemaree/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cbb927c8155d5f8b90bb6b0e089792f25a085fb", "url": "https://api.github.com/repos/google/oauth2client/commits/8cbb927c8155d5f8b90bb6b0e089792f25a085fb", "html_url": "https://github.com/google/oauth2client/commit/8cbb927c8155d5f8b90bb6b0e089792f25a085fb"}]}, {"sha": "8cbb927c8155d5f8b90bb6b0e089792f25a085fb", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-06-10T00:21:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-10T00:21:38Z"}, "message": "Merge pull request #519 from jonparrott/cut-2.2.0\n\nRelease v2.2.0.", "tree": {"sha": "006eb6517fb2ea6bb1cd72071ecbca9251ab4cfa", "url": "https://api.github.com/repos/google/oauth2client/git/trees/006eb6517fb2ea6bb1cd72071ecbca9251ab4cfa"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/8cbb927c8155d5f8b90bb6b0e089792f25a085fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/8cbb927c8155d5f8b90bb6b0e089792f25a085fb", "html_url": "https://github.com/google/oauth2client/commit/8cbb927c8155d5f8b90bb6b0e089792f25a085fb", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/8cbb927c8155d5f8b90bb6b0e089792f25a085fb/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4e17ec922120fb68bd6621ad7c31e09bd699cc5", "url": "https://api.github.com/repos/google/oauth2client/commits/c4e17ec922120fb68bd6621ad7c31e09bd699cc5", "html_url": "https://github.com/google/oauth2client/commit/c4e17ec922120fb68bd6621ad7c31e09bd699cc5"}, {"sha": "a897392325a2dccafa0eacf727cd4e5d8dc01926", "url": "https://api.github.com/repos/google/oauth2client/commits/a897392325a2dccafa0eacf727cd4e5d8dc01926", "html_url": "https://github.com/google/oauth2client/commit/a897392325a2dccafa0eacf727cd4e5d8dc01926"}]}, {"sha": "a897392325a2dccafa0eacf727cd4e5d8dc01926", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-06-08T19:45:35Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-06-08T19:45:35Z"}, "message": "Release v2.2.0", "tree": {"sha": "ccf4d22f902b45b443a92bc21086ee0e4f654fea", "url": "https://api.github.com/repos/google/oauth2client/git/trees/ccf4d22f902b45b443a92bc21086ee0e4f654fea"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/a897392325a2dccafa0eacf727cd4e5d8dc01926", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/a897392325a2dccafa0eacf727cd4e5d8dc01926", "html_url": "https://github.com/google/oauth2client/commit/a897392325a2dccafa0eacf727cd4e5d8dc01926", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/a897392325a2dccafa0eacf727cd4e5d8dc01926/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b55744061f91fe68cf074e0fd07b0964129ce811", "url": "https://api.github.com/repos/google/oauth2client/commits/b55744061f91fe68cf074e0fd07b0964129ce811", "html_url": "https://github.com/google/oauth2client/commit/b55744061f91fe68cf074e0fd07b0964129ce811"}]}, {"sha": "c4e17ec922120fb68bd6621ad7c31e09bd699cc5", "commit": {"author": {"name": "Adam Chainz", "email": "me@adamj.eu", "date": "2016-06-08T19:36:54Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-06-08T19:36:54Z"}, "message": "Convert readthedocs link for their .org -> .io migration for hosted projects (#514)\n\nAs per [their blog post of the 27th April](https://blog.readthedocs.com/securing-subdomains/) \u2018Securing subdomains\u2019:\r\n\r\n> Starting today, Read the Docs will start hosting projects from subdomains on the domain readthedocs.io, instead of on readthedocs.org. This change addresses some security concerns around site cookies while hosting user generated data on the same domain as our dashboard.\r\n\r\nTest Plan: Manually visited all the links I\u2019ve modified.", "tree": {"sha": "dc11098bf221bf951874eea5be71bd91726637df", "url": "https://api.github.com/repos/google/oauth2client/git/trees/dc11098bf221bf951874eea5be71bd91726637df"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/c4e17ec922120fb68bd6621ad7c31e09bd699cc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/c4e17ec922120fb68bd6621ad7c31e09bd699cc5", "html_url": "https://github.com/google/oauth2client/commit/c4e17ec922120fb68bd6621ad7c31e09bd699cc5", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/c4e17ec922120fb68bd6621ad7c31e09bd699cc5/comments", "author": {"login": "adamchainz", "id": 857609, "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b55744061f91fe68cf074e0fd07b0964129ce811", "url": "https://api.github.com/repos/google/oauth2client/commits/b55744061f91fe68cf074e0fd07b0964129ce811", "html_url": "https://github.com/google/oauth2client/commit/b55744061f91fe68cf074e0fd07b0964129ce811"}]}, {"sha": "b55744061f91fe68cf074e0fd07b0964129ce811", "commit": {"author": {"name": "thobrla", "email": "thobrla@google.com", "date": "2016-06-07T16:36:58Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-06-07T16:36:58Z"}, "message": "Support token_uri and revoke_uri in ServiceAccountCredentials (#510)\n\nThis change adds support for custom authorization token\r\nand revocation URIs in the various ServiceAccountCredentials\r\nfactory methods.", "tree": {"sha": "883c26cb7bf195cf2e8703cf1b449141de8d0466", "url": "https://api.github.com/repos/google/oauth2client/git/trees/883c26cb7bf195cf2e8703cf1b449141de8d0466"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/b55744061f91fe68cf074e0fd07b0964129ce811", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/b55744061f91fe68cf074e0fd07b0964129ce811", "html_url": "https://github.com/google/oauth2client/commit/b55744061f91fe68cf074e0fd07b0964129ce811", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/b55744061f91fe68cf074e0fd07b0964129ce811/comments", "author": {"login": "thobrla", "id": 3239120, "avatar_url": "https://avatars2.githubusercontent.com/u/3239120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thobrla", "html_url": "https://github.com/thobrla", "followers_url": "https://api.github.com/users/thobrla/followers", "following_url": "https://api.github.com/users/thobrla/following{/other_user}", "gists_url": "https://api.github.com/users/thobrla/gists{/gist_id}", "starred_url": "https://api.github.com/users/thobrla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thobrla/subscriptions", "organizations_url": "https://api.github.com/users/thobrla/orgs", "repos_url": "https://api.github.com/users/thobrla/repos", "events_url": "https://api.github.com/users/thobrla/events{/privacy}", "received_events_url": "https://api.github.com/users/thobrla/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5ae963b7c268c33bfa711d687258cff8c61205a", "url": "https://api.github.com/repos/google/oauth2client/commits/f5ae963b7c268c33bfa711d687258cff8c61205a", "html_url": "https://github.com/google/oauth2client/commit/f5ae963b7c268c33bfa711d687258cff8c61205a"}]}, {"sha": "f5ae963b7c268c33bfa711d687258cff8c61205a", "commit": {"author": {"name": "thobrla", "email": "thobrla@google.com", "date": "2016-06-06T21:15:53Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-06-06T21:15:53Z"}, "message": "Handle OSError cases in multistore_file (#517)\n\nThis change fixes an exception in multistore_file that occurs when\r\nthe lock file is under conection. Windows may raise an OSError in\r\nthis case, where other platforms typically raise in IOError.", "tree": {"sha": "d13e709059005f849e9d5b31d559c989ec043ade", "url": "https://api.github.com/repos/google/oauth2client/git/trees/d13e709059005f849e9d5b31d559c989ec043ade"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/f5ae963b7c268c33bfa711d687258cff8c61205a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/f5ae963b7c268c33bfa711d687258cff8c61205a", "html_url": "https://github.com/google/oauth2client/commit/f5ae963b7c268c33bfa711d687258cff8c61205a", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/f5ae963b7c268c33bfa711d687258cff8c61205a/comments", "author": {"login": "thobrla", "id": 3239120, "avatar_url": "https://avatars2.githubusercontent.com/u/3239120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thobrla", "html_url": "https://github.com/thobrla", "followers_url": "https://api.github.com/users/thobrla/followers", "following_url": "https://api.github.com/users/thobrla/following{/other_user}", "gists_url": "https://api.github.com/users/thobrla/gists{/gist_id}", "starred_url": "https://api.github.com/users/thobrla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thobrla/subscriptions", "organizations_url": "https://api.github.com/users/thobrla/orgs", "repos_url": "https://api.github.com/users/thobrla/repos", "events_url": "https://api.github.com/users/thobrla/events{/privacy}", "received_events_url": "https://api.github.com/users/thobrla/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3cbf51bc9dcb9494bb657ac5bc1749a80bc2973", "url": "https://api.github.com/repos/google/oauth2client/commits/a3cbf51bc9dcb9494bb657ac5bc1749a80bc2973", "html_url": "https://github.com/google/oauth2client/commit/a3cbf51bc9dcb9494bb657ac5bc1749a80bc2973"}]}, {"sha": "a3cbf51bc9dcb9494bb657ac5bc1749a80bc2973", "commit": {"author": {"name": "Bill Prin", "email": "waprin@gmail.com", "date": "2016-06-06T19:42:18Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-06-06T19:42:18Z"}, "message": "django 1.10 fix (#516)\n\nFix django packages for 1.10, add docs noting django 1.8+ support.", "tree": {"sha": "1259f835f5d72caa2352f6608fc7860a9ad98097", "url": "https://api.github.com/repos/google/oauth2client/git/trees/1259f835f5d72caa2352f6608fc7860a9ad98097"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/a3cbf51bc9dcb9494bb657ac5bc1749a80bc2973", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/a3cbf51bc9dcb9494bb657ac5bc1749a80bc2973", "html_url": "https://github.com/google/oauth2client/commit/a3cbf51bc9dcb9494bb657ac5bc1749a80bc2973", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/a3cbf51bc9dcb9494bb657ac5bc1749a80bc2973/comments", "author": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f322ef9cdf59d5e4db310baeec2224b914d468c5", "url": "https://api.github.com/repos/google/oauth2client/commits/f322ef9cdf59d5e4db310baeec2224b914d468c5", "html_url": "https://github.com/google/oauth2client/commit/f322ef9cdf59d5e4db310baeec2224b914d468c5"}]}, {"sha": "f322ef9cdf59d5e4db310baeec2224b914d468c5", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-05-20T21:47:01Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-05-20T21:47:01Z"}, "message": "Fixing changelog typo", "tree": {"sha": "9ef1231a62af4ab5682bf0a447e6ef774d901494", "url": "https://api.github.com/repos/google/oauth2client/git/trees/9ef1231a62af4ab5682bf0a447e6ef774d901494"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/f322ef9cdf59d5e4db310baeec2224b914d468c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/f322ef9cdf59d5e4db310baeec2224b914d468c5", "html_url": "https://github.com/google/oauth2client/commit/f322ef9cdf59d5e4db310baeec2224b914d468c5", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/f322ef9cdf59d5e4db310baeec2224b914d468c5/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ed5788f55fbaf0cc3d3b7eec77fb6193ba549f2", "url": "https://api.github.com/repos/google/oauth2client/commits/2ed5788f55fbaf0cc3d3b7eec77fb6193ba549f2", "html_url": "https://github.com/google/oauth2client/commit/2ed5788f55fbaf0cc3d3b7eec77fb6193ba549f2"}]}, {"sha": "2ed5788f55fbaf0cc3d3b7eec77fb6193ba549f2", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-05-20T19:07:22Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-05-20T19:07:22Z"}, "message": "Merge pull request #509 from jonparrott/cut-2.1.0\n\nRelease v2.1.0.", "tree": {"sha": "592869c07ce3ac63570be3f6cd342e798c4521c8", "url": "https://api.github.com/repos/google/oauth2client/git/trees/592869c07ce3ac63570be3f6cd342e798c4521c8"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/2ed5788f55fbaf0cc3d3b7eec77fb6193ba549f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/2ed5788f55fbaf0cc3d3b7eec77fb6193ba549f2", "html_url": "https://github.com/google/oauth2client/commit/2ed5788f55fbaf0cc3d3b7eec77fb6193ba549f2", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/2ed5788f55fbaf0cc3d3b7eec77fb6193ba549f2/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e54e28939cf985e4d25ef34f96162abd3ab65002", "url": "https://api.github.com/repos/google/oauth2client/commits/e54e28939cf985e4d25ef34f96162abd3ab65002", "html_url": "https://github.com/google/oauth2client/commit/e54e28939cf985e4d25ef34f96162abd3ab65002"}, {"sha": "61793adf7495f8e4c55a16040797f34f5ede0f82", "url": "https://api.github.com/repos/google/oauth2client/commits/61793adf7495f8e4c55a16040797f34f5ede0f82", "html_url": "https://github.com/google/oauth2client/commit/61793adf7495f8e4c55a16040797f34f5ede0f82"}]}, {"sha": "61793adf7495f8e4c55a16040797f34f5ede0f82", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-05-20T18:07:42Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-05-20T18:09:43Z"}, "message": "Release v2.1.0", "tree": {"sha": "592869c07ce3ac63570be3f6cd342e798c4521c8", "url": "https://api.github.com/repos/google/oauth2client/git/trees/592869c07ce3ac63570be3f6cd342e798c4521c8"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/61793adf7495f8e4c55a16040797f34f5ede0f82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/61793adf7495f8e4c55a16040797f34f5ede0f82", "html_url": "https://github.com/google/oauth2client/commit/61793adf7495f8e4c55a16040797f34f5ede0f82", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/61793adf7495f8e4c55a16040797f34f5ede0f82/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e54e28939cf985e4d25ef34f96162abd3ab65002", "url": "https://api.github.com/repos/google/oauth2client/commits/e54e28939cf985e4d25ef34f96162abd3ab65002", "html_url": "https://github.com/google/oauth2client/commit/e54e28939cf985e4d25ef34f96162abd3ab65002"}]}, {"sha": "e54e28939cf985e4d25ef34f96162abd3ab65002", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-05-20T15:26:07Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-05-20T15:26:07Z"}, "message": "Merge pull request #488 from dhermes/swap-to-utcnow\n\nReplacing now() with utcnow() in device info code.", "tree": {"sha": "e7e2702f2675b485dc82f37d92c8f48fec3ae4c2", "url": "https://api.github.com/repos/google/oauth2client/git/trees/e7e2702f2675b485dc82f37d92c8f48fec3ae4c2"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/e54e28939cf985e4d25ef34f96162abd3ab65002", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/e54e28939cf985e4d25ef34f96162abd3ab65002", "html_url": "https://github.com/google/oauth2client/commit/e54e28939cf985e4d25ef34f96162abd3ab65002", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/e54e28939cf985e4d25ef34f96162abd3ab65002/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0ba60300c982da0be28ea153f87f1eb574c7e0b", "url": "https://api.github.com/repos/google/oauth2client/commits/f0ba60300c982da0be28ea153f87f1eb574c7e0b", "html_url": "https://github.com/google/oauth2client/commit/f0ba60300c982da0be28ea153f87f1eb574c7e0b"}, {"sha": "7408a645fe930a10bf559fdb346df6352ebd3d35", "url": "https://api.github.com/repos/google/oauth2client/commits/7408a645fe930a10bf559fdb346df6352ebd3d35", "html_url": "https://github.com/google/oauth2client/commit/7408a645fe930a10bf559fdb346df6352ebd3d35"}]}, {"sha": "f0ba60300c982da0be28ea153f87f1eb574c7e0b", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-05-18T17:13:53Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-05-18T17:13:53Z"}, "message": "Merge pull request #503 from kpayson64/ss_jwt_creds\n\nAdded self signed JWT service account credentials.", "tree": {"sha": "1eeb811e6419a88a889b90569d294356ecc25dfb", "url": "https://api.github.com/repos/google/oauth2client/git/trees/1eeb811e6419a88a889b90569d294356ecc25dfb"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/f0ba60300c982da0be28ea153f87f1eb574c7e0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/f0ba60300c982da0be28ea153f87f1eb574c7e0b", "html_url": "https://github.com/google/oauth2client/commit/f0ba60300c982da0be28ea153f87f1eb574c7e0b", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/f0ba60300c982da0be28ea153f87f1eb574c7e0b/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e99a4ac3c5d3c2944680ea180b71a0d144d6128b", "url": "https://api.github.com/repos/google/oauth2client/commits/e99a4ac3c5d3c2944680ea180b71a0d144d6128b", "html_url": "https://github.com/google/oauth2client/commit/e99a4ac3c5d3c2944680ea180b71a0d144d6128b"}, {"sha": "82cde04917da5c2db31241e4bb334ed5e0ba66fe", "url": "https://api.github.com/repos/google/oauth2client/commits/82cde04917da5c2db31241e4bb334ed5e0ba66fe", "html_url": "https://github.com/google/oauth2client/commit/82cde04917da5c2db31241e4bb334ed5e0ba66fe"}]}, {"sha": "82cde04917da5c2db31241e4bb334ed5e0ba66fe", "commit": {"author": {"name": "Ken Payson", "email": "kpayson@google.com", "date": "2016-04-22T17:10:28Z"}, "committer": {"name": "Ken Payson", "email": "kpayson@google.com", "date": "2016-05-16T17:30:08Z"}, "message": "Added JWTAccessCredentials.\n\nNewer Google APIs can accept JWTs signed using ServiceAccountCredentials\nfor authentication. (See https://jwt.io/).  The new behavior for\nGoogleCredentials.get_application_default() will attempt to use a signed JWT\nif ServiceAccountCredentials are available and no scope is specified.\nUpon specifying a scope, OAuth2 authentication will be used.", "tree": {"sha": "1eeb811e6419a88a889b90569d294356ecc25dfb", "url": "https://api.github.com/repos/google/oauth2client/git/trees/1eeb811e6419a88a889b90569d294356ecc25dfb"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/82cde04917da5c2db31241e4bb334ed5e0ba66fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/82cde04917da5c2db31241e4bb334ed5e0ba66fe", "html_url": "https://github.com/google/oauth2client/commit/82cde04917da5c2db31241e4bb334ed5e0ba66fe", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/82cde04917da5c2db31241e4bb334ed5e0ba66fe/comments", "author": {"login": "kpayson64", "id": 18316330, "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpayson64", "html_url": "https://github.com/kpayson64", "followers_url": "https://api.github.com/users/kpayson64/followers", "following_url": "https://api.github.com/users/kpayson64/following{/other_user}", "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions", "organizations_url": "https://api.github.com/users/kpayson64/orgs", "repos_url": "https://api.github.com/users/kpayson64/repos", "events_url": "https://api.github.com/users/kpayson64/events{/privacy}", "received_events_url": "https://api.github.com/users/kpayson64/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kpayson64", "id": 18316330, "avatar_url": "https://avatars2.githubusercontent.com/u/18316330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpayson64", "html_url": "https://github.com/kpayson64", "followers_url": "https://api.github.com/users/kpayson64/followers", "following_url": "https://api.github.com/users/kpayson64/following{/other_user}", "gists_url": "https://api.github.com/users/kpayson64/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpayson64/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpayson64/subscriptions", "organizations_url": "https://api.github.com/users/kpayson64/orgs", "repos_url": "https://api.github.com/users/kpayson64/repos", "events_url": "https://api.github.com/users/kpayson64/events{/privacy}", "received_events_url": "https://api.github.com/users/kpayson64/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e99a4ac3c5d3c2944680ea180b71a0d144d6128b", "url": "https://api.github.com/repos/google/oauth2client/commits/e99a4ac3c5d3c2944680ea180b71a0d144d6128b", "html_url": "https://github.com/google/oauth2client/commit/e99a4ac3c5d3c2944680ea180b71a0d144d6128b"}]}, {"sha": "e99a4ac3c5d3c2944680ea180b71a0d144d6128b", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-04-15T20:08:22Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-04-15T20:08:22Z"}, "message": "Merge pull request #501 from jonparrott/cut-2.0.2\n\nRelease v2.0.2.", "tree": {"sha": "db721b3d3022fb2d25c4a4161d5c3e85d883fa5c", "url": "https://api.github.com/repos/google/oauth2client/git/trees/db721b3d3022fb2d25c4a4161d5c3e85d883fa5c"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/e99a4ac3c5d3c2944680ea180b71a0d144d6128b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/e99a4ac3c5d3c2944680ea180b71a0d144d6128b", "html_url": "https://github.com/google/oauth2client/commit/e99a4ac3c5d3c2944680ea180b71a0d144d6128b", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/e99a4ac3c5d3c2944680ea180b71a0d144d6128b/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "421ae37073f4cd81b8d1cb3eef2de275a6b56aeb", "url": "https://api.github.com/repos/google/oauth2client/commits/421ae37073f4cd81b8d1cb3eef2de275a6b56aeb", "html_url": "https://github.com/google/oauth2client/commit/421ae37073f4cd81b8d1cb3eef2de275a6b56aeb"}, {"sha": "4a2ffbab026a79bb9fbc6d62defbfb13722a021b", "url": "https://api.github.com/repos/google/oauth2client/commits/4a2ffbab026a79bb9fbc6d62defbfb13722a021b", "html_url": "https://github.com/google/oauth2client/commit/4a2ffbab026a79bb9fbc6d62defbfb13722a021b"}]}, {"sha": "4a2ffbab026a79bb9fbc6d62defbfb13722a021b", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-04-15T19:52:15Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-04-15T19:52:15Z"}, "message": "Release v2.0.2.", "tree": {"sha": "db721b3d3022fb2d25c4a4161d5c3e85d883fa5c", "url": "https://api.github.com/repos/google/oauth2client/git/trees/db721b3d3022fb2d25c4a4161d5c3e85d883fa5c"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/4a2ffbab026a79bb9fbc6d62defbfb13722a021b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/4a2ffbab026a79bb9fbc6d62defbfb13722a021b", "html_url": "https://github.com/google/oauth2client/commit/4a2ffbab026a79bb9fbc6d62defbfb13722a021b", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/4a2ffbab026a79bb9fbc6d62defbfb13722a021b/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "421ae37073f4cd81b8d1cb3eef2de275a6b56aeb", "url": "https://api.github.com/repos/google/oauth2client/commits/421ae37073f4cd81b8d1cb3eef2de275a6b56aeb", "html_url": "https://github.com/google/oauth2client/commit/421ae37073f4cd81b8d1cb3eef2de275a6b56aeb"}]}, {"sha": "421ae37073f4cd81b8d1cb3eef2de275a6b56aeb", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-04-14T19:53:23Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-04-14T19:53:23Z"}, "message": "Merge pull request #500 from jonparrott/fix-flask-docs\n\nFix flask_util docstrings concerning GOOGLE_OAUTH2_CLIENT_SECRETS_FILE", "tree": {"sha": "e87f95365fea8fecfec82b4ec5a735100b41bae5", "url": "https://api.github.com/repos/google/oauth2client/git/trees/e87f95365fea8fecfec82b4ec5a735100b41bae5"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/421ae37073f4cd81b8d1cb3eef2de275a6b56aeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/421ae37073f4cd81b8d1cb3eef2de275a6b56aeb", "html_url": "https://github.com/google/oauth2client/commit/421ae37073f4cd81b8d1cb3eef2de275a6b56aeb", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/421ae37073f4cd81b8d1cb3eef2de275a6b56aeb/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf9b78f882d9a66630ab3b8f425ccf2ed19e740c", "url": "https://api.github.com/repos/google/oauth2client/commits/bf9b78f882d9a66630ab3b8f425ccf2ed19e740c", "html_url": "https://github.com/google/oauth2client/commit/bf9b78f882d9a66630ab3b8f425ccf2ed19e740c"}, {"sha": "17d623025632ca8eb6aa6932f9bf47d0181ad63e", "url": "https://api.github.com/repos/google/oauth2client/commits/17d623025632ca8eb6aa6932f9bf47d0181ad63e", "html_url": "https://github.com/google/oauth2client/commit/17d623025632ca8eb6aa6932f9bf47d0181ad63e"}]}, {"sha": "17d623025632ca8eb6aa6932f9bf47d0181ad63e", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-04-14T18:19:47Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-04-14T18:19:54Z"}, "message": "Fix flask_util docstrings concerning GOOGLE_OAUTH2_CLIENT_SECRETS_FILE\n\nfixes #497", "tree": {"sha": "e87f95365fea8fecfec82b4ec5a735100b41bae5", "url": "https://api.github.com/repos/google/oauth2client/git/trees/e87f95365fea8fecfec82b4ec5a735100b41bae5"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/17d623025632ca8eb6aa6932f9bf47d0181ad63e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/17d623025632ca8eb6aa6932f9bf47d0181ad63e", "html_url": "https://github.com/google/oauth2client/commit/17d623025632ca8eb6aa6932f9bf47d0181ad63e", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/17d623025632ca8eb6aa6932f9bf47d0181ad63e/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf9b78f882d9a66630ab3b8f425ccf2ed19e740c", "url": "https://api.github.com/repos/google/oauth2client/commits/bf9b78f882d9a66630ab3b8f425ccf2ed19e740c", "html_url": "https://github.com/google/oauth2client/commit/bf9b78f882d9a66630ab3b8f425ccf2ed19e740c"}]}, {"sha": "bf9b78f882d9a66630ab3b8f425ccf2ed19e740c", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-04-11T19:23:14Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-04-11T19:23:14Z"}, "message": "Merge pull request #498 from waprin/master\n\nPop Oauth flow rather then get", "tree": {"sha": "77eeabcbe174c7236c96eb12e1a18fb87e737a7a", "url": "https://api.github.com/repos/google/oauth2client/git/trees/77eeabcbe174c7236c96eb12e1a18fb87e737a7a"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/bf9b78f882d9a66630ab3b8f425ccf2ed19e740c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/bf9b78f882d9a66630ab3b8f425ccf2ed19e740c", "html_url": "https://github.com/google/oauth2client/commit/bf9b78f882d9a66630ab3b8f425ccf2ed19e740c", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/bf9b78f882d9a66630ab3b8f425ccf2ed19e740c/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f4d9164d98b23f3cac0f0785312a50ef22899e4", "url": "https://api.github.com/repos/google/oauth2client/commits/8f4d9164d98b23f3cac0f0785312a50ef22899e4", "html_url": "https://github.com/google/oauth2client/commit/8f4d9164d98b23f3cac0f0785312a50ef22899e4"}, {"sha": "dd33fcccd22549f059e43ea649a86b7e9b4323d3", "url": "https://api.github.com/repos/google/oauth2client/commits/dd33fcccd22549f059e43ea649a86b7e9b4323d3", "html_url": "https://github.com/google/oauth2client/commit/dd33fcccd22549f059e43ea649a86b7e9b4323d3"}]}, {"sha": "dd33fcccd22549f059e43ea649a86b7e9b4323d3", "commit": {"author": {"name": "Bill Prin", "email": "waprin@google.com", "date": "2016-04-11T19:20:03Z"}, "committer": {"name": "Bill Prin", "email": "waprin@google.com", "date": "2016-04-11T19:20:03Z"}, "message": "Pop Oauth flow rather then get", "tree": {"sha": "68c57b7b5dcfb4749568382284f27f0e072f1b86", "url": "https://api.github.com/repos/google/oauth2client/git/trees/68c57b7b5dcfb4749568382284f27f0e072f1b86"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/dd33fcccd22549f059e43ea649a86b7e9b4323d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/dd33fcccd22549f059e43ea649a86b7e9b4323d3", "html_url": "https://github.com/google/oauth2client/commit/dd33fcccd22549f059e43ea649a86b7e9b4323d3", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/dd33fcccd22549f059e43ea649a86b7e9b4323d3/comments", "author": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5085d1450cdff0c2d3cda354549747ee53a2bb8b", "url": "https://api.github.com/repos/google/oauth2client/commits/5085d1450cdff0c2d3cda354549747ee53a2bb8b", "html_url": "https://github.com/google/oauth2client/commit/5085d1450cdff0c2d3cda354549747ee53a2bb8b"}]}, {"sha": "8f4d9164d98b23f3cac0f0785312a50ef22899e4", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-09T00:36:14Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-09T00:36:14Z"}, "message": "Merge pull request #495 from dhermes/require-100-cover\n\nRequire 100% line coverage for tests.", "tree": {"sha": "a00a7c2416dd31a53cd0fb7382544ab6d02f4654", "url": "https://api.github.com/repos/google/oauth2client/git/trees/a00a7c2416dd31a53cd0fb7382544ab6d02f4654"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/8f4d9164d98b23f3cac0f0785312a50ef22899e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/8f4d9164d98b23f3cac0f0785312a50ef22899e4", "html_url": "https://github.com/google/oauth2client/commit/8f4d9164d98b23f3cac0f0785312a50ef22899e4", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/8f4d9164d98b23f3cac0f0785312a50ef22899e4/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae258efcd44bc295f7b304a69dab7a760237b988", "url": "https://api.github.com/repos/google/oauth2client/commits/ae258efcd44bc295f7b304a69dab7a760237b988", "html_url": "https://github.com/google/oauth2client/commit/ae258efcd44bc295f7b304a69dab7a760237b988"}, {"sha": "c5ed662dbfe8cfa2040f9f392c7b3609620b2a01", "url": "https://api.github.com/repos/google/oauth2client/commits/c5ed662dbfe8cfa2040f9f392c7b3609620b2a01", "html_url": "https://github.com/google/oauth2client/commit/c5ed662dbfe8cfa2040f9f392c7b3609620b2a01"}]}, {"sha": "c5ed662dbfe8cfa2040f9f392c7b3609620b2a01", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-08T23:19:49Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-09T00:33:39Z"}, "message": "Require 100% line coverage for tests.", "tree": {"sha": "a00a7c2416dd31a53cd0fb7382544ab6d02f4654", "url": "https://api.github.com/repos/google/oauth2client/git/trees/a00a7c2416dd31a53cd0fb7382544ab6d02f4654"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/c5ed662dbfe8cfa2040f9f392c7b3609620b2a01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/c5ed662dbfe8cfa2040f9f392c7b3609620b2a01", "html_url": "https://github.com/google/oauth2client/commit/c5ed662dbfe8cfa2040f9f392c7b3609620b2a01", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/c5ed662dbfe8cfa2040f9f392c7b3609620b2a01/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae258efcd44bc295f7b304a69dab7a760237b988", "url": "https://api.github.com/repos/google/oauth2client/commits/ae258efcd44bc295f7b304a69dab7a760237b988", "html_url": "https://github.com/google/oauth2client/commit/ae258efcd44bc295f7b304a69dab7a760237b988"}]}, {"sha": "ae258efcd44bc295f7b304a69dab7a760237b988", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-09T00:30:27Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-09T00:30:27Z"}, "message": "Merge pull request #496 from waprin/master\n\nHit 100% with branch coverage", "tree": {"sha": "0a80a4607501d698789991fe9f3a721ec3d9f3f7", "url": "https://api.github.com/repos/google/oauth2client/git/trees/0a80a4607501d698789991fe9f3a721ec3d9f3f7"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/ae258efcd44bc295f7b304a69dab7a760237b988", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/ae258efcd44bc295f7b304a69dab7a760237b988", "html_url": "https://github.com/google/oauth2client/commit/ae258efcd44bc295f7b304a69dab7a760237b988", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/ae258efcd44bc295f7b304a69dab7a760237b988/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "179d2ee78be295e47ea10e4386824085225ba339", "url": "https://api.github.com/repos/google/oauth2client/commits/179d2ee78be295e47ea10e4386824085225ba339", "html_url": "https://github.com/google/oauth2client/commit/179d2ee78be295e47ea10e4386824085225ba339"}, {"sha": "5085d1450cdff0c2d3cda354549747ee53a2bb8b", "url": "https://api.github.com/repos/google/oauth2client/commits/5085d1450cdff0c2d3cda354549747ee53a2bb8b", "html_url": "https://github.com/google/oauth2client/commit/5085d1450cdff0c2d3cda354549747ee53a2bb8b"}]}, {"sha": "5085d1450cdff0c2d3cda354549747ee53a2bb8b", "commit": {"author": {"name": "Bill Prin", "email": "waprin@google.com", "date": "2016-04-08T23:22:49Z"}, "committer": {"name": "Bill Prin", "email": "waprin@google.com", "date": "2016-04-09T00:24:43Z"}, "message": "Hit 100% with branch coverage", "tree": {"sha": "0a80a4607501d698789991fe9f3a721ec3d9f3f7", "url": "https://api.github.com/repos/google/oauth2client/git/trees/0a80a4607501d698789991fe9f3a721ec3d9f3f7"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/5085d1450cdff0c2d3cda354549747ee53a2bb8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/5085d1450cdff0c2d3cda354549747ee53a2bb8b", "html_url": "https://github.com/google/oauth2client/commit/5085d1450cdff0c2d3cda354549747ee53a2bb8b", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/5085d1450cdff0c2d3cda354549747ee53a2bb8b/comments", "author": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "179d2ee78be295e47ea10e4386824085225ba339", "url": "https://api.github.com/repos/google/oauth2client/commits/179d2ee78be295e47ea10e4386824085225ba339", "html_url": "https://github.com/google/oauth2client/commit/179d2ee78be295e47ea10e4386824085225ba339"}]}, {"sha": "179d2ee78be295e47ea10e4386824085225ba339", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-08T22:59:59Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-08T22:59:59Z"}, "message": "Merge pull request #493 from waprin/master\n\nGet django_orm to 100% coverage", "tree": {"sha": "6fdc965cb259c8855a609bdacfa29f5ed3501b27", "url": "https://api.github.com/repos/google/oauth2client/git/trees/6fdc965cb259c8855a609bdacfa29f5ed3501b27"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/179d2ee78be295e47ea10e4386824085225ba339", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/179d2ee78be295e47ea10e4386824085225ba339", "html_url": "https://github.com/google/oauth2client/commit/179d2ee78be295e47ea10e4386824085225ba339", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/179d2ee78be295e47ea10e4386824085225ba339/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "991595ccb469114e74fb21917ad332fba98ce1dd", "url": "https://api.github.com/repos/google/oauth2client/commits/991595ccb469114e74fb21917ad332fba98ce1dd", "html_url": "https://github.com/google/oauth2client/commit/991595ccb469114e74fb21917ad332fba98ce1dd"}, {"sha": "4ab502bbf6c4ede707e839451d2b8c33e79b05fa", "url": "https://api.github.com/repos/google/oauth2client/commits/4ab502bbf6c4ede707e839451d2b8c33e79b05fa", "html_url": "https://github.com/google/oauth2client/commit/4ab502bbf6c4ede707e839451d2b8c33e79b05fa"}]}, {"sha": "4ab502bbf6c4ede707e839451d2b8c33e79b05fa", "commit": {"author": {"name": "Bill Prin", "email": "waprin@google.com", "date": "2016-04-08T22:23:08Z"}, "committer": {"name": "Bill Prin", "email": "waprin@google.com", "date": "2016-04-08T22:37:24Z"}, "message": "Get django_orm to 100% coverage", "tree": {"sha": "6fdc965cb259c8855a609bdacfa29f5ed3501b27", "url": "https://api.github.com/repos/google/oauth2client/git/trees/6fdc965cb259c8855a609bdacfa29f5ed3501b27"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/4ab502bbf6c4ede707e839451d2b8c33e79b05fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/4ab502bbf6c4ede707e839451d2b8c33e79b05fa", "html_url": "https://github.com/google/oauth2client/commit/4ab502bbf6c4ede707e839451d2b8c33e79b05fa", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/4ab502bbf6c4ede707e839451d2b8c33e79b05fa/comments", "author": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "991595ccb469114e74fb21917ad332fba98ce1dd", "url": "https://api.github.com/repos/google/oauth2client/commits/991595ccb469114e74fb21917ad332fba98ce1dd", "html_url": "https://github.com/google/oauth2client/commit/991595ccb469114e74fb21917ad332fba98ce1dd"}]}, {"sha": "991595ccb469114e74fb21917ad332fba98ce1dd", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-04-08T21:21:38Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-04-08T21:21:38Z"}, "message": "Merge pull request #492 from jonparrott/multistore-file-coverage\n\n100% coverage for oauth2client.contrib.multistore_file", "tree": {"sha": "b82ff1bd35386eb19ac6b1e9beaeb0d41a1b956f", "url": "https://api.github.com/repos/google/oauth2client/git/trees/b82ff1bd35386eb19ac6b1e9beaeb0d41a1b956f"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/991595ccb469114e74fb21917ad332fba98ce1dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/991595ccb469114e74fb21917ad332fba98ce1dd", "html_url": "https://github.com/google/oauth2client/commit/991595ccb469114e74fb21917ad332fba98ce1dd", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/991595ccb469114e74fb21917ad332fba98ce1dd/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1738a0ceb5745b7deded3e2f9aeae4101ea917d2", "url": "https://api.github.com/repos/google/oauth2client/commits/1738a0ceb5745b7deded3e2f9aeae4101ea917d2", "html_url": "https://github.com/google/oauth2client/commit/1738a0ceb5745b7deded3e2f9aeae4101ea917d2"}, {"sha": "2f724203e41c771b4cc4e91b283833baf66f9c5f", "url": "https://api.github.com/repos/google/oauth2client/commits/2f724203e41c771b4cc4e91b283833baf66f9c5f", "html_url": "https://github.com/google/oauth2client/commit/2f724203e41c771b4cc4e91b283833baf66f9c5f"}]}, {"sha": "2f724203e41c771b4cc4e91b283833baf66f9c5f", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-04-08T19:33:13Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-04-08T21:19:10Z"}, "message": "100% coverage for oauth2client.contrib.multistore_file", "tree": {"sha": "e86ecf8b08b118b23967058e46473118cc09a0ab", "url": "https://api.github.com/repos/google/oauth2client/git/trees/e86ecf8b08b118b23967058e46473118cc09a0ab"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/2f724203e41c771b4cc4e91b283833baf66f9c5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/2f724203e41c771b4cc4e91b283833baf66f9c5f", "html_url": "https://github.com/google/oauth2client/commit/2f724203e41c771b4cc4e91b283833baf66f9c5f", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/2f724203e41c771b4cc4e91b283833baf66f9c5f/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef33f70abb43da50793f169ad7efdd4c72df4966", "url": "https://api.github.com/repos/google/oauth2client/commits/ef33f70abb43da50793f169ad7efdd4c72df4966", "html_url": "https://github.com/google/oauth2client/commit/ef33f70abb43da50793f169ad7efdd4c72df4966"}]}, {"sha": "1738a0ceb5745b7deded3e2f9aeae4101ea917d2", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-08T18:11:38Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-08T18:11:38Z"}, "message": "Merge pull request #490 from jonparrott/ignore-openers\n\nOmit platform-specific openers from coverage.", "tree": {"sha": "1e6cd4ac3719edf97aa8b25e4e471644caa5c582", "url": "https://api.github.com/repos/google/oauth2client/git/trees/1e6cd4ac3719edf97aa8b25e4e471644caa5c582"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/1738a0ceb5745b7deded3e2f9aeae4101ea917d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/1738a0ceb5745b7deded3e2f9aeae4101ea917d2", "html_url": "https://github.com/google/oauth2client/commit/1738a0ceb5745b7deded3e2f9aeae4101ea917d2", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/1738a0ceb5745b7deded3e2f9aeae4101ea917d2/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef33f70abb43da50793f169ad7efdd4c72df4966", "url": "https://api.github.com/repos/google/oauth2client/commits/ef33f70abb43da50793f169ad7efdd4c72df4966", "html_url": "https://github.com/google/oauth2client/commit/ef33f70abb43da50793f169ad7efdd4c72df4966"}, {"sha": "a2b64123deac7e92596217e352d430844669c760", "url": "https://api.github.com/repos/google/oauth2client/commits/a2b64123deac7e92596217e352d430844669c760", "html_url": "https://github.com/google/oauth2client/commit/a2b64123deac7e92596217e352d430844669c760"}]}, {"sha": "a2b64123deac7e92596217e352d430844669c760", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-04-08T17:29:14Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-04-08T17:29:48Z"}, "message": "Omit platform-specific openers from coverage.", "tree": {"sha": "1e6cd4ac3719edf97aa8b25e4e471644caa5c582", "url": "https://api.github.com/repos/google/oauth2client/git/trees/1e6cd4ac3719edf97aa8b25e4e471644caa5c582"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/a2b64123deac7e92596217e352d430844669c760", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/a2b64123deac7e92596217e352d430844669c760", "html_url": "https://github.com/google/oauth2client/commit/a2b64123deac7e92596217e352d430844669c760", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/a2b64123deac7e92596217e352d430844669c760/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef33f70abb43da50793f169ad7efdd4c72df4966", "url": "https://api.github.com/repos/google/oauth2client/commits/ef33f70abb43da50793f169ad7efdd4c72df4966", "html_url": "https://github.com/google/oauth2client/commit/ef33f70abb43da50793f169ad7efdd4c72df4966"}]}, {"sha": "7408a645fe930a10bf559fdb346df6352ebd3d35", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-07T19:10:27Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-07T19:10:27Z"}, "message": "Replacing now() with utcnow() in device info code.", "tree": {"sha": "0d6a9a52fecdbd4bfc15148648d166ac924724a8", "url": "https://api.github.com/repos/google/oauth2client/git/trees/0d6a9a52fecdbd4bfc15148648d166ac924724a8"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/7408a645fe930a10bf559fdb346df6352ebd3d35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/7408a645fe930a10bf559fdb346df6352ebd3d35", "html_url": "https://github.com/google/oauth2client/commit/7408a645fe930a10bf559fdb346df6352ebd3d35", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/7408a645fe930a10bf559fdb346df6352ebd3d35/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef33f70abb43da50793f169ad7efdd4c72df4966", "url": "https://api.github.com/repos/google/oauth2client/commits/ef33f70abb43da50793f169ad7efdd4c72df4966", "html_url": "https://github.com/google/oauth2client/commit/ef33f70abb43da50793f169ad7efdd4c72df4966"}]}, {"sha": "ef33f70abb43da50793f169ad7efdd4c72df4966", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-07T19:02:31Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-07T19:02:31Z"}, "message": "Merge pull request #486 from dhermes/cover-client-v7\n\nGetting client.py to 100% coverage.", "tree": {"sha": "511f5541a42cb0fb6a45eeebd8f7a9dd42389b04", "url": "https://api.github.com/repos/google/oauth2client/git/trees/511f5541a42cb0fb6a45eeebd8f7a9dd42389b04"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/ef33f70abb43da50793f169ad7efdd4c72df4966", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/ef33f70abb43da50793f169ad7efdd4c72df4966", "html_url": "https://github.com/google/oauth2client/commit/ef33f70abb43da50793f169ad7efdd4c72df4966", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/ef33f70abb43da50793f169ad7efdd4c72df4966/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a018723a7efa705c0f0ef6da55ebc23143c02238", "url": "https://api.github.com/repos/google/oauth2client/commits/a018723a7efa705c0f0ef6da55ebc23143c02238", "html_url": "https://github.com/google/oauth2client/commit/a018723a7efa705c0f0ef6da55ebc23143c02238"}, {"sha": "b26f77851967d23913364fae8b6db71c4bf0adc8", "url": "https://api.github.com/repos/google/oauth2client/commits/b26f77851967d23913364fae8b6db71c4bf0adc8", "html_url": "https://github.com/google/oauth2client/commit/b26f77851967d23913364fae8b6db71c4bf0adc8"}]}, {"sha": "a018723a7efa705c0f0ef6da55ebc23143c02238", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-07T16:46:52Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-07T16:46:52Z"}, "message": "Merge pull request #478 from jonparrott/openers\n\nMove platform-specific openers to their own modules.", "tree": {"sha": "f7c3ab33a7bb05c83c146f2b2c591efa767752ee", "url": "https://api.github.com/repos/google/oauth2client/git/trees/f7c3ab33a7bb05c83c146f2b2c591efa767752ee"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/a018723a7efa705c0f0ef6da55ebc23143c02238", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/a018723a7efa705c0f0ef6da55ebc23143c02238", "html_url": "https://github.com/google/oauth2client/commit/a018723a7efa705c0f0ef6da55ebc23143c02238", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/a018723a7efa705c0f0ef6da55ebc23143c02238/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ff581077bd54b91410a72204bf9a1bead55f539", "url": "https://api.github.com/repos/google/oauth2client/commits/3ff581077bd54b91410a72204bf9a1bead55f539", "html_url": "https://github.com/google/oauth2client/commit/3ff581077bd54b91410a72204bf9a1bead55f539"}, {"sha": "72cd28b5322528c950aa54b97e688330f2a12867", "url": "https://api.github.com/repos/google/oauth2client/commits/72cd28b5322528c950aa54b97e688330f2a12867", "html_url": "https://github.com/google/oauth2client/commit/72cd28b5322528c950aa54b97e688330f2a12867"}]}, {"sha": "b26f77851967d23913364fae8b6db71c4bf0adc8", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-07T06:42:02Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-07T06:42:02Z"}, "message": "Getting client.py to 100% coverage.\n\nIn particular:\n- `step1_get_device_and_user_codes`\n- `step2_exchange` with device info\n- Making explicit the `code=` argument in calls to\n  `step2_exchange` in tests\n- `flow_from_clientsecrets` branches with revoke and\n  device URI optional args", "tree": {"sha": "fdea631316dbaacc0a35d055a0e46cb767c7cebd", "url": "https://api.github.com/repos/google/oauth2client/git/trees/fdea631316dbaacc0a35d055a0e46cb767c7cebd"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/b26f77851967d23913364fae8b6db71c4bf0adc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/b26f77851967d23913364fae8b6db71c4bf0adc8", "html_url": "https://github.com/google/oauth2client/commit/b26f77851967d23913364fae8b6db71c4bf0adc8", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/b26f77851967d23913364fae8b6db71c4bf0adc8/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fffede8cbb9398ee8556de463ebce914e6790801", "url": "https://api.github.com/repos/google/oauth2client/commits/fffede8cbb9398ee8556de463ebce914e6790801", "html_url": "https://github.com/google/oauth2client/commit/fffede8cbb9398ee8556de463ebce914e6790801"}]}, {"sha": "fffede8cbb9398ee8556de463ebce914e6790801", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-07T04:36:29Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-07T04:36:29Z"}, "message": "Adding test coverage for client.py.\n\n- `DeviceFlowInfo` (and using datetime now patch).\n- Corner cases for `step1_get_authorize_url` and\n  `step2_exchange`\n- Failure cases for `flow_from_clientsecrets`\n- `verify_id_token` when the cached HTTP is used (i.e.\n  the default argument)", "tree": {"sha": "b86e7e8845ce45527947a449ca19460b5e93a025", "url": "https://api.github.com/repos/google/oauth2client/git/trees/b86e7e8845ce45527947a449ca19460b5e93a025"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/fffede8cbb9398ee8556de463ebce914e6790801", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/fffede8cbb9398ee8556de463ebce914e6790801", "html_url": "https://github.com/google/oauth2client/commit/fffede8cbb9398ee8556de463ebce914e6790801", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/fffede8cbb9398ee8556de463ebce914e6790801/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ff581077bd54b91410a72204bf9a1bead55f539", "url": "https://api.github.com/repos/google/oauth2client/commits/3ff581077bd54b91410a72204bf9a1bead55f539", "html_url": "https://github.com/google/oauth2client/commit/3ff581077bd54b91410a72204bf9a1bead55f539"}]}, {"sha": "3ff581077bd54b91410a72204bf9a1bead55f539", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-07T03:13:37Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-07T03:13:37Z"}, "message": "Merge pull request #483 from dhermes/cover-client-v5\n\nTesting OAuth2Credentials._do_retrieve_scopes().", "tree": {"sha": "889bfd21e2848f514476d6fa3c21733e56a27dd8", "url": "https://api.github.com/repos/google/oauth2client/git/trees/889bfd21e2848f514476d6fa3c21733e56a27dd8"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/3ff581077bd54b91410a72204bf9a1bead55f539", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/3ff581077bd54b91410a72204bf9a1bead55f539", "html_url": "https://github.com/google/oauth2client/commit/3ff581077bd54b91410a72204bf9a1bead55f539", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/3ff581077bd54b91410a72204bf9a1bead55f539/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbe633059b8157303ba9cb826f815f1c35cb7364", "url": "https://api.github.com/repos/google/oauth2client/commits/cbe633059b8157303ba9cb826f815f1c35cb7364", "html_url": "https://github.com/google/oauth2client/commit/cbe633059b8157303ba9cb826f815f1c35cb7364"}, {"sha": "93338c2080448650be07a17b21555529ddb9e084", "url": "https://api.github.com/repos/google/oauth2client/commits/93338c2080448650be07a17b21555529ddb9e084", "html_url": "https://github.com/google/oauth2client/commit/93338c2080448650be07a17b21555529ddb9e084"}]}, {"sha": "93338c2080448650be07a17b21555529ddb9e084", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-07T00:33:36Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-07T00:38:02Z"}, "message": "Testing OAuth2Credentials._do_retrieve_scopes().", "tree": {"sha": "889bfd21e2848f514476d6fa3c21733e56a27dd8", "url": "https://api.github.com/repos/google/oauth2client/git/trees/889bfd21e2848f514476d6fa3c21733e56a27dd8"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/93338c2080448650be07a17b21555529ddb9e084", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/93338c2080448650be07a17b21555529ddb9e084", "html_url": "https://github.com/google/oauth2client/commit/93338c2080448650be07a17b21555529ddb9e084", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/93338c2080448650be07a17b21555529ddb9e084/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbe633059b8157303ba9cb826f815f1c35cb7364", "url": "https://api.github.com/repos/google/oauth2client/commits/cbe633059b8157303ba9cb826f815f1c35cb7364", "html_url": "https://github.com/google/oauth2client/commit/cbe633059b8157303ba9cb826f815f1c35cb7364"}]}, {"sha": "cbe633059b8157303ba9cb826f815f1c35cb7364", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-07T00:34:59Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-07T00:34:59Z"}, "message": "Merge pull request #482 from dhermes/cover-client-v4\n\nAdding more branch coverage in client.py.", "tree": {"sha": "d6b258da31166be2ae96ba07cb45ba1c7ddcf08f", "url": "https://api.github.com/repos/google/oauth2client/git/trees/d6b258da31166be2ae96ba07cb45ba1c7ddcf08f"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/cbe633059b8157303ba9cb826f815f1c35cb7364", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/cbe633059b8157303ba9cb826f815f1c35cb7364", "html_url": "https://github.com/google/oauth2client/commit/cbe633059b8157303ba9cb826f815f1c35cb7364", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/cbe633059b8157303ba9cb826f815f1c35cb7364/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3396e529106875d43c81839a5798e0a15b63338c", "url": "https://api.github.com/repos/google/oauth2client/commits/3396e529106875d43c81839a5798e0a15b63338c", "html_url": "https://github.com/google/oauth2client/commit/3396e529106875d43c81839a5798e0a15b63338c"}, {"sha": "4ada1062ac5063321a9bd95adfbda8dccb8c2e73", "url": "https://api.github.com/repos/google/oauth2client/commits/4ada1062ac5063321a9bd95adfbda8dccb8c2e73", "html_url": "https://github.com/google/oauth2client/commit/4ada1062ac5063321a9bd95adfbda8dccb8c2e73"}]}, {"sha": "4ada1062ac5063321a9bd95adfbda8dccb8c2e73", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-07T00:06:12Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-07T00:07:29Z"}, "message": "Adding more branch coverage in client.py.\n\n- Rename `_RequireCryptoOrDie()` to `_require_crypto_or_die()`\n- Testing un-traversed GAE and GCE branches in\n  `GoogleCredentials.get_application_default()`\n- Missing env. var. branch in `_get_environment_variable_file`\n- Missing APPDATA branch (on Windows) for `_get_well_known_file`\n- Renaming some of the long ADC test names\n- Adding test for `GoogleCredentials.get_application_default()`\n  that actually uses the well-known file\n- Branch in `GoogleCredentials.from_stream()` when filename is\n  False-y\n- Testing `_get_application_default_credential_GAE` and\n  `_get_application_default_credential_GCE` (these just wrap\n  circular imports at run time)\n- Testing `_require_crypto_or_die`", "tree": {"sha": "d6b258da31166be2ae96ba07cb45ba1c7ddcf08f", "url": "https://api.github.com/repos/google/oauth2client/git/trees/d6b258da31166be2ae96ba07cb45ba1c7ddcf08f"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/4ada1062ac5063321a9bd95adfbda8dccb8c2e73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/4ada1062ac5063321a9bd95adfbda8dccb8c2e73", "html_url": "https://github.com/google/oauth2client/commit/4ada1062ac5063321a9bd95adfbda8dccb8c2e73", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/4ada1062ac5063321a9bd95adfbda8dccb8c2e73/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3396e529106875d43c81839a5798e0a15b63338c", "url": "https://api.github.com/repos/google/oauth2client/commits/3396e529106875d43c81839a5798e0a15b63338c", "html_url": "https://github.com/google/oauth2client/commit/3396e529106875d43c81839a5798e0a15b63338c"}]}, {"sha": "3396e529106875d43c81839a5798e0a15b63338c", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-06T23:05:23Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-06T23:05:23Z"}, "message": "Merge pull request #481 from dhermes/cover-client-v3\n\nAdding tests for all branches of OAuth2Credentials._do_revoke.", "tree": {"sha": "79385c8ad702ed8b64a58202126da5c07401928f", "url": "https://api.github.com/repos/google/oauth2client/git/trees/79385c8ad702ed8b64a58202126da5c07401928f"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/3396e529106875d43c81839a5798e0a15b63338c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/3396e529106875d43c81839a5798e0a15b63338c", "html_url": "https://github.com/google/oauth2client/commit/3396e529106875d43c81839a5798e0a15b63338c", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/3396e529106875d43c81839a5798e0a15b63338c/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "043575aa8c08933a509b6b977c24ca1a7135daa8", "url": "https://api.github.com/repos/google/oauth2client/commits/043575aa8c08933a509b6b977c24ca1a7135daa8", "html_url": "https://github.com/google/oauth2client/commit/043575aa8c08933a509b6b977c24ca1a7135daa8"}, {"sha": "7ba2b5768efd644e560b4c3f66a5eeea02bf7f92", "url": "https://api.github.com/repos/google/oauth2client/commits/7ba2b5768efd644e560b4c3f66a5eeea02bf7f92", "html_url": "https://github.com/google/oauth2client/commit/7ba2b5768efd644e560b4c3f66a5eeea02bf7f92"}]}, {"sha": "7ba2b5768efd644e560b4c3f66a5eeea02bf7f92", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-06T22:48:56Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-06T22:48:56Z"}, "message": "Adding tests for all branches of OAuth2Credentials._do_revoke.\n\nAlso updating the `_do_refresh_request tests` to check\nthe content sent.", "tree": {"sha": "79385c8ad702ed8b64a58202126da5c07401928f", "url": "https://api.github.com/repos/google/oauth2client/git/trees/79385c8ad702ed8b64a58202126da5c07401928f"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/7ba2b5768efd644e560b4c3f66a5eeea02bf7f92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/7ba2b5768efd644e560b4c3f66a5eeea02bf7f92", "html_url": "https://github.com/google/oauth2client/commit/7ba2b5768efd644e560b4c3f66a5eeea02bf7f92", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/7ba2b5768efd644e560b4c3f66a5eeea02bf7f92/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "043575aa8c08933a509b6b977c24ca1a7135daa8", "url": "https://api.github.com/repos/google/oauth2client/commits/043575aa8c08933a509b6b977c24ca1a7135daa8", "html_url": "https://github.com/google/oauth2client/commit/043575aa8c08933a509b6b977c24ca1a7135daa8"}]}, {"sha": "043575aa8c08933a509b6b977c24ca1a7135daa8", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-06T22:13:43Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-06T22:13:43Z"}, "message": "Merge pull request #479 from dhermes/cover-client-v2\n\nImproving test branch coverage in client.py.", "tree": {"sha": "e8be018a501e75e9476263868dc59a1191540216", "url": "https://api.github.com/repos/google/oauth2client/git/trees/e8be018a501e75e9476263868dc59a1191540216"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/043575aa8c08933a509b6b977c24ca1a7135daa8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/043575aa8c08933a509b6b977c24ca1a7135daa8", "html_url": "https://github.com/google/oauth2client/commit/043575aa8c08933a509b6b977c24ca1a7135daa8", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/043575aa8c08933a509b6b977c24ca1a7135daa8/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4ca8cb37a112d0803368d664161685ca34f8af3", "url": "https://api.github.com/repos/google/oauth2client/commits/a4ca8cb37a112d0803368d664161685ca34f8af3", "html_url": "https://github.com/google/oauth2client/commit/a4ca8cb37a112d0803368d664161685ca34f8af3"}, {"sha": "085c470c4dd35e2836259839c9e43ce4cb5c44ec", "url": "https://api.github.com/repos/google/oauth2client/commits/085c470c4dd35e2836259839c9e43ce4cb5c44ec", "html_url": "https://github.com/google/oauth2client/commit/085c470c4dd35e2836259839c9e43ce4cb5c44ec"}]}, {"sha": "085c470c4dd35e2836259839c9e43ce4cb5c44ec", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-06T19:55:23Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-06T21:30:14Z"}, "message": "Improving test branch coverage in client.py.\n\nTesting un-traversed branches in\n\n- `OAuth2Credentials._expires_in()`\n- `OAuth2Credentials.get_access_token()`\n- `OAuth2Credentials._do_refresh_request()`", "tree": {"sha": "e8be018a501e75e9476263868dc59a1191540216", "url": "https://api.github.com/repos/google/oauth2client/git/trees/e8be018a501e75e9476263868dc59a1191540216"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/085c470c4dd35e2836259839c9e43ce4cb5c44ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/085c470c4dd35e2836259839c9e43ce4cb5c44ec", "html_url": "https://github.com/google/oauth2client/commit/085c470c4dd35e2836259839c9e43ce4cb5c44ec", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/085c470c4dd35e2836259839c9e43ce4cb5c44ec/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4ca8cb37a112d0803368d664161685ca34f8af3", "url": "https://api.github.com/repos/google/oauth2client/commits/a4ca8cb37a112d0803368d664161685ca34f8af3", "html_url": "https://github.com/google/oauth2client/commit/a4ca8cb37a112d0803368d664161685ca34f8af3"}]}, {"sha": "72cd28b5322528c950aa54b97e688330f2a12867", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-04-06T20:03:59Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-04-06T20:03:59Z"}, "message": "Move platform-specific openers to their own modules.", "tree": {"sha": "22e7943a17e5f2eb28e54ee5b31f233e2f035f58", "url": "https://api.github.com/repos/google/oauth2client/git/trees/22e7943a17e5f2eb28e54ee5b31f233e2f035f58"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/72cd28b5322528c950aa54b97e688330f2a12867", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/72cd28b5322528c950aa54b97e688330f2a12867", "html_url": "https://github.com/google/oauth2client/commit/72cd28b5322528c950aa54b97e688330f2a12867", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/72cd28b5322528c950aa54b97e688330f2a12867/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ca2ca7f39b7ac60d449ca1ce6062e46b0dd899d", "url": "https://api.github.com/repos/google/oauth2client/commits/3ca2ca7f39b7ac60d449ca1ce6062e46b0dd899d", "html_url": "https://github.com/google/oauth2client/commit/3ca2ca7f39b7ac60d449ca1ce6062e46b0dd899d"}]}, {"sha": "a4ca8cb37a112d0803368d664161685ca34f8af3", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-06T19:37:13Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-06T19:37:13Z"}, "message": "Merge pull request #477 from dhermes/cover-client-base-creds\n\nAdding test coverage for client.py module.", "tree": {"sha": "078458eacbbb8661bef13d354583cc1e8bba13f9", "url": "https://api.github.com/repos/google/oauth2client/git/trees/078458eacbbb8661bef13d354583cc1e8bba13f9"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/a4ca8cb37a112d0803368d664161685ca34f8af3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/a4ca8cb37a112d0803368d664161685ca34f8af3", "html_url": "https://github.com/google/oauth2client/commit/a4ca8cb37a112d0803368d664161685ca34f8af3", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/a4ca8cb37a112d0803368d664161685ca34f8af3/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ca2ca7f39b7ac60d449ca1ce6062e46b0dd899d", "url": "https://api.github.com/repos/google/oauth2client/commits/3ca2ca7f39b7ac60d449ca1ce6062e46b0dd899d", "html_url": "https://github.com/google/oauth2client/commit/3ca2ca7f39b7ac60d449ca1ce6062e46b0dd899d"}, {"sha": "5d2f1bdc0843f81df77e219be987f5d3c5c22599", "url": "https://api.github.com/repos/google/oauth2client/commits/5d2f1bdc0843f81df77e219be987f5d3c5c22599", "html_url": "https://github.com/google/oauth2client/commit/5d2f1bdc0843f81df77e219be987f5d3c5c22599"}]}, {"sha": "5d2f1bdc0843f81df77e219be987f5d3c5c22599", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-06T18:53:45Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-04-06T18:53:45Z"}, "message": "Adding test coverage for client.py module.\n\n- Replacing `_abstract()` with directly raising `NotImplementedError`\n- Testing all abstract code paths\n- Adding no-cover for a failed import\n- Completely testing the base `Credentials` class", "tree": {"sha": "078458eacbbb8661bef13d354583cc1e8bba13f9", "url": "https://api.github.com/repos/google/oauth2client/git/trees/078458eacbbb8661bef13d354583cc1e8bba13f9"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/5d2f1bdc0843f81df77e219be987f5d3c5c22599", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/5d2f1bdc0843f81df77e219be987f5d3c5c22599", "html_url": "https://github.com/google/oauth2client/commit/5d2f1bdc0843f81df77e219be987f5d3c5c22599", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/5d2f1bdc0843f81df77e219be987f5d3c5c22599/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ca2ca7f39b7ac60d449ca1ce6062e46b0dd899d", "url": "https://api.github.com/repos/google/oauth2client/commits/3ca2ca7f39b7ac60d449ca1ce6062e46b0dd899d", "html_url": "https://github.com/google/oauth2client/commit/3ca2ca7f39b7ac60d449ca1ce6062e46b0dd899d"}]}, {"sha": "3ca2ca7f39b7ac60d449ca1ce6062e46b0dd899d", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-03-18T18:13:27Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-03-18T18:13:27Z"}, "message": "Merge pull request #467 from jonparrott/coverage-locked-file\n\nAdded tests for contrib.locked_file.", "tree": {"sha": "a21baae2618056b6254d978aa25357e225cd4990", "url": "https://api.github.com/repos/google/oauth2client/git/trees/a21baae2618056b6254d978aa25357e225cd4990"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/3ca2ca7f39b7ac60d449ca1ce6062e46b0dd899d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/3ca2ca7f39b7ac60d449ca1ce6062e46b0dd899d", "html_url": "https://github.com/google/oauth2client/commit/3ca2ca7f39b7ac60d449ca1ce6062e46b0dd899d", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/3ca2ca7f39b7ac60d449ca1ce6062e46b0dd899d/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1641c80027fb2b906aeb14c6c6d997ed00542a81", "url": "https://api.github.com/repos/google/oauth2client/commits/1641c80027fb2b906aeb14c6c6d997ed00542a81", "html_url": "https://github.com/google/oauth2client/commit/1641c80027fb2b906aeb14c6c6d997ed00542a81"}, {"sha": "f931ce3b1e45d84ceedc8d8e6d49866fec1f87d4", "url": "https://api.github.com/repos/google/oauth2client/commits/f931ce3b1e45d84ceedc8d8e6d49866fec1f87d4", "html_url": "https://github.com/google/oauth2client/commit/f931ce3b1e45d84ceedc8d8e6d49866fec1f87d4"}]}, {"sha": "f931ce3b1e45d84ceedc8d8e6d49866fec1f87d4", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jjramone13@gmail.com", "date": "2016-03-17T05:22:24Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jjramone13@gmail.com", "date": "2016-03-18T03:06:32Z"}, "message": "Added tests for contrib.locked_file.", "tree": {"sha": "5ca5034e1932c7c76d4c6a0fa1c3f2a11d4c121d", "url": "https://api.github.com/repos/google/oauth2client/git/trees/5ca5034e1932c7c76d4c6a0fa1c3f2a11d4c121d"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/f931ce3b1e45d84ceedc8d8e6d49866fec1f87d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/f931ce3b1e45d84ceedc8d8e6d49866fec1f87d4", "html_url": "https://github.com/google/oauth2client/commit/f931ce3b1e45d84ceedc8d8e6d49866fec1f87d4", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/f931ce3b1e45d84ceedc8d8e6d49866fec1f87d4/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b68221f0aa51c73a2e43adc97141d5fa28b7d122", "url": "https://api.github.com/repos/google/oauth2client/commits/b68221f0aa51c73a2e43adc97141d5fa28b7d122", "html_url": "https://github.com/google/oauth2client/commit/b68221f0aa51c73a2e43adc97141d5fa28b7d122"}]}, {"sha": "1641c80027fb2b906aeb14c6c6d997ed00542a81", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-03-17T06:13:04Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-03-17T06:13:04Z"}, "message": "Merge pull request #462 from jonparrott/test-coverage-appengine\n\n100% coverage for contrib.appengine", "tree": {"sha": "803f2672ddcd37594415c2e0b9bf0d16ea7b7d63", "url": "https://api.github.com/repos/google/oauth2client/git/trees/803f2672ddcd37594415c2e0b9bf0d16ea7b7d63"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/1641c80027fb2b906aeb14c6c6d997ed00542a81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/1641c80027fb2b906aeb14c6c6d997ed00542a81", "html_url": "https://github.com/google/oauth2client/commit/1641c80027fb2b906aeb14c6c6d997ed00542a81", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/1641c80027fb2b906aeb14c6c6d997ed00542a81/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b68221f0aa51c73a2e43adc97141d5fa28b7d122", "url": "https://api.github.com/repos/google/oauth2client/commits/b68221f0aa51c73a2e43adc97141d5fa28b7d122", "html_url": "https://github.com/google/oauth2client/commit/b68221f0aa51c73a2e43adc97141d5fa28b7d122"}, {"sha": "3b1f6e596e268c2d1b21b4f919f1d48006a78e80", "url": "https://api.github.com/repos/google/oauth2client/commits/3b1f6e596e268c2d1b21b4f919f1d48006a78e80", "html_url": "https://github.com/google/oauth2client/commit/3b1f6e596e268c2d1b21b4f919f1d48006a78e80"}]}, {"sha": "3b1f6e596e268c2d1b21b4f919f1d48006a78e80", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-03-15T21:26:24Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jjramone13@gmail.com", "date": "2016-03-17T05:29:18Z"}, "message": "100% coverage for contrib.appengine", "tree": {"sha": "b2fe4aed9c0dbdf7aff591e620d1a69dfb6e86da", "url": "https://api.github.com/repos/google/oauth2client/git/trees/b2fe4aed9c0dbdf7aff591e620d1a69dfb6e86da"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/3b1f6e596e268c2d1b21b4f919f1d48006a78e80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/3b1f6e596e268c2d1b21b4f919f1d48006a78e80", "html_url": "https://github.com/google/oauth2client/commit/3b1f6e596e268c2d1b21b4f919f1d48006a78e80", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/3b1f6e596e268c2d1b21b4f919f1d48006a78e80/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b280ec0a621a7bfd7c28bfcdc221efdd504b42f", "url": "https://api.github.com/repos/google/oauth2client/commits/5b280ec0a621a7bfd7c28bfcdc221efdd504b42f", "html_url": "https://github.com/google/oauth2client/commit/5b280ec0a621a7bfd7c28bfcdc221efdd504b42f"}]}, {"sha": "b68221f0aa51c73a2e43adc97141d5fa28b7d122", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-03-16T16:45:09Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-03-16T16:45:09Z"}, "message": "Merge pull request #464 from jonparrott/test-coverage-tools\n\n100% coverage for oauth2client.tools", "tree": {"sha": "48e11129d147d725178f931b83d3ca5caf8482b3", "url": "https://api.github.com/repos/google/oauth2client/git/trees/48e11129d147d725178f931b83d3ca5caf8482b3"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/b68221f0aa51c73a2e43adc97141d5fa28b7d122", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/b68221f0aa51c73a2e43adc97141d5fa28b7d122", "html_url": "https://github.com/google/oauth2client/commit/b68221f0aa51c73a2e43adc97141d5fa28b7d122", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/b68221f0aa51c73a2e43adc97141d5fa28b7d122/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b280ec0a621a7bfd7c28bfcdc221efdd504b42f", "url": "https://api.github.com/repos/google/oauth2client/commits/5b280ec0a621a7bfd7c28bfcdc221efdd504b42f", "html_url": "https://github.com/google/oauth2client/commit/5b280ec0a621a7bfd7c28bfcdc221efdd504b42f"}, {"sha": "35aabeba999d567c1f00f6a80b2879527e512ff9", "url": "https://api.github.com/repos/google/oauth2client/commits/35aabeba999d567c1f00f6a80b2879527e512ff9", "html_url": "https://github.com/google/oauth2client/commit/35aabeba999d567c1f00f6a80b2879527e512ff9"}]}, {"sha": "35aabeba999d567c1f00f6a80b2879527e512ff9", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-03-16T02:39:51Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-03-16T16:42:20Z"}, "message": "100% coverage for oauth2client.tools", "tree": {"sha": "48e11129d147d725178f931b83d3ca5caf8482b3", "url": "https://api.github.com/repos/google/oauth2client/git/trees/48e11129d147d725178f931b83d3ca5caf8482b3"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/35aabeba999d567c1f00f6a80b2879527e512ff9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/35aabeba999d567c1f00f6a80b2879527e512ff9", "html_url": "https://github.com/google/oauth2client/commit/35aabeba999d567c1f00f6a80b2879527e512ff9", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/35aabeba999d567c1f00f6a80b2879527e512ff9/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b280ec0a621a7bfd7c28bfcdc221efdd504b42f", "url": "https://api.github.com/repos/google/oauth2client/commits/5b280ec0a621a7bfd7c28bfcdc221efdd504b42f", "html_url": "https://github.com/google/oauth2client/commit/5b280ec0a621a7bfd7c28bfcdc221efdd504b42f"}]}, {"sha": "5b280ec0a621a7bfd7c28bfcdc221efdd504b42f", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-03-15T04:02:18Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jonwayne@google.com", "date": "2016-03-15T04:02:18Z"}, "message": "Merge pull request #460 from jonparrott/util-coverage\n\n100% coverage for oauth2client.util", "tree": {"sha": "5826aa62b6d5e2e9776bac418b2e4af7f0e256a1", "url": "https://api.github.com/repos/google/oauth2client/git/trees/5826aa62b6d5e2e9776bac418b2e4af7f0e256a1"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/5b280ec0a621a7bfd7c28bfcdc221efdd504b42f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/5b280ec0a621a7bfd7c28bfcdc221efdd504b42f", "html_url": "https://github.com/google/oauth2client/commit/5b280ec0a621a7bfd7c28bfcdc221efdd504b42f", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/5b280ec0a621a7bfd7c28bfcdc221efdd504b42f/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93cbde2194088f5bf0729d0ebbadb1e0bdd26b24", "url": "https://api.github.com/repos/google/oauth2client/commits/93cbde2194088f5bf0729d0ebbadb1e0bdd26b24", "html_url": "https://github.com/google/oauth2client/commit/93cbde2194088f5bf0729d0ebbadb1e0bdd26b24"}, {"sha": "9f9661a8c3909a9f75df729a03b0c5f8c5748bae", "url": "https://api.github.com/repos/google/oauth2client/commits/9f9661a8c3909a9f75df729a03b0c5f8c5748bae", "html_url": "https://github.com/google/oauth2client/commit/9f9661a8c3909a9f75df729a03b0c5f8c5748bae"}]}, {"sha": "9f9661a8c3909a9f75df729a03b0c5f8c5748bae", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jjramone13@gmail.com", "date": "2016-03-15T03:50:08Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jjramone13@gmail.com", "date": "2016-03-15T03:55:57Z"}, "message": "100% coverage for oauth2client.util", "tree": {"sha": "5826aa62b6d5e2e9776bac418b2e4af7f0e256a1", "url": "https://api.github.com/repos/google/oauth2client/git/trees/5826aa62b6d5e2e9776bac418b2e4af7f0e256a1"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/9f9661a8c3909a9f75df729a03b0c5f8c5748bae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/9f9661a8c3909a9f75df729a03b0c5f8c5748bae", "html_url": "https://github.com/google/oauth2client/commit/9f9661a8c3909a9f75df729a03b0c5f8c5748bae", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/9f9661a8c3909a9f75df729a03b0c5f8c5748bae/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93cbde2194088f5bf0729d0ebbadb1e0bdd26b24", "url": "https://api.github.com/repos/google/oauth2client/commits/93cbde2194088f5bf0729d0ebbadb1e0bdd26b24", "html_url": "https://github.com/google/oauth2client/commit/93cbde2194088f5bf0729d0ebbadb1e0bdd26b24"}]}, {"sha": "93cbde2194088f5bf0729d0ebbadb1e0bdd26b24", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-03-14T17:46:52Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-03-14T17:46:52Z"}, "message": "Merge pull request #457 from sorensenjs/patch-3\n\nFix \"oath2\" typo of oauth2.", "tree": {"sha": "8602bcb08395cfea284ddcfc5f075fc186305c33", "url": "https://api.github.com/repos/google/oauth2client/git/trees/8602bcb08395cfea284ddcfc5f075fc186305c33"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/93cbde2194088f5bf0729d0ebbadb1e0bdd26b24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/93cbde2194088f5bf0729d0ebbadb1e0bdd26b24", "html_url": "https://github.com/google/oauth2client/commit/93cbde2194088f5bf0729d0ebbadb1e0bdd26b24", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/93cbde2194088f5bf0729d0ebbadb1e0bdd26b24/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20dcfe2d9bd9527619454a49d26c5ee392f6edbf", "url": "https://api.github.com/repos/google/oauth2client/commits/20dcfe2d9bd9527619454a49d26c5ee392f6edbf", "html_url": "https://github.com/google/oauth2client/commit/20dcfe2d9bd9527619454a49d26c5ee392f6edbf"}, {"sha": "f8429e2142f96b30221119a3542030161f0c8c9e", "url": "https://api.github.com/repos/google/oauth2client/commits/f8429e2142f96b30221119a3542030161f0c8c9e", "html_url": "https://github.com/google/oauth2client/commit/f8429e2142f96b30221119a3542030161f0c8c9e"}]}, {"sha": "f8429e2142f96b30221119a3542030161f0c8c9e", "commit": {"author": {"name": "Jeffrey Sorensen", "email": "sorensenjs@users.noreply.github.com", "date": "2016-03-14T17:43:41Z"}, "committer": {"name": "Jeffrey Sorensen", "email": "sorensenjs@users.noreply.github.com", "date": "2016-03-14T17:43:41Z"}, "message": "Fix typo of oauth2\n\nComments only change.", "tree": {"sha": "8602bcb08395cfea284ddcfc5f075fc186305c33", "url": "https://api.github.com/repos/google/oauth2client/git/trees/8602bcb08395cfea284ddcfc5f075fc186305c33"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/f8429e2142f96b30221119a3542030161f0c8c9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/f8429e2142f96b30221119a3542030161f0c8c9e", "html_url": "https://github.com/google/oauth2client/commit/f8429e2142f96b30221119a3542030161f0c8c9e", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/f8429e2142f96b30221119a3542030161f0c8c9e/comments", "author": {"login": "sorensenjs", "id": 8582676, "avatar_url": "https://avatars1.githubusercontent.com/u/8582676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sorensenjs", "html_url": "https://github.com/sorensenjs", "followers_url": "https://api.github.com/users/sorensenjs/followers", "following_url": "https://api.github.com/users/sorensenjs/following{/other_user}", "gists_url": "https://api.github.com/users/sorensenjs/gists{/gist_id}", "starred_url": "https://api.github.com/users/sorensenjs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sorensenjs/subscriptions", "organizations_url": "https://api.github.com/users/sorensenjs/orgs", "repos_url": "https://api.github.com/users/sorensenjs/repos", "events_url": "https://api.github.com/users/sorensenjs/events{/privacy}", "received_events_url": "https://api.github.com/users/sorensenjs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sorensenjs", "id": 8582676, "avatar_url": "https://avatars1.githubusercontent.com/u/8582676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sorensenjs", "html_url": "https://github.com/sorensenjs", "followers_url": "https://api.github.com/users/sorensenjs/followers", "following_url": "https://api.github.com/users/sorensenjs/following{/other_user}", "gists_url": "https://api.github.com/users/sorensenjs/gists{/gist_id}", "starred_url": "https://api.github.com/users/sorensenjs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sorensenjs/subscriptions", "organizations_url": "https://api.github.com/users/sorensenjs/orgs", "repos_url": "https://api.github.com/users/sorensenjs/repos", "events_url": "https://api.github.com/users/sorensenjs/events{/privacy}", "received_events_url": "https://api.github.com/users/sorensenjs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20dcfe2d9bd9527619454a49d26c5ee392f6edbf", "url": "https://api.github.com/repos/google/oauth2client/commits/20dcfe2d9bd9527619454a49d26c5ee392f6edbf", "html_url": "https://github.com/google/oauth2client/commit/20dcfe2d9bd9527619454a49d26c5ee392f6edbf"}]}, {"sha": "20dcfe2d9bd9527619454a49d26c5ee392f6edbf", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-03-11T21:52:46Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-03-11T21:52:46Z"}, "message": "Merge pull request #452 from jonparrott/flask-util-expired-credentials\n\nFix flask required decorator to redirect on expired credentials.", "tree": {"sha": "a0b3b21eeddaf9e797c06fe7c677816755d2f3c4", "url": "https://api.github.com/repos/google/oauth2client/git/trees/a0b3b21eeddaf9e797c06fe7c677816755d2f3c4"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/20dcfe2d9bd9527619454a49d26c5ee392f6edbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/20dcfe2d9bd9527619454a49d26c5ee392f6edbf", "html_url": "https://github.com/google/oauth2client/commit/20dcfe2d9bd9527619454a49d26c5ee392f6edbf", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/20dcfe2d9bd9527619454a49d26c5ee392f6edbf/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15c945f1c76f0bd537b7fbcd7c09cb941ec89ceb", "url": "https://api.github.com/repos/google/oauth2client/commits/15c945f1c76f0bd537b7fbcd7c09cb941ec89ceb", "html_url": "https://github.com/google/oauth2client/commit/15c945f1c76f0bd537b7fbcd7c09cb941ec89ceb"}, {"sha": "a82146a65164e88a700a6e11f559e2d7d67dda6a", "url": "https://api.github.com/repos/google/oauth2client/commits/a82146a65164e88a700a6e11f559e2d7d67dda6a", "html_url": "https://github.com/google/oauth2client/commit/a82146a65164e88a700a6e11f559e2d7d67dda6a"}]}, {"sha": "a82146a65164e88a700a6e11f559e2d7d67dda6a", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-03-04T18:52:15Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-03-11T21:48:19Z"}, "message": "Fix flask required decorator to redirect on expired credentials.", "tree": {"sha": "a0b3b21eeddaf9e797c06fe7c677816755d2f3c4", "url": "https://api.github.com/repos/google/oauth2client/git/trees/a0b3b21eeddaf9e797c06fe7c677816755d2f3c4"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/a82146a65164e88a700a6e11f559e2d7d67dda6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/a82146a65164e88a700a6e11f559e2d7d67dda6a", "html_url": "https://github.com/google/oauth2client/commit/a82146a65164e88a700a6e11f559e2d7d67dda6a", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/a82146a65164e88a700a6e11f559e2d7d67dda6a/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15c945f1c76f0bd537b7fbcd7c09cb941ec89ceb", "url": "https://api.github.com/repos/google/oauth2client/commits/15c945f1c76f0bd537b7fbcd7c09cb941ec89ceb", "html_url": "https://github.com/google/oauth2client/commit/15c945f1c76f0bd537b7fbcd7c09cb941ec89ceb"}]}, {"sha": "15c945f1c76f0bd537b7fbcd7c09cb941ec89ceb", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-03-03T18:14:28Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-03-03T18:14:28Z"}, "message": "Merge pull request #446 from happyspace/master\n\nPython 3 error: step2_exchange confusing unicode/bytes.", "tree": {"sha": "899445a5e239855a4f805f249ed476f4927ade5d", "url": "https://api.github.com/repos/google/oauth2client/git/trees/899445a5e239855a4f805f249ed476f4927ade5d"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/15c945f1c76f0bd537b7fbcd7c09cb941ec89ceb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/15c945f1c76f0bd537b7fbcd7c09cb941ec89ceb", "html_url": "https://github.com/google/oauth2client/commit/15c945f1c76f0bd537b7fbcd7c09cb941ec89ceb", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/15c945f1c76f0bd537b7fbcd7c09cb941ec89ceb/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f09af4270a6108ea310069ff79bdbcf1fa75eb84", "url": "https://api.github.com/repos/google/oauth2client/commits/f09af4270a6108ea310069ff79bdbcf1fa75eb84", "html_url": "https://github.com/google/oauth2client/commit/f09af4270a6108ea310069ff79bdbcf1fa75eb84"}, {"sha": "6a273d678b23b63845e636c0ed6550ce0c23616a", "url": "https://api.github.com/repos/google/oauth2client/commits/6a273d678b23b63845e636c0ed6550ce0c23616a", "html_url": "https://github.com/google/oauth2client/commit/6a273d678b23b63845e636c0ed6550ce0c23616a"}]}, {"sha": "f09af4270a6108ea310069ff79bdbcf1fa75eb84", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-03-03T17:55:09Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-03-03T17:55:09Z"}, "message": "Merge pull request #449 from dhermes/cut-2.0.1\n\nRelease v2.0.1.", "tree": {"sha": "29fa52b7c217ed31f027177e26a56cdd002b67d2", "url": "https://api.github.com/repos/google/oauth2client/git/trees/29fa52b7c217ed31f027177e26a56cdd002b67d2"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/f09af4270a6108ea310069ff79bdbcf1fa75eb84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/f09af4270a6108ea310069ff79bdbcf1fa75eb84", "html_url": "https://github.com/google/oauth2client/commit/f09af4270a6108ea310069ff79bdbcf1fa75eb84", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/f09af4270a6108ea310069ff79bdbcf1fa75eb84/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b0a5edd47142a02e5bf585d8009195a29036449", "url": "https://api.github.com/repos/google/oauth2client/commits/4b0a5edd47142a02e5bf585d8009195a29036449", "html_url": "https://github.com/google/oauth2client/commit/4b0a5edd47142a02e5bf585d8009195a29036449"}, {"sha": "05a74b48ae294b326548491844a9bf11651f02ed", "url": "https://api.github.com/repos/google/oauth2client/commits/05a74b48ae294b326548491844a9bf11651f02ed", "html_url": "https://github.com/google/oauth2client/commit/05a74b48ae294b326548491844a9bf11651f02ed"}]}, {"sha": "05a74b48ae294b326548491844a9bf11651f02ed", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-03-03T17:37:45Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-03-03T17:37:45Z"}, "message": "Release v2.0.1.", "tree": {"sha": "29fa52b7c217ed31f027177e26a56cdd002b67d2", "url": "https://api.github.com/repos/google/oauth2client/git/trees/29fa52b7c217ed31f027177e26a56cdd002b67d2"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/05a74b48ae294b326548491844a9bf11651f02ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/05a74b48ae294b326548491844a9bf11651f02ed", "html_url": "https://github.com/google/oauth2client/commit/05a74b48ae294b326548491844a9bf11651f02ed", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/05a74b48ae294b326548491844a9bf11651f02ed/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b0a5edd47142a02e5bf585d8009195a29036449", "url": "https://api.github.com/repos/google/oauth2client/commits/4b0a5edd47142a02e5bf585d8009195a29036449", "html_url": "https://github.com/google/oauth2client/commit/4b0a5edd47142a02e5bf585d8009195a29036449"}]}, {"sha": "6a273d678b23b63845e636c0ed6550ce0c23616a", "commit": {"author": {"name": "Eddie Warner", "email": "happyspace@gmail.com", "date": "2016-03-01T20:05:18Z"}, "committer": {"name": "Eddie Warner", "email": "happyspace@gmail.com", "date": "2016-03-01T23:02:56Z"}, "message": "Expand API for step2_exchange\n\nIn python 3, the code received from the browser will be binary instead of a string. Expand the API for oauth_flow.step2_exchange(code) to allow this value to be passed as is rather than decoding.\n\nfor example:\ncredentials = self.flow.step2_exchange(b'some random code')\n\ntest:\ntox -e py34  -- tests.test_client:OAuth2WebServerFlowTest.test_exchange_success_binary_code\n\nresolves:  #443, #446", "tree": {"sha": "126c3f53c66db8b19e7880808109b22cd998715c", "url": "https://api.github.com/repos/google/oauth2client/git/trees/126c3f53c66db8b19e7880808109b22cd998715c"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/6a273d678b23b63845e636c0ed6550ce0c23616a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/6a273d678b23b63845e636c0ed6550ce0c23616a", "html_url": "https://github.com/google/oauth2client/commit/6a273d678b23b63845e636c0ed6550ce0c23616a", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/6a273d678b23b63845e636c0ed6550ce0c23616a/comments", "author": {"login": "happyspace", "id": 571100, "avatar_url": "https://avatars0.githubusercontent.com/u/571100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/happyspace", "html_url": "https://github.com/happyspace", "followers_url": "https://api.github.com/users/happyspace/followers", "following_url": "https://api.github.com/users/happyspace/following{/other_user}", "gists_url": "https://api.github.com/users/happyspace/gists{/gist_id}", "starred_url": "https://api.github.com/users/happyspace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/happyspace/subscriptions", "organizations_url": "https://api.github.com/users/happyspace/orgs", "repos_url": "https://api.github.com/users/happyspace/repos", "events_url": "https://api.github.com/users/happyspace/events{/privacy}", "received_events_url": "https://api.github.com/users/happyspace/received_events", "type": "User", "site_admin": false}, "committer": {"login": "happyspace", "id": 571100, "avatar_url": "https://avatars0.githubusercontent.com/u/571100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/happyspace", "html_url": "https://github.com/happyspace", "followers_url": "https://api.github.com/users/happyspace/followers", "following_url": "https://api.github.com/users/happyspace/following{/other_user}", "gists_url": "https://api.github.com/users/happyspace/gists{/gist_id}", "starred_url": "https://api.github.com/users/happyspace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/happyspace/subscriptions", "organizations_url": "https://api.github.com/users/happyspace/orgs", "repos_url": "https://api.github.com/users/happyspace/repos", "events_url": "https://api.github.com/users/happyspace/events{/privacy}", "received_events_url": "https://api.github.com/users/happyspace/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b0a5edd47142a02e5bf585d8009195a29036449", "url": "https://api.github.com/repos/google/oauth2client/commits/4b0a5edd47142a02e5bf585d8009195a29036449", "html_url": "https://github.com/google/oauth2client/commit/4b0a5edd47142a02e5bf585d8009195a29036449"}]}, {"sha": "4b0a5edd47142a02e5bf585d8009195a29036449", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-25T03:49:17Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-25T03:49:17Z"}, "message": "Merge pull request #434 from dhermes/move-ndb-into-module\n\nMove conditionally defined ndb helpers into their own module.", "tree": {"sha": "442070575998ea642c374bf572c9111e46008a2b", "url": "https://api.github.com/repos/google/oauth2client/git/trees/442070575998ea642c374bf572c9111e46008a2b"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/4b0a5edd47142a02e5bf585d8009195a29036449", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/4b0a5edd47142a02e5bf585d8009195a29036449", "html_url": "https://github.com/google/oauth2client/commit/4b0a5edd47142a02e5bf585d8009195a29036449", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/4b0a5edd47142a02e5bf585d8009195a29036449/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3a187c56a0e607030482ed33664cd7d335ea34c", "url": "https://api.github.com/repos/google/oauth2client/commits/d3a187c56a0e607030482ed33664cd7d335ea34c", "html_url": "https://github.com/google/oauth2client/commit/d3a187c56a0e607030482ed33664cd7d335ea34c"}, {"sha": "e5fb542ac644950f0837fdb38d8192f125125225", "url": "https://api.github.com/repos/google/oauth2client/commits/e5fb542ac644950f0837fdb38d8192f125125225", "html_url": "https://github.com/google/oauth2client/commit/e5fb542ac644950f0837fdb38d8192f125125225"}]}, {"sha": "e5fb542ac644950f0837fdb38d8192f125125225", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-23T06:05:58Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-24T20:49:27Z"}, "message": "Move conditionally defined ndb helpers into their own module.\n\nTowards #433.", "tree": {"sha": "442070575998ea642c374bf572c9111e46008a2b", "url": "https://api.github.com/repos/google/oauth2client/git/trees/442070575998ea642c374bf572c9111e46008a2b"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/e5fb542ac644950f0837fdb38d8192f125125225", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/e5fb542ac644950f0837fdb38d8192f125125225", "html_url": "https://github.com/google/oauth2client/commit/e5fb542ac644950f0837fdb38d8192f125125225", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/e5fb542ac644950f0837fdb38d8192f125125225/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3a187c56a0e607030482ed33664cd7d335ea34c", "url": "https://api.github.com/repos/google/oauth2client/commits/d3a187c56a0e607030482ed33664cd7d335ea34c", "html_url": "https://github.com/google/oauth2client/commit/d3a187c56a0e607030482ed33664cd7d335ea34c"}]}, {"sha": "d3a187c56a0e607030482ed33664cd7d335ea34c", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-24T17:21:33Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-24T17:21:33Z"}, "message": "Merge pull request #438 from jeremi/patch-1\n\nfix an error in the sample code", "tree": {"sha": "cd9a43b075c9bc21e696e029b9af3571a4612afb", "url": "https://api.github.com/repos/google/oauth2client/git/trees/cd9a43b075c9bc21e696e029b9af3571a4612afb"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/d3a187c56a0e607030482ed33664cd7d335ea34c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/d3a187c56a0e607030482ed33664cd7d335ea34c", "html_url": "https://github.com/google/oauth2client/commit/d3a187c56a0e607030482ed33664cd7d335ea34c", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/d3a187c56a0e607030482ed33664cd7d335ea34c/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0c6ab03d536e7fbec798f5f117a8325df691913", "url": "https://api.github.com/repos/google/oauth2client/commits/c0c6ab03d536e7fbec798f5f117a8325df691913", "html_url": "https://github.com/google/oauth2client/commit/c0c6ab03d536e7fbec798f5f117a8325df691913"}, {"sha": "02ed225de28e3f8275c35be06b7b3266d1dcbc2a", "url": "https://api.github.com/repos/google/oauth2client/commits/02ed225de28e3f8275c35be06b7b3266d1dcbc2a", "html_url": "https://github.com/google/oauth2client/commit/02ed225de28e3f8275c35be06b7b3266d1dcbc2a"}]}, {"sha": "02ed225de28e3f8275c35be06b7b3266d1dcbc2a", "commit": {"author": {"name": "Jeremi Joslin", "email": "jeremi@collabspot.com", "date": "2016-02-24T08:42:49Z"}, "committer": {"name": "Jeremi Joslin", "email": "jeremi@collabspot.com", "date": "2016-02-24T08:42:49Z"}, "message": "fix an error in the sample code\n\ncredential is under the oauth object in the request", "tree": {"sha": "cd9a43b075c9bc21e696e029b9af3571a4612afb", "url": "https://api.github.com/repos/google/oauth2client/git/trees/cd9a43b075c9bc21e696e029b9af3571a4612afb"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/02ed225de28e3f8275c35be06b7b3266d1dcbc2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/02ed225de28e3f8275c35be06b7b3266d1dcbc2a", "html_url": "https://github.com/google/oauth2client/commit/02ed225de28e3f8275c35be06b7b3266d1dcbc2a", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/02ed225de28e3f8275c35be06b7b3266d1dcbc2a/comments", "author": {"login": "jeremi", "id": 9537, "avatar_url": "https://avatars3.githubusercontent.com/u/9537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremi", "html_url": "https://github.com/jeremi", "followers_url": "https://api.github.com/users/jeremi/followers", "following_url": "https://api.github.com/users/jeremi/following{/other_user}", "gists_url": "https://api.github.com/users/jeremi/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremi/subscriptions", "organizations_url": "https://api.github.com/users/jeremi/orgs", "repos_url": "https://api.github.com/users/jeremi/repos", "events_url": "https://api.github.com/users/jeremi/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jeremi", "id": 9537, "avatar_url": "https://avatars3.githubusercontent.com/u/9537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremi", "html_url": "https://github.com/jeremi", "followers_url": "https://api.github.com/users/jeremi/followers", "following_url": "https://api.github.com/users/jeremi/following{/other_user}", "gists_url": "https://api.github.com/users/jeremi/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremi/subscriptions", "organizations_url": "https://api.github.com/users/jeremi/orgs", "repos_url": "https://api.github.com/users/jeremi/repos", "events_url": "https://api.github.com/users/jeremi/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0c6ab03d536e7fbec798f5f117a8325df691913", "url": "https://api.github.com/repos/google/oauth2client/commits/c0c6ab03d536e7fbec798f5f117a8325df691913", "html_url": "https://github.com/google/oauth2client/commit/c0c6ab03d536e7fbec798f5f117a8325df691913"}]}, {"sha": "c0c6ab03d536e7fbec798f5f117a8325df691913", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-23T21:57:21Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-23T21:57:21Z"}, "message": "Merge pull request #437 from akrherz/patch-1\n\nCorrect p12 example code typo in CHANGELOG.md.", "tree": {"sha": "dece7af0582f569700fe63b4cf2aa21511742129", "url": "https://api.github.com/repos/google/oauth2client/git/trees/dece7af0582f569700fe63b4cf2aa21511742129"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/c0c6ab03d536e7fbec798f5f117a8325df691913", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/c0c6ab03d536e7fbec798f5f117a8325df691913", "html_url": "https://github.com/google/oauth2client/commit/c0c6ab03d536e7fbec798f5f117a8325df691913", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/c0c6ab03d536e7fbec798f5f117a8325df691913/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55ed32d89096a466b99be89bf9b3efa3c08bb3bd", "url": "https://api.github.com/repos/google/oauth2client/commits/55ed32d89096a466b99be89bf9b3efa3c08bb3bd", "html_url": "https://github.com/google/oauth2client/commit/55ed32d89096a466b99be89bf9b3efa3c08bb3bd"}, {"sha": "929bc05568735face85e7cba1b11797ea93559d3", "url": "https://api.github.com/repos/google/oauth2client/commits/929bc05568735face85e7cba1b11797ea93559d3", "html_url": "https://github.com/google/oauth2client/commit/929bc05568735face85e7cba1b11797ea93559d3"}]}, {"sha": "929bc05568735face85e7cba1b11797ea93559d3", "commit": {"author": {"name": "daryl herzmann", "email": "akrherz@iastate.edu", "date": "2016-02-23T21:53:09Z"}, "committer": {"name": "daryl herzmann", "email": "akrherz@iastate.edu", "date": "2016-02-23T21:53:09Z"}, "message": "correct p12 example code typo in CHANGELOG.md\n\ns/ServiceAccountCredentials.from_p12_keyfil/ServiceAccountCredentials.from_p12_keyfile/", "tree": {"sha": "dece7af0582f569700fe63b4cf2aa21511742129", "url": "https://api.github.com/repos/google/oauth2client/git/trees/dece7af0582f569700fe63b4cf2aa21511742129"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/929bc05568735face85e7cba1b11797ea93559d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/929bc05568735face85e7cba1b11797ea93559d3", "html_url": "https://github.com/google/oauth2client/commit/929bc05568735face85e7cba1b11797ea93559d3", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/929bc05568735face85e7cba1b11797ea93559d3/comments", "author": {"login": "akrherz", "id": 210858, "avatar_url": "https://avatars0.githubusercontent.com/u/210858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akrherz", "html_url": "https://github.com/akrherz", "followers_url": "https://api.github.com/users/akrherz/followers", "following_url": "https://api.github.com/users/akrherz/following{/other_user}", "gists_url": "https://api.github.com/users/akrherz/gists{/gist_id}", "starred_url": "https://api.github.com/users/akrherz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akrherz/subscriptions", "organizations_url": "https://api.github.com/users/akrherz/orgs", "repos_url": "https://api.github.com/users/akrherz/repos", "events_url": "https://api.github.com/users/akrherz/events{/privacy}", "received_events_url": "https://api.github.com/users/akrherz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "akrherz", "id": 210858, "avatar_url": "https://avatars0.githubusercontent.com/u/210858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akrherz", "html_url": "https://github.com/akrherz", "followers_url": "https://api.github.com/users/akrherz/followers", "following_url": "https://api.github.com/users/akrherz/following{/other_user}", "gists_url": "https://api.github.com/users/akrherz/gists{/gist_id}", "starred_url": "https://api.github.com/users/akrherz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akrherz/subscriptions", "organizations_url": "https://api.github.com/users/akrherz/orgs", "repos_url": "https://api.github.com/users/akrherz/repos", "events_url": "https://api.github.com/users/akrherz/events{/privacy}", "received_events_url": "https://api.github.com/users/akrherz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55ed32d89096a466b99be89bf9b3efa3c08bb3bd", "url": "https://api.github.com/repos/google/oauth2client/commits/55ed32d89096a466b99be89bf9b3efa3c08bb3bd", "html_url": "https://github.com/google/oauth2client/commit/55ed32d89096a466b99be89bf9b3efa3c08bb3bd"}]}, {"sha": "55ed32d89096a466b99be89bf9b3efa3c08bb3bd", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-23T05:53:10Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-23T05:53:10Z"}, "message": "Merge pull request #429 from dhermes/move-dict-to-tuple\n\nMoving util.dict_to_tuple_key() into only module that uses it.", "tree": {"sha": "5f774860f37022a36a19310e1d68b0ec0ea4e1d6", "url": "https://api.github.com/repos/google/oauth2client/git/trees/5f774860f37022a36a19310e1d68b0ec0ea4e1d6"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/55ed32d89096a466b99be89bf9b3efa3c08bb3bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/55ed32d89096a466b99be89bf9b3efa3c08bb3bd", "html_url": "https://github.com/google/oauth2client/commit/55ed32d89096a466b99be89bf9b3efa3c08bb3bd", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/55ed32d89096a466b99be89bf9b3efa3c08bb3bd/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "349942b0db8e96c336802dc421fd4f1670e4b7e8", "url": "https://api.github.com/repos/google/oauth2client/commits/349942b0db8e96c336802dc421fd4f1670e4b7e8", "html_url": "https://github.com/google/oauth2client/commit/349942b0db8e96c336802dc421fd4f1670e4b7e8"}, {"sha": "ae0d5489d1793c23e4ed24ee9848478e95866791", "url": "https://api.github.com/repos/google/oauth2client/commits/ae0d5489d1793c23e4ed24ee9848478e95866791", "html_url": "https://github.com/google/oauth2client/commit/ae0d5489d1793c23e4ed24ee9848478e95866791"}]}, {"sha": "349942b0db8e96c336802dc421fd4f1670e4b7e8", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-23T03:13:04Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-23T03:13:04Z"}, "message": "Merge pull request #432 from dhermes/rtd-gae\n\nUsing mock App Engine module when building docs.", "tree": {"sha": "189ff4cb5ff5a040140832f3055cdcb61ee096ba", "url": "https://api.github.com/repos/google/oauth2client/git/trees/189ff4cb5ff5a040140832f3055cdcb61ee096ba"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/349942b0db8e96c336802dc421fd4f1670e4b7e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/349942b0db8e96c336802dc421fd4f1670e4b7e8", "html_url": "https://github.com/google/oauth2client/commit/349942b0db8e96c336802dc421fd4f1670e4b7e8", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/349942b0db8e96c336802dc421fd4f1670e4b7e8/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "498d0b6871bdb8eb2c9471f051c8d5efab4324de", "url": "https://api.github.com/repos/google/oauth2client/commits/498d0b6871bdb8eb2c9471f051c8d5efab4324de", "html_url": "https://github.com/google/oauth2client/commit/498d0b6871bdb8eb2c9471f051c8d5efab4324de"}, {"sha": "626cd94f338f62da9b16755da21fcd0fec9a5615", "url": "https://api.github.com/repos/google/oauth2client/commits/626cd94f338f62da9b16755da21fcd0fec9a5615", "html_url": "https://github.com/google/oauth2client/commit/626cd94f338f62da9b16755da21fcd0fec9a5615"}]}, {"sha": "498d0b6871bdb8eb2c9471f051c8d5efab4324de", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-23T03:12:15Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-23T03:12:15Z"}, "message": "Merge pull request #421 from dhermes/sign-blob-all-svc-accounts\n\nAdding common sign_blob() service account types.", "tree": {"sha": "b40be0ec6e487387782ebcb7bd792780ec1c5840", "url": "https://api.github.com/repos/google/oauth2client/git/trees/b40be0ec6e487387782ebcb7bd792780ec1c5840"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/498d0b6871bdb8eb2c9471f051c8d5efab4324de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/498d0b6871bdb8eb2c9471f051c8d5efab4324de", "html_url": "https://github.com/google/oauth2client/commit/498d0b6871bdb8eb2c9471f051c8d5efab4324de", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/498d0b6871bdb8eb2c9471f051c8d5efab4324de/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f89019808eddbc2d371205617a7b61f258798c5", "url": "https://api.github.com/repos/google/oauth2client/commits/9f89019808eddbc2d371205617a7b61f258798c5", "html_url": "https://github.com/google/oauth2client/commit/9f89019808eddbc2d371205617a7b61f258798c5"}, {"sha": "ce0d71a497c1db7c4d5de36565df57eaec017eae", "url": "https://api.github.com/repos/google/oauth2client/commits/ce0d71a497c1db7c4d5de36565df57eaec017eae", "html_url": "https://github.com/google/oauth2client/commit/ce0d71a497c1db7c4d5de36565df57eaec017eae"}]}, {"sha": "ae0d5489d1793c23e4ed24ee9848478e95866791", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-20T18:17:15Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-23T01:07:54Z"}, "message": "Moving util.dict_to_tuple_key() into only module that uses it.", "tree": {"sha": "267216ae09a5ea4c4e74db965c829faf84d6bc09", "url": "https://api.github.com/repos/google/oauth2client/git/trees/267216ae09a5ea4c4e74db965c829faf84d6bc09"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/ae0d5489d1793c23e4ed24ee9848478e95866791", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/ae0d5489d1793c23e4ed24ee9848478e95866791", "html_url": "https://github.com/google/oauth2client/commit/ae0d5489d1793c23e4ed24ee9848478e95866791", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/ae0d5489d1793c23e4ed24ee9848478e95866791/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f89019808eddbc2d371205617a7b61f258798c5", "url": "https://api.github.com/repos/google/oauth2client/commits/9f89019808eddbc2d371205617a7b61f258798c5", "html_url": "https://github.com/google/oauth2client/commit/9f89019808eddbc2d371205617a7b61f258798c5"}]}, {"sha": "ce0d71a497c1db7c4d5de36565df57eaec017eae", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T22:15:23Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-22T23:37:43Z"}, "message": "Adding common sign_blob() service account types.\n\nAlso adding service_account_email() property.", "tree": {"sha": "06f96b9a960b1fd2fcd2d0542820ce3581c3252d", "url": "https://api.github.com/repos/google/oauth2client/git/trees/06f96b9a960b1fd2fcd2d0542820ce3581c3252d"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/ce0d71a497c1db7c4d5de36565df57eaec017eae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/ce0d71a497c1db7c4d5de36565df57eaec017eae", "html_url": "https://github.com/google/oauth2client/commit/ce0d71a497c1db7c4d5de36565df57eaec017eae", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/ce0d71a497c1db7c4d5de36565df57eaec017eae/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c66e4f201f5ed72514d18a1227be5d34efa2421a", "url": "https://api.github.com/repos/google/oauth2client/commits/c66e4f201f5ed72514d18a1227be5d34efa2421a", "html_url": "https://github.com/google/oauth2client/commit/c66e4f201f5ed72514d18a1227be5d34efa2421a"}]}, {"sha": "626cd94f338f62da9b16755da21fcd0fec9a5615", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-22T21:58:20Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-22T21:58:20Z"}, "message": "Using mock App Engine module when building docs.", "tree": {"sha": "d13dd3f36f61c5ff2a678dfabc21aa72f6b65501", "url": "https://api.github.com/repos/google/oauth2client/git/trees/d13dd3f36f61c5ff2a678dfabc21aa72f6b65501"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/626cd94f338f62da9b16755da21fcd0fec9a5615", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/626cd94f338f62da9b16755da21fcd0fec9a5615", "html_url": "https://github.com/google/oauth2client/commit/626cd94f338f62da9b16755da21fcd0fec9a5615", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/626cd94f338f62da9b16755da21fcd0fec9a5615/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c66e4f201f5ed72514d18a1227be5d34efa2421a", "url": "https://api.github.com/repos/google/oauth2client/commits/c66e4f201f5ed72514d18a1227be5d34efa2421a", "html_url": "https://github.com/google/oauth2client/commit/c66e4f201f5ed72514d18a1227be5d34efa2421a"}]}, {"sha": "9f89019808eddbc2d371205617a7b61f258798c5", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-22T21:01:00Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-22T21:01:00Z"}, "message": "Merge pull request #431 from dhermes/test-cover-100\n\n100% line coverage in tests.", "tree": {"sha": "34f16caf1b39acd13aa1919a8d1a9c4788838b17", "url": "https://api.github.com/repos/google/oauth2client/git/trees/34f16caf1b39acd13aa1919a8d1a9c4788838b17"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/9f89019808eddbc2d371205617a7b61f258798c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/9f89019808eddbc2d371205617a7b61f258798c5", "html_url": "https://github.com/google/oauth2client/commit/9f89019808eddbc2d371205617a7b61f258798c5", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/9f89019808eddbc2d371205617a7b61f258798c5/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c66e4f201f5ed72514d18a1227be5d34efa2421a", "url": "https://api.github.com/repos/google/oauth2client/commits/c66e4f201f5ed72514d18a1227be5d34efa2421a", "html_url": "https://github.com/google/oauth2client/commit/c66e4f201f5ed72514d18a1227be5d34efa2421a"}, {"sha": "cd0cbe311c43772a36ebe46004f696e544f1145f", "url": "https://api.github.com/repos/google/oauth2client/commits/cd0cbe311c43772a36ebe46004f696e544f1145f", "html_url": "https://github.com/google/oauth2client/commit/cd0cbe311c43772a36ebe46004f696e544f1145f"}]}, {"sha": "cd0cbe311c43772a36ebe46004f696e544f1145f", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-21T18:07:08Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-21T18:07:08Z"}, "message": "Getting to 100% line coverage in tests.", "tree": {"sha": "34f16caf1b39acd13aa1919a8d1a9c4788838b17", "url": "https://api.github.com/repos/google/oauth2client/git/trees/34f16caf1b39acd13aa1919a8d1a9c4788838b17"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/cd0cbe311c43772a36ebe46004f696e544f1145f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/cd0cbe311c43772a36ebe46004f696e544f1145f", "html_url": "https://github.com/google/oauth2client/commit/cd0cbe311c43772a36ebe46004f696e544f1145f", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/cd0cbe311c43772a36ebe46004f696e544f1145f/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c66e4f201f5ed72514d18a1227be5d34efa2421a", "url": "https://api.github.com/repos/google/oauth2client/commits/c66e4f201f5ed72514d18a1227be5d34efa2421a", "html_url": "https://github.com/google/oauth2client/commit/c66e4f201f5ed72514d18a1227be5d34efa2421a"}]}, {"sha": "c66e4f201f5ed72514d18a1227be5d34efa2421a", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-21T17:46:12Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-21T17:46:12Z"}, "message": "Merge pull request #430 from dhermes/remove-self-fail\n\nRemoving all uses of self.fail().", "tree": {"sha": "4d732a20f1e5776d8780a9323675e5b625b1254f", "url": "https://api.github.com/repos/google/oauth2client/git/trees/4d732a20f1e5776d8780a9323675e5b625b1254f"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/c66e4f201f5ed72514d18a1227be5d34efa2421a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/c66e4f201f5ed72514d18a1227be5d34efa2421a", "html_url": "https://github.com/google/oauth2client/commit/c66e4f201f5ed72514d18a1227be5d34efa2421a", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/c66e4f201f5ed72514d18a1227be5d34efa2421a/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f1821653d63c68e657965da4525f04a846c18d0", "url": "https://api.github.com/repos/google/oauth2client/commits/1f1821653d63c68e657965da4525f04a846c18d0", "html_url": "https://github.com/google/oauth2client/commit/1f1821653d63c68e657965da4525f04a846c18d0"}, {"sha": "9bc46ed446436c8ade9df4a2de41d7dca9357167", "url": "https://api.github.com/repos/google/oauth2client/commits/9bc46ed446436c8ade9df4a2de41d7dca9357167", "html_url": "https://github.com/google/oauth2client/commit/9bc46ed446436c8ade9df4a2de41d7dca9357167"}]}, {"sha": "9bc46ed446436c8ade9df4a2de41d7dca9357167", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-20T19:14:57Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-20T19:14:57Z"}, "message": "Removing all uses of self.fail().\n\nReplacing instead with assertRaises statements.", "tree": {"sha": "4d732a20f1e5776d8780a9323675e5b625b1254f", "url": "https://api.github.com/repos/google/oauth2client/git/trees/4d732a20f1e5776d8780a9323675e5b625b1254f"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/9bc46ed446436c8ade9df4a2de41d7dca9357167", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/9bc46ed446436c8ade9df4a2de41d7dca9357167", "html_url": "https://github.com/google/oauth2client/commit/9bc46ed446436c8ade9df4a2de41d7dca9357167", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/9bc46ed446436c8ade9df4a2de41d7dca9357167/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f1821653d63c68e657965da4525f04a846c18d0", "url": "https://api.github.com/repos/google/oauth2client/commits/1f1821653d63c68e657965da4525f04a846c18d0", "html_url": "https://github.com/google/oauth2client/commit/1f1821653d63c68e657965da4525f04a846c18d0"}]}, {"sha": "1f1821653d63c68e657965da4525f04a846c18d0", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-20T18:16:17Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-20T18:16:17Z"}, "message": "Merge pull request #426 from dhermes/run-with-360\n\nAllowing default flags in run_flow().", "tree": {"sha": "b07ed9a371cfce4e985e99d03a54b9bc1f067467", "url": "https://api.github.com/repos/google/oauth2client/git/trees/b07ed9a371cfce4e985e99d03a54b9bc1f067467"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/1f1821653d63c68e657965da4525f04a846c18d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/1f1821653d63c68e657965da4525f04a846c18d0", "html_url": "https://github.com/google/oauth2client/commit/1f1821653d63c68e657965da4525f04a846c18d0", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/1f1821653d63c68e657965da4525f04a846c18d0/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5f41392b20599fec55b8ac8611646c1ad93a5d7", "url": "https://api.github.com/repos/google/oauth2client/commits/d5f41392b20599fec55b8ac8611646c1ad93a5d7", "html_url": "https://github.com/google/oauth2client/commit/d5f41392b20599fec55b8ac8611646c1ad93a5d7"}, {"sha": "98df500a29157ccaa3f6bdf4517d57a5be8e85f1", "url": "https://api.github.com/repos/google/oauth2client/commits/98df500a29157ccaa3f6bdf4517d57a5be8e85f1", "html_url": "https://github.com/google/oauth2client/commit/98df500a29157ccaa3f6bdf4517d57a5be8e85f1"}]}, {"sha": "98df500a29157ccaa3f6bdf4517d57a5be8e85f1", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-20T01:50:37Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-20T01:50:37Z"}, "message": "Allowing default flags in run_flow().", "tree": {"sha": "b07ed9a371cfce4e985e99d03a54b9bc1f067467", "url": "https://api.github.com/repos/google/oauth2client/git/trees/b07ed9a371cfce4e985e99d03a54b9bc1f067467"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/98df500a29157ccaa3f6bdf4517d57a5be8e85f1", "comment_count": 2, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/98df500a29157ccaa3f6bdf4517d57a5be8e85f1", "html_url": "https://github.com/google/oauth2client/commit/98df500a29157ccaa3f6bdf4517d57a5be8e85f1", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/98df500a29157ccaa3f6bdf4517d57a5be8e85f1/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5f41392b20599fec55b8ac8611646c1ad93a5d7", "url": "https://api.github.com/repos/google/oauth2client/commits/d5f41392b20599fec55b8ac8611646c1ad93a5d7", "html_url": "https://github.com/google/oauth2client/commit/d5f41392b20599fec55b8ac8611646c1ad93a5d7"}]}, {"sha": "d5f41392b20599fec55b8ac8611646c1ad93a5d7", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-20T01:39:30Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-20T01:39:30Z"}, "message": "Merge pull request #425 from jonparrott/fix-gce-tests\n\nFix GCE system tests", "tree": {"sha": "560b920b9b65d26b0f5c2914ef276ff1eb09b9ee", "url": "https://api.github.com/repos/google/oauth2client/git/trees/560b920b9b65d26b0f5c2914ef276ff1eb09b9ee"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/d5f41392b20599fec55b8ac8611646c1ad93a5d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/d5f41392b20599fec55b8ac8611646c1ad93a5d7", "html_url": "https://github.com/google/oauth2client/commit/d5f41392b20599fec55b8ac8611646c1ad93a5d7", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/d5f41392b20599fec55b8ac8611646c1ad93a5d7/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e51daefab6ec88b36827d8d0b06f8827e7615cd6", "url": "https://api.github.com/repos/google/oauth2client/commits/e51daefab6ec88b36827d8d0b06f8827e7615cd6", "html_url": "https://github.com/google/oauth2client/commit/e51daefab6ec88b36827d8d0b06f8827e7615cd6"}, {"sha": "3110793306b49f901b8009c15a3637b5b96822f1", "url": "https://api.github.com/repos/google/oauth2client/commits/3110793306b49f901b8009c15a3637b5b96822f1", "html_url": "https://github.com/google/oauth2client/commit/3110793306b49f901b8009c15a3637b5b96822f1"}]}, {"sha": "e51daefab6ec88b36827d8d0b06f8827e7615cd6", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-20T01:20:39Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-20T01:20:39Z"}, "message": "Merge pull request #419 from dhermes/fix-gce-acquire-2\n\nStop sending scopes in token requests on GCE", "tree": {"sha": "7b2b54a3406dd44bc30da7b1da29a70213a1e1d5", "url": "https://api.github.com/repos/google/oauth2client/git/trees/7b2b54a3406dd44bc30da7b1da29a70213a1e1d5"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/e51daefab6ec88b36827d8d0b06f8827e7615cd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/e51daefab6ec88b36827d8d0b06f8827e7615cd6", "html_url": "https://github.com/google/oauth2client/commit/e51daefab6ec88b36827d8d0b06f8827e7615cd6", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/e51daefab6ec88b36827d8d0b06f8827e7615cd6/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64e593e20ddb20f4f88d33c632114927e39e8e6c", "url": "https://api.github.com/repos/google/oauth2client/commits/64e593e20ddb20f4f88d33c632114927e39e8e6c", "html_url": "https://github.com/google/oauth2client/commit/64e593e20ddb20f4f88d33c632114927e39e8e6c"}, {"sha": "6319e765dbbcb05542fb181545978045b26f7c34", "url": "https://api.github.com/repos/google/oauth2client/commits/6319e765dbbcb05542fb181545978045b26f7c34", "html_url": "https://github.com/google/oauth2client/commit/6319e765dbbcb05542fb181545978045b26f7c34"}]}, {"sha": "64e593e20ddb20f4f88d33c632114927e39e8e6c", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-20T01:19:06Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-20T01:19:06Z"}, "message": "Merge pull request #424 from dhermes/fix-417\n\nHelpful error message in P12 factory in absence of pyOpenSSL.", "tree": {"sha": "50e2a79df056bc65b7d43e23a80ad15c1426cbeb", "url": "https://api.github.com/repos/google/oauth2client/git/trees/50e2a79df056bc65b7d43e23a80ad15c1426cbeb"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/64e593e20ddb20f4f88d33c632114927e39e8e6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/64e593e20ddb20f4f88d33c632114927e39e8e6c", "html_url": "https://github.com/google/oauth2client/commit/64e593e20ddb20f4f88d33c632114927e39e8e6c", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/64e593e20ddb20f4f88d33c632114927e39e8e6c/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9e16edc459654f88c7a1be04cf6fb381016c9b5", "url": "https://api.github.com/repos/google/oauth2client/commits/f9e16edc459654f88c7a1be04cf6fb381016c9b5", "html_url": "https://github.com/google/oauth2client/commit/f9e16edc459654f88c7a1be04cf6fb381016c9b5"}, {"sha": "b605997beaa6361ab0811ffe62dfaf8de0eed03e", "url": "https://api.github.com/repos/google/oauth2client/commits/b605997beaa6361ab0811ffe62dfaf8de0eed03e", "html_url": "https://github.com/google/oauth2client/commit/b605997beaa6361ab0811ffe62dfaf8de0eed03e"}]}, {"sha": "6319e765dbbcb05542fb181545978045b26f7c34", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T04:20:39Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-20T01:16:30Z"}, "message": "Stop sending scopes in token requests on GCE\n\nAlso check to warn a user when a scope is passed (since scopes\nhave no effect for GCE service accounts).", "tree": {"sha": "0a2a33517c20e1641d9be90fa018e4684e326fc8", "url": "https://api.github.com/repos/google/oauth2client/git/trees/0a2a33517c20e1641d9be90fa018e4684e326fc8"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/6319e765dbbcb05542fb181545978045b26f7c34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/6319e765dbbcb05542fb181545978045b26f7c34", "html_url": "https://github.com/google/oauth2client/commit/6319e765dbbcb05542fb181545978045b26f7c34", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/6319e765dbbcb05542fb181545978045b26f7c34/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9e16edc459654f88c7a1be04cf6fb381016c9b5", "url": "https://api.github.com/repos/google/oauth2client/commits/f9e16edc459654f88c7a1be04cf6fb381016c9b5", "html_url": "https://github.com/google/oauth2client/commit/f9e16edc459654f88c7a1be04cf6fb381016c9b5"}]}, {"sha": "3110793306b49f901b8009c15a3637b5b96822f1", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-02-20T00:51:13Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-02-20T00:52:18Z"}, "message": "Fix GCE system tests\n\ntokeninfo will not tell you the email address for a GCE account. It's sufficient to verify that the token is valid and unexpired.", "tree": {"sha": "f0dbfbc5ace6073e0a17e0c8627d36c3b743b77a", "url": "https://api.github.com/repos/google/oauth2client/git/trees/f0dbfbc5ace6073e0a17e0c8627d36c3b743b77a"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/3110793306b49f901b8009c15a3637b5b96822f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/3110793306b49f901b8009c15a3637b5b96822f1", "html_url": "https://github.com/google/oauth2client/commit/3110793306b49f901b8009c15a3637b5b96822f1", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/3110793306b49f901b8009c15a3637b5b96822f1/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9e16edc459654f88c7a1be04cf6fb381016c9b5", "url": "https://api.github.com/repos/google/oauth2client/commits/f9e16edc459654f88c7a1be04cf6fb381016c9b5", "html_url": "https://github.com/google/oauth2client/commit/f9e16edc459654f88c7a1be04cf6fb381016c9b5"}]}, {"sha": "b605997beaa6361ab0811ffe62dfaf8de0eed03e", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-20T00:37:29Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-20T00:37:29Z"}, "message": "Helpful error message in P12 factory in absence of pyOpenSSL.\n\nFixes #417.", "tree": {"sha": "a2ca012beb2dba8e681e9797d92b82036d7e3309", "url": "https://api.github.com/repos/google/oauth2client/git/trees/a2ca012beb2dba8e681e9797d92b82036d7e3309"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/b605997beaa6361ab0811ffe62dfaf8de0eed03e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/b605997beaa6361ab0811ffe62dfaf8de0eed03e", "html_url": "https://github.com/google/oauth2client/commit/b605997beaa6361ab0811ffe62dfaf8de0eed03e", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/b605997beaa6361ab0811ffe62dfaf8de0eed03e/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85df3253bfcfc8090754d225027f32bc15c640b6", "url": "https://api.github.com/repos/google/oauth2client/commits/85df3253bfcfc8090754d225027f32bc15c640b6", "html_url": "https://github.com/google/oauth2client/commit/85df3253bfcfc8090754d225027f32bc15c640b6"}]}, {"sha": "f9e16edc459654f88c7a1be04cf6fb381016c9b5", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-20T00:12:15Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-20T00:12:15Z"}, "message": "Merge pull request #416 from dhermes/gce-only-system-test\n\nGCE-only system test.", "tree": {"sha": "6179f6b1e9d707ca757aaa92bb862c508e7df78c", "url": "https://api.github.com/repos/google/oauth2client/git/trees/6179f6b1e9d707ca757aaa92bb862c508e7df78c"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/f9e16edc459654f88c7a1be04cf6fb381016c9b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/f9e16edc459654f88c7a1be04cf6fb381016c9b5", "html_url": "https://github.com/google/oauth2client/commit/f9e16edc459654f88c7a1be04cf6fb381016c9b5", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/f9e16edc459654f88c7a1be04cf6fb381016c9b5/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85df3253bfcfc8090754d225027f32bc15c640b6", "url": "https://api.github.com/repos/google/oauth2client/commits/85df3253bfcfc8090754d225027f32bc15c640b6", "html_url": "https://github.com/google/oauth2client/commit/85df3253bfcfc8090754d225027f32bc15c640b6"}, {"sha": "6ce1374533544c6f48fbc33a39c1e8d9d70cdc50", "url": "https://api.github.com/repos/google/oauth2client/commits/6ce1374533544c6f48fbc33a39c1e8d9d70cdc50", "html_url": "https://github.com/google/oauth2client/commit/6ce1374533544c6f48fbc33a39c1e8d9d70cdc50"}]}, {"sha": "85df3253bfcfc8090754d225027f32bc15c640b6", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T23:09:19Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T23:09:19Z"}, "message": "Merge pull request #423 from dhermes/cut-2.0.0-post1\n\nRelease v2.0.0-post1.", "tree": {"sha": "fbecde88f0c9f4e6bcca0589d2e634fca537f9f1", "url": "https://api.github.com/repos/google/oauth2client/git/trees/fbecde88f0c9f4e6bcca0589d2e634fca537f9f1"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/85df3253bfcfc8090754d225027f32bc15c640b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/85df3253bfcfc8090754d225027f32bc15c640b6", "html_url": "https://github.com/google/oauth2client/commit/85df3253bfcfc8090754d225027f32bc15c640b6", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/85df3253bfcfc8090754d225027f32bc15c640b6/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c7996099f9e3d74f7b9a6d32b6f69f44987638a", "url": "https://api.github.com/repos/google/oauth2client/commits/0c7996099f9e3d74f7b9a6d32b6f69f44987638a", "html_url": "https://github.com/google/oauth2client/commit/0c7996099f9e3d74f7b9a6d32b6f69f44987638a"}, {"sha": "d9cf4b7a9adf380505baa2695263ffe360994279", "url": "https://api.github.com/repos/google/oauth2client/commits/d9cf4b7a9adf380505baa2695263ffe360994279", "html_url": "https://github.com/google/oauth2client/commit/d9cf4b7a9adf380505baa2695263ffe360994279"}]}, {"sha": "d9cf4b7a9adf380505baa2695263ffe360994279", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T22:57:52Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T22:57:52Z"}, "message": "Release v2.0.0-post1.", "tree": {"sha": "fbecde88f0c9f4e6bcca0589d2e634fca537f9f1", "url": "https://api.github.com/repos/google/oauth2client/git/trees/fbecde88f0c9f4e6bcca0589d2e634fca537f9f1"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/d9cf4b7a9adf380505baa2695263ffe360994279", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/d9cf4b7a9adf380505baa2695263ffe360994279", "html_url": "https://github.com/google/oauth2client/commit/d9cf4b7a9adf380505baa2695263ffe360994279", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/d9cf4b7a9adf380505baa2695263ffe360994279/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c7996099f9e3d74f7b9a6d32b6f69f44987638a", "url": "https://api.github.com/repos/google/oauth2client/commits/0c7996099f9e3d74f7b9a6d32b6f69f44987638a", "html_url": "https://github.com/google/oauth2client/commit/0c7996099f9e3d74f7b9a6d32b6f69f44987638a"}]}, {"sha": "0c7996099f9e3d74f7b9a6d32b6f69f44987638a", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T22:31:09Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T22:31:09Z"}, "message": "Merge pull request #411 from dhermes/fix-gce-acquire\n\nFixing broken token acquire endpoint on GCE.", "tree": {"sha": "06f3fd9b9f54043fbef993ea6d13521f4f16cee8", "url": "https://api.github.com/repos/google/oauth2client/git/trees/06f3fd9b9f54043fbef993ea6d13521f4f16cee8"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/0c7996099f9e3d74f7b9a6d32b6f69f44987638a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/0c7996099f9e3d74f7b9a6d32b6f69f44987638a", "html_url": "https://github.com/google/oauth2client/commit/0c7996099f9e3d74f7b9a6d32b6f69f44987638a", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/0c7996099f9e3d74f7b9a6d32b6f69f44987638a/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24241309cae7cb6b3ca5ff8ee32cc26d69bddaf8", "url": "https://api.github.com/repos/google/oauth2client/commits/24241309cae7cb6b3ca5ff8ee32cc26d69bddaf8", "html_url": "https://github.com/google/oauth2client/commit/24241309cae7cb6b3ca5ff8ee32cc26d69bddaf8"}, {"sha": "a2857cb1352b37f7d6bfb5fcbf2e1067e589b56a", "url": "https://api.github.com/repos/google/oauth2client/commits/a2857cb1352b37f7d6bfb5fcbf2e1067e589b56a", "html_url": "https://github.com/google/oauth2client/commit/a2857cb1352b37f7d6bfb5fcbf2e1067e589b56a"}]}, {"sha": "24241309cae7cb6b3ca5ff8ee32cc26d69bddaf8", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T22:27:47Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T22:27:47Z"}, "message": "Merge pull request #420 from dhermes/fix-418\n\nImplementing ServiceAccountCredentials.create_delegated().", "tree": {"sha": "96e77e287b0b7ae9ca79f52e2e5942e8bd70d42e", "url": "https://api.github.com/repos/google/oauth2client/git/trees/96e77e287b0b7ae9ca79f52e2e5942e8bd70d42e"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/24241309cae7cb6b3ca5ff8ee32cc26d69bddaf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/24241309cae7cb6b3ca5ff8ee32cc26d69bddaf8", "html_url": "https://github.com/google/oauth2client/commit/24241309cae7cb6b3ca5ff8ee32cc26d69bddaf8", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/24241309cae7cb6b3ca5ff8ee32cc26d69bddaf8/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a16a4785c243965aef49065062368781a7caeca3", "url": "https://api.github.com/repos/google/oauth2client/commits/a16a4785c243965aef49065062368781a7caeca3", "html_url": "https://github.com/google/oauth2client/commit/a16a4785c243965aef49065062368781a7caeca3"}, {"sha": "affd75c806f0ad089a02c9f1c94d2cad08f7ea6b", "url": "https://api.github.com/repos/google/oauth2client/commits/affd75c806f0ad089a02c9f1c94d2cad08f7ea6b", "html_url": "https://github.com/google/oauth2client/commit/affd75c806f0ad089a02c9f1c94d2cad08f7ea6b"}]}, {"sha": "affd75c806f0ad089a02c9f1c94d2cad08f7ea6b", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T19:25:28Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T20:00:21Z"}, "message": "Implementing ServiceAccountCredentials.create_delegated().\n\nFixes #418.", "tree": {"sha": "96e77e287b0b7ae9ca79f52e2e5942e8bd70d42e", "url": "https://api.github.com/repos/google/oauth2client/git/trees/96e77e287b0b7ae9ca79f52e2e5942e8bd70d42e"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/affd75c806f0ad089a02c9f1c94d2cad08f7ea6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/affd75c806f0ad089a02c9f1c94d2cad08f7ea6b", "html_url": "https://github.com/google/oauth2client/commit/affd75c806f0ad089a02c9f1c94d2cad08f7ea6b", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/affd75c806f0ad089a02c9f1c94d2cad08f7ea6b/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a16a4785c243965aef49065062368781a7caeca3", "url": "https://api.github.com/repos/google/oauth2client/commits/a16a4785c243965aef49065062368781a7caeca3", "html_url": "https://github.com/google/oauth2client/commit/a16a4785c243965aef49065062368781a7caeca3"}]}, {"sha": "a2857cb1352b37f7d6bfb5fcbf2e1067e589b56a", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T18:46:11Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T18:46:11Z"}, "message": "Fixing broken token acquire endpoint on GCE.", "tree": {"sha": "e0fab8cdc19a16057ce2b692e1dd6f2a2b4acefb", "url": "https://api.github.com/repos/google/oauth2client/git/trees/e0fab8cdc19a16057ce2b692e1dd6f2a2b4acefb"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/a2857cb1352b37f7d6bfb5fcbf2e1067e589b56a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/a2857cb1352b37f7d6bfb5fcbf2e1067e589b56a", "html_url": "https://github.com/google/oauth2client/commit/a2857cb1352b37f7d6bfb5fcbf2e1067e589b56a", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/a2857cb1352b37f7d6bfb5fcbf2e1067e589b56a/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a16a4785c243965aef49065062368781a7caeca3", "url": "https://api.github.com/repos/google/oauth2client/commits/a16a4785c243965aef49065062368781a7caeca3", "html_url": "https://github.com/google/oauth2client/commit/a16a4785c243965aef49065062368781a7caeca3"}]}, {"sha": "a16a4785c243965aef49065062368781a7caeca3", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T17:42:08Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T17:42:08Z"}, "message": "Merge pull request #415 from dhermes/tox-remove-gae-python\n\nMaking GAE_PYTHON optional in tox config.", "tree": {"sha": "f9c3e942ff34c03a6923b42d79b30edd912a81d4", "url": "https://api.github.com/repos/google/oauth2client/git/trees/f9c3e942ff34c03a6923b42d79b30edd912a81d4"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/a16a4785c243965aef49065062368781a7caeca3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/a16a4785c243965aef49065062368781a7caeca3", "html_url": "https://github.com/google/oauth2client/commit/a16a4785c243965aef49065062368781a7caeca3", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/a16a4785c243965aef49065062368781a7caeca3/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab9173b220f1b88a9a9eaa7ee0133e60b7bffff6", "url": "https://api.github.com/repos/google/oauth2client/commits/ab9173b220f1b88a9a9eaa7ee0133e60b7bffff6", "html_url": "https://github.com/google/oauth2client/commit/ab9173b220f1b88a9a9eaa7ee0133e60b7bffff6"}, {"sha": "f64075678a432639b1b1e8d6334e61ae8570e3c0", "url": "https://api.github.com/repos/google/oauth2client/commits/f64075678a432639b1b1e8d6334e61ae8570e3c0", "html_url": "https://github.com/google/oauth2client/commit/f64075678a432639b1b1e8d6334e61ae8570e3c0"}]}, {"sha": "6ce1374533544c6f48fbc33a39c1e8d9d70cdc50", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T04:41:33Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T04:43:18Z"}, "message": "Adding GCE-only system test.", "tree": {"sha": "5f6c888d1dce936caf2e98b1ed1aa24050aff1bd", "url": "https://api.github.com/repos/google/oauth2client/git/trees/5f6c888d1dce936caf2e98b1ed1aa24050aff1bd"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/6ce1374533544c6f48fbc33a39c1e8d9d70cdc50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/6ce1374533544c6f48fbc33a39c1e8d9d70cdc50", "html_url": "https://github.com/google/oauth2client/commit/6ce1374533544c6f48fbc33a39c1e8d9d70cdc50", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/6ce1374533544c6f48fbc33a39c1e8d9d70cdc50/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab9173b220f1b88a9a9eaa7ee0133e60b7bffff6", "url": "https://api.github.com/repos/google/oauth2client/commits/ab9173b220f1b88a9a9eaa7ee0133e60b7bffff6", "html_url": "https://github.com/google/oauth2client/commit/ab9173b220f1b88a9a9eaa7ee0133e60b7bffff6"}]}, {"sha": "f64075678a432639b1b1e8d6334e61ae8570e3c0", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-17T22:18:59Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-19T03:21:51Z"}, "message": "Making GAE_PYTHON optional in tox config.\n\nAlso using --gae-lib-root instead of setting the PYTHONPATH.", "tree": {"sha": "f9c3e942ff34c03a6923b42d79b30edd912a81d4", "url": "https://api.github.com/repos/google/oauth2client/git/trees/f9c3e942ff34c03a6923b42d79b30edd912a81d4"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/f64075678a432639b1b1e8d6334e61ae8570e3c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/f64075678a432639b1b1e8d6334e61ae8570e3c0", "html_url": "https://github.com/google/oauth2client/commit/f64075678a432639b1b1e8d6334e61ae8570e3c0", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/f64075678a432639b1b1e8d6334e61ae8570e3c0/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab9173b220f1b88a9a9eaa7ee0133e60b7bffff6", "url": "https://api.github.com/repos/google/oauth2client/commits/ab9173b220f1b88a9a9eaa7ee0133e60b7bffff6", "html_url": "https://github.com/google/oauth2client/commit/ab9173b220f1b88a9a9eaa7ee0133e60b7bffff6"}]}, {"sha": "ab9173b220f1b88a9a9eaa7ee0133e60b7bffff6", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-18T12:31:44Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-18T12:31:44Z"}, "message": "Merge pull request #413 from dhermes/fix-412\n\nImplement ServiceAccountCredentials.from_p12_keyfile_buffer().", "tree": {"sha": "f01e2ea2dbafa176ca7dae708ad4205fda124ea2", "url": "https://api.github.com/repos/google/oauth2client/git/trees/f01e2ea2dbafa176ca7dae708ad4205fda124ea2"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/ab9173b220f1b88a9a9eaa7ee0133e60b7bffff6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/ab9173b220f1b88a9a9eaa7ee0133e60b7bffff6", "html_url": "https://github.com/google/oauth2client/commit/ab9173b220f1b88a9a9eaa7ee0133e60b7bffff6", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/ab9173b220f1b88a9a9eaa7ee0133e60b7bffff6/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32de1342e656362dc75d3dd13a3a99a9496bebe6", "url": "https://api.github.com/repos/google/oauth2client/commits/32de1342e656362dc75d3dd13a3a99a9496bebe6", "html_url": "https://github.com/google/oauth2client/commit/32de1342e656362dc75d3dd13a3a99a9496bebe6"}, {"sha": "d13fc7dbbd00ce411f734653fb711e48dff5ba6d", "url": "https://api.github.com/repos/google/oauth2client/commits/d13fc7dbbd00ce411f734653fb711e48dff5ba6d", "html_url": "https://github.com/google/oauth2client/commit/d13fc7dbbd00ce411f734653fb711e48dff5ba6d"}]}, {"sha": "d13fc7dbbd00ce411f734653fb711e48dff5ba6d", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-17T22:22:10Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-17T22:22:10Z"}, "message": "Implement ServiceAccountCredentials.from_p12_keyfile_buffer().\n\nFixes #412.", "tree": {"sha": "f01e2ea2dbafa176ca7dae708ad4205fda124ea2", "url": "https://api.github.com/repos/google/oauth2client/git/trees/f01e2ea2dbafa176ca7dae708ad4205fda124ea2"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/d13fc7dbbd00ce411f734653fb711e48dff5ba6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/d13fc7dbbd00ce411f734653fb711e48dff5ba6d", "html_url": "https://github.com/google/oauth2client/commit/d13fc7dbbd00ce411f734653fb711e48dff5ba6d", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/d13fc7dbbd00ce411f734653fb711e48dff5ba6d/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32de1342e656362dc75d3dd13a3a99a9496bebe6", "url": "https://api.github.com/repos/google/oauth2client/commits/32de1342e656362dc75d3dd13a3a99a9496bebe6", "html_url": "https://github.com/google/oauth2client/commit/32de1342e656362dc75d3dd13a3a99a9496bebe6"}]}, {"sha": "32de1342e656362dc75d3dd13a3a99a9496bebe6", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-17T16:40:18Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-17T16:40:18Z"}, "message": "Merge pull request #410 from nathanielmanistaatgoogle/symbolic-constant\n\nUse symbolic constant rather than literal value.", "tree": {"sha": "db3a90af0b2ab689c4cae5a40916c0f5e0c4e71c", "url": "https://api.github.com/repos/google/oauth2client/git/trees/db3a90af0b2ab689c4cae5a40916c0f5e0c4e71c"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/32de1342e656362dc75d3dd13a3a99a9496bebe6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/32de1342e656362dc75d3dd13a3a99a9496bebe6", "html_url": "https://github.com/google/oauth2client/commit/32de1342e656362dc75d3dd13a3a99a9496bebe6", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/32de1342e656362dc75d3dd13a3a99a9496bebe6/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64988308adae6b479ebde3502c676d05ac4596e6", "url": "https://api.github.com/repos/google/oauth2client/commits/64988308adae6b479ebde3502c676d05ac4596e6", "html_url": "https://github.com/google/oauth2client/commit/64988308adae6b479ebde3502c676d05ac4596e6"}, {"sha": "5f799aa16b2bfd35fc68073e73b85cf9ad75ba47", "url": "https://api.github.com/repos/google/oauth2client/commits/5f799aa16b2bfd35fc68073e73b85cf9ad75ba47", "html_url": "https://github.com/google/oauth2client/commit/5f799aa16b2bfd35fc68073e73b85cf9ad75ba47"}]}, {"sha": "64988308adae6b479ebde3502c676d05ac4596e6", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-17T16:24:05Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-17T16:24:05Z"}, "message": "Merge pull request #409 from nathanielmanistaatgoogle/cosmetics\n\nCosmetic tweaks.", "tree": {"sha": "99da5b2a95a907313d5517a3998953e8cba9a72d", "url": "https://api.github.com/repos/google/oauth2client/git/trees/99da5b2a95a907313d5517a3998953e8cba9a72d"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/64988308adae6b479ebde3502c676d05ac4596e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/64988308adae6b479ebde3502c676d05ac4596e6", "html_url": "https://github.com/google/oauth2client/commit/64988308adae6b479ebde3502c676d05ac4596e6", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/64988308adae6b479ebde3502c676d05ac4596e6/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82445c31e5f00178f216900a4e0f2b11cd7229ca", "url": "https://api.github.com/repos/google/oauth2client/commits/82445c31e5f00178f216900a4e0f2b11cd7229ca", "html_url": "https://github.com/google/oauth2client/commit/82445c31e5f00178f216900a4e0f2b11cd7229ca"}, {"sha": "b1964dee35e80ac0110f8fd8998855162292731f", "url": "https://api.github.com/repos/google/oauth2client/commits/b1964dee35e80ac0110f8fd8998855162292731f", "html_url": "https://github.com/google/oauth2client/commit/b1964dee35e80ac0110f8fd8998855162292731f"}]}, {"sha": "5f799aa16b2bfd35fc68073e73b85cf9ad75ba47", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-16T23:04:52Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-16T23:04:52Z"}, "message": "Use symbolic constant rather than literal value", "tree": {"sha": "096af5fbaf8601bddfccbcb9ceb63bfbcd9b2704", "url": "https://api.github.com/repos/google/oauth2client/git/trees/096af5fbaf8601bddfccbcb9ceb63bfbcd9b2704"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/5f799aa16b2bfd35fc68073e73b85cf9ad75ba47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/5f799aa16b2bfd35fc68073e73b85cf9ad75ba47", "html_url": "https://github.com/google/oauth2client/commit/5f799aa16b2bfd35fc68073e73b85cf9ad75ba47", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/5f799aa16b2bfd35fc68073e73b85cf9ad75ba47/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82445c31e5f00178f216900a4e0f2b11cd7229ca", "url": "https://api.github.com/repos/google/oauth2client/commits/82445c31e5f00178f216900a4e0f2b11cd7229ca", "html_url": "https://github.com/google/oauth2client/commit/82445c31e5f00178f216900a4e0f2b11cd7229ca"}]}, {"sha": "b1964dee35e80ac0110f8fd8998855162292731f", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-16T22:53:18Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-16T22:53:18Z"}, "message": "Cosmetic tweaks\n\nUnnecessary (and embarrassingly out-of-date) shebang lines are dropped.\nLicense headers are trimmed to not have single-octothorpe lines above\nor below. The xsrfutil_test module doc string is trimmed of repeated\ninformation and placed properly after a blank line following the\nlicense header.", "tree": {"sha": "99da5b2a95a907313d5517a3998953e8cba9a72d", "url": "https://api.github.com/repos/google/oauth2client/git/trees/99da5b2a95a907313d5517a3998953e8cba9a72d"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/b1964dee35e80ac0110f8fd8998855162292731f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/b1964dee35e80ac0110f8fd8998855162292731f", "html_url": "https://github.com/google/oauth2client/commit/b1964dee35e80ac0110f8fd8998855162292731f", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/b1964dee35e80ac0110f8fd8998855162292731f/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82445c31e5f00178f216900a4e0f2b11cd7229ca", "url": "https://api.github.com/repos/google/oauth2client/commits/82445c31e5f00178f216900a4e0f2b11cd7229ca", "html_url": "https://github.com/google/oauth2client/commit/82445c31e5f00178f216900a4e0f2b11cd7229ca"}]}, {"sha": "82445c31e5f00178f216900a4e0f2b11cd7229ca", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-16T19:11:10Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-16T19:11:10Z"}, "message": "Merge pull request #404 from nathanielmanistaatgoogle/release-2.0.0\n\nRelease 2.0.0.", "tree": {"sha": "b3957fe5d11544c2b18de3a979073e8e8ae1e2db", "url": "https://api.github.com/repos/google/oauth2client/git/trees/b3957fe5d11544c2b18de3a979073e8e8ae1e2db"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/82445c31e5f00178f216900a4e0f2b11cd7229ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/82445c31e5f00178f216900a4e0f2b11cd7229ca", "html_url": "https://github.com/google/oauth2client/commit/82445c31e5f00178f216900a4e0f2b11cd7229ca", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/82445c31e5f00178f216900a4e0f2b11cd7229ca/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5010a4b88485624ed815e1a2535240835412e4d1", "url": "https://api.github.com/repos/google/oauth2client/commits/5010a4b88485624ed815e1a2535240835412e4d1", "html_url": "https://github.com/google/oauth2client/commit/5010a4b88485624ed815e1a2535240835412e4d1"}, {"sha": "ed6a8ef3e6f48acfb6975e27f044e94552a89444", "url": "https://api.github.com/repos/google/oauth2client/commits/ed6a8ef3e6f48acfb6975e27f044e94552a89444", "html_url": "https://github.com/google/oauth2client/commit/ed6a8ef3e6f48acfb6975e27f044e94552a89444"}]}, {"sha": "5010a4b88485624ed815e1a2535240835412e4d1", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-13T02:05:57Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-13T02:05:57Z"}, "message": "Merge pull request #406 from dhermes/fix-405\n\nFixing bug where '=' was stripped from signed bytes.", "tree": {"sha": "07010978578f9fcf3dbb78993f0aa7e6f499713a", "url": "https://api.github.com/repos/google/oauth2client/git/trees/07010978578f9fcf3dbb78993f0aa7e6f499713a"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/5010a4b88485624ed815e1a2535240835412e4d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/5010a4b88485624ed815e1a2535240835412e4d1", "html_url": "https://github.com/google/oauth2client/commit/5010a4b88485624ed815e1a2535240835412e4d1", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/5010a4b88485624ed815e1a2535240835412e4d1/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b13ab40a01adacf0075fd52f95173abb33297254", "url": "https://api.github.com/repos/google/oauth2client/commits/b13ab40a01adacf0075fd52f95173abb33297254", "html_url": "https://github.com/google/oauth2client/commit/b13ab40a01adacf0075fd52f95173abb33297254"}, {"sha": "dc31ec4aa8b1ee76277a255179e879f4fa2950a1", "url": "https://api.github.com/repos/google/oauth2client/commits/dc31ec4aa8b1ee76277a255179e879f4fa2950a1", "html_url": "https://github.com/google/oauth2client/commit/dc31ec4aa8b1ee76277a255179e879f4fa2950a1"}]}, {"sha": "ed6a8ef3e6f48acfb6975e27f044e94552a89444", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-11T23:32:18Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-13T01:54:51Z"}, "message": "Release 2.0.0", "tree": {"sha": "adb8c4edec366cd9773cbbbafbcf385af5082582", "url": "https://api.github.com/repos/google/oauth2client/git/trees/adb8c4edec366cd9773cbbbafbcf385af5082582"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/ed6a8ef3e6f48acfb6975e27f044e94552a89444", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/ed6a8ef3e6f48acfb6975e27f044e94552a89444", "html_url": "https://github.com/google/oauth2client/commit/ed6a8ef3e6f48acfb6975e27f044e94552a89444", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/ed6a8ef3e6f48acfb6975e27f044e94552a89444/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b13ab40a01adacf0075fd52f95173abb33297254", "url": "https://api.github.com/repos/google/oauth2client/commits/b13ab40a01adacf0075fd52f95173abb33297254", "html_url": "https://github.com/google/oauth2client/commit/b13ab40a01adacf0075fd52f95173abb33297254"}]}, {"sha": "dc31ec4aa8b1ee76277a255179e879f4fa2950a1", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-12T23:34:59Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-12T23:34:59Z"}, "message": "Fixing bug where '=' was stripped from signed bytes.\n\nFixes #405.", "tree": {"sha": "07010978578f9fcf3dbb78993f0aa7e6f499713a", "url": "https://api.github.com/repos/google/oauth2client/git/trees/07010978578f9fcf3dbb78993f0aa7e6f499713a"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/dc31ec4aa8b1ee76277a255179e879f4fa2950a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/dc31ec4aa8b1ee76277a255179e879f4fa2950a1", "html_url": "https://github.com/google/oauth2client/commit/dc31ec4aa8b1ee76277a255179e879f4fa2950a1", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/dc31ec4aa8b1ee76277a255179e879f4fa2950a1/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b13ab40a01adacf0075fd52f95173abb33297254", "url": "https://api.github.com/repos/google/oauth2client/commits/b13ab40a01adacf0075fd52f95173abb33297254", "html_url": "https://github.com/google/oauth2client/commit/b13ab40a01adacf0075fd52f95173abb33297254"}]}, {"sha": "b13ab40a01adacf0075fd52f95173abb33297254", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-10T00:58:11Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-10T00:58:11Z"}, "message": "Merge pull request #387 from Galabar001/master\n\nLook at the v1 endpoint for the GCE metadata server.", "tree": {"sha": "8fb2a38ae9ef424e1581c199f4ab4b78c715ddd1", "url": "https://api.github.com/repos/google/oauth2client/git/trees/8fb2a38ae9ef424e1581c199f4ab4b78c715ddd1"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/b13ab40a01adacf0075fd52f95173abb33297254", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/b13ab40a01adacf0075fd52f95173abb33297254", "html_url": "https://github.com/google/oauth2client/commit/b13ab40a01adacf0075fd52f95173abb33297254", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/b13ab40a01adacf0075fd52f95173abb33297254/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d46c4697f94cc0275914e95c43c8b22cbad59a8", "url": "https://api.github.com/repos/google/oauth2client/commits/6d46c4697f94cc0275914e95c43c8b22cbad59a8", "html_url": "https://github.com/google/oauth2client/commit/6d46c4697f94cc0275914e95c43c8b22cbad59a8"}, {"sha": "c9809c87f1352f951cc526b83e4b66ced8e8c3ae", "url": "https://api.github.com/repos/google/oauth2client/commits/c9809c87f1352f951cc526b83e4b66ced8e8c3ae", "html_url": "https://github.com/google/oauth2client/commit/c9809c87f1352f951cc526b83e4b66ced8e8c3ae"}]}, {"sha": "c9809c87f1352f951cc526b83e4b66ced8e8c3ae", "commit": {"author": {"name": "Kevin Regan", "email": "regank@google.com", "date": "2016-01-25T23:55:07Z"}, "committer": {"name": "Kevin Regan", "email": "regank@google.com", "date": "2016-02-09T20:56:05Z"}, "message": "Look at the v1 endpoint for the GCE metadata server\n\nWe are updating all uses of the legacy GCE metadata server endpoints\n(0.1 and v1beta) to use the current endpoint.", "tree": {"sha": "bafb2164d07bf77b2a8a6d1403146cf4ca98e5e4", "url": "https://api.github.com/repos/google/oauth2client/git/trees/bafb2164d07bf77b2a8a6d1403146cf4ca98e5e4"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/c9809c87f1352f951cc526b83e4b66ced8e8c3ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/c9809c87f1352f951cc526b83e4b66ced8e8c3ae", "html_url": "https://github.com/google/oauth2client/commit/c9809c87f1352f951cc526b83e4b66ced8e8c3ae", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/c9809c87f1352f951cc526b83e4b66ced8e8c3ae/comments", "author": {"login": "Galabar001", "id": 11302687, "avatar_url": "https://avatars2.githubusercontent.com/u/11302687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Galabar001", "html_url": "https://github.com/Galabar001", "followers_url": "https://api.github.com/users/Galabar001/followers", "following_url": "https://api.github.com/users/Galabar001/following{/other_user}", "gists_url": "https://api.github.com/users/Galabar001/gists{/gist_id}", "starred_url": "https://api.github.com/users/Galabar001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Galabar001/subscriptions", "organizations_url": "https://api.github.com/users/Galabar001/orgs", "repos_url": "https://api.github.com/users/Galabar001/repos", "events_url": "https://api.github.com/users/Galabar001/events{/privacy}", "received_events_url": "https://api.github.com/users/Galabar001/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Galabar001", "id": 11302687, "avatar_url": "https://avatars2.githubusercontent.com/u/11302687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Galabar001", "html_url": "https://github.com/Galabar001", "followers_url": "https://api.github.com/users/Galabar001/followers", "following_url": "https://api.github.com/users/Galabar001/following{/other_user}", "gists_url": "https://api.github.com/users/Galabar001/gists{/gist_id}", "starred_url": "https://api.github.com/users/Galabar001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Galabar001/subscriptions", "organizations_url": "https://api.github.com/users/Galabar001/orgs", "repos_url": "https://api.github.com/users/Galabar001/repos", "events_url": "https://api.github.com/users/Galabar001/events{/privacy}", "received_events_url": "https://api.github.com/users/Galabar001/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d783f1c84aa11ac370104ea3fc25337be798bb47", "url": "https://api.github.com/repos/google/oauth2client/commits/d783f1c84aa11ac370104ea3fc25337be798bb47", "html_url": "https://github.com/google/oauth2client/commit/d783f1c84aa11ac370104ea3fc25337be798bb47"}]}, {"sha": "6d46c4697f94cc0275914e95c43c8b22cbad59a8", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-08T16:13:10Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-08T16:13:10Z"}, "message": "Merge pull request #394 from nathanielmanistaatgoogle/http-code-symbolic-constants\n\nUse symbolic constants rather than literal integer values for HTTP codes.", "tree": {"sha": "3aa6eb8f821994a8d79b02b24d11c6dcc4fe500e", "url": "https://api.github.com/repos/google/oauth2client/git/trees/3aa6eb8f821994a8d79b02b24d11c6dcc4fe500e"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/6d46c4697f94cc0275914e95c43c8b22cbad59a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/6d46c4697f94cc0275914e95c43c8b22cbad59a8", "html_url": "https://github.com/google/oauth2client/commit/6d46c4697f94cc0275914e95c43c8b22cbad59a8", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/6d46c4697f94cc0275914e95c43c8b22cbad59a8/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee06ffb9d33b21ff4143752502269efe2e72b206", "url": "https://api.github.com/repos/google/oauth2client/commits/ee06ffb9d33b21ff4143752502269efe2e72b206", "html_url": "https://github.com/google/oauth2client/commit/ee06ffb9d33b21ff4143752502269efe2e72b206"}, {"sha": "3cbd8e18cbae4bfd5596a637a45a38cbb0d16fe7", "url": "https://api.github.com/repos/google/oauth2client/commits/3cbd8e18cbae4bfd5596a637a45a38cbb0d16fe7", "html_url": "https://github.com/google/oauth2client/commit/3cbd8e18cbae4bfd5596a637a45a38cbb0d16fe7"}]}, {"sha": "ee06ffb9d33b21ff4143752502269efe2e72b206", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-05T18:43:17Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-05T18:43:17Z"}, "message": "Merge pull request #368 from jay0lee/patch-2\n\nUpdated Google URIs.", "tree": {"sha": "0a11f9ec05cd03bc9ea6b1906736b5d3bd15c50f", "url": "https://api.github.com/repos/google/oauth2client/git/trees/0a11f9ec05cd03bc9ea6b1906736b5d3bd15c50f"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/ee06ffb9d33b21ff4143752502269efe2e72b206", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/ee06ffb9d33b21ff4143752502269efe2e72b206", "html_url": "https://github.com/google/oauth2client/commit/ee06ffb9d33b21ff4143752502269efe2e72b206", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/ee06ffb9d33b21ff4143752502269efe2e72b206/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5db0a8b98007cd80381c35fa9bcb267040c1663f", "url": "https://api.github.com/repos/google/oauth2client/commits/5db0a8b98007cd80381c35fa9bcb267040c1663f", "html_url": "https://github.com/google/oauth2client/commit/5db0a8b98007cd80381c35fa9bcb267040c1663f"}, {"sha": "76470e2708cd9f182f131be0da2a3785f9be2ae5", "url": "https://api.github.com/repos/google/oauth2client/commits/76470e2708cd9f182f131be0da2a3785f9be2ae5", "html_url": "https://github.com/google/oauth2client/commit/76470e2708cd9f182f131be0da2a3785f9be2ae5"}]}, {"sha": "76470e2708cd9f182f131be0da2a3785f9be2ae5", "commit": {"author": {"name": "Jay Lee", "email": "jay0lee@gmail.com", "date": "2015-12-31T17:40:28Z"}, "committer": {"name": "Jay Lee", "email": "jay0lee@gmail.com", "date": "2016-02-05T17:19:08Z"}, "message": "-Updated Google URIs\n\nGOOGLE_AUTH_URI update as documented at:\nhttps://developers.google.com/identity/protocols/OAuth2UserAgent#formingtheurl\n\nGOOGLE_TOKEN_URI update as documented at:\nhttps://developers.google.com/identity/protocols/OAuth2InstalledApp#handlingtheresponse\n\nGOOGLE_TOKEN_INFO_URI update as documented at:\nhttps://developers.google.com/identity/protocols/OAuth2UserAgent#tokeninfo-validation\n\n-update client_secrets.json with new URIs\n\n-update unfilled_client_secrets.json with new URIs", "tree": {"sha": "6ecde6b865d4371d8bd065e2efb6349633531ac0", "url": "https://api.github.com/repos/google/oauth2client/git/trees/6ecde6b865d4371d8bd065e2efb6349633531ac0"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/76470e2708cd9f182f131be0da2a3785f9be2ae5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/76470e2708cd9f182f131be0da2a3785f9be2ae5", "html_url": "https://github.com/google/oauth2client/commit/76470e2708cd9f182f131be0da2a3785f9be2ae5", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/76470e2708cd9f182f131be0da2a3785f9be2ae5/comments", "author": {"login": "jay0lee", "id": 4623536, "avatar_url": "https://avatars2.githubusercontent.com/u/4623536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jay0lee", "html_url": "https://github.com/jay0lee", "followers_url": "https://api.github.com/users/jay0lee/followers", "following_url": "https://api.github.com/users/jay0lee/following{/other_user}", "gists_url": "https://api.github.com/users/jay0lee/gists{/gist_id}", "starred_url": "https://api.github.com/users/jay0lee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jay0lee/subscriptions", "organizations_url": "https://api.github.com/users/jay0lee/orgs", "repos_url": "https://api.github.com/users/jay0lee/repos", "events_url": "https://api.github.com/users/jay0lee/events{/privacy}", "received_events_url": "https://api.github.com/users/jay0lee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jay0lee", "id": 4623536, "avatar_url": "https://avatars2.githubusercontent.com/u/4623536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jay0lee", "html_url": "https://github.com/jay0lee", "followers_url": "https://api.github.com/users/jay0lee/followers", "following_url": "https://api.github.com/users/jay0lee/following{/other_user}", "gists_url": "https://api.github.com/users/jay0lee/gists{/gist_id}", "starred_url": "https://api.github.com/users/jay0lee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jay0lee/subscriptions", "organizations_url": "https://api.github.com/users/jay0lee/orgs", "repos_url": "https://api.github.com/users/jay0lee/repos", "events_url": "https://api.github.com/users/jay0lee/events{/privacy}", "received_events_url": "https://api.github.com/users/jay0lee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f385a6c6709f41542e0717881028412bdf4e7b7", "url": "https://api.github.com/repos/google/oauth2client/commits/5f385a6c6709f41542e0717881028412bdf4e7b7", "html_url": "https://github.com/google/oauth2client/commit/5f385a6c6709f41542e0717881028412bdf4e7b7"}]}, {"sha": "5db0a8b98007cd80381c35fa9bcb267040c1663f", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-05T15:46:07Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-05T15:46:07Z"}, "message": "Merge pull request #400 from nathanielmanistaatgoogle/consolidate-service-accounts-v4\n\nRemoved SignedJwtAssertionCredentials.", "tree": {"sha": "6854820216602468a5cc8baf1ff1afdb057c768a", "url": "https://api.github.com/repos/google/oauth2client/git/trees/6854820216602468a5cc8baf1ff1afdb057c768a"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/5db0a8b98007cd80381c35fa9bcb267040c1663f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/5db0a8b98007cd80381c35fa9bcb267040c1663f", "html_url": "https://github.com/google/oauth2client/commit/5db0a8b98007cd80381c35fa9bcb267040c1663f", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/5db0a8b98007cd80381c35fa9bcb267040c1663f/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4418564bdd52ff0cbe28c272fd72bf09426fa414", "url": "https://api.github.com/repos/google/oauth2client/commits/4418564bdd52ff0cbe28c272fd72bf09426fa414", "html_url": "https://github.com/google/oauth2client/commit/4418564bdd52ff0cbe28c272fd72bf09426fa414"}, {"sha": "dcd20c9375308979e45ae280ec102a28d2ca60d1", "url": "https://api.github.com/repos/google/oauth2client/commits/dcd20c9375308979e45ae280ec102a28d2ca60d1", "html_url": "https://github.com/google/oauth2client/commit/dcd20c9375308979e45ae280ec102a28d2ca60d1"}]}, {"sha": "dcd20c9375308979e45ae280ec102a28d2ca60d1", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-05T12:52:32Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-05T15:27:06Z"}, "message": "Removing SignedJwtAssertionCredentials.\n\nThis completes the consolidation of the two service\naccount credentials implementations.\n\nIn the process, also adding test coverage for some untested\ncode paths within the crypto helpers.", "tree": {"sha": "6854820216602468a5cc8baf1ff1afdb057c768a", "url": "https://api.github.com/repos/google/oauth2client/git/trees/6854820216602468a5cc8baf1ff1afdb057c768a"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/dcd20c9375308979e45ae280ec102a28d2ca60d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/dcd20c9375308979e45ae280ec102a28d2ca60d1", "html_url": "https://github.com/google/oauth2client/commit/dcd20c9375308979e45ae280ec102a28d2ca60d1", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/dcd20c9375308979e45ae280ec102a28d2ca60d1/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3391bc91deec3f5d8addc5ca21f3174e2818d79", "url": "https://api.github.com/repos/google/oauth2client/commits/d3391bc91deec3f5d8addc5ca21f3174e2818d79", "html_url": "https://github.com/google/oauth2client/commit/d3391bc91deec3f5d8addc5ca21f3174e2818d79"}]}, {"sha": "4418564bdd52ff0cbe28c272fd72bf09426fa414", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-05T14:24:47Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-05T14:24:47Z"}, "message": "Merge pull request #398 from dhermes/consolidate-service-accounts-v3\n\nImplemented p12 support in ServiceAccountCredentials.", "tree": {"sha": "70a07ffc40aecce0769d5fb46818a5d8fb3c2f39", "url": "https://api.github.com/repos/google/oauth2client/git/trees/70a07ffc40aecce0769d5fb46818a5d8fb3c2f39"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/4418564bdd52ff0cbe28c272fd72bf09426fa414", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/4418564bdd52ff0cbe28c272fd72bf09426fa414", "html_url": "https://github.com/google/oauth2client/commit/4418564bdd52ff0cbe28c272fd72bf09426fa414", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/4418564bdd52ff0cbe28c272fd72bf09426fa414/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85181319f68a11dde804576214abf10b8e93ea8f", "url": "https://api.github.com/repos/google/oauth2client/commits/85181319f68a11dde804576214abf10b8e93ea8f", "html_url": "https://github.com/google/oauth2client/commit/85181319f68a11dde804576214abf10b8e93ea8f"}, {"sha": "d3391bc91deec3f5d8addc5ca21f3174e2818d79", "url": "https://api.github.com/repos/google/oauth2client/commits/d3391bc91deec3f5d8addc5ca21f3174e2818d79", "html_url": "https://github.com/google/oauth2client/commit/d3391bc91deec3f5d8addc5ca21f3174e2818d79"}]}, {"sha": "85181319f68a11dde804576214abf10b8e93ea8f", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-05T14:12:29Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-05T14:12:29Z"}, "message": "Merge pull request #397 from dhermes/consolidate-service-accounts-v2\n\nMade _ServiceAccountCredentials public.", "tree": {"sha": "fc6be7c22c34c178a7c5f42ecee9d8400d7fec66", "url": "https://api.github.com/repos/google/oauth2client/git/trees/fc6be7c22c34c178a7c5f42ecee9d8400d7fec66"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/85181319f68a11dde804576214abf10b8e93ea8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/85181319f68a11dde804576214abf10b8e93ea8f", "html_url": "https://github.com/google/oauth2client/commit/85181319f68a11dde804576214abf10b8e93ea8f", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/85181319f68a11dde804576214abf10b8e93ea8f/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c6938c0ac9391363e90b28f16f1e55418666bf4", "url": "https://api.github.com/repos/google/oauth2client/commits/7c6938c0ac9391363e90b28f16f1e55418666bf4", "html_url": "https://github.com/google/oauth2client/commit/7c6938c0ac9391363e90b28f16f1e55418666bf4"}, {"sha": "91b3c614509be22a3b5f2ab72ae99e5d890c13fe", "url": "https://api.github.com/repos/google/oauth2client/commits/91b3c614509be22a3b5f2ab72ae99e5d890c13fe", "html_url": "https://github.com/google/oauth2client/commit/91b3c614509be22a3b5f2ab72ae99e5d890c13fe"}]}, {"sha": "d3391bc91deec3f5d8addc5ca21f3174e2818d79", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-05T12:20:08Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-05T12:20:08Z"}, "message": "Implementing p12 support in ServiceAccountCredentials.", "tree": {"sha": "70a07ffc40aecce0769d5fb46818a5d8fb3c2f39", "url": "https://api.github.com/repos/google/oauth2client/git/trees/70a07ffc40aecce0769d5fb46818a5d8fb3c2f39"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/d3391bc91deec3f5d8addc5ca21f3174e2818d79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/d3391bc91deec3f5d8addc5ca21f3174e2818d79", "html_url": "https://github.com/google/oauth2client/commit/d3391bc91deec3f5d8addc5ca21f3174e2818d79", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/d3391bc91deec3f5d8addc5ca21f3174e2818d79/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91b3c614509be22a3b5f2ab72ae99e5d890c13fe", "url": "https://api.github.com/repos/google/oauth2client/commits/91b3c614509be22a3b5f2ab72ae99e5d890c13fe", "html_url": "https://github.com/google/oauth2client/commit/91b3c614509be22a3b5f2ab72ae99e5d890c13fe"}]}, {"sha": "91b3c614509be22a3b5f2ab72ae99e5d890c13fe", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-05T02:45:20Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-05T02:45:20Z"}, "message": "Make _ServiceAccountCredentials public.\n\nAlso\n- changing the svc. acct. creds constructor to take a signer\n- adding two factory constructors to build from a JSON keyfile\n  (either by filename or already parsed)\n- adding helpers to avoid re-loading file contents or re-parsing\n  JSON when constructing svc. acct. creds from the main\n  `client` module", "tree": {"sha": "fc6be7c22c34c178a7c5f42ecee9d8400d7fec66", "url": "https://api.github.com/repos/google/oauth2client/git/trees/fc6be7c22c34c178a7c5f42ecee9d8400d7fec66"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/91b3c614509be22a3b5f2ab72ae99e5d890c13fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/91b3c614509be22a3b5f2ab72ae99e5d890c13fe", "html_url": "https://github.com/google/oauth2client/commit/91b3c614509be22a3b5f2ab72ae99e5d890c13fe", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/91b3c614509be22a3b5f2ab72ae99e5d890c13fe/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c6938c0ac9391363e90b28f16f1e55418666bf4", "url": "https://api.github.com/repos/google/oauth2client/commits/7c6938c0ac9391363e90b28f16f1e55418666bf4", "html_url": "https://github.com/google/oauth2client/commit/7c6938c0ac9391363e90b28f16f1e55418666bf4"}]}, {"sha": "7c6938c0ac9391363e90b28f16f1e55418666bf4", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-04T20:04:26Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-04T20:04:26Z"}, "message": "Merge pull request #396 from dhermes/remove-handrolled-svc-acct-crypto\n\nRemoved novel crypto in service_account.py.", "tree": {"sha": "54928856aed5bdecfcca91e8a93b169171b5b3f6", "url": "https://api.github.com/repos/google/oauth2client/git/trees/54928856aed5bdecfcca91e8a93b169171b5b3f6"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/7c6938c0ac9391363e90b28f16f1e55418666bf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/7c6938c0ac9391363e90b28f16f1e55418666bf4", "html_url": "https://github.com/google/oauth2client/commit/7c6938c0ac9391363e90b28f16f1e55418666bf4", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/7c6938c0ac9391363e90b28f16f1e55418666bf4/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f4b7de8d1697a8dd601dd4d2920e88659dd8abc", "url": "https://api.github.com/repos/google/oauth2client/commits/4f4b7de8d1697a8dd601dd4d2920e88659dd8abc", "html_url": "https://github.com/google/oauth2client/commit/4f4b7de8d1697a8dd601dd4d2920e88659dd8abc"}, {"sha": "7219cd776a26e21e6ab4a3a49e1335d5de079a87", "url": "https://api.github.com/repos/google/oauth2client/commits/7219cd776a26e21e6ab4a3a49e1335d5de079a87", "html_url": "https://github.com/google/oauth2client/commit/7219cd776a26e21e6ab4a3a49e1335d5de079a87"}]}, {"sha": "7219cd776a26e21e6ab4a3a49e1335d5de079a87", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-04T19:56:57Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-04T19:59:58Z"}, "message": "Removing novel crypto in service_account.py.", "tree": {"sha": "54928856aed5bdecfcca91e8a93b169171b5b3f6", "url": "https://api.github.com/repos/google/oauth2client/git/trees/54928856aed5bdecfcca91e8a93b169171b5b3f6"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/7219cd776a26e21e6ab4a3a49e1335d5de079a87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/7219cd776a26e21e6ab4a3a49e1335d5de079a87", "html_url": "https://github.com/google/oauth2client/commit/7219cd776a26e21e6ab4a3a49e1335d5de079a87", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/7219cd776a26e21e6ab4a3a49e1335d5de079a87/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f4b7de8d1697a8dd601dd4d2920e88659dd8abc", "url": "https://api.github.com/repos/google/oauth2client/commits/4f4b7de8d1697a8dd601dd4d2920e88659dd8abc", "html_url": "https://github.com/google/oauth2client/commit/4f4b7de8d1697a8dd601dd4d2920e88659dd8abc"}]}, {"sha": "4f4b7de8d1697a8dd601dd4d2920e88659dd8abc", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-04T19:41:24Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-04T19:41:24Z"}, "message": "Merge pull request #395 from dhermes/pure-python-crypt\n\nAdded a pure Python crypt sub-module.", "tree": {"sha": "65249c6f2956ef124d851c50b64864a45e470868", "url": "https://api.github.com/repos/google/oauth2client/git/trees/65249c6f2956ef124d851c50b64864a45e470868"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/4f4b7de8d1697a8dd601dd4d2920e88659dd8abc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/4f4b7de8d1697a8dd601dd4d2920e88659dd8abc", "html_url": "https://github.com/google/oauth2client/commit/4f4b7de8d1697a8dd601dd4d2920e88659dd8abc", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/4f4b7de8d1697a8dd601dd4d2920e88659dd8abc/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bd85220faf18349fd4ba0d4a02a1588bcf0f1f6", "url": "https://api.github.com/repos/google/oauth2client/commits/9bd85220faf18349fd4ba0d4a02a1588bcf0f1f6", "html_url": "https://github.com/google/oauth2client/commit/9bd85220faf18349fd4ba0d4a02a1588bcf0f1f6"}, {"sha": "e676a025c415ceb639a9bd4d225d34fca99840ce", "url": "https://api.github.com/repos/google/oauth2client/commits/e676a025c415ceb639a9bd4d225d34fca99840ce", "html_url": "https://github.com/google/oauth2client/commit/e676a025c415ceb639a9bd4d225d34fca99840ce"}]}, {"sha": "e676a025c415ceb639a9bd4d225d34fca99840ce", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-04T19:29:07Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-02-04T19:29:07Z"}, "message": "Adding a pure Python crypt sub-module.\n\nResurrects #1.", "tree": {"sha": "65249c6f2956ef124d851c50b64864a45e470868", "url": "https://api.github.com/repos/google/oauth2client/git/trees/65249c6f2956ef124d851c50b64864a45e470868"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/e676a025c415ceb639a9bd4d225d34fca99840ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/e676a025c415ceb639a9bd4d225d34fca99840ce", "html_url": "https://github.com/google/oauth2client/commit/e676a025c415ceb639a9bd4d225d34fca99840ce", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/e676a025c415ceb639a9bd4d225d34fca99840ce/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bd85220faf18349fd4ba0d4a02a1588bcf0f1f6", "url": "https://api.github.com/repos/google/oauth2client/commits/9bd85220faf18349fd4ba0d4a02a1588bcf0f1f6", "html_url": "https://github.com/google/oauth2client/commit/9bd85220faf18349fd4ba0d4a02a1588bcf0f1f6"}]}, {"sha": "3cbd8e18cbae4bfd5596a637a45a38cbb0d16fe7", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-04T18:35:38Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-02-04T18:55:30Z"}, "message": "Use symbolic constants for HTTP codes", "tree": {"sha": "fe5b18a140af6c1d904149690c3dda3b4e48ca58", "url": "https://api.github.com/repos/google/oauth2client/git/trees/fe5b18a140af6c1d904149690c3dda3b4e48ca58"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/3cbd8e18cbae4bfd5596a637a45a38cbb0d16fe7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/3cbd8e18cbae4bfd5596a637a45a38cbb0d16fe7", "html_url": "https://github.com/google/oauth2client/commit/3cbd8e18cbae4bfd5596a637a45a38cbb0d16fe7", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/3cbd8e18cbae4bfd5596a637a45a38cbb0d16fe7/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bd85220faf18349fd4ba0d4a02a1588bcf0f1f6", "url": "https://api.github.com/repos/google/oauth2client/commits/9bd85220faf18349fd4ba0d4a02a1588bcf0f1f6", "html_url": "https://github.com/google/oauth2client/commit/9bd85220faf18349fd4ba0d4a02a1588bcf0f1f6"}]}, {"sha": "9bd85220faf18349fd4ba0d4a02a1588bcf0f1f6", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-01-29T16:45:44Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-01-29T16:45:44Z"}, "message": "Merge pull request #389 from thobrla/master\n\nFall back to read-only credentials on EACCES errors.", "tree": {"sha": "d9cad0c2628281e7003bbddbbf4aff058227b968", "url": "https://api.github.com/repos/google/oauth2client/git/trees/d9cad0c2628281e7003bbddbbf4aff058227b968"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/9bd85220faf18349fd4ba0d4a02a1588bcf0f1f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/9bd85220faf18349fd4ba0d4a02a1588bcf0f1f6", "html_url": "https://github.com/google/oauth2client/commit/9bd85220faf18349fd4ba0d4a02a1588bcf0f1f6", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/9bd85220faf18349fd4ba0d4a02a1588bcf0f1f6/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b6e72ea0952f16b848c6bb7a21dd620da1b0a3c", "url": "https://api.github.com/repos/google/oauth2client/commits/0b6e72ea0952f16b848c6bb7a21dd620da1b0a3c", "html_url": "https://github.com/google/oauth2client/commit/0b6e72ea0952f16b848c6bb7a21dd620da1b0a3c"}, {"sha": "4f5a9baa083e69605c3aeaa7435e278c75f78b3a", "url": "https://api.github.com/repos/google/oauth2client/commits/4f5a9baa083e69605c3aeaa7435e278c75f78b3a", "html_url": "https://github.com/google/oauth2client/commit/4f5a9baa083e69605c3aeaa7435e278c75f78b3a"}]}, {"sha": "4f5a9baa083e69605c3aeaa7435e278c75f78b3a", "commit": {"author": {"name": "Travis Hobrla", "email": "thobrla@google.com", "date": "2016-01-28T18:53:24Z"}, "committer": {"name": "Travis Hobrla", "email": "thobrla@google.com", "date": "2016-01-28T18:53:27Z"}, "message": "Fall back to read-only credentials on EACCES errors\n\nThis change fixes a bug where multiple threads and/or processes\nusing multistore_file on Windows to access the same backing\nstore could raise IOError errno.EACCES to the calling application.\nThis change causes a fallback to read only mode and refreshes\ncredentials if necessary.", "tree": {"sha": "d9cad0c2628281e7003bbddbbf4aff058227b968", "url": "https://api.github.com/repos/google/oauth2client/git/trees/d9cad0c2628281e7003bbddbbf4aff058227b968"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/4f5a9baa083e69605c3aeaa7435e278c75f78b3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/4f5a9baa083e69605c3aeaa7435e278c75f78b3a", "html_url": "https://github.com/google/oauth2client/commit/4f5a9baa083e69605c3aeaa7435e278c75f78b3a", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/4f5a9baa083e69605c3aeaa7435e278c75f78b3a/comments", "author": {"login": "thobrla", "id": 3239120, "avatar_url": "https://avatars2.githubusercontent.com/u/3239120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thobrla", "html_url": "https://github.com/thobrla", "followers_url": "https://api.github.com/users/thobrla/followers", "following_url": "https://api.github.com/users/thobrla/following{/other_user}", "gists_url": "https://api.github.com/users/thobrla/gists{/gist_id}", "starred_url": "https://api.github.com/users/thobrla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thobrla/subscriptions", "organizations_url": "https://api.github.com/users/thobrla/orgs", "repos_url": "https://api.github.com/users/thobrla/repos", "events_url": "https://api.github.com/users/thobrla/events{/privacy}", "received_events_url": "https://api.github.com/users/thobrla/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thobrla", "id": 3239120, "avatar_url": "https://avatars2.githubusercontent.com/u/3239120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thobrla", "html_url": "https://github.com/thobrla", "followers_url": "https://api.github.com/users/thobrla/followers", "following_url": "https://api.github.com/users/thobrla/following{/other_user}", "gists_url": "https://api.github.com/users/thobrla/gists{/gist_id}", "starred_url": "https://api.github.com/users/thobrla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thobrla/subscriptions", "organizations_url": "https://api.github.com/users/thobrla/orgs", "repos_url": "https://api.github.com/users/thobrla/repos", "events_url": "https://api.github.com/users/thobrla/events{/privacy}", "received_events_url": "https://api.github.com/users/thobrla/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b6e72ea0952f16b848c6bb7a21dd620da1b0a3c", "url": "https://api.github.com/repos/google/oauth2client/commits/0b6e72ea0952f16b848c6bb7a21dd620da1b0a3c", "html_url": "https://github.com/google/oauth2client/commit/0b6e72ea0952f16b848c6bb7a21dd620da1b0a3c"}]}, {"sha": "0b6e72ea0952f16b848c6bb7a21dd620da1b0a3c", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-01-27T18:51:47Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-01-27T18:51:47Z"}, "message": "Merge pull request #385 from dlorenc/master\n\nAdd to/from json methods to Credentials classes.", "tree": {"sha": "ab31f0116beec3eafc40546a8a66afc621dc901e", "url": "https://api.github.com/repos/google/oauth2client/git/trees/ab31f0116beec3eafc40546a8a66afc621dc901e"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/0b6e72ea0952f16b848c6bb7a21dd620da1b0a3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/0b6e72ea0952f16b848c6bb7a21dd620da1b0a3c", "html_url": "https://github.com/google/oauth2client/commit/0b6e72ea0952f16b848c6bb7a21dd620da1b0a3c", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/0b6e72ea0952f16b848c6bb7a21dd620da1b0a3c/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f8df1f5977ec76d50cb3dca9a31044cfd1fb9b4", "url": "https://api.github.com/repos/google/oauth2client/commits/8f8df1f5977ec76d50cb3dca9a31044cfd1fb9b4", "html_url": "https://github.com/google/oauth2client/commit/8f8df1f5977ec76d50cb3dca9a31044cfd1fb9b4"}, {"sha": "8df4379bd802e22ff31506bcfe90e177df4192b0", "url": "https://api.github.com/repos/google/oauth2client/commits/8df4379bd802e22ff31506bcfe90e177df4192b0", "html_url": "https://github.com/google/oauth2client/commit/8df4379bd802e22ff31506bcfe90e177df4192b0"}]}, {"sha": "8df4379bd802e22ff31506bcfe90e177df4192b0", "commit": {"author": {"name": "dlorenc", "email": "lorenc.d@gmail.com", "date": "2016-01-19T20:46:48Z"}, "committer": {"name": "dlorenc", "email": "dlorenc@google.com", "date": "2016-01-27T17:51:39Z"}, "message": "Add to/from json methods to Credentials classes\n\nThis adds to_json and from_json methods to GoogleCredentials\nand _ServiceAccountCredentials classes. This allows them to\nbe serialized by multistore_file.\n\nResolves: #384", "tree": {"sha": "ab31f0116beec3eafc40546a8a66afc621dc901e", "url": "https://api.github.com/repos/google/oauth2client/git/trees/ab31f0116beec3eafc40546a8a66afc621dc901e"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/8df4379bd802e22ff31506bcfe90e177df4192b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/8df4379bd802e22ff31506bcfe90e177df4192b0", "html_url": "https://github.com/google/oauth2client/commit/8df4379bd802e22ff31506bcfe90e177df4192b0", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/8df4379bd802e22ff31506bcfe90e177df4192b0/comments", "author": {"login": "dlorenc", "id": 1714486, "avatar_url": "https://avatars1.githubusercontent.com/u/1714486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlorenc", "html_url": "https://github.com/dlorenc", "followers_url": "https://api.github.com/users/dlorenc/followers", "following_url": "https://api.github.com/users/dlorenc/following{/other_user}", "gists_url": "https://api.github.com/users/dlorenc/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlorenc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlorenc/subscriptions", "organizations_url": "https://api.github.com/users/dlorenc/orgs", "repos_url": "https://api.github.com/users/dlorenc/repos", "events_url": "https://api.github.com/users/dlorenc/events{/privacy}", "received_events_url": "https://api.github.com/users/dlorenc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dlorenc", "id": 1714486, "avatar_url": "https://avatars1.githubusercontent.com/u/1714486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlorenc", "html_url": "https://github.com/dlorenc", "followers_url": "https://api.github.com/users/dlorenc/followers", "following_url": "https://api.github.com/users/dlorenc/following{/other_user}", "gists_url": "https://api.github.com/users/dlorenc/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlorenc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlorenc/subscriptions", "organizations_url": "https://api.github.com/users/dlorenc/orgs", "repos_url": "https://api.github.com/users/dlorenc/repos", "events_url": "https://api.github.com/users/dlorenc/events{/privacy}", "received_events_url": "https://api.github.com/users/dlorenc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f8df1f5977ec76d50cb3dca9a31044cfd1fb9b4", "url": "https://api.github.com/repos/google/oauth2client/commits/8f8df1f5977ec76d50cb3dca9a31044cfd1fb9b4", "html_url": "https://github.com/google/oauth2client/commit/8f8df1f5977ec76d50cb3dca9a31044cfd1fb9b4"}]}, {"sha": "8f8df1f5977ec76d50cb3dca9a31044cfd1fb9b4", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-01-11T20:50:55Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-01-11T20:50:55Z"}, "message": "Merge pull request #383 from jonparrott/refactor-dict-storage\n\nSwitched flask_util and django_util to use DictionaryStorage.", "tree": {"sha": "f63d217295116698ff5d5c0277caf95f859ca704", "url": "https://api.github.com/repos/google/oauth2client/git/trees/f63d217295116698ff5d5c0277caf95f859ca704"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/8f8df1f5977ec76d50cb3dca9a31044cfd1fb9b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/8f8df1f5977ec76d50cb3dca9a31044cfd1fb9b4", "html_url": "https://github.com/google/oauth2client/commit/8f8df1f5977ec76d50cb3dca9a31044cfd1fb9b4", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/8f8df1f5977ec76d50cb3dca9a31044cfd1fb9b4/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e47281d88365fa6c7cb426ddabeb1782b6add2e", "url": "https://api.github.com/repos/google/oauth2client/commits/6e47281d88365fa6c7cb426ddabeb1782b6add2e", "html_url": "https://github.com/google/oauth2client/commit/6e47281d88365fa6c7cb426ddabeb1782b6add2e"}, {"sha": "346026398f89d50947171c3e9aee6a28a04b3502", "url": "https://api.github.com/repos/google/oauth2client/commits/346026398f89d50947171c3e9aee6a28a04b3502", "html_url": "https://github.com/google/oauth2client/commit/346026398f89d50947171c3e9aee6a28a04b3502"}]}, {"sha": "346026398f89d50947171c3e9aee6a28a04b3502", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-01-11T19:03:56Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-01-11T19:50:32Z"}, "message": "Switch flask_util and django_util to use DictionaryStorage.", "tree": {"sha": "f63d217295116698ff5d5c0277caf95f859ca704", "url": "https://api.github.com/repos/google/oauth2client/git/trees/f63d217295116698ff5d5c0277caf95f859ca704"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/346026398f89d50947171c3e9aee6a28a04b3502", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/346026398f89d50947171c3e9aee6a28a04b3502", "html_url": "https://github.com/google/oauth2client/commit/346026398f89d50947171c3e9aee6a28a04b3502", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/346026398f89d50947171c3e9aee6a28a04b3502/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e47281d88365fa6c7cb426ddabeb1782b6add2e", "url": "https://api.github.com/repos/google/oauth2client/commits/6e47281d88365fa6c7cb426ddabeb1782b6add2e", "html_url": "https://github.com/google/oauth2client/commit/6e47281d88365fa6c7cb426ddabeb1782b6add2e"}]}, {"sha": "6e47281d88365fa6c7cb426ddabeb1782b6add2e", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-01-11T18:08:09Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-01-11T18:08:09Z"}, "message": "Merge pull request #380 from jonparrott/add-dictionary-storage\n\nAdded dictionary storage for #319.", "tree": {"sha": "0273e5ac9275a3ad678e8ad91bf5fa9943e7c6db", "url": "https://api.github.com/repos/google/oauth2client/git/trees/0273e5ac9275a3ad678e8ad91bf5fa9943e7c6db"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/6e47281d88365fa6c7cb426ddabeb1782b6add2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/6e47281d88365fa6c7cb426ddabeb1782b6add2e", "html_url": "https://github.com/google/oauth2client/commit/6e47281d88365fa6c7cb426ddabeb1782b6add2e", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/6e47281d88365fa6c7cb426ddabeb1782b6add2e/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d783f1c84aa11ac370104ea3fc25337be798bb47", "url": "https://api.github.com/repos/google/oauth2client/commits/d783f1c84aa11ac370104ea3fc25337be798bb47", "html_url": "https://github.com/google/oauth2client/commit/d783f1c84aa11ac370104ea3fc25337be798bb47"}, {"sha": "782db0bddc96e7445ad61f80ed9207549b1f7d3a", "url": "https://api.github.com/repos/google/oauth2client/commits/782db0bddc96e7445ad61f80ed9207549b1f7d3a", "html_url": "https://github.com/google/oauth2client/commit/782db0bddc96e7445ad61f80ed9207549b1f7d3a"}]}, {"sha": "782db0bddc96e7445ad61f80ed9207549b1f7d3a", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2015-11-24T21:40:26Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-01-11T17:32:58Z"}, "message": "Adding dictionary storage for #319.\n\nDictionaryStorage implements an optionally-locked storage over a dictionary-like object.", "tree": {"sha": "0273e5ac9275a3ad678e8ad91bf5fa9943e7c6db", "url": "https://api.github.com/repos/google/oauth2client/git/trees/0273e5ac9275a3ad678e8ad91bf5fa9943e7c6db"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/782db0bddc96e7445ad61f80ed9207549b1f7d3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/782db0bddc96e7445ad61f80ed9207549b1f7d3a", "html_url": "https://github.com/google/oauth2client/commit/782db0bddc96e7445ad61f80ed9207549b1f7d3a", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/782db0bddc96e7445ad61f80ed9207549b1f7d3a/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d783f1c84aa11ac370104ea3fc25337be798bb47", "url": "https://api.github.com/repos/google/oauth2client/commits/d783f1c84aa11ac370104ea3fc25337be798bb47", "html_url": "https://github.com/google/oauth2client/commit/d783f1c84aa11ac370104ea3fc25337be798bb47"}]}, {"sha": "d783f1c84aa11ac370104ea3fc25337be798bb47", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-09T20:16:13Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-09T20:16:13Z"}, "message": "Merge pull request #376 from dhermes/move-devshell-to-contrib\n\nMoving devshell module to contrib.", "tree": {"sha": "abb099b3c8b08dbfb21d22bdc588aca4df9b8feb", "url": "https://api.github.com/repos/google/oauth2client/git/trees/abb099b3c8b08dbfb21d22bdc588aca4df9b8feb"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/d783f1c84aa11ac370104ea3fc25337be798bb47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/d783f1c84aa11ac370104ea3fc25337be798bb47", "html_url": "https://github.com/google/oauth2client/commit/d783f1c84aa11ac370104ea3fc25337be798bb47", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/d783f1c84aa11ac370104ea3fc25337be798bb47/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8ecbc345b2cf7dfc50c3899d293544a225edcce", "url": "https://api.github.com/repos/google/oauth2client/commits/d8ecbc345b2cf7dfc50c3899d293544a225edcce", "html_url": "https://github.com/google/oauth2client/commit/d8ecbc345b2cf7dfc50c3899d293544a225edcce"}, {"sha": "6345705bbc00faba322711264f330acd048928a9", "url": "https://api.github.com/repos/google/oauth2client/commits/6345705bbc00faba322711264f330acd048928a9", "html_url": "https://github.com/google/oauth2client/commit/6345705bbc00faba322711264f330acd048928a9"}]}, {"sha": "6345705bbc00faba322711264f330acd048928a9", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-09T07:09:02Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-09T07:09:02Z"}, "message": "Moving devshell module to contrib.\n\nSee discussion in #370 for context.", "tree": {"sha": "abb099b3c8b08dbfb21d22bdc588aca4df9b8feb", "url": "https://api.github.com/repos/google/oauth2client/git/trees/abb099b3c8b08dbfb21d22bdc588aca4df9b8feb"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/6345705bbc00faba322711264f330acd048928a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/6345705bbc00faba322711264f330acd048928a9", "html_url": "https://github.com/google/oauth2client/commit/6345705bbc00faba322711264f330acd048928a9", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/6345705bbc00faba322711264f330acd048928a9/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8ecbc345b2cf7dfc50c3899d293544a225edcce", "url": "https://api.github.com/repos/google/oauth2client/commits/d8ecbc345b2cf7dfc50c3899d293544a225edcce", "html_url": "https://github.com/google/oauth2client/commit/d8ecbc345b2cf7dfc50c3899d293544a225edcce"}]}, {"sha": "d8ecbc345b2cf7dfc50c3899d293544a225edcce", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-01-08T22:36:25Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-01-08T22:36:25Z"}, "message": "Merge pull request #372 from wilford/master\n\nAdds token_expiry to the Devshell credential.", "tree": {"sha": "dd1de76bf09d866268d2645cfa675d5486682406", "url": "https://api.github.com/repos/google/oauth2client/git/trees/dd1de76bf09d866268d2645cfa675d5486682406"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/d8ecbc345b2cf7dfc50c3899d293544a225edcce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/d8ecbc345b2cf7dfc50c3899d293544a225edcce", "html_url": "https://github.com/google/oauth2client/commit/d8ecbc345b2cf7dfc50c3899d293544a225edcce", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/d8ecbc345b2cf7dfc50c3899d293544a225edcce/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06675a749faf1189ae5b22b55820453837c75006", "url": "https://api.github.com/repos/google/oauth2client/commits/06675a749faf1189ae5b22b55820453837c75006", "html_url": "https://github.com/google/oauth2client/commit/06675a749faf1189ae5b22b55820453837c75006"}, {"sha": "2fe865480576c74160276316be179cdb4d8f55eb", "url": "https://api.github.com/repos/google/oauth2client/commits/2fe865480576c74160276316be179cdb4d8f55eb", "html_url": "https://github.com/google/oauth2client/commit/2fe865480576c74160276316be179cdb4d8f55eb"}]}, {"sha": "06675a749faf1189ae5b22b55820453837c75006", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-08T21:20:07Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-08T21:20:07Z"}, "message": "Merge pull request #382 from dhermes/fix-setup\n\nUpdating setup.py and MANIFEST to include all subdirs.", "tree": {"sha": "1dcb96f5b296e2139f46c6226656cacd7a1a6460", "url": "https://api.github.com/repos/google/oauth2client/git/trees/1dcb96f5b296e2139f46c6226656cacd7a1a6460"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/06675a749faf1189ae5b22b55820453837c75006", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/06675a749faf1189ae5b22b55820453837c75006", "html_url": "https://github.com/google/oauth2client/commit/06675a749faf1189ae5b22b55820453837c75006", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/06675a749faf1189ae5b22b55820453837c75006/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6531263b7ed73de23d56562fa2d86c12e3b264c7", "url": "https://api.github.com/repos/google/oauth2client/commits/6531263b7ed73de23d56562fa2d86c12e3b264c7", "html_url": "https://github.com/google/oauth2client/commit/6531263b7ed73de23d56562fa2d86c12e3b264c7"}, {"sha": "93c56c1152dab1fb6f3b9c12f120a3ac77d4c442", "url": "https://api.github.com/repos/google/oauth2client/commits/93c56c1152dab1fb6f3b9c12f120a3ac77d4c442", "html_url": "https://github.com/google/oauth2client/commit/93c56c1152dab1fb6f3b9c12f120a3ac77d4c442"}]}, {"sha": "2fe865480576c74160276316be179cdb4d8f55eb", "commit": {"author": {"name": "Robert Spies", "email": "wilford@google.com", "date": "2016-01-07T19:36:38Z"}, "committer": {"name": "Robert Spies", "email": "wilford@google.com", "date": "2016-01-07T19:36:38Z"}, "message": "Adds token_expiry to the Devshell credential.", "tree": {"sha": "28fd37f65410bd2093dbe496c24030e6f88df650", "url": "https://api.github.com/repos/google/oauth2client/git/trees/28fd37f65410bd2093dbe496c24030e6f88df650"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/2fe865480576c74160276316be179cdb4d8f55eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/2fe865480576c74160276316be179cdb4d8f55eb", "html_url": "https://github.com/google/oauth2client/commit/2fe865480576c74160276316be179cdb4d8f55eb", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/2fe865480576c74160276316be179cdb4d8f55eb/comments", "author": {"login": "wilford", "id": 331248, "avatar_url": "https://avatars1.githubusercontent.com/u/331248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wilford", "html_url": "https://github.com/wilford", "followers_url": "https://api.github.com/users/wilford/followers", "following_url": "https://api.github.com/users/wilford/following{/other_user}", "gists_url": "https://api.github.com/users/wilford/gists{/gist_id}", "starred_url": "https://api.github.com/users/wilford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wilford/subscriptions", "organizations_url": "https://api.github.com/users/wilford/orgs", "repos_url": "https://api.github.com/users/wilford/repos", "events_url": "https://api.github.com/users/wilford/events{/privacy}", "received_events_url": "https://api.github.com/users/wilford/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wilford", "id": 331248, "avatar_url": "https://avatars1.githubusercontent.com/u/331248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wilford", "html_url": "https://github.com/wilford", "followers_url": "https://api.github.com/users/wilford/followers", "following_url": "https://api.github.com/users/wilford/following{/other_user}", "gists_url": "https://api.github.com/users/wilford/gists{/gist_id}", "starred_url": "https://api.github.com/users/wilford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wilford/subscriptions", "organizations_url": "https://api.github.com/users/wilford/orgs", "repos_url": "https://api.github.com/users/wilford/repos", "events_url": "https://api.github.com/users/wilford/events{/privacy}", "received_events_url": "https://api.github.com/users/wilford/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28", "url": "https://api.github.com/repos/google/oauth2client/commits/ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28", "html_url": "https://github.com/google/oauth2client/commit/ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28"}]}, {"sha": "93c56c1152dab1fb6f3b9c12f120a3ac77d4c442", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-07T16:20:47Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-07T16:20:47Z"}, "message": "Updating setup.py and MANIFEST to include all subdirs.", "tree": {"sha": "1dcb96f5b296e2139f46c6226656cacd7a1a6460", "url": "https://api.github.com/repos/google/oauth2client/git/trees/1dcb96f5b296e2139f46c6226656cacd7a1a6460"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/93c56c1152dab1fb6f3b9c12f120a3ac77d4c442", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/93c56c1152dab1fb6f3b9c12f120a3ac77d4c442", "html_url": "https://github.com/google/oauth2client/commit/93c56c1152dab1fb6f3b9c12f120a3ac77d4c442", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/93c56c1152dab1fb6f3b9c12f120a3ac77d4c442/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6531263b7ed73de23d56562fa2d86c12e3b264c7", "url": "https://api.github.com/repos/google/oauth2client/commits/6531263b7ed73de23d56562fa2d86c12e3b264c7", "html_url": "https://github.com/google/oauth2client/commit/6531263b7ed73de23d56562fa2d86c12e3b264c7"}]}, {"sha": "6531263b7ed73de23d56562fa2d86c12e3b264c7", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-01-06T18:52:21Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-01-06T18:52:21Z"}, "message": "Merge pull request #379 from jonparrott/locking-to-base-storage\n\nMoved locking logic into storage base class.", "tree": {"sha": "646b41f3d78bcdc07eabeac2507ef1636e90faee", "url": "https://api.github.com/repos/google/oauth2client/git/trees/646b41f3d78bcdc07eabeac2507ef1636e90faee"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/6531263b7ed73de23d56562fa2d86c12e3b264c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/6531263b7ed73de23d56562fa2d86c12e3b264c7", "html_url": "https://github.com/google/oauth2client/commit/6531263b7ed73de23d56562fa2d86c12e3b264c7", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/6531263b7ed73de23d56562fa2d86c12e3b264c7/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f63a7d0d259e334b1d4c6658a3f5d5906db0dc0", "url": "https://api.github.com/repos/google/oauth2client/commits/0f63a7d0d259e334b1d4c6658a3f5d5906db0dc0", "html_url": "https://github.com/google/oauth2client/commit/0f63a7d0d259e334b1d4c6658a3f5d5906db0dc0"}, {"sha": "da5501fc8f8b65fd24152ea42ac92b5c8e31455b", "url": "https://api.github.com/repos/google/oauth2client/commits/da5501fc8f8b65fd24152ea42ac92b5c8e31455b", "html_url": "https://github.com/google/oauth2client/commit/da5501fc8f8b65fd24152ea42ac92b5c8e31455b"}]}, {"sha": "da5501fc8f8b65fd24152ea42ac92b5c8e31455b", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-01-06T18:19:06Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2016-01-06T18:19:06Z"}, "message": "Moving locking logic into storage base class.", "tree": {"sha": "646b41f3d78bcdc07eabeac2507ef1636e90faee", "url": "https://api.github.com/repos/google/oauth2client/git/trees/646b41f3d78bcdc07eabeac2507ef1636e90faee"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/da5501fc8f8b65fd24152ea42ac92b5c8e31455b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/da5501fc8f8b65fd24152ea42ac92b5c8e31455b", "html_url": "https://github.com/google/oauth2client/commit/da5501fc8f8b65fd24152ea42ac92b5c8e31455b", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/da5501fc8f8b65fd24152ea42ac92b5c8e31455b/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f63a7d0d259e334b1d4c6658a3f5d5906db0dc0", "url": "https://api.github.com/repos/google/oauth2client/commits/0f63a7d0d259e334b1d4c6658a3f5d5906db0dc0", "html_url": "https://github.com/google/oauth2client/commit/0f63a7d0d259e334b1d4c6658a3f5d5906db0dc0"}]}, {"sha": "0f63a7d0d259e334b1d4c6658a3f5d5906db0dc0", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-06T16:19:36Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-06T16:19:36Z"}, "message": "Merge pull request #378 from dhermes/remove-keyring-py26\n\nRemoving keyring testing from py26 testing.", "tree": {"sha": "32c6b95c44ae72e3884c0c6e3eba3d80da9dfdac", "url": "https://api.github.com/repos/google/oauth2client/git/trees/32c6b95c44ae72e3884c0c6e3eba3d80da9dfdac"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/0f63a7d0d259e334b1d4c6658a3f5d5906db0dc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/0f63a7d0d259e334b1d4c6658a3f5d5906db0dc0", "html_url": "https://github.com/google/oauth2client/commit/0f63a7d0d259e334b1d4c6658a3f5d5906db0dc0", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/0f63a7d0d259e334b1d4c6658a3f5d5906db0dc0/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb31107591e281e55234a6bfba0ab4a30fc8290e", "url": "https://api.github.com/repos/google/oauth2client/commits/eb31107591e281e55234a6bfba0ab4a30fc8290e", "html_url": "https://github.com/google/oauth2client/commit/eb31107591e281e55234a6bfba0ab4a30fc8290e"}, {"sha": "fe25c13566742ab674949caa7b76ea6e97dbb94f", "url": "https://api.github.com/repos/google/oauth2client/commits/fe25c13566742ab674949caa7b76ea6e97dbb94f", "html_url": "https://github.com/google/oauth2client/commit/fe25c13566742ab674949caa7b76ea6e97dbb94f"}]}, {"sha": "eb31107591e281e55234a6bfba0ab4a30fc8290e", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-05T21:51:58Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-05T21:51:58Z"}, "message": "Merge pull request #371 from dhermes/factor-out-utcnow\n\nFactor out usage of utcnow() in client.", "tree": {"sha": "e20c16fcc05ec2c4243da4f03bc14d3cb0cdbe86", "url": "https://api.github.com/repos/google/oauth2client/git/trees/e20c16fcc05ec2c4243da4f03bc14d3cb0cdbe86"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/eb31107591e281e55234a6bfba0ab4a30fc8290e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/eb31107591e281e55234a6bfba0ab4a30fc8290e", "html_url": "https://github.com/google/oauth2client/commit/eb31107591e281e55234a6bfba0ab4a30fc8290e", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/eb31107591e281e55234a6bfba0ab4a30fc8290e/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c37f3b3a90050dd337c2ecc3dddf545db33f75a", "url": "https://api.github.com/repos/google/oauth2client/commits/3c37f3b3a90050dd337c2ecc3dddf545db33f75a", "html_url": "https://github.com/google/oauth2client/commit/3c37f3b3a90050dd337c2ecc3dddf545db33f75a"}, {"sha": "30c342a437a137c82444364073f4e4afebeb891a", "url": "https://api.github.com/repos/google/oauth2client/commits/30c342a437a137c82444364073f4e4afebeb891a", "html_url": "https://github.com/google/oauth2client/commit/30c342a437a137c82444364073f4e4afebeb891a"}]}, {"sha": "fe25c13566742ab674949caa7b76ea6e97dbb94f", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-05T21:25:07Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-05T21:25:07Z"}, "message": "Removing keyring testing from py26 testing.\n\nWith the `6.0` release on January 5, 2016, the `keyring`\npackage no longer supports Python 2.6 (it won't even\ninstall).", "tree": {"sha": "e50af95c0c2e3a0406c0c6c71ef70b8b331f68b6", "url": "https://api.github.com/repos/google/oauth2client/git/trees/e50af95c0c2e3a0406c0c6c71ef70b8b331f68b6"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/fe25c13566742ab674949caa7b76ea6e97dbb94f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/fe25c13566742ab674949caa7b76ea6e97dbb94f", "html_url": "https://github.com/google/oauth2client/commit/fe25c13566742ab674949caa7b76ea6e97dbb94f", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/fe25c13566742ab674949caa7b76ea6e97dbb94f/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c37f3b3a90050dd337c2ecc3dddf545db33f75a", "url": "https://api.github.com/repos/google/oauth2client/commits/3c37f3b3a90050dd337c2ecc3dddf545db33f75a", "html_url": "https://github.com/google/oauth2client/commit/3c37f3b3a90050dd337c2ecc3dddf545db33f75a"}]}, {"sha": "3c37f3b3a90050dd337c2ecc3dddf545db33f75a", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-05T20:56:51Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-05T20:56:51Z"}, "message": "Merge pull request #370 from dhermes/move-gce-to-contrib\n\nMoving gce module to contrib.", "tree": {"sha": "5e92f3d97da3412c413984bfcc88334ebddfcb8f", "url": "https://api.github.com/repos/google/oauth2client/git/trees/5e92f3d97da3412c413984bfcc88334ebddfcb8f"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/3c37f3b3a90050dd337c2ecc3dddf545db33f75a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/3c37f3b3a90050dd337c2ecc3dddf545db33f75a", "html_url": "https://github.com/google/oauth2client/commit/3c37f3b3a90050dd337c2ecc3dddf545db33f75a", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/3c37f3b3a90050dd337c2ecc3dddf545db33f75a/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a95d32f28e2ec1c372ed0d3d1b79881e60ed1d95", "url": "https://api.github.com/repos/google/oauth2client/commits/a95d32f28e2ec1c372ed0d3d1b79881e60ed1d95", "html_url": "https://github.com/google/oauth2client/commit/a95d32f28e2ec1c372ed0d3d1b79881e60ed1d95"}, {"sha": "2f7ae9fcddc6ec053cd607aca30c29c76a686d69", "url": "https://api.github.com/repos/google/oauth2client/commits/2f7ae9fcddc6ec053cd607aca30c29c76a686d69", "html_url": "https://github.com/google/oauth2client/commit/2f7ae9fcddc6ec053cd607aca30c29c76a686d69"}]}, {"sha": "a95d32f28e2ec1c372ed0d3d1b79881e60ed1d95", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-05T20:56:36Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-05T20:56:36Z"}, "message": "Merge pull request #375 from dhermes/move-xsrfutil-to-contrib\n\nMoving xsrfutil module to contrib.", "tree": {"sha": "a21469fa53368ca9299633b9686d6735808019ed", "url": "https://api.github.com/repos/google/oauth2client/git/trees/a21469fa53368ca9299633b9686d6735808019ed"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/a95d32f28e2ec1c372ed0d3d1b79881e60ed1d95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/a95d32f28e2ec1c372ed0d3d1b79881e60ed1d95", "html_url": "https://github.com/google/oauth2client/commit/a95d32f28e2ec1c372ed0d3d1b79881e60ed1d95", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/a95d32f28e2ec1c372ed0d3d1b79881e60ed1d95/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24214201c67e816eb97a4f74c07a86e6be8d611c", "url": "https://api.github.com/repos/google/oauth2client/commits/24214201c67e816eb97a4f74c07a86e6be8d611c", "html_url": "https://github.com/google/oauth2client/commit/24214201c67e816eb97a4f74c07a86e6be8d611c"}, {"sha": "9da04e00a9e69a07fe2df6d4d7a8974c5ee09c25", "url": "https://api.github.com/repos/google/oauth2client/commits/9da04e00a9e69a07fe2df6d4d7a8974c5ee09c25", "html_url": "https://github.com/google/oauth2client/commit/9da04e00a9e69a07fe2df6d4d7a8974c5ee09c25"}]}, {"sha": "30c342a437a137c82444364073f4e4afebeb891a", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-05T08:02:20Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-05T18:04:19Z"}, "message": "Factor out usage of utcnow() in client.\n\nThis is to enable better stubs in testing and eliminate\ntwo sleep() statements in unit tests. (The philosophy\nis \"unit tests should be fast\".)", "tree": {"sha": "f2322c313096e2db4185c7fa001458e93e33fd8a", "url": "https://api.github.com/repos/google/oauth2client/git/trees/f2322c313096e2db4185c7fa001458e93e33fd8a"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/30c342a437a137c82444364073f4e4afebeb891a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/30c342a437a137c82444364073f4e4afebeb891a", "html_url": "https://github.com/google/oauth2client/commit/30c342a437a137c82444364073f4e4afebeb891a", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/30c342a437a137c82444364073f4e4afebeb891a/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24214201c67e816eb97a4f74c07a86e6be8d611c", "url": "https://api.github.com/repos/google/oauth2client/commits/24214201c67e816eb97a4f74c07a86e6be8d611c", "html_url": "https://github.com/google/oauth2client/commit/24214201c67e816eb97a4f74c07a86e6be8d611c"}]}, {"sha": "24214201c67e816eb97a4f74c07a86e6be8d611c", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-01-05T17:28:08Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-01-05T17:28:08Z"}, "message": "Merge pull request #374 from dhermes/mock-environ-in-test-client\n\nUsing more mocks in implicit environ tests.", "tree": {"sha": "5d48cd9096d796739866b67a2d0c14cdad622476", "url": "https://api.github.com/repos/google/oauth2client/git/trees/5d48cd9096d796739866b67a2d0c14cdad622476"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/24214201c67e816eb97a4f74c07a86e6be8d611c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/24214201c67e816eb97a4f74c07a86e6be8d611c", "html_url": "https://github.com/google/oauth2client/commit/24214201c67e816eb97a4f74c07a86e6be8d611c", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/24214201c67e816eb97a4f74c07a86e6be8d611c/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28", "url": "https://api.github.com/repos/google/oauth2client/commits/ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28", "html_url": "https://github.com/google/oauth2client/commit/ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28"}, {"sha": "6741b1e1a23534f7a02f7b0ebbd43c8bdf50ab45", "url": "https://api.github.com/repos/google/oauth2client/commits/6741b1e1a23534f7a02f7b0ebbd43c8bdf50ab45", "html_url": "https://github.com/google/oauth2client/commit/6741b1e1a23534f7a02f7b0ebbd43c8bdf50ab45"}]}, {"sha": "9da04e00a9e69a07fe2df6d4d7a8974c5ee09c25", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-05T16:59:33Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-05T16:59:33Z"}, "message": "Moving xsrfutil module to contrib.\n\nThe only consumer of this utility is `oauth2client.contrib.appengine`.\nSee discussion in #370 for reason of move.", "tree": {"sha": "b885278f5cbd8b270f5f36312b7dd37bba068397", "url": "https://api.github.com/repos/google/oauth2client/git/trees/b885278f5cbd8b270f5f36312b7dd37bba068397"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/9da04e00a9e69a07fe2df6d4d7a8974c5ee09c25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/9da04e00a9e69a07fe2df6d4d7a8974c5ee09c25", "html_url": "https://github.com/google/oauth2client/commit/9da04e00a9e69a07fe2df6d4d7a8974c5ee09c25", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/9da04e00a9e69a07fe2df6d4d7a8974c5ee09c25/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28", "url": "https://api.github.com/repos/google/oauth2client/commits/ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28", "html_url": "https://github.com/google/oauth2client/commit/ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28"}]}, {"sha": "2f7ae9fcddc6ec053cd607aca30c29c76a686d69", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-05T16:52:32Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-05T16:52:32Z"}, "message": "Moving gce module to contrib.\n\nAlso fixing a broken import of oauth2client.appengine in\noauth2client.client. This reveals an untested code-path that\ncould have been found via 100% code coverage.", "tree": {"sha": "8d92058964fdfcf0a6fa749412b33359015c67dd", "url": "https://api.github.com/repos/google/oauth2client/git/trees/8d92058964fdfcf0a6fa749412b33359015c67dd"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/2f7ae9fcddc6ec053cd607aca30c29c76a686d69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/2f7ae9fcddc6ec053cd607aca30c29c76a686d69", "html_url": "https://github.com/google/oauth2client/commit/2f7ae9fcddc6ec053cd607aca30c29c76a686d69", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/2f7ae9fcddc6ec053cd607aca30c29c76a686d69/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28", "url": "https://api.github.com/repos/google/oauth2client/commits/ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28", "html_url": "https://github.com/google/oauth2client/commit/ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28"}]}, {"sha": "6741b1e1a23534f7a02f7b0ebbd43c8bdf50ab45", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-05T07:57:38Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2016-01-05T07:57:38Z"}, "message": "Using more mocks in implicit environ tests.\n\nThis was done mostly because the GCE environment check\nwas taking too long to time-out.", "tree": {"sha": "5d48cd9096d796739866b67a2d0c14cdad622476", "url": "https://api.github.com/repos/google/oauth2client/git/trees/5d48cd9096d796739866b67a2d0c14cdad622476"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/6741b1e1a23534f7a02f7b0ebbd43c8bdf50ab45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/6741b1e1a23534f7a02f7b0ebbd43c8bdf50ab45", "html_url": "https://github.com/google/oauth2client/commit/6741b1e1a23534f7a02f7b0ebbd43c8bdf50ab45", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/6741b1e1a23534f7a02f7b0ebbd43c8bdf50ab45/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28", "url": "https://api.github.com/repos/google/oauth2client/commits/ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28", "html_url": "https://github.com/google/oauth2client/commit/ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28"}]}, {"sha": "ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-01-04T21:50:12Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2016-01-04T21:50:12Z"}, "message": "Merge pull request #369 from vivekseth/vivekseth-patch-1\n\nMinor wordsmith change to README.md.", "tree": {"sha": "53bfac4c12df069793fe8e1aabf58696d6de72a5", "url": "https://api.github.com/repos/google/oauth2client/git/trees/53bfac4c12df069793fe8e1aabf58696d6de72a5"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28", "html_url": "https://github.com/google/oauth2client/commit/ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/ddc5a75ccda9b3cce4a6f4f366f4b45b9e1afa28/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f385a6c6709f41542e0717881028412bdf4e7b7", "url": "https://api.github.com/repos/google/oauth2client/commits/5f385a6c6709f41542e0717881028412bdf4e7b7", "html_url": "https://github.com/google/oauth2client/commit/5f385a6c6709f41542e0717881028412bdf4e7b7"}, {"sha": "8ce2b69a47cb6108c7560fce45d75ab541cc86ad", "url": "https://api.github.com/repos/google/oauth2client/commits/8ce2b69a47cb6108c7560fce45d75ab541cc86ad", "html_url": "https://github.com/google/oauth2client/commit/8ce2b69a47cb6108c7560fce45d75ab541cc86ad"}]}, {"sha": "8ce2b69a47cb6108c7560fce45d75ab541cc86ad", "commit": {"author": {"name": "Vivek Seth", "email": "vivekseth.m@gmail.com", "date": "2015-12-17T23:35:54Z"}, "committer": {"name": "Vivek Seth", "email": "vivekseth.m@gmail.com", "date": "2015-12-17T23:35:54Z"}, "message": "Update README.md\n\nChange wording in read me to be more clear about how to install `oauth2client`", "tree": {"sha": "53bfac4c12df069793fe8e1aabf58696d6de72a5", "url": "https://api.github.com/repos/google/oauth2client/git/trees/53bfac4c12df069793fe8e1aabf58696d6de72a5"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/8ce2b69a47cb6108c7560fce45d75ab541cc86ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/8ce2b69a47cb6108c7560fce45d75ab541cc86ad", "html_url": "https://github.com/google/oauth2client/commit/8ce2b69a47cb6108c7560fce45d75ab541cc86ad", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/8ce2b69a47cb6108c7560fce45d75ab541cc86ad/comments", "author": {"login": "vivekseth", "id": 3159713, "avatar_url": "https://avatars3.githubusercontent.com/u/3159713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vivekseth", "html_url": "https://github.com/vivekseth", "followers_url": "https://api.github.com/users/vivekseth/followers", "following_url": "https://api.github.com/users/vivekseth/following{/other_user}", "gists_url": "https://api.github.com/users/vivekseth/gists{/gist_id}", "starred_url": "https://api.github.com/users/vivekseth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vivekseth/subscriptions", "organizations_url": "https://api.github.com/users/vivekseth/orgs", "repos_url": "https://api.github.com/users/vivekseth/repos", "events_url": "https://api.github.com/users/vivekseth/events{/privacy}", "received_events_url": "https://api.github.com/users/vivekseth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vivekseth", "id": 3159713, "avatar_url": "https://avatars3.githubusercontent.com/u/3159713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vivekseth", "html_url": "https://github.com/vivekseth", "followers_url": "https://api.github.com/users/vivekseth/followers", "following_url": "https://api.github.com/users/vivekseth/following{/other_user}", "gists_url": "https://api.github.com/users/vivekseth/gists{/gist_id}", "starred_url": "https://api.github.com/users/vivekseth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vivekseth/subscriptions", "organizations_url": "https://api.github.com/users/vivekseth/orgs", "repos_url": "https://api.github.com/users/vivekseth/repos", "events_url": "https://api.github.com/users/vivekseth/events{/privacy}", "received_events_url": "https://api.github.com/users/vivekseth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f385a6c6709f41542e0717881028412bdf4e7b7", "url": "https://api.github.com/repos/google/oauth2client/commits/5f385a6c6709f41542e0717881028412bdf4e7b7", "html_url": "https://github.com/google/oauth2client/commit/5f385a6c6709f41542e0717881028412bdf4e7b7"}]}, {"sha": "5f385a6c6709f41542e0717881028412bdf4e7b7", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-12-15T19:42:03Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-12-15T19:42:03Z"}, "message": "Merge pull request #363 from jonparrott/fix-appengine-tests\n\nFixing tests to ignore app engine.", "tree": {"sha": "29fa953e0ca0bb4c9e9d0a57f9408ff276521e04", "url": "https://api.github.com/repos/google/oauth2client/git/trees/29fa953e0ca0bb4c9e9d0a57f9408ff276521e04"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/5f385a6c6709f41542e0717881028412bdf4e7b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/5f385a6c6709f41542e0717881028412bdf4e7b7", "html_url": "https://github.com/google/oauth2client/commit/5f385a6c6709f41542e0717881028412bdf4e7b7", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/5f385a6c6709f41542e0717881028412bdf4e7b7/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "682baf0d727156c5c0bf8029ad7eabb66d367958", "url": "https://api.github.com/repos/google/oauth2client/commits/682baf0d727156c5c0bf8029ad7eabb66d367958", "html_url": "https://github.com/google/oauth2client/commit/682baf0d727156c5c0bf8029ad7eabb66d367958"}, {"sha": "7561085dccea6854587562d94f00331fc31d74bd", "url": "https://api.github.com/repos/google/oauth2client/commits/7561085dccea6854587562d94f00331fc31d74bd", "html_url": "https://github.com/google/oauth2client/commit/7561085dccea6854587562d94f00331fc31d74bd"}]}, {"sha": "7561085dccea6854587562d94f00331fc31d74bd", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2015-12-15T17:29:14Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2015-12-15T17:29:14Z"}, "message": "Fixing tests to ignore app engine.", "tree": {"sha": "29fa953e0ca0bb4c9e9d0a57f9408ff276521e04", "url": "https://api.github.com/repos/google/oauth2client/git/trees/29fa953e0ca0bb4c9e9d0a57f9408ff276521e04"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/7561085dccea6854587562d94f00331fc31d74bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/7561085dccea6854587562d94f00331fc31d74bd", "html_url": "https://github.com/google/oauth2client/commit/7561085dccea6854587562d94f00331fc31d74bd", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/7561085dccea6854587562d94f00331fc31d74bd/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "682baf0d727156c5c0bf8029ad7eabb66d367958", "url": "https://api.github.com/repos/google/oauth2client/commits/682baf0d727156c5c0bf8029ad7eabb66d367958", "html_url": "https://github.com/google/oauth2client/commit/682baf0d727156c5c0bf8029ad7eabb66d367958"}]}, {"sha": "682baf0d727156c5c0bf8029ad7eabb66d367958", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-12-15T05:56:24Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-12-15T05:56:24Z"}, "message": "Merge pull request #356 from dhermes/remove-unittest-fail\n\nImproved unit-test line coverage and quality.", "tree": {"sha": "c22fa16bb887e633c43b49c99dec094b95a39135", "url": "https://api.github.com/repos/google/oauth2client/git/trees/c22fa16bb887e633c43b49c99dec094b95a39135"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/682baf0d727156c5c0bf8029ad7eabb66d367958", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/682baf0d727156c5c0bf8029ad7eabb66d367958", "html_url": "https://github.com/google/oauth2client/commit/682baf0d727156c5c0bf8029ad7eabb66d367958", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/682baf0d727156c5c0bf8029ad7eabb66d367958/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "083233e13145436211a2303ad914bc10a835c3f5", "url": "https://api.github.com/repos/google/oauth2client/commits/083233e13145436211a2303ad914bc10a835c3f5", "html_url": "https://github.com/google/oauth2client/commit/083233e13145436211a2303ad914bc10a835c3f5"}, {"sha": "f3a118a5d381cf57e0680285103aaf5a3465aa85", "url": "https://api.github.com/repos/google/oauth2client/commits/f3a118a5d381cf57e0680285103aaf5a3465aa85", "html_url": "https://github.com/google/oauth2client/commit/f3a118a5d381cf57e0680285103aaf5a3465aa85"}]}, {"sha": "f3a118a5d381cf57e0680285103aaf5a3465aa85", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-12-14T21:31:22Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-12-14T21:31:22Z"}, "message": "Improved unit-test line coverage and quality.\n\nIn particular\n\n- Upgraded some unit test modules to `unittest2`.\n- Got to 100% line coverage in `test_jwt`, `test_clientsecrets`,\n  and `test_service_account` by using `self.assertRaises`\n  instead of `self.fail()`\n- In some places used `self.assertRaises` as a context manager so\n  the thrown exception can be inspected / compared against. This\n  is done instead of manually catching the exception and\n  holding on to it (`unittest2` backports this feature from\n  `unittest` that was not available in Python 2.6)\n- Added license to `test_multistore_file`\n- Removed legacy `python2.4` hashbang from `test_jwt` and\n  `test_service_account`\n- Added `unittest2` as a test dependency in `tox.ini`\n- Updated `test_clientsecrets.test_load_by_filename_missing_file`\n  to use the `self.assertRaises` context manager (this was\n  a problem in #349 and #350)\n- Updated `test_jwt` module docstring to reflect actual purpose", "tree": {"sha": "901abc2ecc86187313e000c2b053eb3b29765617", "url": "https://api.github.com/repos/google/oauth2client/git/trees/901abc2ecc86187313e000c2b053eb3b29765617"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/f3a118a5d381cf57e0680285103aaf5a3465aa85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/f3a118a5d381cf57e0680285103aaf5a3465aa85", "html_url": "https://github.com/google/oauth2client/commit/f3a118a5d381cf57e0680285103aaf5a3465aa85", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/f3a118a5d381cf57e0680285103aaf5a3465aa85/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7559dcb019eaff3a436debed047dd2aee06ab7de", "url": "https://api.github.com/repos/google/oauth2client/commits/7559dcb019eaff3a436debed047dd2aee06ab7de", "html_url": "https://github.com/google/oauth2client/commit/7559dcb019eaff3a436debed047dd2aee06ab7de"}]}, {"sha": "083233e13145436211a2303ad914bc10a835c3f5", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-12-14T21:30:31Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-12-14T21:30:31Z"}, "message": "Merge pull request #337 from danring/update_id_token_on_refresh\n\nAvoid OAuth2Credentials id_token going out of sync after a token refresh.", "tree": {"sha": "9f03a1beed78301d5d9dadcf0ee75b8e58a3d5d9", "url": "https://api.github.com/repos/google/oauth2client/git/trees/9f03a1beed78301d5d9dadcf0ee75b8e58a3d5d9"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/083233e13145436211a2303ad914bc10a835c3f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/083233e13145436211a2303ad914bc10a835c3f5", "html_url": "https://github.com/google/oauth2client/commit/083233e13145436211a2303ad914bc10a835c3f5", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/083233e13145436211a2303ad914bc10a835c3f5/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7559dcb019eaff3a436debed047dd2aee06ab7de", "url": "https://api.github.com/repos/google/oauth2client/commits/7559dcb019eaff3a436debed047dd2aee06ab7de", "html_url": "https://github.com/google/oauth2client/commit/7559dcb019eaff3a436debed047dd2aee06ab7de"}, {"sha": "c53636ed3606c70020cb108d87104b7fdc4b2681", "url": "https://api.github.com/repos/google/oauth2client/commits/c53636ed3606c70020cb108d87104b7fdc4b2681", "html_url": "https://github.com/google/oauth2client/commit/c53636ed3606c70020cb108d87104b7fdc4b2681"}]}, {"sha": "7559dcb019eaff3a436debed047dd2aee06ab7de", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2015-12-14T20:25:41Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2015-12-14T20:25:41Z"}, "message": "Merge pull request #362 from dhermes/tox-unpin\n\nUnpinned tox version in install script.", "tree": {"sha": "a41e7356e380027750f9f7a72e5bff772769fbe7", "url": "https://api.github.com/repos/google/oauth2client/git/trees/a41e7356e380027750f9f7a72e5bff772769fbe7"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/7559dcb019eaff3a436debed047dd2aee06ab7de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/7559dcb019eaff3a436debed047dd2aee06ab7de", "html_url": "https://github.com/google/oauth2client/commit/7559dcb019eaff3a436debed047dd2aee06ab7de", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/7559dcb019eaff3a436debed047dd2aee06ab7de/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "962ad5da0e092130ff8d865f522f44da5f63e712", "url": "https://api.github.com/repos/google/oauth2client/commits/962ad5da0e092130ff8d865f522f44da5f63e712", "html_url": "https://github.com/google/oauth2client/commit/962ad5da0e092130ff8d865f522f44da5f63e712"}, {"sha": "7e5134d2b8e077cc7080177f878c2a4a3230a738", "url": "https://api.github.com/repos/google/oauth2client/commits/7e5134d2b8e077cc7080177f878c2a4a3230a738", "html_url": "https://github.com/google/oauth2client/commit/7e5134d2b8e077cc7080177f878c2a4a3230a738"}]}, {"sha": "7e5134d2b8e077cc7080177f878c2a4a3230a738", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-12-14T18:40:49Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-12-14T18:41:10Z"}, "message": "Unpinning tox version in install script.\n\nRegressions from tox 2.2.0 were fixed in >=2.3.", "tree": {"sha": "a41e7356e380027750f9f7a72e5bff772769fbe7", "url": "https://api.github.com/repos/google/oauth2client/git/trees/a41e7356e380027750f9f7a72e5bff772769fbe7"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/7e5134d2b8e077cc7080177f878c2a4a3230a738", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/7e5134d2b8e077cc7080177f878c2a4a3230a738", "html_url": "https://github.com/google/oauth2client/commit/7e5134d2b8e077cc7080177f878c2a4a3230a738", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/7e5134d2b8e077cc7080177f878c2a4a3230a738/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "962ad5da0e092130ff8d865f522f44da5f63e712", "url": "https://api.github.com/repos/google/oauth2client/commits/962ad5da0e092130ff8d865f522f44da5f63e712", "html_url": "https://github.com/google/oauth2client/commit/962ad5da0e092130ff8d865f522f44da5f63e712"}]}, {"sha": "962ad5da0e092130ff8d865f522f44da5f63e712", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-12-14T05:48:19Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-12-14T05:48:19Z"}, "message": "Merge pull request #353 from jonparrott/contrib-move\n\nMove non-core modules to contrib.", "tree": {"sha": "6103015a03cdb9b2e30ecf26ef101c5850e56a92", "url": "https://api.github.com/repos/google/oauth2client/git/trees/6103015a03cdb9b2e30ecf26ef101c5850e56a92"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/962ad5da0e092130ff8d865f522f44da5f63e712", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/962ad5da0e092130ff8d865f522f44da5f63e712", "html_url": "https://github.com/google/oauth2client/commit/962ad5da0e092130ff8d865f522f44da5f63e712", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/962ad5da0e092130ff8d865f522f44da5f63e712/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a0029ef687085878e222d46eaea3f180ba472e2", "url": "https://api.github.com/repos/google/oauth2client/commits/7a0029ef687085878e222d46eaea3f180ba472e2", "html_url": "https://github.com/google/oauth2client/commit/7a0029ef687085878e222d46eaea3f180ba472e2"}, {"sha": "41eb75578f81876a53f1707cf1daf1eb89ddfc0b", "url": "https://api.github.com/repos/google/oauth2client/commits/41eb75578f81876a53f1707cf1daf1eb89ddfc0b", "html_url": "https://github.com/google/oauth2client/commit/41eb75578f81876a53f1707cf1daf1eb89ddfc0b"}]}, {"sha": "41eb75578f81876a53f1707cf1daf1eb89ddfc0b", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2015-12-04T21:19:56Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2015-12-11T19:11:13Z"}, "message": "Move non-core modules to contrib.\n\nFixes #352", "tree": {"sha": "6103015a03cdb9b2e30ecf26ef101c5850e56a92", "url": "https://api.github.com/repos/google/oauth2client/git/trees/6103015a03cdb9b2e30ecf26ef101c5850e56a92"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/41eb75578f81876a53f1707cf1daf1eb89ddfc0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/41eb75578f81876a53f1707cf1daf1eb89ddfc0b", "html_url": "https://github.com/google/oauth2client/commit/41eb75578f81876a53f1707cf1daf1eb89ddfc0b", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/41eb75578f81876a53f1707cf1daf1eb89ddfc0b/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a0029ef687085878e222d46eaea3f180ba472e2", "url": "https://api.github.com/repos/google/oauth2client/commits/7a0029ef687085878e222d46eaea3f180ba472e2", "html_url": "https://github.com/google/oauth2client/commit/7a0029ef687085878e222d46eaea3f180ba472e2"}]}, {"sha": "7a0029ef687085878e222d46eaea3f180ba472e2", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-12-08T20:55:17Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-12-08T20:55:17Z"}, "message": "Merge pull request #355 from jonparrott/move-multistore-tests\n\nMove tests that only apply to multistore_file out of test_file.py", "tree": {"sha": "c818c9298c959136068e815cef3f7ab4daefda32", "url": "https://api.github.com/repos/google/oauth2client/git/trees/c818c9298c959136068e815cef3f7ab4daefda32"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/7a0029ef687085878e222d46eaea3f180ba472e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/7a0029ef687085878e222d46eaea3f180ba472e2", "html_url": "https://github.com/google/oauth2client/commit/7a0029ef687085878e222d46eaea3f180ba472e2", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/7a0029ef687085878e222d46eaea3f180ba472e2/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e5c7cb3f0631329dfd28f64edd4ef827df3d534", "url": "https://api.github.com/repos/google/oauth2client/commits/2e5c7cb3f0631329dfd28f64edd4ef827df3d534", "html_url": "https://github.com/google/oauth2client/commit/2e5c7cb3f0631329dfd28f64edd4ef827df3d534"}, {"sha": "843da60f85dec99a8bed1aec6d1e4cf0beb2b6d6", "url": "https://api.github.com/repos/google/oauth2client/commits/843da60f85dec99a8bed1aec6d1e4cf0beb2b6d6", "html_url": "https://github.com/google/oauth2client/commit/843da60f85dec99a8bed1aec6d1e4cf0beb2b6d6"}]}, {"sha": "843da60f85dec99a8bed1aec6d1e4cf0beb2b6d6", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2015-12-04T22:22:32Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2015-12-04T22:55:57Z"}, "message": "Move tests that only apply to multistore_file out of test_file.py", "tree": {"sha": "c818c9298c959136068e815cef3f7ab4daefda32", "url": "https://api.github.com/repos/google/oauth2client/git/trees/c818c9298c959136068e815cef3f7ab4daefda32"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/843da60f85dec99a8bed1aec6d1e4cf0beb2b6d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/843da60f85dec99a8bed1aec6d1e4cf0beb2b6d6", "html_url": "https://github.com/google/oauth2client/commit/843da60f85dec99a8bed1aec6d1e4cf0beb2b6d6", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/843da60f85dec99a8bed1aec6d1e4cf0beb2b6d6/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e5c7cb3f0631329dfd28f64edd4ef827df3d534", "url": "https://api.github.com/repos/google/oauth2client/commits/2e5c7cb3f0631329dfd28f64edd4ef827df3d534", "html_url": "https://github.com/google/oauth2client/commit/2e5c7cb3f0631329dfd28f64edd4ef827df3d534"}]}, {"sha": "2e5c7cb3f0631329dfd28f64edd4ef827df3d534", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2015-12-04T20:17:58Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2015-12-04T20:17:58Z"}, "message": "Merge pull request #332 from waprin/django_util\n\nDjango Util With Decorator and Views.", "tree": {"sha": "de4461c85c3d53fd040a7f2b68a613120d9a615b", "url": "https://api.github.com/repos/google/oauth2client/git/trees/de4461c85c3d53fd040a7f2b68a613120d9a615b"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/2e5c7cb3f0631329dfd28f64edd4ef827df3d534", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/2e5c7cb3f0631329dfd28f64edd4ef827df3d534", "html_url": "https://github.com/google/oauth2client/commit/2e5c7cb3f0631329dfd28f64edd4ef827df3d534", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/2e5c7cb3f0631329dfd28f64edd4ef827df3d534/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2a405593f33eac2aaee0d57d558c554bda7fe91", "url": "https://api.github.com/repos/google/oauth2client/commits/b2a405593f33eac2aaee0d57d558c554bda7fe91", "html_url": "https://github.com/google/oauth2client/commit/b2a405593f33eac2aaee0d57d558c554bda7fe91"}, {"sha": "5be95050dace7795b5d39b06c6ec6f60b80697d2", "url": "https://api.github.com/repos/google/oauth2client/commits/5be95050dace7795b5d39b06c6ec6f60b80697d2", "html_url": "https://github.com/google/oauth2client/commit/5be95050dace7795b5d39b06c6ec6f60b80697d2"}]}, {"sha": "5be95050dace7795b5d39b06c6ec6f60b80697d2", "commit": {"author": {"name": "Bill Prin", "email": "waprin@google.com", "date": "2015-10-13T08:46:19Z"}, "committer": {"name": "Bill Prin", "email": "waprin@google.com", "date": "2015-12-04T19:39:34Z"}, "message": "Add Django Util With Decorator\n\nAdds a submodule that provides views, decorator, and signals to help\na Django web application complete OAuth2 authorization.", "tree": {"sha": "de4461c85c3d53fd040a7f2b68a613120d9a615b", "url": "https://api.github.com/repos/google/oauth2client/git/trees/de4461c85c3d53fd040a7f2b68a613120d9a615b"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/5be95050dace7795b5d39b06c6ec6f60b80697d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/5be95050dace7795b5d39b06c6ec6f60b80697d2", "html_url": "https://github.com/google/oauth2client/commit/5be95050dace7795b5d39b06c6ec6f60b80697d2", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/5be95050dace7795b5d39b06c6ec6f60b80697d2/comments", "author": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2a405593f33eac2aaee0d57d558c554bda7fe91", "url": "https://api.github.com/repos/google/oauth2client/commits/b2a405593f33eac2aaee0d57d558c554bda7fe91", "html_url": "https://github.com/google/oauth2client/commit/b2a405593f33eac2aaee0d57d558c554bda7fe91"}]}, {"sha": "b2a405593f33eac2aaee0d57d558c554bda7fe91", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2015-12-04T00:35:35Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2015-12-04T00:35:35Z"}, "message": "Merge pull request #350 from waprin/fix-348\n\nMore informative error when failing to open secrets file.", "tree": {"sha": "5a6f8788b572fe7e3d17739ace5d8de2dd840fa6", "url": "https://api.github.com/repos/google/oauth2client/git/trees/5a6f8788b572fe7e3d17739ace5d8de2dd840fa6"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/b2a405593f33eac2aaee0d57d558c554bda7fe91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/b2a405593f33eac2aaee0d57d558c554bda7fe91", "html_url": "https://github.com/google/oauth2client/commit/b2a405593f33eac2aaee0d57d558c554bda7fe91", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/b2a405593f33eac2aaee0d57d558c554bda7fe91/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0f79a59735b14c683c05bbff42be6ab9c37b970", "url": "https://api.github.com/repos/google/oauth2client/commits/a0f79a59735b14c683c05bbff42be6ab9c37b970", "html_url": "https://github.com/google/oauth2client/commit/a0f79a59735b14c683c05bbff42be6ab9c37b970"}, {"sha": "b375d31e1f98e454631eb7e17bd8203d1438eabf", "url": "https://api.github.com/repos/google/oauth2client/commits/b375d31e1f98e454631eb7e17bd8203d1438eabf", "html_url": "https://github.com/google/oauth2client/commit/b375d31e1f98e454631eb7e17bd8203d1438eabf"}]}, {"sha": "a0f79a59735b14c683c05bbff42be6ab9c37b970", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2015-12-04T00:07:36Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2015-12-04T00:07:36Z"}, "message": "Merge pull request #346 from jonparrott/contrib\n\nAdded empty oauth2client.contrib for contributed modules.", "tree": {"sha": "9769eeccdeb20b2025f819200556804684e4ebf2", "url": "https://api.github.com/repos/google/oauth2client/git/trees/9769eeccdeb20b2025f819200556804684e4ebf2"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/a0f79a59735b14c683c05bbff42be6ab9c37b970", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/a0f79a59735b14c683c05bbff42be6ab9c37b970", "html_url": "https://github.com/google/oauth2client/commit/a0f79a59735b14c683c05bbff42be6ab9c37b970", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/a0f79a59735b14c683c05bbff42be6ab9c37b970/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cf98dc4c4988b9a30d236802f1ae4289f1e631f", "url": "https://api.github.com/repos/google/oauth2client/commits/4cf98dc4c4988b9a30d236802f1ae4289f1e631f", "html_url": "https://github.com/google/oauth2client/commit/4cf98dc4c4988b9a30d236802f1ae4289f1e631f"}, {"sha": "4d3cc910ad805c9b2831a5804981ea6392f753bb", "url": "https://api.github.com/repos/google/oauth2client/commits/4d3cc910ad805c9b2831a5804981ea6392f753bb", "html_url": "https://github.com/google/oauth2client/commit/4d3cc910ad805c9b2831a5804981ea6392f753bb"}]}, {"sha": "b375d31e1f98e454631eb7e17bd8203d1438eabf", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-12-02T04:42:52Z"}, "committer": {"name": "Bill Prin", "email": "waprin@google.com", "date": "2015-12-03T22:14:37Z"}, "message": "More informative error when failing to open secrets file.\n\nFixes #348.\n\nFix Django ORM Tests for Django 1.9.\n\nDisables Django tests for 2.6 and 3.3 due to lack of Django support.", "tree": {"sha": "d6c865ce6413a7c021b33b08e78bfd4555dece86", "url": "https://api.github.com/repos/google/oauth2client/git/trees/d6c865ce6413a7c021b33b08e78bfd4555dece86"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/b375d31e1f98e454631eb7e17bd8203d1438eabf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/b375d31e1f98e454631eb7e17bd8203d1438eabf", "html_url": "https://github.com/google/oauth2client/commit/b375d31e1f98e454631eb7e17bd8203d1438eabf", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/b375d31e1f98e454631eb7e17bd8203d1438eabf/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "waprin", "id": 1075173, "avatar_url": "https://avatars2.githubusercontent.com/u/1075173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waprin", "html_url": "https://github.com/waprin", "followers_url": "https://api.github.com/users/waprin/followers", "following_url": "https://api.github.com/users/waprin/following{/other_user}", "gists_url": "https://api.github.com/users/waprin/gists{/gist_id}", "starred_url": "https://api.github.com/users/waprin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waprin/subscriptions", "organizations_url": "https://api.github.com/users/waprin/orgs", "repos_url": "https://api.github.com/users/waprin/repos", "events_url": "https://api.github.com/users/waprin/events{/privacy}", "received_events_url": "https://api.github.com/users/waprin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cf98dc4c4988b9a30d236802f1ae4289f1e631f", "url": "https://api.github.com/repos/google/oauth2client/commits/4cf98dc4c4988b9a30d236802f1ae4289f1e631f", "html_url": "https://github.com/google/oauth2client/commit/4cf98dc4c4988b9a30d236802f1ae4289f1e631f"}]}, {"sha": "4d3cc910ad805c9b2831a5804981ea6392f753bb", "commit": {"author": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2015-11-30T21:31:41Z"}, "committer": {"name": "Jon Wayne Parrott", "email": "jon.wayne.parrott@gmail.com", "date": "2015-12-01T19:37:57Z"}, "message": "Adding empty oauth2client.contrib", "tree": {"sha": "9769eeccdeb20b2025f819200556804684e4ebf2", "url": "https://api.github.com/repos/google/oauth2client/git/trees/9769eeccdeb20b2025f819200556804684e4ebf2"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/4d3cc910ad805c9b2831a5804981ea6392f753bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/4d3cc910ad805c9b2831a5804981ea6392f753bb", "html_url": "https://github.com/google/oauth2client/commit/4d3cc910ad805c9b2831a5804981ea6392f753bb", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/4d3cc910ad805c9b2831a5804981ea6392f753bb/comments", "author": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonparrott", "id": 250995, "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonparrott", "html_url": "https://github.com/jonparrott", "followers_url": "https://api.github.com/users/jonparrott/followers", "following_url": "https://api.github.com/users/jonparrott/following{/other_user}", "gists_url": "https://api.github.com/users/jonparrott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonparrott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonparrott/subscriptions", "organizations_url": "https://api.github.com/users/jonparrott/orgs", "repos_url": "https://api.github.com/users/jonparrott/repos", "events_url": "https://api.github.com/users/jonparrott/events{/privacy}", "received_events_url": "https://api.github.com/users/jonparrott/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cf98dc4c4988b9a30d236802f1ae4289f1e631f", "url": "https://api.github.com/repos/google/oauth2client/commits/4cf98dc4c4988b9a30d236802f1ae4289f1e631f", "html_url": "https://github.com/google/oauth2client/commit/4cf98dc4c4988b9a30d236802f1ae4289f1e631f"}]}, {"sha": "4cf98dc4c4988b9a30d236802f1ae4289f1e631f", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2015-11-24T18:45:38Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2015-11-24T18:45:38Z"}, "message": "Merge pull request #334 from royalharsh/master\n\nUpdate logos to Google's new-as-of-September-2015 look.", "tree": {"sha": "a3d4e3d7ce30e9dbcb554e172befd106bdd20f2d", "url": "https://api.github.com/repos/google/oauth2client/git/trees/a3d4e3d7ce30e9dbcb554e172befd106bdd20f2d"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/4cf98dc4c4988b9a30d236802f1ae4289f1e631f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/4cf98dc4c4988b9a30d236802f1ae4289f1e631f", "html_url": "https://github.com/google/oauth2client/commit/4cf98dc4c4988b9a30d236802f1ae4289f1e631f", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/4cf98dc4c4988b9a30d236802f1ae4289f1e631f/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73d9d55447de97dfe541395817a0c8241701f7d6", "url": "https://api.github.com/repos/google/oauth2client/commits/73d9d55447de97dfe541395817a0c8241701f7d6", "html_url": "https://github.com/google/oauth2client/commit/73d9d55447de97dfe541395817a0c8241701f7d6"}, {"sha": "4a2b6a0d1a662b76240ec10c8574d2fea5a9e276", "url": "https://api.github.com/repos/google/oauth2client/commits/4a2b6a0d1a662b76240ec10c8574d2fea5a9e276", "html_url": "https://github.com/google/oauth2client/commit/4a2b6a0d1a662b76240ec10c8574d2fea5a9e276"}]}, {"sha": "73d9d55447de97dfe541395817a0c8241701f7d6", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-11-18T20:33:02Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-11-18T20:33:02Z"}, "message": "Merge pull request #341 from thobrla/master\n\nRelease v1.5.2", "tree": {"sha": "10992198704030c5f8481044aa72947dad7bd898", "url": "https://api.github.com/repos/google/oauth2client/git/trees/10992198704030c5f8481044aa72947dad7bd898"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/73d9d55447de97dfe541395817a0c8241701f7d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/73d9d55447de97dfe541395817a0c8241701f7d6", "html_url": "https://github.com/google/oauth2client/commit/73d9d55447de97dfe541395817a0c8241701f7d6", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/73d9d55447de97dfe541395817a0c8241701f7d6/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42279caa52d3222dec460f923ad0c0e94b04eacb", "url": "https://api.github.com/repos/google/oauth2client/commits/42279caa52d3222dec460f923ad0c0e94b04eacb", "html_url": "https://github.com/google/oauth2client/commit/42279caa52d3222dec460f923ad0c0e94b04eacb"}, {"sha": "3042ad2554d20a8c02c0714b58adcba7ec842d88", "url": "https://api.github.com/repos/google/oauth2client/commits/3042ad2554d20a8c02c0714b58adcba7ec842d88", "html_url": "https://github.com/google/oauth2client/commit/3042ad2554d20a8c02c0714b58adcba7ec842d88"}]}, {"sha": "3042ad2554d20a8c02c0714b58adcba7ec842d88", "commit": {"author": {"name": "Travis Hobrla", "email": "thobrla@google.com", "date": "2015-11-18T20:14:12Z"}, "committer": {"name": "Travis Hobrla", "email": "thobrla@google.com", "date": "2015-11-18T20:30:07Z"}, "message": "Release v1.5.2", "tree": {"sha": "10992198704030c5f8481044aa72947dad7bd898", "url": "https://api.github.com/repos/google/oauth2client/git/trees/10992198704030c5f8481044aa72947dad7bd898"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/3042ad2554d20a8c02c0714b58adcba7ec842d88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/3042ad2554d20a8c02c0714b58adcba7ec842d88", "html_url": "https://github.com/google/oauth2client/commit/3042ad2554d20a8c02c0714b58adcba7ec842d88", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/3042ad2554d20a8c02c0714b58adcba7ec842d88/comments", "author": {"login": "thobrla", "id": 3239120, "avatar_url": "https://avatars2.githubusercontent.com/u/3239120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thobrla", "html_url": "https://github.com/thobrla", "followers_url": "https://api.github.com/users/thobrla/followers", "following_url": "https://api.github.com/users/thobrla/following{/other_user}", "gists_url": "https://api.github.com/users/thobrla/gists{/gist_id}", "starred_url": "https://api.github.com/users/thobrla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thobrla/subscriptions", "organizations_url": "https://api.github.com/users/thobrla/orgs", "repos_url": "https://api.github.com/users/thobrla/repos", "events_url": "https://api.github.com/users/thobrla/events{/privacy}", "received_events_url": "https://api.github.com/users/thobrla/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thobrla", "id": 3239120, "avatar_url": "https://avatars2.githubusercontent.com/u/3239120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thobrla", "html_url": "https://github.com/thobrla", "followers_url": "https://api.github.com/users/thobrla/followers", "following_url": "https://api.github.com/users/thobrla/following{/other_user}", "gists_url": "https://api.github.com/users/thobrla/gists{/gist_id}", "starred_url": "https://api.github.com/users/thobrla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thobrla/subscriptions", "organizations_url": "https://api.github.com/users/thobrla/orgs", "repos_url": "https://api.github.com/users/thobrla/repos", "events_url": "https://api.github.com/users/thobrla/events{/privacy}", "received_events_url": "https://api.github.com/users/thobrla/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42279caa52d3222dec460f923ad0c0e94b04eacb", "url": "https://api.github.com/repos/google/oauth2client/commits/42279caa52d3222dec460f923ad0c0e94b04eacb", "html_url": "https://github.com/google/oauth2client/commit/42279caa52d3222dec460f923ad0c0e94b04eacb"}]}, {"sha": "c53636ed3606c70020cb108d87104b7fdc4b2681", "commit": {"author": {"name": "Dan Ring", "email": "dfring@gmail.com", "date": "2015-11-12T23:05:58Z"}, "committer": {"name": "Dan Ring", "email": "dfring@gmail.com", "date": "2015-11-18T18:00:33Z"}, "message": "Update id_token on refresh", "tree": {"sha": "d901c3803f274b26a06cf7ce1eff6e40aa802276", "url": "https://api.github.com/repos/google/oauth2client/git/trees/d901c3803f274b26a06cf7ce1eff6e40aa802276"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/c53636ed3606c70020cb108d87104b7fdc4b2681", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/c53636ed3606c70020cb108d87104b7fdc4b2681", "html_url": "https://github.com/google/oauth2client/commit/c53636ed3606c70020cb108d87104b7fdc4b2681", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/c53636ed3606c70020cb108d87104b7fdc4b2681/comments", "author": {"login": "danring", "id": 52101, "avatar_url": "https://avatars0.githubusercontent.com/u/52101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danring", "html_url": "https://github.com/danring", "followers_url": "https://api.github.com/users/danring/followers", "following_url": "https://api.github.com/users/danring/following{/other_user}", "gists_url": "https://api.github.com/users/danring/gists{/gist_id}", "starred_url": "https://api.github.com/users/danring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danring/subscriptions", "organizations_url": "https://api.github.com/users/danring/orgs", "repos_url": "https://api.github.com/users/danring/repos", "events_url": "https://api.github.com/users/danring/events{/privacy}", "received_events_url": "https://api.github.com/users/danring/received_events", "type": "User", "site_admin": false}, "committer": {"login": "danring", "id": 52101, "avatar_url": "https://avatars0.githubusercontent.com/u/52101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danring", "html_url": "https://github.com/danring", "followers_url": "https://api.github.com/users/danring/followers", "following_url": "https://api.github.com/users/danring/following{/other_user}", "gists_url": "https://api.github.com/users/danring/gists{/gist_id}", "starred_url": "https://api.github.com/users/danring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danring/subscriptions", "organizations_url": "https://api.github.com/users/danring/orgs", "repos_url": "https://api.github.com/users/danring/repos", "events_url": "https://api.github.com/users/danring/events{/privacy}", "received_events_url": "https://api.github.com/users/danring/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab3e5353bf604e0ba13429c20c26a04900168699", "url": "https://api.github.com/repos/google/oauth2client/commits/ab3e5353bf604e0ba13429c20c26a04900168699", "html_url": "https://github.com/google/oauth2client/commit/ab3e5353bf604e0ba13429c20c26a04900168699"}]}, {"sha": "42279caa52d3222dec460f923ad0c0e94b04eacb", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-11-18T01:43:09Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-11-18T01:43:09Z"}, "message": "Merge pull request #336 from thobrla/master\n\nFall back to credential refresh on EDEADLK", "tree": {"sha": "2ba706ec7616dd8b719ee0422deff7ba98d3847e", "url": "https://api.github.com/repos/google/oauth2client/git/trees/2ba706ec7616dd8b719ee0422deff7ba98d3847e"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/42279caa52d3222dec460f923ad0c0e94b04eacb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/42279caa52d3222dec460f923ad0c0e94b04eacb", "html_url": "https://github.com/google/oauth2client/commit/42279caa52d3222dec460f923ad0c0e94b04eacb", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/42279caa52d3222dec460f923ad0c0e94b04eacb/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab3e5353bf604e0ba13429c20c26a04900168699", "url": "https://api.github.com/repos/google/oauth2client/commits/ab3e5353bf604e0ba13429c20c26a04900168699", "html_url": "https://github.com/google/oauth2client/commit/ab3e5353bf604e0ba13429c20c26a04900168699"}, {"sha": "3b72d50936ca6c01b1b6612999da74715a468aa2", "url": "https://api.github.com/repos/google/oauth2client/commits/3b72d50936ca6c01b1b6612999da74715a468aa2", "html_url": "https://github.com/google/oauth2client/commit/3b72d50936ca6c01b1b6612999da74715a468aa2"}]}, {"sha": "3b72d50936ca6c01b1b6612999da74715a468aa2", "commit": {"author": {"name": "Travis Hobrla", "email": "thobrla@google.com", "date": "2015-11-10T21:23:19Z"}, "committer": {"name": "Travis Hobrla", "email": "thobrla@google.com", "date": "2015-11-17T22:27:43Z"}, "message": "Fall back to credential refresh on EDEADLK\n\nFixes https://github.com/google/oauth2client/issues/335\n\nThis change fixes a bug where multiple threads and/or processes\nusing multistore_file to access the same backing store could\nraise IOError errno.EDEADLK to the calling application. Since\nEDEADLK is a possibility with concurrent access, this change\ninstead causes a fallback to read only mode and refresh\ncredentials if necessary.", "tree": {"sha": "2ba706ec7616dd8b719ee0422deff7ba98d3847e", "url": "https://api.github.com/repos/google/oauth2client/git/trees/2ba706ec7616dd8b719ee0422deff7ba98d3847e"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/3b72d50936ca6c01b1b6612999da74715a468aa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/3b72d50936ca6c01b1b6612999da74715a468aa2", "html_url": "https://github.com/google/oauth2client/commit/3b72d50936ca6c01b1b6612999da74715a468aa2", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/3b72d50936ca6c01b1b6612999da74715a468aa2/comments", "author": {"login": "thobrla", "id": 3239120, "avatar_url": "https://avatars2.githubusercontent.com/u/3239120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thobrla", "html_url": "https://github.com/thobrla", "followers_url": "https://api.github.com/users/thobrla/followers", "following_url": "https://api.github.com/users/thobrla/following{/other_user}", "gists_url": "https://api.github.com/users/thobrla/gists{/gist_id}", "starred_url": "https://api.github.com/users/thobrla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thobrla/subscriptions", "organizations_url": "https://api.github.com/users/thobrla/orgs", "repos_url": "https://api.github.com/users/thobrla/repos", "events_url": "https://api.github.com/users/thobrla/events{/privacy}", "received_events_url": "https://api.github.com/users/thobrla/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thobrla", "id": 3239120, "avatar_url": "https://avatars2.githubusercontent.com/u/3239120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thobrla", "html_url": "https://github.com/thobrla", "followers_url": "https://api.github.com/users/thobrla/followers", "following_url": "https://api.github.com/users/thobrla/following{/other_user}", "gists_url": "https://api.github.com/users/thobrla/gists{/gist_id}", "starred_url": "https://api.github.com/users/thobrla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thobrla/subscriptions", "organizations_url": "https://api.github.com/users/thobrla/orgs", "repos_url": "https://api.github.com/users/thobrla/repos", "events_url": "https://api.github.com/users/thobrla/events{/privacy}", "received_events_url": "https://api.github.com/users/thobrla/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab3e5353bf604e0ba13429c20c26a04900168699", "url": "https://api.github.com/repos/google/oauth2client/commits/ab3e5353bf604e0ba13429c20c26a04900168699", "html_url": "https://github.com/google/oauth2client/commit/ab3e5353bf604e0ba13429c20c26a04900168699"}]}, {"sha": "ab3e5353bf604e0ba13429c20c26a04900168699", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-11-17T22:20:52Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-11-17T22:20:52Z"}, "message": "Merge pull request #340 from dhermes/tox-221-temp-workaround\n\nPinning tox to version 2.1.1.", "tree": {"sha": "35830fd1aa91b308acb1645d930f86ff94160945", "url": "https://api.github.com/repos/google/oauth2client/git/trees/35830fd1aa91b308acb1645d930f86ff94160945"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/ab3e5353bf604e0ba13429c20c26a04900168699", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/ab3e5353bf604e0ba13429c20c26a04900168699", "html_url": "https://github.com/google/oauth2client/commit/ab3e5353bf604e0ba13429c20c26a04900168699", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/ab3e5353bf604e0ba13429c20c26a04900168699/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "311a53fbcae550526a74057f27cb9df73a0af009", "url": "https://api.github.com/repos/google/oauth2client/commits/311a53fbcae550526a74057f27cb9df73a0af009", "html_url": "https://github.com/google/oauth2client/commit/311a53fbcae550526a74057f27cb9df73a0af009"}, {"sha": "42db5143d37cb3282ef35e63c5d0e6f5c3a54895", "url": "https://api.github.com/repos/google/oauth2client/commits/42db5143d37cb3282ef35e63c5d0e6f5c3a54895", "html_url": "https://github.com/google/oauth2client/commit/42db5143d37cb3282ef35e63c5d0e6f5c3a54895"}]}, {"sha": "42db5143d37cb3282ef35e63c5d0e6f5c3a54895", "commit": {"author": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-11-16T19:14:50Z"}, "committer": {"name": "Danny Hermes", "email": "daniel.j.hermes@gmail.com", "date": "2015-11-16T19:14:50Z"}, "message": "Pinning tox to version 2.1.1.\n\nThis is a temporary workaround due to the config parsing\nchange introduced in 2.2.0.\n\nSee #339 for more details.", "tree": {"sha": "35830fd1aa91b308acb1645d930f86ff94160945", "url": "https://api.github.com/repos/google/oauth2client/git/trees/35830fd1aa91b308acb1645d930f86ff94160945"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/42db5143d37cb3282ef35e63c5d0e6f5c3a54895", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/42db5143d37cb3282ef35e63c5d0e6f5c3a54895", "html_url": "https://github.com/google/oauth2client/commit/42db5143d37cb3282ef35e63c5d0e6f5c3a54895", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/42db5143d37cb3282ef35e63c5d0e6f5c3a54895/comments", "author": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "311a53fbcae550526a74057f27cb9df73a0af009", "url": "https://api.github.com/repos/google/oauth2client/commits/311a53fbcae550526a74057f27cb9df73a0af009", "html_url": "https://github.com/google/oauth2client/commit/311a53fbcae550526a74057f27cb9df73a0af009"}]}, {"sha": "4a2b6a0d1a662b76240ec10c8574d2fea5a9e276", "commit": {"author": {"name": "Harsh Vardhan", "email": "harshvd95@gmail.com", "date": "2015-11-04T15:06:45Z"}, "committer": {"name": "Harsh Vardhan", "email": "harshvd95@gmail.com", "date": "2015-11-04T15:06:45Z"}, "message": "updates logo", "tree": {"sha": "0937fe5c598408798ab176b3e8d2ace5858ba948", "url": "https://api.github.com/repos/google/oauth2client/git/trees/0937fe5c598408798ab176b3e8d2ace5858ba948"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/4a2b6a0d1a662b76240ec10c8574d2fea5a9e276", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/4a2b6a0d1a662b76240ec10c8574d2fea5a9e276", "html_url": "https://github.com/google/oauth2client/commit/4a2b6a0d1a662b76240ec10c8574d2fea5a9e276", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/4a2b6a0d1a662b76240ec10c8574d2fea5a9e276/comments", "author": {"login": "royalharsh", "id": 3523733, "avatar_url": "https://avatars3.githubusercontent.com/u/3523733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/royalharsh", "html_url": "https://github.com/royalharsh", "followers_url": "https://api.github.com/users/royalharsh/followers", "following_url": "https://api.github.com/users/royalharsh/following{/other_user}", "gists_url": "https://api.github.com/users/royalharsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/royalharsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/royalharsh/subscriptions", "organizations_url": "https://api.github.com/users/royalharsh/orgs", "repos_url": "https://api.github.com/users/royalharsh/repos", "events_url": "https://api.github.com/users/royalharsh/events{/privacy}", "received_events_url": "https://api.github.com/users/royalharsh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "royalharsh", "id": 3523733, "avatar_url": "https://avatars3.githubusercontent.com/u/3523733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/royalharsh", "html_url": "https://github.com/royalharsh", "followers_url": "https://api.github.com/users/royalharsh/followers", "following_url": "https://api.github.com/users/royalharsh/following{/other_user}", "gists_url": "https://api.github.com/users/royalharsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/royalharsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/royalharsh/subscriptions", "organizations_url": "https://api.github.com/users/royalharsh/orgs", "repos_url": "https://api.github.com/users/royalharsh/repos", "events_url": "https://api.github.com/users/royalharsh/events{/privacy}", "received_events_url": "https://api.github.com/users/royalharsh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "311a53fbcae550526a74057f27cb9df73a0af009", "url": "https://api.github.com/repos/google/oauth2client/commits/311a53fbcae550526a74057f27cb9df73a0af009", "html_url": "https://github.com/google/oauth2client/commit/311a53fbcae550526a74057f27cb9df73a0af009"}]}, {"sha": "311a53fbcae550526a74057f27cb9df73a0af009", "commit": {"author": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2015-10-22T00:03:57Z"}, "committer": {"name": "Nathaniel Manista", "email": "nathaniel@google.com", "date": "2015-10-22T00:03:57Z"}, "message": "Merge pull request #322 from jonparrott/master\n\nFixed incremental auth in flask_util.", "tree": {"sha": "be53d5ca12d1261c64f9f32ba084f756c300e70d", "url": "https://api.github.com/repos/google/oauth2client/git/trees/be53d5ca12d1261c64f9f32ba084f756c300e70d"}, "url": "https://api.github.com/repos/google/oauth2client/git/commits/311a53fbcae550526a74057f27cb9df73a0af009", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/google/oauth2client/commits/311a53fbcae550526a74057f27cb9df73a0af009", "html_url": "https://github.com/google/oauth2client/commit/311a53fbcae550526a74057f27cb9df73a0af009", "comments_url": "https://api.github.com/repos/google/oauth2client/commits/311a53fbcae550526a74057f27cb9df73a0af009/comments", "author": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8a6a0f835f7b07806e65fe6a48dda61a8ed0a1d", "url": "https://api.github.com/repos/google/oauth2client/commits/b8a6a0f835f7b07806e65fe6a48dda61a8ed0a1d", "html_url": "https://github.com/google/oauth2client/commit/b8a6a0f835f7b07806e65fe6a48dda61a8ed0a1d"}, {"sha": "07ea7c54752de602109cdaf17465e4d873479786", "url": "https://api.github.com/repos/google/oauth2client/commits/07ea7c54752de602109cdaf17465e4d873479786", "html_url": "https://github.com/google/oauth2client/commit/07ea7c54752de602109cdaf17465e4d873479786"}]}], "pull_requests": [{"url": "https://api.github.com/repos/google/oauth2client/pulls/731", "id": 154320630, "html_url": "https://github.com/google/oauth2client/pull/731", "diff_url": "https://github.com/google/oauth2client/pull/731.diff", "patch_url": "https://github.com/google/oauth2client/pull/731.patch", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/731", "number": 731, "state": "open", "locked": false, "title": "Don't use socket.recv with socket.MSG_WAITALL", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "body": "socket.MSG_WAITALL is not available on Windows so the call to\r\nsocket.recv with this flag will fail there. Provide a helper method\r\nthat tries to receive an exact number of bytes and use it instead.", "created_at": "2017-11-23T08:41:12Z", "updated_at": "2017-11-23T08:49:57Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "64ab345af49200380654c458de5e2d7a0054e021", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/google/oauth2client/pulls/731/commits", "review_comments_url": "https://api.github.com/repos/google/oauth2client/pulls/731/comments", "review_comment_url": "https://api.github.com/repos/google/oauth2client/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/731/comments", "statuses_url": "https://api.github.com/repos/google/oauth2client/statuses/bdc32dd41e4b86e8aff87891e079c46e1c687c95", "head": {"label": "petrhosek:recvall", "ref": "recvall", "sha": "bdc32dd41e4b86e8aff87891e079c46e1c687c95", "user": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "repo": {"id": 111776726, "name": "oauth2client", "full_name": "petrhosek/oauth2client", "owner": {"login": "petrhosek", "id": 283696, "avatar_url": "https://avatars3.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/petrhosek/oauth2client", "description": "This is a Python library for accessing resources protected by OAuth 2.0.", "fork": true, "url": "https://api.github.com/repos/petrhosek/oauth2client", "forks_url": "https://api.github.com/repos/petrhosek/oauth2client/forks", "keys_url": "https://api.github.com/repos/petrhosek/oauth2client/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/petrhosek/oauth2client/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/petrhosek/oauth2client/teams", "hooks_url": "https://api.github.com/repos/petrhosek/oauth2client/hooks", "issue_events_url": "https://api.github.com/repos/petrhosek/oauth2client/issues/events{/number}", "events_url": "https://api.github.com/repos/petrhosek/oauth2client/events", "assignees_url": "https://api.github.com/repos/petrhosek/oauth2client/assignees{/user}", "branches_url": "https://api.github.com/repos/petrhosek/oauth2client/branches{/branch}", "tags_url": "https://api.github.com/repos/petrhosek/oauth2client/tags", "blobs_url": "https://api.github.com/repos/petrhosek/oauth2client/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/petrhosek/oauth2client/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/petrhosek/oauth2client/git/refs{/sha}", "trees_url": "https://api.github.com/repos/petrhosek/oauth2client/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/petrhosek/oauth2client/statuses/{sha}", "languages_url": "https://api.github.com/repos/petrhosek/oauth2client/languages", "stargazers_url": "https://api.github.com/repos/petrhosek/oauth2client/stargazers", "contributors_url": "https://api.github.com/repos/petrhosek/oauth2client/contributors", "subscribers_url": "https://api.github.com/repos/petrhosek/oauth2client/subscribers", "subscription_url": "https://api.github.com/repos/petrhosek/oauth2client/subscription", "commits_url": "https://api.github.com/repos/petrhosek/oauth2client/commits{/sha}", "git_commits_url": "https://api.github.com/repos/petrhosek/oauth2client/git/commits{/sha}", "comments_url": "https://api.github.com/repos/petrhosek/oauth2client/comments{/number}", "issue_comment_url": "https://api.github.com/repos/petrhosek/oauth2client/issues/comments{/number}", "contents_url": "https://api.github.com/repos/petrhosek/oauth2client/contents/{+path}", "compare_url": "https://api.github.com/repos/petrhosek/oauth2client/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/petrhosek/oauth2client/merges", "archive_url": "https://api.github.com/repos/petrhosek/oauth2client/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/petrhosek/oauth2client/downloads", "issues_url": "https://api.github.com/repos/petrhosek/oauth2client/issues{/number}", "pulls_url": "https://api.github.com/repos/petrhosek/oauth2client/pulls{/number}", "milestones_url": "https://api.github.com/repos/petrhosek/oauth2client/milestones{/number}", "notifications_url": "https://api.github.com/repos/petrhosek/oauth2client/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/petrhosek/oauth2client/labels{/name}", "releases_url": "https://api.github.com/repos/petrhosek/oauth2client/releases{/id}", "deployments_url": "https://api.github.com/repos/petrhosek/oauth2client/deployments", "created_at": "2017-11-23T07:23:08Z", "updated_at": "2017-11-23T07:23:10Z", "pushed_at": "2017-11-23T08:45:47Z", "git_url": "git://github.com/petrhosek/oauth2client.git", "ssh_url": "git@github.com:petrhosek/oauth2client.git", "clone_url": "https://github.com/petrhosek/oauth2client.git", "svn_url": "https://github.com/petrhosek/oauth2client", "homepage": "", "size": 23968, "stargazers_count": 0, "watchers_count": 0, "language": "Python", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "google:master", "ref": "master", "sha": "3071457064f3705bab1b041bd624a10d5a2d2619", "user": {"login": "google", "id": 1342004, "avatar_url": "https://avatars1.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 14211461, "name": "oauth2client", "full_name": "google/oauth2client", "owner": {"login": "google", "id": 1342004, "avatar_url": "https://avatars1.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/google/oauth2client", "description": "This is a Python library for accessing resources protected by OAuth 2.0.", "fork": false, "url": "https://api.github.com/repos/google/oauth2client", "forks_url": "https://api.github.com/repos/google/oauth2client/forks", "keys_url": "https://api.github.com/repos/google/oauth2client/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/oauth2client/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/oauth2client/teams", "hooks_url": "https://api.github.com/repos/google/oauth2client/hooks", "issue_events_url": "https://api.github.com/repos/google/oauth2client/issues/events{/number}", "events_url": "https://api.github.com/repos/google/oauth2client/events", "assignees_url": "https://api.github.com/repos/google/oauth2client/assignees{/user}", "branches_url": "https://api.github.com/repos/google/oauth2client/branches{/branch}", "tags_url": "https://api.github.com/repos/google/oauth2client/tags", "blobs_url": "https://api.github.com/repos/google/oauth2client/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/oauth2client/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/oauth2client/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/oauth2client/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/oauth2client/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/oauth2client/languages", "stargazers_url": "https://api.github.com/repos/google/oauth2client/stargazers", "contributors_url": "https://api.github.com/repos/google/oauth2client/contributors", "subscribers_url": "https://api.github.com/repos/google/oauth2client/subscribers", "subscription_url": "https://api.github.com/repos/google/oauth2client/subscription", "commits_url": "https://api.github.com/repos/google/oauth2client/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/oauth2client/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/oauth2client/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/oauth2client/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/oauth2client/contents/{+path}", "compare_url": "https://api.github.com/repos/google/oauth2client/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/oauth2client/merges", "archive_url": "https://api.github.com/repos/google/oauth2client/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/oauth2client/downloads", "issues_url": "https://api.github.com/repos/google/oauth2client/issues{/number}", "pulls_url": "https://api.github.com/repos/google/oauth2client/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/oauth2client/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/oauth2client/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/oauth2client/labels{/name}", "releases_url": "https://api.github.com/repos/google/oauth2client/releases{/id}", "deployments_url": "https://api.github.com/repos/google/oauth2client/deployments", "created_at": "2013-11-07T18:03:04Z", "updated_at": "2018-01-22T18:44:26Z", "pushed_at": "2017-11-23T08:45:49Z", "git_url": "git://github.com/google/oauth2client.git", "ssh_url": "git@github.com:google/oauth2client.git", "clone_url": "https://github.com/google/oauth2client.git", "svn_url": "https://github.com/google/oauth2client", "homepage": "", "size": 23967, "stargazers_count": 625, "watchers_count": 625, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": true, "forks_count": 317, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0"}, "forks": 317, "open_issues": 101, "watchers": 625, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/731"}, "html": {"href": "https://github.com/google/oauth2client/pull/731"}, "issue": {"href": "https://api.github.com/repos/google/oauth2client/issues/731"}, "comments": {"href": "https://api.github.com/repos/google/oauth2client/issues/731/comments"}, "review_comments": {"href": "https://api.github.com/repos/google/oauth2client/pulls/731/comments"}, "review_comment": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/google/oauth2client/pulls/731/commits"}, "statuses": {"href": "https://api.github.com/repos/google/oauth2client/statuses/bdc32dd41e4b86e8aff87891e079c46e1c687c95"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/726", "id": 143318903, "html_url": "https://github.com/google/oauth2client/pull/726", "diff_url": "https://github.com/google/oauth2client/pull/726.diff", "patch_url": "https://github.com/google/oauth2client/pull/726.patch", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/726", "number": 726, "state": "open", "locked": false, "title": "Add `access_type` as an optional flow parameter", "user": {"login": "orenyomtov", "id": 168856, "avatar_url": "https://avatars2.githubusercontent.com/u/168856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orenyomtov", "html_url": "https://github.com/orenyomtov", "followers_url": "https://api.github.com/users/orenyomtov/followers", "following_url": "https://api.github.com/users/orenyomtov/following{/other_user}", "gists_url": "https://api.github.com/users/orenyomtov/gists{/gist_id}", "starred_url": "https://api.github.com/users/orenyomtov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orenyomtov/subscriptions", "organizations_url": "https://api.github.com/users/orenyomtov/orgs", "repos_url": "https://api.github.com/users/orenyomtov/repos", "events_url": "https://api.github.com/users/orenyomtov/events{/privacy}", "received_events_url": "https://api.github.com/users/orenyomtov/received_events", "type": "User", "site_admin": false}, "body": "", "created_at": "2017-09-27T07:37:49Z", "updated_at": "2017-09-27T07:37:51Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "3402ace8395642191bdcbf99f6d2f47b58bbb35f", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/google/oauth2client/pulls/726/commits", "review_comments_url": "https://api.github.com/repos/google/oauth2client/pulls/726/comments", "review_comment_url": "https://api.github.com/repos/google/oauth2client/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/726/comments", "statuses_url": "https://api.github.com/repos/google/oauth2client/statuses/3f4843e53a7a52b1f57dc299bcd8d05814e2985b", "head": {"label": "orenyomtov:patch-1", "ref": "patch-1", "sha": "3f4843e53a7a52b1f57dc299bcd8d05814e2985b", "user": {"login": "orenyomtov", "id": 168856, "avatar_url": "https://avatars2.githubusercontent.com/u/168856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orenyomtov", "html_url": "https://github.com/orenyomtov", "followers_url": "https://api.github.com/users/orenyomtov/followers", "following_url": "https://api.github.com/users/orenyomtov/following{/other_user}", "gists_url": "https://api.github.com/users/orenyomtov/gists{/gist_id}", "starred_url": "https://api.github.com/users/orenyomtov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orenyomtov/subscriptions", "organizations_url": "https://api.github.com/users/orenyomtov/orgs", "repos_url": "https://api.github.com/users/orenyomtov/repos", "events_url": "https://api.github.com/users/orenyomtov/events{/privacy}", "received_events_url": "https://api.github.com/users/orenyomtov/received_events", "type": "User", "site_admin": false}, "repo": {"id": 104862676, "name": "oauth2client", "full_name": "orenyomtov/oauth2client", "owner": {"login": "orenyomtov", "id": 168856, "avatar_url": "https://avatars2.githubusercontent.com/u/168856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orenyomtov", "html_url": "https://github.com/orenyomtov", "followers_url": "https://api.github.com/users/orenyomtov/followers", "following_url": "https://api.github.com/users/orenyomtov/following{/other_user}", "gists_url": "https://api.github.com/users/orenyomtov/gists{/gist_id}", "starred_url": "https://api.github.com/users/orenyomtov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orenyomtov/subscriptions", "organizations_url": "https://api.github.com/users/orenyomtov/orgs", "repos_url": "https://api.github.com/users/orenyomtov/repos", "events_url": "https://api.github.com/users/orenyomtov/events{/privacy}", "received_events_url": "https://api.github.com/users/orenyomtov/received_events", "type": "User", "site_admin": false}, "private": false, "html_url": "https://github.com/orenyomtov/oauth2client", "description": "This is a Python library for accessing resources protected by OAuth 2.0.", "fork": true, "url": "https://api.github.com/repos/orenyomtov/oauth2client", "forks_url": "https://api.github.com/repos/orenyomtov/oauth2client/forks", "keys_url": "https://api.github.com/repos/orenyomtov/oauth2client/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/orenyomtov/oauth2client/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/orenyomtov/oauth2client/teams", "hooks_url": "https://api.github.com/repos/orenyomtov/oauth2client/hooks", "issue_events_url": "https://api.github.com/repos/orenyomtov/oauth2client/issues/events{/number}", "events_url": "https://api.github.com/repos/orenyomtov/oauth2client/events", "assignees_url": "https://api.github.com/repos/orenyomtov/oauth2client/assignees{/user}", "branches_url": "https://api.github.com/repos/orenyomtov/oauth2client/branches{/branch}", "tags_url": "https://api.github.com/repos/orenyomtov/oauth2client/tags", "blobs_url": "https://api.github.com/repos/orenyomtov/oauth2client/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/orenyomtov/oauth2client/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/orenyomtov/oauth2client/git/refs{/sha}", "trees_url": "https://api.github.com/repos/orenyomtov/oauth2client/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/orenyomtov/oauth2client/statuses/{sha}", "languages_url": "https://api.github.com/repos/orenyomtov/oauth2client/languages", "stargazers_url": "https://api.github.com/repos/orenyomtov/oauth2client/stargazers", "contributors_url": "https://api.github.com/repos/orenyomtov/oauth2client/contributors", "subscribers_url": "https://api.github.com/repos/orenyomtov/oauth2client/subscribers", "subscription_url": "https://api.github.com/repos/orenyomtov/oauth2client/subscription", "commits_url": "https://api.github.com/repos/orenyomtov/oauth2client/commits{/sha}", "git_commits_url": "https://api.github.com/repos/orenyomtov/oauth2client/git/commits{/sha}", "comments_url": "https://api.github.com/repos/orenyomtov/oauth2client/comments{/number}", "issue_comment_url": "https://api.github.com/repos/orenyomtov/oauth2client/issues/comments{/number}", "contents_url": "https://api.github.com/repos/orenyomtov/oauth2client/contents/{+path}", "compare_url": "https://api.github.com/repos/orenyomtov/oauth2client/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/orenyomtov/oauth2client/merges", "archive_url": "https://api.github.com/repos/orenyomtov/oauth2client/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/orenyomtov/oauth2client/downloads", "issues_url": "https://api.github.com/repos/orenyomtov/oauth2client/issues{/number}", "pulls_url": "https://api.github.com/repos/orenyomtov/oauth2client/pulls{/number}", "milestones_url": "https://api.github.com/repos/orenyomtov/oauth2client/milestones{/number}", "notifications_url": "https://api.github.com/repos/orenyomtov/oauth2client/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/orenyomtov/oauth2client/labels{/name}", "releases_url": "https://api.github.com/repos/orenyomtov/oauth2client/releases{/id}", "deployments_url": "https://api.github.com/repos/orenyomtov/oauth2client/deployments", "created_at": "2017-09-26T09:10:32Z", "updated_at": "2017-09-26T09:10:34Z", "pushed_at": "2017-09-27T07:37:41Z", "git_url": "git://github.com/orenyomtov/oauth2client.git", "ssh_url": "git@github.com:orenyomtov/oauth2client.git", "clone_url": "https://github.com/orenyomtov/oauth2client.git", "svn_url": "https://github.com/orenyomtov/oauth2client", "homepage": "", "size": 23967, "stargazers_count": 0, "watchers_count": 0, "language": "Python", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": null, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "google:master", "ref": "master", "sha": "1c56925cbc83b9dd8a5112a60e62e0aa73a33b5f", "user": {"login": "google", "id": 1342004, "avatar_url": "https://avatars1.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 14211461, "name": "oauth2client", "full_name": "google/oauth2client", "owner": {"login": "google", "id": 1342004, "avatar_url": "https://avatars1.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/google/oauth2client", "description": "This is a Python library for accessing resources protected by OAuth 2.0.", "fork": false, "url": "https://api.github.com/repos/google/oauth2client", "forks_url": "https://api.github.com/repos/google/oauth2client/forks", "keys_url": "https://api.github.com/repos/google/oauth2client/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/oauth2client/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/oauth2client/teams", "hooks_url": "https://api.github.com/repos/google/oauth2client/hooks", "issue_events_url": "https://api.github.com/repos/google/oauth2client/issues/events{/number}", "events_url": "https://api.github.com/repos/google/oauth2client/events", "assignees_url": "https://api.github.com/repos/google/oauth2client/assignees{/user}", "branches_url": "https://api.github.com/repos/google/oauth2client/branches{/branch}", "tags_url": "https://api.github.com/repos/google/oauth2client/tags", "blobs_url": "https://api.github.com/repos/google/oauth2client/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/oauth2client/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/oauth2client/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/oauth2client/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/oauth2client/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/oauth2client/languages", "stargazers_url": "https://api.github.com/repos/google/oauth2client/stargazers", "contributors_url": "https://api.github.com/repos/google/oauth2client/contributors", "subscribers_url": "https://api.github.com/repos/google/oauth2client/subscribers", "subscription_url": "https://api.github.com/repos/google/oauth2client/subscription", "commits_url": "https://api.github.com/repos/google/oauth2client/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/oauth2client/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/oauth2client/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/oauth2client/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/oauth2client/contents/{+path}", "compare_url": "https://api.github.com/repos/google/oauth2client/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/oauth2client/merges", "archive_url": "https://api.github.com/repos/google/oauth2client/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/oauth2client/downloads", "issues_url": "https://api.github.com/repos/google/oauth2client/issues{/number}", "pulls_url": "https://api.github.com/repos/google/oauth2client/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/oauth2client/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/oauth2client/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/oauth2client/labels{/name}", "releases_url": "https://api.github.com/repos/google/oauth2client/releases{/id}", "deployments_url": "https://api.github.com/repos/google/oauth2client/deployments", "created_at": "2013-11-07T18:03:04Z", "updated_at": "2018-01-22T18:44:26Z", "pushed_at": "2017-11-23T08:45:49Z", "git_url": "git://github.com/google/oauth2client.git", "ssh_url": "git@github.com:google/oauth2client.git", "clone_url": "https://github.com/google/oauth2client.git", "svn_url": "https://github.com/google/oauth2client", "homepage": "", "size": 23967, "stargazers_count": 625, "watchers_count": 625, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": true, "forks_count": 317, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0"}, "forks": 317, "open_issues": 101, "watchers": 625, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/726"}, "html": {"href": "https://github.com/google/oauth2client/pull/726"}, "issue": {"href": "https://api.github.com/repos/google/oauth2client/issues/726"}, "comments": {"href": "https://api.github.com/repos/google/oauth2client/issues/726/comments"}, "review_comments": {"href": "https://api.github.com/repos/google/oauth2client/pulls/726/comments"}, "review_comment": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/google/oauth2client/pulls/726/commits"}, "statuses": {"href": "https://api.github.com/repos/google/oauth2client/statuses/3f4843e53a7a52b1f57dc299bcd8d05814e2985b"}}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/699", "id": 106404860, "html_url": "https://github.com/google/oauth2client/pull/699", "diff_url": "https://github.com/google/oauth2client/pull/699.diff", "patch_url": "https://github.com/google/oauth2client/pull/699.patch", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/699", "number": 699, "state": "open", "locked": false, "title": "Add support for reauth in oauth2", "user": {"login": "svalentin", "id": 250871, "avatar_url": "https://avatars2.githubusercontent.com/u/250871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svalentin", "html_url": "https://github.com/svalentin", "followers_url": "https://api.github.com/users/svalentin/followers", "following_url": "https://api.github.com/users/svalentin/following{/other_user}", "gists_url": "https://api.github.com/users/svalentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/svalentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svalentin/subscriptions", "organizations_url": "https://api.github.com/users/svalentin/orgs", "repos_url": "https://api.github.com/users/svalentin/repos", "events_url": "https://api.github.com/users/svalentin/events{/privacy}", "received_events_url": "https://api.github.com/users/svalentin/received_events", "type": "User", "site_admin": false}, "body": "When the library refreshes an access token, if it fails because a rapt\r\ntoken is required or invalid, we try to refresh the rapt token and then\r\nretry the access token refresh.\r\n\r\nTo refresh the rapt token, we interact with the rapt service to get one.\r\nThis implies getting an access token for just REAUTH_SCOPE (which\r\nshouldn't require a rapt token) then passing that to the reauth service\r\nand answering challenges. Challenges could either be PASSWORD or\r\nSECURITY_KEY. Different accounts can have different policies. Some\r\naccounts might need only password, some can require both.\r\nOnce all challenges are answered, we get back a rapt token, which we use\r\nto get an access token with all scopes, and we return the request as if\r\nthe original access token refresh completed successfully.\r\n\r\nAccess tokens can have a lifespan shorter than a rapt token, and getting\r\na rapt token requires going through the whole reauth flow, where the\r\nuser enters their password/gnubby. An example is 1h expiry time for\r\naccess token, and 24h for rapt token.\r\n\r\nCommunication with the gnubby is done via the pyu2f libary (all python)\r\nhttps://github.com/google/pyu2f/\r\n\r\nThe idea is clients (like gcloud) could come with that library included,\r\nbut if it's not, we can fail elegantly and just tell users we couldn't\r\nrefresh access token.\r\nWe can also include the library in oauth2 if it's appropriate.", "created_at": "2017-02-15T21:38:17Z", "updated_at": "2017-05-24T23:42:32Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "269d347d6ba70f7bf3f86dafd57e0a67a9a335f0", "assignee": null, "assignees": [], "requested_reviewers": [], "milestone": null, "commits_url": "https://api.github.com/repos/google/oauth2client/pulls/699/commits", "review_comments_url": "https://api.github.com/repos/google/oauth2client/pulls/699/comments", "review_comment_url": "https://api.github.com/repos/google/oauth2client/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/google/oauth2client/issues/699/comments", "statuses_url": "https://api.github.com/repos/google/oauth2client/statuses/fb47b427192a8448d772407fcea3814c67f5f5a4", "head": {"label": "svalentin:reauth", "ref": "reauth", "sha": "fb47b427192a8448d772407fcea3814c67f5f5a4", "user": {"login": "svalentin", "id": 250871, "avatar_url": "https://avatars2.githubusercontent.com/u/250871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svalentin", "html_url": "https://github.com/svalentin", "followers_url": "https://api.github.com/users/svalentin/followers", "following_url": "https://api.github.com/users/svalentin/following{/other_user}", "gists_url": "https://api.github.com/users/svalentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/svalentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svalentin/subscriptions", "organizations_url": "https://api.github.com/users/svalentin/orgs", "repos_url": "https://api.github.com/users/svalentin/repos", "events_url": "https://api.github.com/users/svalentin/events{/privacy}", "received_events_url": "https://api.github.com/users/svalentin/received_events", "type": "User", "site_admin": false}, "repo": null}, "base": {"label": "google:master", "ref": "master", "sha": "00926f2058e23da7f6772ad6477e64d7506415e5", "user": {"login": "google", "id": 1342004, "avatar_url": "https://avatars1.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 14211461, "name": "oauth2client", "full_name": "google/oauth2client", "owner": {"login": "google", "id": 1342004, "avatar_url": "https://avatars1.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "private": false, "html_url": "https://github.com/google/oauth2client", "description": "This is a Python library for accessing resources protected by OAuth 2.0.", "fork": false, "url": "https://api.github.com/repos/google/oauth2client", "forks_url": "https://api.github.com/repos/google/oauth2client/forks", "keys_url": "https://api.github.com/repos/google/oauth2client/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/oauth2client/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/oauth2client/teams", "hooks_url": "https://api.github.com/repos/google/oauth2client/hooks", "issue_events_url": "https://api.github.com/repos/google/oauth2client/issues/events{/number}", "events_url": "https://api.github.com/repos/google/oauth2client/events", "assignees_url": "https://api.github.com/repos/google/oauth2client/assignees{/user}", "branches_url": "https://api.github.com/repos/google/oauth2client/branches{/branch}", "tags_url": "https://api.github.com/repos/google/oauth2client/tags", "blobs_url": "https://api.github.com/repos/google/oauth2client/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/oauth2client/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/oauth2client/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/oauth2client/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/oauth2client/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/oauth2client/languages", "stargazers_url": "https://api.github.com/repos/google/oauth2client/stargazers", "contributors_url": "https://api.github.com/repos/google/oauth2client/contributors", "subscribers_url": "https://api.github.com/repos/google/oauth2client/subscribers", "subscription_url": "https://api.github.com/repos/google/oauth2client/subscription", "commits_url": "https://api.github.com/repos/google/oauth2client/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/oauth2client/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/oauth2client/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/oauth2client/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/oauth2client/contents/{+path}", "compare_url": "https://api.github.com/repos/google/oauth2client/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/oauth2client/merges", "archive_url": "https://api.github.com/repos/google/oauth2client/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/oauth2client/downloads", "issues_url": "https://api.github.com/repos/google/oauth2client/issues{/number}", "pulls_url": "https://api.github.com/repos/google/oauth2client/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/oauth2client/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/oauth2client/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/oauth2client/labels{/name}", "releases_url": "https://api.github.com/repos/google/oauth2client/releases{/id}", "deployments_url": "https://api.github.com/repos/google/oauth2client/deployments", "created_at": "2013-11-07T18:03:04Z", "updated_at": "2018-01-22T18:44:26Z", "pushed_at": "2017-11-23T08:45:49Z", "git_url": "git://github.com/google/oauth2client.git", "ssh_url": "git@github.com:google/oauth2client.git", "clone_url": "https://github.com/google/oauth2client.git", "svn_url": "https://github.com/google/oauth2client", "homepage": "", "size": 23967, "stargazers_count": 625, "watchers_count": 625, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": true, "forks_count": 317, "mirror_url": null, "archived": false, "open_issues_count": 101, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0"}, "forks": 317, "open_issues": 101, "watchers": 625, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/699"}, "html": {"href": "https://github.com/google/oauth2client/pull/699"}, "issue": {"href": "https://api.github.com/repos/google/oauth2client/issues/699"}, "comments": {"href": "https://api.github.com/repos/google/oauth2client/issues/699/comments"}, "review_comments": {"href": "https://api.github.com/repos/google/oauth2client/pulls/699/comments"}, "review_comment": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/google/oauth2client/pulls/699/commits"}, "statuses": {"href": "https://api.github.com/repos/google/oauth2client/statuses/fb47b427192a8448d772407fcea3814c67f5f5a4"}}, "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/google/oauth2client/issues/comments/28875518", "html_url": "https://github.com/google/oauth2client/pull/1#issuecomment-28875518", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/1", "id": 28875518, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2013-11-20T10:03:01Z", "updated_at": "2013-11-20T10:03:01Z", "author_association": "MEMBER", "body": "i'm good with leaving serious testing for a later patch -- but if possible, could you throw a few example input/output pairs into the `BitStringToByteString` docstring? even if we're testing them by hand, i'd like to have a clear record of what we expected that to do.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/28875518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/29314864", "html_url": "https://github.com/google/oauth2client/pull/1#issuecomment-29314864", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/1", "id": 29314864, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2013-11-26T17:52:00Z", "updated_at": "2013-11-26T17:52:00Z", "author_association": "CONTRIBUTOR", "body": "I've added the test framework.\n\nPlease update your PR to include tests!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/29314864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/41329388", "html_url": "https://github.com/google/oauth2client/pull/1#issuecomment-41329388", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/1", "id": 41329388, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-24T20:40:57Z", "updated_at": "2014-04-24T20:40:57Z", "author_association": "CONTRIBUTOR", "body": "You'll probably have to redo this PR - I've updated this repo using the history from the old googlecode repo, so things will probably not match. On the other hand, that transition has now taken place, so we can actually act on this pull request once it's settled.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/41329388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/41344670", "html_url": "https://github.com/google/oauth2client/pull/1#issuecomment-41344670", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/1", "id": 41344670, "user": {"login": "aeijdenberg", "id": 5984070, "avatar_url": "https://avatars1.githubusercontent.com/u/5984070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeijdenberg", "html_url": "https://github.com/aeijdenberg", "followers_url": "https://api.github.com/users/aeijdenberg/followers", "following_url": "https://api.github.com/users/aeijdenberg/following{/other_user}", "gists_url": "https://api.github.com/users/aeijdenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeijdenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeijdenberg/subscriptions", "organizations_url": "https://api.github.com/users/aeijdenberg/orgs", "repos_url": "https://api.github.com/users/aeijdenberg/repos", "events_url": "https://api.github.com/users/aeijdenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/aeijdenberg/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-24T23:26:28Z", "updated_at": "2014-04-24T23:26:28Z", "author_association": "NONE", "body": "John - it's unlikely I'll have time.  Would you be able to pick it up?\n\nOn Thu, Apr 24, 2014 at 1:40 PM, John Asmuth notifications@github.comwrote:\n\n> You'll probably have to redo this PR - I've updated this repo using the\n> history from the old googlecode repo, so things will probably not match. On\n> the other hand, that transition has now taken place, so we can actually act\n> on this pull request once it's settled.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/google/oauth2client/pull/1#issuecomment-41329388\n> .\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/41344670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/41350726", "html_url": "https://github.com/google/oauth2client/pull/1#issuecomment-41350726", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/1", "id": 41350726, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-25T01:17:48Z", "updated_at": "2014-04-25T01:17:48Z", "author_association": "MEMBER", "body": "I can if John can't, but not for another week or so.\n\n---\n\n-cc\n\nsent from my phone\nOn Apr 24, 2014 4:26 PM, \"aeijdenberg\" notifications@github.com wrote:\n\n> John - it's unlikely I'll have time. Would you be able to pick it up?\n> \n> On Thu, Apr 24, 2014 at 1:40 PM, John Asmuth notifications@github.comwrote:\n> \n> > You'll probably have to redo this PR - I've updated this repo using the\n> > history from the old googlecode repo, so things will probably not match.\n> > On\n> > the other hand, that transition has now taken place, so we can actually\n> > act\n> > on this pull request once it's settled.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/google/oauth2client/pull/1#issuecomment-41329388>\n> > .\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/google/oauth2client/pull/1#issuecomment-41344670\n> .\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/41350726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/41353823", "html_url": "https://github.com/google/oauth2client/pull/1#issuecomment-41353823", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/1", "id": 41353823, "user": {"login": "aeijdenberg", "id": 5984070, "avatar_url": "https://avatars1.githubusercontent.com/u/5984070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeijdenberg", "html_url": "https://github.com/aeijdenberg", "followers_url": "https://api.github.com/users/aeijdenberg/followers", "following_url": "https://api.github.com/users/aeijdenberg/following{/other_user}", "gists_url": "https://api.github.com/users/aeijdenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeijdenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeijdenberg/subscriptions", "organizations_url": "https://api.github.com/users/aeijdenberg/orgs", "repos_url": "https://api.github.com/users/aeijdenberg/repos", "events_url": "https://api.github.com/users/aeijdenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/aeijdenberg/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-25T02:34:39Z", "updated_at": "2014-04-25T02:34:39Z", "author_association": "NONE", "body": "Thank you.\n\nOn Thu, Apr 24, 2014 at 6:17 PM, Craig Citro notifications@github.comwrote:\n\n> I can if John can't, but not for another week or so.\n> \n> ---\n> \n> -cc\n> \n> sent from my phone\n> On Apr 24, 2014 4:26 PM, \"aeijdenberg\" notifications@github.com wrote:\n> \n> > John - it's unlikely I'll have time. Would you be able to pick it up?\n> > \n> > On Thu, Apr 24, 2014 at 1:40 PM, John Asmuth notifications@github.comwrote:\n> > \n> > > You'll probably have to redo this PR - I've updated this repo using\n> > > the\n> > > history from the old googlecode repo, so things will probably not\n> > > match.\n> > > On\n> > > the other hand, that transition has now taken place, so we can\n> > > actually\n> > > act\n> > > on this pull request once it's settled.\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub<\n> > > https://github.com/google/oauth2client/pull/1#issuecomment-41329388>\n> > > .\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/google/oauth2client/pull/1#issuecomment-41344670>\n> > .\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/google/oauth2client/pull/1#issuecomment-41350726\n> .\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/41353823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/41705162", "html_url": "https://github.com/google/oauth2client/pull/2#issuecomment-41705162", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/2", "id": 41705162, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-29T17:20:10Z", "updated_at": "2014-04-29T17:20:10Z", "author_association": "MEMBER", "body": "first question: did you sign the CLA?\n\nhttp://google.github.io/oauth2client/contributing.html\n\n(i'll add a note to the README)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/41705162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/41705204", "html_url": "https://github.com/google/oauth2client/pull/3#issuecomment-41705204", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/3", "id": 41705204, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-29T17:20:33Z", "updated_at": "2014-04-29T17:20:33Z", "author_association": "MEMBER", "body": "first question: did you sign the CLA?\n\nhttp://google.github.io/oauth2client/contributing.html\n\n(adding a note to README now)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/41705204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/41848469", "html_url": "https://github.com/google/oauth2client/pull/2#issuecomment-41848469", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/2", "id": 41848469, "user": {"login": "lraccomando", "id": 1524439, "avatar_url": "https://avatars3.githubusercontent.com/u/1524439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lraccomando", "html_url": "https://github.com/lraccomando", "followers_url": "https://api.github.com/users/lraccomando/followers", "following_url": "https://api.github.com/users/lraccomando/following{/other_user}", "gists_url": "https://api.github.com/users/lraccomando/gists{/gist_id}", "starred_url": "https://api.github.com/users/lraccomando/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lraccomando/subscriptions", "organizations_url": "https://api.github.com/users/lraccomando/orgs", "repos_url": "https://api.github.com/users/lraccomando/repos", "events_url": "https://api.github.com/users/lraccomando/events{/privacy}", "received_events_url": "https://api.github.com/users/lraccomando/received_events", "type": "User", "site_admin": false}, "created_at": "2014-04-30T20:49:09Z", "updated_at": "2014-04-30T20:49:09Z", "author_association": "CONTRIBUTOR", "body": "Just signed it now!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/41848469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42227634", "html_url": "https://github.com/google/oauth2client/pull/5#issuecomment-42227634", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/5", "id": 42227634, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-05T19:26:07Z", "updated_at": "2014-05-05T19:26:07Z", "author_association": "CONTRIBUTOR", "body": "tox runs ok? If so, LGTM.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42227634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42228983", "html_url": "https://github.com/google/oauth2client/pull/5#issuecomment-42228983", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/5", "id": 42228983, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-05T19:37:49Z", "updated_at": "2014-05-05T19:37:49Z", "author_association": "MEMBER", "body": "yep, everything works. merging.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42228983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42235031", "html_url": "https://github.com/google/oauth2client/pull/3#issuecomment-42235031", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/3", "id": 42235031, "user": {"login": "fthiery", "id": 87642, "avatar_url": "https://avatars3.githubusercontent.com/u/87642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fthiery", "html_url": "https://github.com/fthiery", "followers_url": "https://api.github.com/users/fthiery/followers", "following_url": "https://api.github.com/users/fthiery/following{/other_user}", "gists_url": "https://api.github.com/users/fthiery/gists{/gist_id}", "starred_url": "https://api.github.com/users/fthiery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fthiery/subscriptions", "organizations_url": "https://api.github.com/users/fthiery/orgs", "repos_url": "https://api.github.com/users/fthiery/repos", "events_url": "https://api.github.com/users/fthiery/events{/privacy}", "received_events_url": "https://api.github.com/users/fthiery/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-05T20:27:30Z", "updated_at": "2014-05-05T20:28:23Z", "author_association": "NONE", "body": "Done, and submitted to the designated address.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42235031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42236367", "html_url": "https://github.com/google/oauth2client/pull/3#issuecomment-42236367", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/3", "id": 42236367, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-05T20:39:16Z", "updated_at": "2014-05-05T20:39:16Z", "author_association": "MEMBER", "body": "awesome @fthiery -- i'll take a look in the next few days.\n\nthanks!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42236367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42831566", "html_url": "https://github.com/google/oauth2client/issues/7#issuecomment-42831566", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/7", "id": 42831566, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-12T13:31:16Z", "updated_at": "2014-05-12T13:31:16Z", "author_association": "CONTRIBUTOR", "body": "What version of python are you using?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42831566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42835213", "html_url": "https://github.com/google/oauth2client/issues/7#issuecomment-42835213", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/7", "id": 42835213, "user": {"login": "Forever-Young", "id": 783188, "avatar_url": "https://avatars1.githubusercontent.com/u/783188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Forever-Young", "html_url": "https://github.com/Forever-Young", "followers_url": "https://api.github.com/users/Forever-Young/followers", "following_url": "https://api.github.com/users/Forever-Young/following{/other_user}", "gists_url": "https://api.github.com/users/Forever-Young/gists{/gist_id}", "starred_url": "https://api.github.com/users/Forever-Young/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Forever-Young/subscriptions", "organizations_url": "https://api.github.com/users/Forever-Young/orgs", "repos_url": "https://api.github.com/users/Forever-Young/repos", "events_url": "https://api.github.com/users/Forever-Young/events{/privacy}", "received_events_url": "https://api.github.com/users/Forever-Young/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-12T14:01:41Z", "updated_at": "2014-05-12T14:01:41Z", "author_association": "NONE", "body": "Python 3.x\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42835213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42835353", "html_url": "https://github.com/google/oauth2client/issues/7#issuecomment-42835353", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/7", "id": 42835353, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-12T14:02:50Z", "updated_at": "2014-05-12T14:02:50Z", "author_association": "CONTRIBUTOR", "body": "I figured. Sorry, oauth2client does not support python3.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42835353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42835922", "html_url": "https://github.com/google/oauth2client/issues/4#issuecomment-42835922", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/4", "id": 42835922, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-12T14:07:46Z", "updated_at": "2014-05-12T14:07:46Z", "author_association": "CONTRIBUTOR", "body": "Care to make a pull request? :)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42835922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42835958", "html_url": "https://github.com/google/oauth2client/issues/4#issuecomment-42835958", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/4", "id": 42835958, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-12T14:08:04Z", "updated_at": "2014-05-12T14:08:04Z", "author_association": "CONTRIBUTOR", "body": "And sorry about the slow reply, I was sick last week and my inbox got away from me.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42835958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42836349", "html_url": "https://github.com/google/oauth2client/issues/4#issuecomment-42836349", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/4", "id": 42836349, "user": {"login": "iditgolden", "id": 7479189, "avatar_url": "https://avatars0.githubusercontent.com/u/7479189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iditgolden", "html_url": "https://github.com/iditgolden", "followers_url": "https://api.github.com/users/iditgolden/followers", "following_url": "https://api.github.com/users/iditgolden/following{/other_user}", "gists_url": "https://api.github.com/users/iditgolden/gists{/gist_id}", "starred_url": "https://api.github.com/users/iditgolden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iditgolden/subscriptions", "organizations_url": "https://api.github.com/users/iditgolden/orgs", "repos_url": "https://api.github.com/users/iditgolden/repos", "events_url": "https://api.github.com/users/iditgolden/events{/privacy}", "received_events_url": "https://api.github.com/users/iditgolden/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-12T14:11:13Z", "updated_at": "2014-05-12T14:11:13Z", "author_association": "NONE", "body": "no problem.\n\nThanks\n\nOn Mon, May 12, 2014 at 5:08 PM, John Asmuth notifications@github.comwrote:\n\n> And sorry about the slow reply, I was sick last week and my inbox got away\n> from me.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/google/oauth2client/issues/4#issuecomment-42835958\n> .\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42836349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42838571", "html_url": "https://github.com/google/oauth2client/issues/4#issuecomment-42838571", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/4", "id": 42838571, "user": {"login": "iditgolden", "id": 7479189, "avatar_url": "https://avatars0.githubusercontent.com/u/7479189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iditgolden", "html_url": "https://github.com/iditgolden", "followers_url": "https://api.github.com/users/iditgolden/followers", "following_url": "https://api.github.com/users/iditgolden/following{/other_user}", "gists_url": "https://api.github.com/users/iditgolden/gists{/gist_id}", "starred_url": "https://api.github.com/users/iditgolden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iditgolden/subscriptions", "organizations_url": "https://api.github.com/users/iditgolden/orgs", "repos_url": "https://api.github.com/users/iditgolden/repos", "events_url": "https://api.github.com/users/iditgolden/events{/privacy}", "received_events_url": "https://api.github.com/users/iditgolden/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-12T14:29:05Z", "updated_at": "2014-05-12T14:29:05Z", "author_association": "NONE", "body": "pull request was created.\nhttps://github.com/google/oauth2client/pull/8\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42838571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42840529", "html_url": "https://github.com/google/oauth2client/pull/8#issuecomment-42840529", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/8", "id": 42840529, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-12T14:44:09Z", "updated_at": "2014-05-12T14:44:09Z", "author_association": "CONTRIBUTOR", "body": "There seem to be some test issues, I'll put a comment inline about a likely cause.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42840529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42931896", "html_url": "https://github.com/google/oauth2client/pull/2#issuecomment-42931896", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/2", "id": 42931896, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-13T08:56:21Z", "updated_at": "2014-05-13T08:56:21Z", "author_association": "MEMBER", "body": "One or two little questions in the code, but two higher-level questions: \n1. none of the other types of credential storage support overwrite; any reason we wouldn't want it there? (I'm not asking you to do it in this PR, I'm more just saying it out loud.)\n2. it seems that the default behavior here (don't overwrite) doesn't match the default for all the other cases (files, GAE, etc). I agree that you're matching the previous default, but I think we should at least document that more clearly. (Would you _rather_ have the default be to overwrite?)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42931896/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42932886", "html_url": "https://github.com/google/oauth2client/pull/3#issuecomment-42932886", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/3", "id": 42932886, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-13T09:08:49Z", "updated_at": "2014-05-13T09:08:49Z", "author_association": "MEMBER", "body": "overall, this looks good -- but as a first step, could you add some docs? i'm thinking two things:\n\n1/ a simple example of how to use this in the `samples/` directory; it could point to the existing [documentation online](https://developers.google.com/accounts/docs/OAuth2ForDevices) for any explanation. (I mostly want to confirm that _I_ understand how it's supposed to work.)\n\n2/ update the docstrings of any functions you're tweaking.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42932886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42933335", "html_url": "https://github.com/google/oauth2client/issues/4#issuecomment-42933335", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/4", "id": 42933335, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-13T09:15:02Z", "updated_at": "2014-05-13T09:15:02Z", "author_association": "MEMBER", "body": "just to check: at least according to the docstring, this previously accepted the contents of the file as the argument (not the filename). were you calling this directly with the filename, or was this getting called from elsewhere in the library? (or were there other docs suggesting you should call it with the filename?)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42933335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42935262", "html_url": "https://github.com/google/oauth2client/issues/4#issuecomment-42935262", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/4", "id": 42935262, "user": {"login": "iditgolden", "id": 7479189, "avatar_url": "https://avatars0.githubusercontent.com/u/7479189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iditgolden", "html_url": "https://github.com/iditgolden", "followers_url": "https://api.github.com/users/iditgolden/followers", "following_url": "https://api.github.com/users/iditgolden/following{/other_user}", "gists_url": "https://api.github.com/users/iditgolden/gists{/gist_id}", "starred_url": "https://api.github.com/users/iditgolden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iditgolden/subscriptions", "organizations_url": "https://api.github.com/users/iditgolden/orgs", "repos_url": "https://api.github.com/users/iditgolden/repos", "events_url": "https://api.github.com/users/iditgolden/events{/privacy}", "received_events_url": "https://api.github.com/users/iditgolden/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-13T09:37:41Z", "updated_at": "2014-05-13T09:37:41Z", "author_association": "NONE", "body": "I called it directly with the filename.\nOn May 13, 2014 12:15 PM, \"Craig Citro\" notifications@github.com wrote:\n\n> just to check: at least according to the docstring, this previously\n> accepted the contents of the file as the argument (not the filename). were\n> you calling this directly with the filename, or was this getting called\n> from elsewhere in the library? (or were there other docs suggesting you\n> should call it with the filename?)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/google/oauth2client/issues/4#issuecomment-42933335\n> .\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42935262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42953367", "html_url": "https://github.com/google/oauth2client/issues/4#issuecomment-42953367", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/4", "id": 42953367, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-13T13:21:57Z", "updated_at": "2014-05-13T13:21:57Z", "author_association": "CONTRIBUTOR", "body": "Ah, I see now. Then I'm sorry but I'll have to call this one user error.\nThe .read() on that file should be done and the results passed to this\nfunction, rather than the file name. Do the docs suggest otherwise?\n\nOn Tue, May 13, 2014 at 5:37 AM, iditgolden notifications@github.comwrote:\n\n> I called it directly with the filename.\n> On May 13, 2014 12:15 PM, \"Craig Citro\" notifications@github.com wrote:\n> \n> > just to check: at least according to the docstring, this previously\n> > accepted the contents of the file as the argument (not the filename).\n> > were\n> > you calling this directly with the filename, or was this getting called\n> > from elsewhere in the library? (or were there other docs suggesting you\n> > should call it with the filename?)\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/google/oauth2client/issues/4#issuecomment-42933335>\n> > .\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/google/oauth2client/issues/4#issuecomment-42935262\n> .\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/42953367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/43019438", "html_url": "https://github.com/google/oauth2client/pull/2#issuecomment-43019438", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/2", "id": 43019438, "user": {"login": "lraccomando", "id": 1524439, "avatar_url": "https://avatars3.githubusercontent.com/u/1524439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lraccomando", "html_url": "https://github.com/lraccomando", "followers_url": "https://api.github.com/users/lraccomando/followers", "following_url": "https://api.github.com/users/lraccomando/following{/other_user}", "gists_url": "https://api.github.com/users/lraccomando/gists{/gist_id}", "starred_url": "https://api.github.com/users/lraccomando/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lraccomando/subscriptions", "organizations_url": "https://api.github.com/users/lraccomando/orgs", "repos_url": "https://api.github.com/users/lraccomando/repos", "events_url": "https://api.github.com/users/lraccomando/events{/privacy}", "received_events_url": "https://api.github.com/users/lraccomando/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-13T22:06:29Z", "updated_at": "2014-05-13T22:06:29Z", "author_association": "CONTRIBUTOR", "body": "Thanks for getting to this: \n1. No reason I can think of. I'd be happy to build out support for the other storage options if that is something that you'd like to support. \n2. I would rather have overwrite be the default, it seems to me to be cleaner, prevents obsolete rows in the DB and prevent errors with tables enforcing unique user_ids (this was my use case). I chose to make overwrite opt-in only for compatibility reasons. That being said, I'm having a tough time thinking about a use case where duplication would be desired and I'd be happy to make overwrite the default if you'd prefer that. \n\nLet me know about the above and I'll make the requested changes and resubmit :)  \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/43019438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/43020509", "html_url": "https://github.com/google/oauth2client/pull/2#issuecomment-43020509", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/2", "id": 43020509, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-13T22:17:58Z", "updated_at": "2014-05-13T22:17:58Z", "author_association": "MEMBER", "body": "I agree -- it does seem like overwrite is the more sane choice (and, similarly, that's the only option supported by every other storage mechanism). I can't think of a use case for keeping around expired tokens.\n\nLet's stick with what you've got (+ some docs as per comments), and I'll think hard about how aggressive we want to be with deprecating the don't-overwrite case?\n\nAlso, can you merge in from master so that travis picks this change up?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/43020509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/43103005", "html_url": "https://github.com/google/oauth2client/pull/2#issuecomment-43103005", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/2", "id": 43103005, "user": {"login": "lraccomando", "id": 1524439, "avatar_url": "https://avatars3.githubusercontent.com/u/1524439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lraccomando", "html_url": "https://github.com/lraccomando", "followers_url": "https://api.github.com/users/lraccomando/followers", "following_url": "https://api.github.com/users/lraccomando/following{/other_user}", "gists_url": "https://api.github.com/users/lraccomando/gists{/gist_id}", "starred_url": "https://api.github.com/users/lraccomando/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lraccomando/subscriptions", "organizations_url": "https://api.github.com/users/lraccomando/orgs", "repos_url": "https://api.github.com/users/lraccomando/repos", "events_url": "https://api.github.com/users/lraccomando/events{/privacy}", "received_events_url": "https://api.github.com/users/lraccomando/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-14T16:22:45Z", "updated_at": "2014-05-14T16:22:55Z", "author_association": "CONTRIBUTOR", "body": "You got it. I've made the requested changes from comments and merged in master. Would you like a fresh PR or is this still acceptable?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/43103005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/43114567", "html_url": "https://github.com/google/oauth2client/pull/2#issuecomment-43114567", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/2", "id": 43114567, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-14T17:54:24Z", "updated_at": "2014-05-14T17:54:24Z", "author_association": "MEMBER", "body": "no, this looks good -- merging now. thanks!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/43114567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/43114687", "html_url": "https://github.com/google/oauth2client/issues/4#issuecomment-43114687", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/4", "id": 43114687, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-14T17:55:23Z", "updated_at": "2014-05-14T17:55:23Z", "author_association": "MEMBER", "body": "closing this for now -- @iditgolden if you ran into this in the docs, please do reopen and let us know where so we can fix it.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/43114687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/43114769", "html_url": "https://github.com/google/oauth2client/pull/8#issuecomment-43114769", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/8", "id": 43114769, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-14T17:55:58Z", "updated_at": "2014-05-14T17:55:58Z", "author_association": "MEMBER", "body": "Closing without merging for now -- as discussed, it seems like the original issue was filename vs. file contents.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/43114769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/43360881", "html_url": "https://github.com/google/oauth2client/pull/10#issuecomment-43360881", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/10", "id": 43360881, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-16T17:58:58Z", "updated_at": "2014-05-16T17:58:58Z", "author_association": "CONTRIBUTOR", "body": "I understand that you probably want to do future work based on this code, but as is, it seems like nothing is added to oauth2client. Should we hold off on merging until that changes?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/43360881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/43361644", "html_url": "https://github.com/google/oauth2client/pull/10#issuecomment-43361644", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/10", "id": 43361644, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-16T18:06:15Z", "updated_at": "2014-05-16T18:06:15Z", "author_association": "MEMBER", "body": "Sure -- there's a second (also short) change coming where I use this, but I'm still figuring out exactly what the right condition(s) are.\n\nThis can wait until the second one comes along.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/43361644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/43362141", "html_url": "https://github.com/google/oauth2client/pull/10#issuecomment-43362141", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/10", "id": 43362141, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-16T18:11:26Z", "updated_at": "2014-05-16T18:11:26Z", "author_association": "CONTRIBUTOR", "body": "Ok, I'll leave this PR open then.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/43362141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44308017", "html_url": "https://github.com/google/oauth2client/issues/7#issuecomment-44308017", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/7", "id": 44308017, "user": {"login": "ianjosephwilson", "id": 313226, "avatar_url": "https://avatars2.githubusercontent.com/u/313226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianjosephwilson", "html_url": "https://github.com/ianjosephwilson", "followers_url": "https://api.github.com/users/ianjosephwilson/followers", "following_url": "https://api.github.com/users/ianjosephwilson/following{/other_user}", "gists_url": "https://api.github.com/users/ianjosephwilson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianjosephwilson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianjosephwilson/subscriptions", "organizations_url": "https://api.github.com/users/ianjosephwilson/orgs", "repos_url": "https://api.github.com/users/ianjosephwilson/repos", "events_url": "https://api.github.com/users/ianjosephwilson/events{/privacy}", "received_events_url": "https://api.github.com/users/ianjosephwilson/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-27T17:33:05Z", "updated_at": "2014-05-27T17:33:05Z", "author_association": "NONE", "body": "Is there any timeline for Python3 support?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44308017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44335033", "html_url": "https://github.com/google/oauth2client/issues/7#issuecomment-44335033", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/7", "id": 44335033, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-27T21:03:18Z", "updated_at": "2014-05-27T21:03:18Z", "author_association": "CONTRIBUTOR", "body": "Not currently.\n\nOn Tue, May 27, 2014 at 1:33 PM, ianjosephwilson\nnotifications@github.comwrote:\n\n> Is there any timeline for Python3 support?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/google/oauth2client/issues/7#issuecomment-44308017\n> .\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44335033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44599860", "html_url": "https://github.com/google/oauth2client/pull/6#issuecomment-44599860", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/6", "id": 44599860, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-29T23:49:56Z", "updated_at": "2014-05-29T23:49:56Z", "author_association": "MEMBER", "body": "OK, this looks good -- let's just squash this and we're good to go.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44599860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44689918", "html_url": "https://github.com/google/oauth2client/pull/12#issuecomment-44689918", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/12", "id": 44689918, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-30T19:25:43Z", "updated_at": "2014-05-30T19:25:43Z", "author_association": "MEMBER", "body": "awesome! merging. Fixes #6.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44689918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44690002", "html_url": "https://github.com/google/oauth2client/pull/6#issuecomment-44690002", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/6", "id": 44690002, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-30T19:26:29Z", "updated_at": "2014-05-30T19:26:29Z", "author_association": "MEMBER", "body": "closing, was squashed and merged as #12 \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44690002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44690168", "html_url": "https://github.com/google/oauth2client/issues/13#issuecomment-44690168", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/13", "id": 44690168, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-30T19:28:06Z", "updated_at": "2014-05-30T19:28:06Z", "author_association": "MEMBER", "body": "thanks for the report -- I agree it would be nicer to handle this more cleanly. Any chance I could con you into making this a PR? (If so, don't forget to sign the CLA.)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44690168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44692829", "html_url": "https://github.com/google/oauth2client/issues/13#issuecomment-44692829", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/13", "id": 44692829, "user": {"login": "alexanderattar", "id": 1504794, "avatar_url": "https://avatars3.githubusercontent.com/u/1504794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexanderattar", "html_url": "https://github.com/alexanderattar", "followers_url": "https://api.github.com/users/alexanderattar/followers", "following_url": "https://api.github.com/users/alexanderattar/following{/other_user}", "gists_url": "https://api.github.com/users/alexanderattar/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexanderattar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexanderattar/subscriptions", "organizations_url": "https://api.github.com/users/alexanderattar/orgs", "repos_url": "https://api.github.com/users/alexanderattar/repos", "events_url": "https://api.github.com/users/alexanderattar/events{/privacy}", "received_events_url": "https://api.github.com/users/alexanderattar/received_events", "type": "User", "site_admin": false}, "created_at": "2014-05-30T19:55:39Z", "updated_at": "2014-05-30T19:55:39Z", "author_association": "NONE", "body": "Sure thing. Submitted the PR. Used the same description from this issue.\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44692829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44904516", "html_url": "https://github.com/google/oauth2client/pull/15#issuecomment-44904516", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/15", "id": 44904516, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-02T23:42:59Z", "updated_at": "2014-06-02T23:42:59Z", "author_association": "MEMBER", "body": "hey @orestica -- we definitely can't make the signature change you're proposing here for `get_access_token`; it would break literally every user of `OAuth2Credentials.get_access_token` in the wild.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44904516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44904688", "html_url": "https://github.com/google/oauth2client/pull/15#issuecomment-44904688", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/15", "id": 44904688, "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-02T23:45:30Z", "updated_at": "2014-06-02T23:45:30Z", "author_association": "CONTRIBUTOR", "body": "The method was added last Friday and most likely nobody uses it.\n\nOn Mon, Jun 2, 2014 at 4:42 PM, Craig Citro notifications@github.com\nwrote:\n\n> hey @orestica https://github.com/orestica -- we definitely can't make\n> the signature change you're proposing here for get_access_token; it would\n> break literally every user of OAuth2Credentials.get_access_token in the\n> wild.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/pull/15#issuecomment-44904516.\n\n## \n\nOrest Bolohan\n\nSoftware Engineer\nCloud/TI Identity and Access Management Services\nGoogle Inc.\nMountain View, CA\n\n(650) 214 3458\norest@google.com\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44904688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44905065", "html_url": "https://github.com/google/oauth2client/pull/15#issuecomment-44905065", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/15", "id": 44905065, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-02T23:50:32Z", "updated_at": "2014-06-02T23:50:32Z", "author_association": "MEMBER", "body": "aha -- that's much less of a worry, then. `:)`\n\nin that case, though, i'd like to switch the response to being a `collections.namedtuple` instead of just a dict. \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44905065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44905250", "html_url": "https://github.com/google/oauth2client/pull/15#issuecomment-44905250", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/15", "id": 44905250, "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-02T23:53:21Z", "updated_at": "2014-06-02T23:53:21Z", "author_association": "CONTRIBUTOR", "body": "How about just a tuple: (access_token, expires_in)?\n\nOn Mon, Jun 2, 2014 at 4:50 PM, Craig Citro notifications@github.com\nwrote:\n\n> aha -- that's much less of a worry, then. :)\n> \n> in that case, though, i'd like to switch the response to being a\n> collections.namedtuple instead of just a dict.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/pull/15#issuecomment-44905065.\n\n## \n\nOrest Bolohan\n\nSoftware Engineer\nCloud/TI Identity and Access Management Services\nGoogle Inc.\nMountain View, CA\n\n(650) 214 3458\norest@google.com\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44905250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44905735", "html_url": "https://github.com/google/oauth2client/pull/15#issuecomment-44905735", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/15", "id": 44905735, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-03T00:00:32Z", "updated_at": "2014-06-03T00:00:32Z", "author_association": "MEMBER", "body": "I'm not a fan of a tuple, because there's no way for a _caller_ to know if we've changed the return format. `namedtuple` makes this pretty lightweight:\n\n```\nAccessTokenInfo = collections.namedtuple('AccessTokenInfo', ['access_token', 'expires_in'])\n... \ntoken_info = credential.get_access_token()\n```\n\nand now `token_info.access_token` and `token_info.expires_in` are exactly what you think; in addition, if we reorder or add new fields, callers that don't need those fields aren't broken.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44905735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44907169", "html_url": "https://github.com/google/oauth2client/pull/15#issuecomment-44907169", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/15", "id": 44907169, "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-03T00:24:09Z", "updated_at": "2014-06-03T00:24:09Z", "author_association": "CONTRIBUTOR", "body": "You are right.\nI made the changes and kept Travis happy in the process. :)\n\nThank you.\n\nOn Mon, Jun 2, 2014 at 5:00 PM, Craig Citro notifications@github.com\nwrote:\n\n> I'm not a fan of a tuple, because there's no way for a _caller_ to know\n> if we've changed the return format. namedtuple makes this pretty\n> lightweight:\n> \n> AccessTokenInfo = collections.namedtuple('AccessTokenInfo', ['access_token', 'expires_in'])\n> ...\n> token_info = credential.get_access_token()\n> \n> and now token_info.access_token and token_info.expires_in are exactly\n> what you think; in addition, if we reorder or add new fields, callers that\n> don't need those fields aren't broken.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/pull/15#issuecomment-44905735.\n\n## \n\nOrest Bolohan\n\nSoftware Engineer\nCloud/TI Identity and Access Management Services\nGoogle Inc.\nMountain View, CA\n\n(650) 214 3458\norest@google.com\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/44907169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/46478931", "html_url": "https://github.com/google/oauth2client/pull/2#issuecomment-46478931", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/2", "id": 46478931, "user": {"login": "nickfishman", "id": 1219560, "avatar_url": "https://avatars0.githubusercontent.com/u/1219560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickfishman", "html_url": "https://github.com/nickfishman", "followers_url": "https://api.github.com/users/nickfishman/followers", "following_url": "https://api.github.com/users/nickfishman/following{/other_user}", "gists_url": "https://api.github.com/users/nickfishman/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickfishman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickfishman/subscriptions", "organizations_url": "https://api.github.com/users/nickfishman/orgs", "repos_url": "https://api.github.com/users/nickfishman/repos", "events_url": "https://api.github.com/users/nickfishman/events{/privacy}", "received_events_url": "https://api.github.com/users/nickfishman/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-18T19:02:14Z", "updated_at": "2014-06-18T19:02:14Z", "author_association": "NONE", "body": "This PR relates to an issue mentioned in the old Google Code tracker: https://code.google.com/p/google-api-python-client/issues/detail?id=278&q=credentialsfield. The approach here could solve that problem as well, if the default behavior were `overwrite=True`. It's not clear to me how to specify that option, since the public interface for writing to the Storage object is `put` and that doesn't pass along any additional args into `locked_put`. I could certainly subclass django_orm.Storage and override its put method but that's not ideal. What I really want is overwrite to be the default behavior. Revisiting earlier discussion in this PR, could we eliminate the overwrite parameter entirely and make it the default?\n\nOn another note, the diff mentioned in that issue (https://code.google.com/r/johnscottatlakson-google-api-python-client/source/diff?spec=svna0321a5135af2f9005646e9313ff844120b1ef01&r=a0321a5135af2f9005646e9313ff844120b1ef01&format=side&path=/oauth2client/django_orm.py) does two interesting things I wanted to mention:\n- Uses Django's `select_for_update` to ensure atomic updates for models that have a CredentialsField. Ostensibly this is to prevent race conditions when multiple application servers update the same model after its access_token has expired. However, I don't think `select_for_update` prevents this behavior -- the last save will still win.\n- Preserves any existing `refresh_token` stored in the old Credentials object if the new object doesn't have one. This is an optimization and isn't necessary, but could be useful in some cases since Google only allows 25 refresh tokens to exist at a time for a given client/user combination.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/46478931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/46560602", "html_url": "https://github.com/google/oauth2client/pull/18#issuecomment-46560602", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/18", "id": 46560602, "user": {"login": "jay0lee", "id": 4623536, "avatar_url": "https://avatars2.githubusercontent.com/u/4623536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jay0lee", "html_url": "https://github.com/jay0lee", "followers_url": "https://api.github.com/users/jay0lee/followers", "following_url": "https://api.github.com/users/jay0lee/following{/other_user}", "gists_url": "https://api.github.com/users/jay0lee/gists{/gist_id}", "starred_url": "https://api.github.com/users/jay0lee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jay0lee/subscriptions", "organizations_url": "https://api.github.com/users/jay0lee/orgs", "repos_url": "https://api.github.com/users/jay0lee/repos", "events_url": "https://api.github.com/users/jay0lee/events{/privacy}", "received_events_url": "https://api.github.com/users/jay0lee/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-19T13:36:25Z", "updated_at": "2014-06-19T13:36:25Z", "author_association": "CONTRIBUTOR", "body": "Fixed, thanks.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/46560602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/46565657", "html_url": "https://github.com/google/oauth2client/pull/18#issuecomment-46565657", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/18", "id": 46565657, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-19T14:17:44Z", "updated_at": "2014-06-19T14:17:44Z", "author_association": "CONTRIBUTOR", "body": "Have you taken care of the CLA requirements on http://google.github.io/oauth2client/contributing.html ?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/46565657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/46671770", "html_url": "https://github.com/google/oauth2client/pull/18#issuecomment-46671770", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/18", "id": 46671770, "user": {"login": "jay0lee", "id": 4623536, "avatar_url": "https://avatars2.githubusercontent.com/u/4623536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jay0lee", "html_url": "https://github.com/jay0lee", "followers_url": "https://api.github.com/users/jay0lee/followers", "following_url": "https://api.github.com/users/jay0lee/following{/other_user}", "gists_url": "https://api.github.com/users/jay0lee/gists{/gist_id}", "starred_url": "https://api.github.com/users/jay0lee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jay0lee/subscriptions", "organizations_url": "https://api.github.com/users/jay0lee/orgs", "repos_url": "https://api.github.com/users/jay0lee/repos", "events_url": "https://api.github.com/users/jay0lee/events{/privacy}", "received_events_url": "https://api.github.com/users/jay0lee/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-20T12:13:14Z", "updated_at": "2014-06-20T12:13:14Z", "author_association": "CONTRIBUTOR", "body": "Yes, I've made contributions to this library and even the old gdata-python library in the past and have completed the CLA.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/46671770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/46695858", "html_url": "https://github.com/google/oauth2client/pull/18#issuecomment-46695858", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/18", "id": 46695858, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-20T16:04:56Z", "updated_at": "2014-06-20T16:04:56Z", "author_association": "MEMBER", "body": "hey @jay0lee -- yep, just confirmed the CLA is signed. (there's some giant list @skelterjohn and i have to dig around in. `;)`)\n\nlooks good -- merging.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/46695858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/46696278", "html_url": "https://github.com/google/oauth2client/pull/19#issuecomment-46696278", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/19", "id": 46696278, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-20T16:08:27Z", "updated_at": "2014-06-20T16:08:27Z", "author_association": "MEMBER", "body": "hi @uguatel, thanks for the fix. first question -- have you signed the CLA?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/46696278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/46700491", "html_url": "https://github.com/google/oauth2client/pull/19#issuecomment-46700491", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/19", "id": 46700491, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-20T16:47:25Z", "updated_at": "2014-06-20T16:47:25Z", "author_association": "CONTRIBUTOR", "body": "uguatel is a Googler.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/46700491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/47267084", "html_url": "https://github.com/google/oauth2client/pull/20#issuecomment-47267084", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/20", "id": 47267084, "user": {"login": "jeffposnick", "id": 1749548, "avatar_url": "https://avatars1.githubusercontent.com/u/1749548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffposnick", "html_url": "https://github.com/jeffposnick", "followers_url": "https://api.github.com/users/jeffposnick/followers", "following_url": "https://api.github.com/users/jeffposnick/following{/other_user}", "gists_url": "https://api.github.com/users/jeffposnick/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffposnick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffposnick/subscriptions", "organizations_url": "https://api.github.com/users/jeffposnick/orgs", "repos_url": "https://api.github.com/users/jeffposnick/repos", "events_url": "https://api.github.com/users/jeffposnick/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffposnick/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-26T19:13:22Z", "updated_at": "2014-06-26T19:13:22Z", "author_association": "MEMBER", "body": "LGTM.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/47267084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/47267103", "html_url": "https://github.com/google/oauth2client/pull/21#issuecomment-47267103", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/21", "id": 47267103, "user": {"login": "jeffposnick", "id": 1749548, "avatar_url": "https://avatars1.githubusercontent.com/u/1749548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffposnick", "html_url": "https://github.com/jeffposnick", "followers_url": "https://api.github.com/users/jeffposnick/followers", "following_url": "https://api.github.com/users/jeffposnick/following{/other_user}", "gists_url": "https://api.github.com/users/jeffposnick/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffposnick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffposnick/subscriptions", "organizations_url": "https://api.github.com/users/jeffposnick/orgs", "repos_url": "https://api.github.com/users/jeffposnick/repos", "events_url": "https://api.github.com/users/jeffposnick/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffposnick/received_events", "type": "User", "site_admin": false}, "created_at": "2014-06-26T19:13:33Z", "updated_at": "2014-06-26T19:13:33Z", "author_association": "MEMBER", "body": "LGTM.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/47267103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48537212", "html_url": "https://github.com/google/oauth2client/pull/23#issuecomment-48537212", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/23", "id": 48537212, "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-09T21:33:11Z", "updated_at": "2014-07-09T21:33:11Z", "author_association": "CONTRIBUTOR", "body": "It was not my intent to create a pull request with so many commits.\nI am closing it and will retry later.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48537212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48547936", "html_url": "https://github.com/google/oauth2client/pull/24#issuecomment-48547936", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/24", "id": 48547936, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-09T23:23:06Z", "updated_at": "2014-07-09T23:23:06Z", "author_association": "MEMBER", "body": "So one broader question -- I had thought that part of the simplification here would involve taking out a lot of the logic around the \"well-known file\". Had I misunderstood, or is that going to happen in a separate change?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48547936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48548626", "html_url": "https://github.com/google/oauth2client/pull/24#issuecomment-48548626", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/24", "id": 48548626, "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-09T23:32:52Z", "updated_at": "2014-07-09T23:32:52Z", "author_association": "CONTRIBUTOR", "body": "I am not sure about that.\nMaybe Anthony can clarify things here.\n\nOn Wed, Jul 9, 2014 at 4:23 PM, Craig Citro notifications@github.com\nwrote:\n\n> So one broader question -- I had thought that part of the simplification\n> here would involve taking out a lot of the logic around the \"well-known\n> file\". Had I misunderstood, or is that going to happen in a separate change?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/pull/24#issuecomment-48547936.\n\n## \n\nOrest Bolohan\n\nSoftware Engineer\nCloud/TI Identity and Access Management Services\nGoogle Inc.\nMountain View, CA\n\n(650) 214 3458\norest@google.com\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48548626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48557134", "html_url": "https://github.com/google/oauth2client/pull/14#issuecomment-48557134", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/14", "id": 48557134, "user": {"login": "whirlycott", "id": 405472, "avatar_url": "https://avatars2.githubusercontent.com/u/405472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whirlycott", "html_url": "https://github.com/whirlycott", "followers_url": "https://api.github.com/users/whirlycott/followers", "following_url": "https://api.github.com/users/whirlycott/following{/other_user}", "gists_url": "https://api.github.com/users/whirlycott/gists{/gist_id}", "starred_url": "https://api.github.com/users/whirlycott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whirlycott/subscriptions", "organizations_url": "https://api.github.com/users/whirlycott/orgs", "repos_url": "https://api.github.com/users/whirlycott/repos", "events_url": "https://api.github.com/users/whirlycott/events{/privacy}", "received_events_url": "https://api.github.com/users/whirlycott/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-10T01:56:05Z", "updated_at": "2014-07-10T01:56:05Z", "author_association": "NONE", "body": "Googler here.  Is there a reason why this has not been merged in?  This is incredibly frustrating.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48557134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48605041", "html_url": "https://github.com/google/oauth2client/pull/14#issuecomment-48605041", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/14", "id": 48605041, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-10T13:39:20Z", "updated_at": "2014-07-10T13:39:37Z", "author_association": "CONTRIBUTOR", "body": "oauth2client should be usable without crypto libraries installed. Instead, when crypto is not available, have the exception raise when a SignedJwtAssertionCredentials object is created.\n\nclass SignedJwtAssertionCredentials(Credentials):\n  def __ init __(self, _args, *_kwargs):\n    raise ImportError('crypto not installed!')\n\nor something more formal.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48605041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48605712", "html_url": "https://github.com/google/oauth2client/pull/14#issuecomment-48605712", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/14", "id": 48605712, "user": {"login": "whirlycott", "id": 405472, "avatar_url": "https://avatars2.githubusercontent.com/u/405472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whirlycott", "html_url": "https://github.com/whirlycott", "followers_url": "https://api.github.com/users/whirlycott/followers", "following_url": "https://api.github.com/users/whirlycott/following{/other_user}", "gists_url": "https://api.github.com/users/whirlycott/gists{/gist_id}", "starred_url": "https://api.github.com/users/whirlycott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whirlycott/subscriptions", "organizations_url": "https://api.github.com/users/whirlycott/orgs", "repos_url": "https://api.github.com/users/whirlycott/repos", "events_url": "https://api.github.com/users/whirlycott/events{/privacy}", "received_events_url": "https://api.github.com/users/whirlycott/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-10T13:44:42Z", "updated_at": "2014-07-10T13:44:42Z", "author_association": "NONE", "body": "Sounds good.  Can we do that instead?  The current approach of the import failing as if the class was never defined is misleading.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48605712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48605895", "html_url": "https://github.com/google/oauth2client/pull/14#issuecomment-48605895", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/14", "id": 48605895, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-10T13:46:07Z", "updated_at": "2014-07-10T13:46:07Z", "author_association": "CONTRIBUTOR", "body": "PRs welcome :)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48605895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48752728", "html_url": "https://github.com/google/oauth2client/pull/24#issuecomment-48752728", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/24", "id": 48752728, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-11T16:32:41Z", "updated_at": "2014-07-11T16:32:41Z", "author_association": "MEMBER", "body": "two little nits and we're good to go.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48752728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48756571", "html_url": "https://github.com/google/oauth2client/pull/24#issuecomment-48756571", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/24", "id": 48756571, "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-11T17:05:51Z", "updated_at": "2014-07-11T17:05:51Z", "author_association": "CONTRIBUTOR", "body": "Done.\n\nThank you for your review, Craig.\n\nAll the best,\nOrest\n\nOn Fri, Jul 11, 2014 at 9:32 AM, Craig Citro notifications@github.com\nwrote:\n\n> two little nits and we're good to go.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/pull/24#issuecomment-48752728.\n\n## \n\nOrest Bolohan\n\nSoftware Engineer\nCloud/TI Identity and Access Management Services\nGoogle Inc.\nMountain View, CA\n\n(650) 214 3458\norest@google.com\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48756571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48756606", "html_url": "https://github.com/google/oauth2client/pull/24#issuecomment-48756606", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/24", "id": 48756606, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-11T17:06:11Z", "updated_at": "2014-07-11T17:06:11Z", "author_association": "MEMBER", "body": "all is well -- do you want to squash or should I just merge?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48756606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48756868", "html_url": "https://github.com/google/oauth2client/pull/24#issuecomment-48756868", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/24", "id": 48756868, "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-11T17:08:36Z", "updated_at": "2014-07-11T17:08:36Z", "author_association": "CONTRIBUTOR", "body": "Let me exercise my squashing capabilities.\nI'll let you know when it's ready.\n\nThank you,\nOrest\n\nOn Fri, Jul 11, 2014 at 10:06 AM, Craig Citro notifications@github.com\nwrote:\n\n> all is well -- do you want to squash or should I just merge?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/pull/24#issuecomment-48756606.\n\n## \n\nOrest Bolohan\n\nSoftware Engineer\nCloud/TI Identity and Access Management Services\nGoogle Inc.\nMountain View, CA\n\n(650) 214 3458\norest@google.com\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48756868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48777979", "html_url": "https://github.com/google/oauth2client/pull/24#issuecomment-48777979", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/24", "id": 48777979, "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-11T20:17:44Z", "updated_at": "2014-07-11T20:17:44Z", "author_association": "CONTRIBUTOR", "body": "Please take a look now, Craig.\n\nThank you,\nOrest\n\nOn Fri, Jul 11, 2014 at 10:08 AM, Orest Bolohan orest@google.com wrote:\n\n> Let me exercise my squashing capabilities.\n> I'll let you know when it's ready.\n> \n> Thank you,\n> Orest\n> \n> On Fri, Jul 11, 2014 at 10:06 AM, Craig Citro notifications@github.com\n> wrote:\n> \n> > all is well -- do you want to squash or should I just merge?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/google/oauth2client/pull/24#issuecomment-48756606.\n> \n> ## \n> \n> Orest Bolohan\n> \n> Software Engineer\n> Cloud/TI Identity and Access Management Services\n> Google Inc.\n> Mountain View, CA\n> \n> (650) 214 3458\n> orest@google.com\n\n## \n\nOrest Bolohan\n\nSoftware Engineer\nCloud/TI Identity and Access Management Services\nGoogle Inc.\nMountain View, CA\n\n(650) 214 3458\norest@google.com\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48777979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48782089", "html_url": "https://github.com/google/oauth2client/pull/24#issuecomment-48782089", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/24", "id": 48782089, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-11T20:56:58Z", "updated_at": "2014-07-11T20:56:58Z", "author_association": "MEMBER", "body": "just merged. from my phone.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48782089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48932697", "html_url": "https://github.com/google/oauth2client/issues/25#issuecomment-48932697", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/25", "id": 48932697, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-14T17:48:10Z", "updated_at": "2014-07-14T17:48:10Z", "author_association": "MEMBER", "body": "hi @pferate -- yes, let's keep this open for discussion. (i know one similar ticket was already closed.)\n\nsome quick thoughts:\n- is your code just in the fork of this repo? (how much did you have to change?)\n- 2.6 will need to be the minimum version for a while, for better or worse. ;)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48932697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48939413", "html_url": "https://github.com/google/oauth2client/issues/25#issuecomment-48939413", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/25", "id": 48939413, "user": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-14T18:40:44Z", "updated_at": "2014-07-14T18:40:44Z", "author_association": "CONTRIBUTOR", "body": "Hi, I forked it 2 weeks ago from https://github.com/google/oauth2client/commit/d02b317af0313dcf66755844f5421651af5eb356, then created a branch from my fork (https://github.com/pferate/oauth2client/tree/python3).  Initially, I went through a lot of the low hanging fruit (print statements to functions, exception handling, etc).  After catching the obvious changes in the code base, I've been going through the unit tests to find and fix additional problems.\n\nAs for the 2.6, I guess I was curious if we need to keep the master branch compatible with any pre-2.6 versions for any reason or if we can begin incrementally incorporating the changes that may break pre-2.6 versions right away.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48939413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48940087", "html_url": "https://github.com/google/oauth2client/issues/25#issuecomment-48940087", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/25", "id": 48940087, "user": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-14T18:45:50Z", "updated_at": "2014-07-14T18:45:50Z", "author_association": "CONTRIBUTOR", "body": "Also, I filled out and submitted a CLA, but someone forked my repository and submitted a patch (which needs to slightly changed to work which both versions).  I'm not sure how to handle it, since I don't know if he's submitted a CLA or to verify it.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48940087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48971692", "html_url": "https://github.com/google/oauth2client/issues/25#issuecomment-48971692", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/25", "id": 48971692, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-14T23:06:54Z", "updated_at": "2014-07-14T23:06:54Z", "author_association": "MEMBER", "body": "OK, let me take some time to look at where you're at (which won't be for a day or two at least) and we'll see about merging it in.\n\ni hadn't realized the issue with contributions to forks and CLAs. ;) do you want to try pinging the pull request and ask if he can sign one, and just @-include me so i can check internally?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/48971692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49261834", "html_url": "https://github.com/google/oauth2client/pull/27#issuecomment-49261834", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/27", "id": 49261834, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-17T06:09:57Z", "updated_at": "2014-07-17T06:09:57Z", "author_association": "MEMBER", "body": "as a high-level question, why not avoid the implementation inheritance and have:\n1. a top-level `save_to_well_known_file` function and\n2. expose an attribute called something like `serialization_data` on the credentials classes that returns this?\n\ni have a few more small questions, but let's get this one sorted first. \n\nnote that python lets you control attribute access, so you could do\n\n```\n@property\ndef serialization_data(self):\n  return ...\n```\n\nand then you can just say `my_credentials.serialization_data` (note no `()`).\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49261834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49332922", "html_url": "https://github.com/google/oauth2client/pull/27#issuecomment-49332922", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/27", "id": 49332922, "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-17T16:47:14Z", "updated_at": "2014-07-17T16:47:14Z", "author_association": "CONTRIBUTOR", "body": "I can do that.\n\nOn Wed, Jul 16, 2014 at 11:09 PM, Craig Citro notifications@github.com\nwrote:\n\n> as a high-level question, why not avoid the implementation inheritance and\n> have:\n> 1. a top-level save_to_well_known_file function and\n> 2. expose an attribute called something like serialization_data on the\n>    credentials classes that returns this?\n> \n> i have a few more small questions, but let's get this one sorted first.\n> \n> note that python lets you control attribute access, so you could do\n> \n> @property\n> def serialization_data(self):\n>   return ...\n> \n> and then you can just say my_credentials.serialization_data (note no ()).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/pull/27#issuecomment-49261834.\n\n## \n\nOrest Bolohan\n\nSoftware Engineer\nCloud/TI Identity and Access Management Services\nGoogle Inc.\nMountain View, CA\n\n(650) 214 3458\norest@google.com\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49332922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49340282", "html_url": "https://github.com/google/oauth2client/pull/27#issuecomment-49340282", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/27", "id": 49340282, "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-17T17:49:00Z", "updated_at": "2014-07-17T17:49:00Z", "author_association": "CONTRIBUTOR", "body": "And this is done.\nPTAL.\n\nThank you,\nOrest\n\nOn Thu, Jul 17, 2014 at 9:47 AM, Orest Bolohan orest@google.com wrote:\n\n> I can do that.\n> \n> On Wed, Jul 16, 2014 at 11:09 PM, Craig Citro notifications@github.com\n> wrote:\n> \n> > as a high-level question, why not avoid the implementation inheritance\n> > and have:\n> > 1. a top-level save_to_well_known_file function and\n> > 2. expose an attribute called something like serialization_data on\n> >    the credentials classes that returns this?\n> > \n> > i have a few more small questions, but let's get this one sorted first.\n> > \n> > note that python lets you control attribute access, so you could do\n> > \n> > @property\n> > def serialization_data(self):\n> >   return ...\n> > \n> > and then you can just say my_credentials.serialization_data (note no ()).\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/google/oauth2client/pull/27#issuecomment-49261834.\n> \n> ## \n> \n> Orest Bolohan\n> \n> Software Engineer\n> Cloud/TI Identity and Access Management Services\n> Google Inc.\n> Mountain View, CA\n> \n> (650) 214 3458\n> orest@google.com\n\n## \n\nOrest Bolohan\n\nSoftware Engineer\nCloud/TI Identity and Access Management Services\nGoogle Inc.\nMountain View, CA\n\n(650) 214 3458\norest@google.com\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49340282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49378962", "html_url": "https://github.com/google/oauth2client/pull/27#issuecomment-49378962", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/27", "id": 49378962, "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-17T23:19:37Z", "updated_at": "2014-07-17T23:19:37Z", "author_association": "CONTRIBUTOR", "body": "Thank you for your suggestions, Craig.\nI applied them.\nPTAL.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49378962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49379242", "html_url": "https://github.com/google/oauth2client/pull/27#issuecomment-49379242", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/27", "id": 49379242, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-17T23:24:07Z", "updated_at": "2014-07-17T23:24:07Z", "author_association": "MEMBER", "body": "this looks good -- do you want to add the TODO and i'll merge?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49379242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49384827", "html_url": "https://github.com/google/oauth2client/pull/27#issuecomment-49384827", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/27", "id": 49384827, "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-18T00:56:10Z", "updated_at": "2014-07-18T00:56:10Z", "author_association": "CONTRIBUTOR", "body": "I added the TODO.\n\nThank you,\nOrest\n\nOn Thu, Jul 17, 2014 at 4:24 PM, Craig Citro notifications@github.com\nwrote:\n\n> this looks good -- do you want to add the TODO and i'll merge?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/pull/27#issuecomment-49379242.\n\n## \n\nOrest Bolohan\n\nSoftware Engineer\nCloud/TI Identity and Access Management Services\nGoogle Inc.\nMountain View, CA\n\n(650) 214 3458\norest@google.com\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49384827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49476387", "html_url": "https://github.com/google/oauth2client/issues/25#issuecomment-49476387", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/25", "id": 49476387, "user": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-18T20:31:25Z", "updated_at": "2014-07-18T20:31:25Z", "author_association": "CONTRIBUTOR", "body": "I configured Travis to look at my branch and added more tests.  I finally got them all to pass for Python 2.6, 2.7, 3.2, and 3.3; and each version with pyOpenSSL 0.13 and 0.14.  The previous tests were using Django 1.2, but I updated it to test against Django 1.5 (the latest in the Google Cloud SDK/App Engine).  Not sure if I should add additional tests for the various versions of Django as well.\n\nI initially ran into an issue with pyOpenSSL, where they made a major change in 0.14 that caused numerous failures.  I had 0.13 on my local machine (which passed all of the unit tests) and Travis was using 0.14 (which failed the majority).\n\nI still need to go back and verify/update the doc strings.  :)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49476387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49501122", "html_url": "https://github.com/google/oauth2client/issues/25#issuecomment-49501122", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/25", "id": 49501122, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-19T06:23:24Z", "updated_at": "2014-07-19T06:23:24Z", "author_association": "MEMBER", "body": "hey pat -- it really is christmas in july! `;)`\n\nit's gonna be at least a day or two before i look at this, but i'm **really** excited.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49501122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49501990", "html_url": "https://github.com/google/oauth2client/issues/28#issuecomment-49501990", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/28", "id": 49501990, "user": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-19T07:14:35Z", "updated_at": "2014-07-19T07:14:35Z", "author_association": "CONTRIBUTOR", "body": "PyOpenSSL recently made a major change that is causing this. I've addressed this in my Python3 branch. The change happened between 0.13 and 0.14. What version of PyOpenSSL are you using?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49501990/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49502102", "html_url": "https://github.com/google/oauth2client/issues/28#issuecomment-49502102", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/28", "id": 49502102, "user": {"login": "freecnpro", "id": 3022374, "avatar_url": "https://avatars0.githubusercontent.com/u/3022374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/freecnpro", "html_url": "https://github.com/freecnpro", "followers_url": "https://api.github.com/users/freecnpro/followers", "following_url": "https://api.github.com/users/freecnpro/following{/other_user}", "gists_url": "https://api.github.com/users/freecnpro/gists{/gist_id}", "starred_url": "https://api.github.com/users/freecnpro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/freecnpro/subscriptions", "organizations_url": "https://api.github.com/users/freecnpro/orgs", "repos_url": "https://api.github.com/users/freecnpro/repos", "events_url": "https://api.github.com/users/freecnpro/events{/privacy}", "received_events_url": "https://api.github.com/users/freecnpro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-19T07:21:18Z", "updated_at": "2014-07-19T07:21:33Z", "author_association": "NONE", "body": "pyOpenSSL-0.14-py2.7\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49502102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49605489", "html_url": "https://github.com/google/oauth2client/issues/28#issuecomment-49605489", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/28", "id": 49605489, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-21T13:34:15Z", "updated_at": "2014-07-21T13:34:15Z", "author_association": "CONTRIBUTOR", "body": "There is an outstanding pull request, that I forgot about, that fixes this\nissue. Thanks for the reminder.\n\nOn Sat, Jul 19, 2014 at 1:31 AM, Bill notifications@github.com wrote:\n\n> Hi,\n> When I refresh credentials file, and get TypeError:\n> \n> pkey = crypto.load_pkcs12(key, password).get_privatekey()\n> File \"build\\bdist.win32\\egg\\OpenSSL\\crypto.py\", line 2223, in load_pkcs12\n> parse_result = _lib.PKCS12_parse(p12, passphrase, pkey, cert, cacerts)\n> TypeError: initializer for ctype 'char *' must be a str or list or tuple,\n> not unicode\n> \n> Someone said that modify crypt.py to 'load_pcs12(key, str(password))', but\n> official not fix it. Why?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/issues/28.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49605489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49648141", "html_url": "https://github.com/google/oauth2client/issues/25#issuecomment-49648141", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/25", "id": 49648141, "user": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-21T18:49:31Z", "updated_at": "2014-07-21T18:49:31Z", "author_association": "CONTRIBUTOR", "body": "Hi Craig,\nWhile I was making my changes, I tried to make them as transparent as possible, so that existing code would not need to be changed.  I just went through my diffs and it looks like the only interface changes were dealing with crypto, which were just passing the results to and from the other libraries.  In some of the tests (jwt and service_accounts), I had to change the messages and signatures from str to bytes.  Since bytes is just an alias for str in Python2.6+, this only really matters in Python3.\n\nAlso, I wasn't completely sure the proper way to handle the mox library used in the tests.  It looks like the last official release was from Aug. 2010 and was never migrated from Google Code to GitHub with the rest of Google's projects.  There is an unofficial port, mox3, which has been updated recently as a drop-in replacement.  I just used that one since I wasn't sure the status of the original library.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49648141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49715451", "html_url": "https://github.com/google/oauth2client/pull/29#issuecomment-49715451", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/29", "id": 49715451, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-22T09:14:15Z", "updated_at": "2014-07-22T09:14:15Z", "author_association": "MEMBER", "body": "(have you signed a CLA?)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49715451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49798967", "html_url": "https://github.com/google/oauth2client/pull/29#issuecomment-49798967", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/29", "id": 49798967, "user": {"login": "kaste", "id": 8558, "avatar_url": "https://avatars1.githubusercontent.com/u/8558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaste", "html_url": "https://github.com/kaste", "followers_url": "https://api.github.com/users/kaste/followers", "following_url": "https://api.github.com/users/kaste/following{/other_user}", "gists_url": "https://api.github.com/users/kaste/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaste/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaste/subscriptions", "organizations_url": "https://api.github.com/users/kaste/orgs", "repos_url": "https://api.github.com/users/kaste/repos", "events_url": "https://api.github.com/users/kaste/events{/privacy}", "received_events_url": "https://api.github.com/users/kaste/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-22T20:51:13Z", "updated_at": "2014-07-22T20:51:13Z", "author_association": "CONTRIBUTOR", "body": "(No) shhh\nAm 22.07.2014 11:14 schrieb \"Craig Citro\" notifications@github.com:\n\n> (have you signed a CLA?)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/pull/29#issuecomment-49715451.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49798967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49807567", "html_url": "https://github.com/google/oauth2client/pull/29#issuecomment-49807567", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/29", "id": 49807567, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-22T22:01:24Z", "updated_at": "2014-07-22T22:01:24Z", "author_association": "MEMBER", "body": "http://google.github.io/oauth2client/contributing.html\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49807567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49848536", "html_url": "https://github.com/google/oauth2client/pull/29#issuecomment-49848536", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/29", "id": 49848536, "user": {"login": "kaste", "id": 8558, "avatar_url": "https://avatars1.githubusercontent.com/u/8558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaste", "html_url": "https://github.com/kaste", "followers_url": "https://api.github.com/users/kaste/followers", "following_url": "https://api.github.com/users/kaste/following{/other_user}", "gists_url": "https://api.github.com/users/kaste/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaste/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaste/subscriptions", "organizations_url": "https://api.github.com/users/kaste/orgs", "repos_url": "https://api.github.com/users/kaste/repos", "events_url": "https://api.github.com/users/kaste/events{/privacy}", "received_events_url": "https://api.github.com/users/kaste/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-23T08:54:16Z", "updated_at": "2014-07-23T08:54:16Z", "author_association": "CONTRIBUTOR", "body": "Ok, signed.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/49848536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/50456734", "html_url": "https://github.com/google/oauth2client/issues/30#issuecomment-50456734", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/30", "id": 50456734, "user": {"login": "pcolmer", "id": 1979931, "avatar_url": "https://avatars2.githubusercontent.com/u/1979931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcolmer", "html_url": "https://github.com/pcolmer", "followers_url": "https://api.github.com/users/pcolmer/followers", "following_url": "https://api.github.com/users/pcolmer/following{/other_user}", "gists_url": "https://api.github.com/users/pcolmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcolmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcolmer/subscriptions", "organizations_url": "https://api.github.com/users/pcolmer/orgs", "repos_url": "https://api.github.com/users/pcolmer/repos", "events_url": "https://api.github.com/users/pcolmer/events{/privacy}", "received_events_url": "https://api.github.com/users/pcolmer/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-29T09:54:50Z", "updated_at": "2014-07-29T09:54:50Z", "author_association": "NONE", "body": "Turns out that the problem was being caused by (a) being inside the directory and (b) that directory contains a child directory called oauth2client which, correctly, doesn't contain a setup.py file.\nThe solution is to be OUTSIDE the directory when running the command, but the directory must be called oauth2client, or you need to run a command like this:\neasy_install google-oauth2client-241f6d0\nI guess it is easy if you are used to using easy_install but not if you aren't.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/50456734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/50497575", "html_url": "https://github.com/google/oauth2client/issues/30#issuecomment-50497575", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/30", "id": 50497575, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-29T16:02:48Z", "updated_at": "2014-07-29T16:02:48Z", "author_association": "MEMBER", "body": "yeah, i've hit this before myself -- we should at least add a note in the FAQ. `;)` reopening until i do.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/50497575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/50640905", "html_url": "https://github.com/google/oauth2client/pull/3#issuecomment-50640905", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/3", "id": 50640905, "user": {"login": "sde-melo", "id": 527446, "avatar_url": "https://avatars1.githubusercontent.com/u/527446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sde-melo", "html_url": "https://github.com/sde-melo", "followers_url": "https://api.github.com/users/sde-melo/followers", "following_url": "https://api.github.com/users/sde-melo/following{/other_user}", "gists_url": "https://api.github.com/users/sde-melo/gists{/gist_id}", "starred_url": "https://api.github.com/users/sde-melo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sde-melo/subscriptions", "organizations_url": "https://api.github.com/users/sde-melo/orgs", "repos_url": "https://api.github.com/users/sde-melo/repos", "events_url": "https://api.github.com/users/sde-melo/events{/privacy}", "received_events_url": "https://api.github.com/users/sde-melo/received_events", "type": "User", "site_admin": false}, "created_at": "2014-07-30T16:29:31Z", "updated_at": "2014-07-30T16:29:31Z", "author_association": "CONTRIBUTOR", "body": "Hello Craig,\n\nI have been very busy lately, sorry.\nI have made the changes you requested. Please let me know if it is OK now.\n\n2014-05-13 11:08 GMT+02:00 Craig Citro notifications@github.com:\n\n> overall, this looks good -- but as a first step, could you add some docs?\n> i'm thinking two things:\n> \n> 1/ a simple example of how to use this in the samples/ directory; it\n> could point to the existing documentation online\n> https://developers.google.com/accounts/docs/OAuth2ForDevices for any\n> explanation. (I mostly want to confirm that _I_ understand how it's\n> supposed to work.)\n> \n> 2/ update the docstrings of any functions you're tweaking.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/pull/3#issuecomment-42932886.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/50640905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51469140", "html_url": "https://github.com/google/oauth2client/pull/22#issuecomment-51469140", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/22", "id": 51469140, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-07T13:13:38Z", "updated_at": "2014-08-07T13:13:38Z", "author_association": "CONTRIBUTOR", "body": "Travis failure was caused by network problem. (Connection reset by peer while pip install tox).\nThis PR passes tests.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51469140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51480672", "html_url": "https://github.com/google/oauth2client/issues/33#issuecomment-51480672", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/33", "id": 51480672, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-07T14:39:39Z", "updated_at": "2014-08-07T14:39:39Z", "author_association": "CONTRIBUTOR", "body": "The .run_flow() function is explicitly for getting new refresh tokens with\na web browser.\n\nIf you want to refresh an existing refresh token to get a new access token,\ndo credentials.refresh(httplib2.Http()).\n\nOn Thu, Aug 7, 2014 at 10:29 AM, Charlie Hoey notifications@github.com\nwrote:\n\n> I'm trying to use this to refresh an access token for a user that has\n> approved offline access, though it seems to open a web browser everytime I\n> attempt to refresh the token. Here is the basic code I'm using:\n> \n> import argparse\n> from oauth2client.client import OAuth2WebServerFlow\n> from oauth2client import tools\n> from oauth2client.file import Storage\n> \n> CLIENT_ID = '[censored]'\n> CLIENT_SECRET = '[censored]'\n> \n> flow = OAuth2WebServerFlow(client_id=CLIENT_ID,\n>                            client_secret=CLIENT_SECRET,\n>                            scope='https://www.googleapis.com/auth/analytics.readonly',\n>                            redirect_uri='urn:ietf:wg:oauth:2.0:oob',\n>                            access_type=\"offline\",\n>                            approval_prompt=\"auto\")\n> \n> parser = argparse.ArgumentParser(parents=[tools.argparser])\n> flags = parser.parse_args()\n> \n> storage = Storage('creds.data')\n> credentials = storage.get()\n> \n> if credentials is None or credentials.invalid == True:\n>     credentials = tools.run_flow(flow, storage, flags)\n> \n> print \"access_token: %s\" % credentials.access_token\n> \n> My creds.data file contains an access token and a refresh token. The\n> access token expired yesterday, but the credentials are still returning as\n> valid for some reason. If I remove the if statement and force\n> tools.run_flow to execute, a web browser opens seeking user approval even\n> though I have offline access and a refresh token. I've been working at this\n> for a few days now and am really stumped, is there anything I'm missing, or\n> is this method out of date? Would love an example of how to do this. Thanks\n> in advance!\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/issues/33.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51480672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51661916", "html_url": "https://github.com/google/oauth2client/issues/35#issuecomment-51661916", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/35", "id": 51661916, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-08T21:51:37Z", "updated_at": "2014-08-08T21:51:37Z", "author_association": "MEMBER", "body": "(note that eliminating `META` in that file may break people who are already working around this.)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51661916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51695673", "html_url": "https://github.com/google/oauth2client/pull/34#issuecomment-51695673", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/34", "id": 51695673, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-09T19:08:52Z", "updated_at": "2014-08-09T19:08:52Z", "author_association": "MEMBER", "body": "yes! (was on vacation.) looking forward to checking this out in the next few days ...\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51695673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51728387", "html_url": "https://github.com/google/oauth2client/pull/32#issuecomment-51728387", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/32", "id": 51728387, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-10T21:45:39Z", "updated_at": "2014-08-10T21:45:39Z", "author_association": "MEMBER", "body": "this looks good -- have you signed the CLA?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51728387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51728441", "html_url": "https://github.com/google/oauth2client/pull/3#issuecomment-51728441", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/3", "id": 51728441, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-10T21:47:38Z", "updated_at": "2014-08-10T21:47:38Z", "author_association": "MEMBER", "body": "hi @fthiery and @sde-melo -- i went to look at the code, but apparently github can't load the whole changeset at once because it's too large. `;)`\n\nthis reminded me that i haven't updated the docs in a while; i've done that and pushed. can you sync to HEAD and just re-push the change?\n\nthanks so much!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51728441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51728550", "html_url": "https://github.com/google/oauth2client/pull/22#issuecomment-51728550", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/22", "id": 51728550, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-10T21:52:07Z", "updated_at": "2014-08-10T21:52:07Z", "author_association": "MEMBER", "body": "hi @methane -- two questions:\n1. it's going to make this hard to pull back into google if we use django `1.6.5`. according to the docs, `1.5` is sufficient -- could you make it `>=1.5` (even `1.5.8` would be good enough).\n2. have you signed the CLA?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51728550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51729390", "html_url": "https://github.com/google/oauth2client/pull/9#issuecomment-51729390", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/9", "id": 51729390, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-10T22:24:42Z", "updated_at": "2014-08-10T22:24:42Z", "author_association": "MEMBER", "body": "this got merged as #31 , closing\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51729390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51735611", "html_url": "https://github.com/google/oauth2client/pull/22#issuecomment-51735611", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/22", "id": 51735611, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-11T01:59:18Z", "updated_at": "2014-08-11T01:59:18Z", "author_association": "CONTRIBUTOR", "body": "> 1. it's going to make this hard to pull back into google if we use django 1.6.5. according to the docs, 1.5 is sufficient -- could you make it >=1.5 (even 1.5.8 would be good enough).\n\nI did it.\n\n> 1. have you signed the CLA?\n\nI think so. But I can't confirm it.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51735611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51735837", "html_url": "https://github.com/google/oauth2client/pull/22#issuecomment-51735837", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/22", "id": 51735837, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-11T02:04:51Z", "updated_at": "2014-08-11T02:04:51Z", "author_association": "CONTRIBUTOR", "body": "I've signed https://developers.google.com/open-source/cla/individual\nBut no confirm mail coming.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51735837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51735911", "html_url": "https://github.com/google/oauth2client/pull/22#issuecomment-51735911", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/22", "id": 51735911, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-11T02:07:13Z", "updated_at": "2014-08-11T02:07:13Z", "author_association": "CONTRIBUTOR", "body": "> error: [Errno 104] Connection reset by peer\n\nUmm, Quality of network in Travis is bad, maybe...\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51735911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51744550", "html_url": "https://github.com/google/oauth2client/pull/22#issuecomment-51744550", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/22", "id": 51744550, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-11T06:01:24Z", "updated_at": "2014-08-11T06:01:24Z", "author_association": "MEMBER", "body": "great, confirmed CLA is signed. merging ... thanks!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51744550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51745245", "html_url": "https://github.com/google/oauth2client/pull/34#issuecomment-51745245", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/34", "id": 51745245, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-11T06:17:08Z", "updated_at": "2014-08-11T06:17:08Z", "author_association": "CONTRIBUTOR", "body": "Great Job!\n@pferate My PR #22 may conflict to your PR. Please merge master.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51745245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51802279", "html_url": "https://github.com/google/oauth2client/issues/33#issuecomment-51802279", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/33", "id": 51802279, "user": {"login": "flimshaw", "id": 157224, "avatar_url": "https://avatars1.githubusercontent.com/u/157224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flimshaw", "html_url": "https://github.com/flimshaw", "followers_url": "https://api.github.com/users/flimshaw/followers", "following_url": "https://api.github.com/users/flimshaw/following{/other_user}", "gists_url": "https://api.github.com/users/flimshaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/flimshaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flimshaw/subscriptions", "organizations_url": "https://api.github.com/users/flimshaw/orgs", "repos_url": "https://api.github.com/users/flimshaw/repos", "events_url": "https://api.github.com/users/flimshaw/events{/privacy}", "received_events_url": "https://api.github.com/users/flimshaw/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-11T16:14:00Z", "updated_at": "2014-08-11T16:14:00Z", "author_association": "NONE", "body": "thanks!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51802279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51835388", "html_url": "https://github.com/google/oauth2client/pull/34#issuecomment-51835388", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/34", "id": 51835388, "user": {"login": "pferate", "id": 468011, "avatar_url": "https://avatars3.githubusercontent.com/u/468011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pferate", "html_url": "https://github.com/pferate", "followers_url": "https://api.github.com/users/pferate/followers", "following_url": "https://api.github.com/users/pferate/following{/other_user}", "gists_url": "https://api.github.com/users/pferate/gists{/gist_id}", "starred_url": "https://api.github.com/users/pferate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pferate/subscriptions", "organizations_url": "https://api.github.com/users/pferate/orgs", "repos_url": "https://api.github.com/users/pferate/repos", "events_url": "https://api.github.com/users/pferate/events{/privacy}", "received_events_url": "https://api.github.com/users/pferate/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-11T20:24:43Z", "updated_at": "2014-08-11T20:24:43Z", "author_association": "CONTRIBUTOR", "body": "Alright, I've merged the master branch into the python3 branch and resolved the conflicts (very few).\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51835388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51916763", "html_url": "https://github.com/google/oauth2client/pull/32#issuecomment-51916763", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/32", "id": 51916763, "user": {"login": "simoncadman", "id": 921157, "avatar_url": "https://avatars2.githubusercontent.com/u/921157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simoncadman", "html_url": "https://github.com/simoncadman", "followers_url": "https://api.github.com/users/simoncadman/followers", "following_url": "https://api.github.com/users/simoncadman/following{/other_user}", "gists_url": "https://api.github.com/users/simoncadman/gists{/gist_id}", "starred_url": "https://api.github.com/users/simoncadman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simoncadman/subscriptions", "organizations_url": "https://api.github.com/users/simoncadman/orgs", "repos_url": "https://api.github.com/users/simoncadman/repos", "events_url": "https://api.github.com/users/simoncadman/events{/privacy}", "received_events_url": "https://api.github.com/users/simoncadman/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-12T13:56:12Z", "updated_at": "2014-08-12T13:56:12Z", "author_association": "CONTRIBUTOR", "body": "I've signed it now, thanks.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51916763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51943529", "html_url": "https://github.com/google/oauth2client/issues/28#issuecomment-51943529", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/28", "id": 51943529, "user": {"login": "dguay", "id": 5660258, "avatar_url": "https://avatars3.githubusercontent.com/u/5660258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dguay", "html_url": "https://github.com/dguay", "followers_url": "https://api.github.com/users/dguay/followers", "following_url": "https://api.github.com/users/dguay/following{/other_user}", "gists_url": "https://api.github.com/users/dguay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dguay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dguay/subscriptions", "organizations_url": "https://api.github.com/users/dguay/orgs", "repos_url": "https://api.github.com/users/dguay/repos", "events_url": "https://api.github.com/users/dguay/events{/privacy}", "received_events_url": "https://api.github.com/users/dguay/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-12T16:58:56Z", "updated_at": "2014-08-12T16:58:56Z", "author_association": "NONE", "body": "Is this fixed? Even if I do the manual fix it doesn't seem to work...\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51943529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51945695", "html_url": "https://github.com/google/oauth2client/issues/28#issuecomment-51945695", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/28", "id": 51945695, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-12T17:14:22Z", "updated_at": "2014-08-12T17:14:22Z", "author_association": "CONTRIBUTOR", "body": "It should be, yes, though only if you get oauth2client directly from this\nrepository.\n\nWhat error are you seeing now?\n\nOn Tue, Aug 12, 2014 at 12:58 PM, dguay notifications@github.com wrote:\n\n> Is this fixed? Even if I do the manual fix it doesn't seem to work...\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/issues/28#issuecomment-51943529.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51945695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51946182", "html_url": "https://github.com/google/oauth2client/issues/28#issuecomment-51946182", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/28", "id": 51946182, "user": {"login": "dguay", "id": 5660258, "avatar_url": "https://avatars3.githubusercontent.com/u/5660258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dguay", "html_url": "https://github.com/dguay", "followers_url": "https://api.github.com/users/dguay/followers", "following_url": "https://api.github.com/users/dguay/following{/other_user}", "gists_url": "https://api.github.com/users/dguay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dguay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dguay/subscriptions", "organizations_url": "https://api.github.com/users/dguay/orgs", "repos_url": "https://api.github.com/users/dguay/repos", "events_url": "https://api.github.com/users/dguay/events{/privacy}", "received_events_url": "https://api.github.com/users/dguay/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-12T17:17:57Z", "updated_at": "2014-08-12T17:17:57Z", "author_association": "NONE", "body": "Error: initializer for ctype 'char *' must be a str or list or tuple, not unicode\non this line: credentials.refresh(http) \n\nI did change the crypt.py file line 131 \n\nfrom: pkey = crypto.load_pkcs12(key, password).get_privatekey()\nto: pkey = crypto.load_pkcs12(key, password.encode('utf8')).get_privatekey()\n\nAlso tried: pkey = crypto.load_pkcs12(key, str(password)).get_privatekey()\n\nAnd tried to upgrade oauth2client with easy_install as stated here.\neasy_install --upgrade oauth2client\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51946182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51946391", "html_url": "https://github.com/google/oauth2client/issues/28#issuecomment-51946391", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/28", "id": 51946391, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-12T17:19:38Z", "updated_at": "2014-08-12T17:19:38Z", "author_association": "CONTRIBUTOR", "body": "If you do the \"str(password)\" patch, you shouldn't be seeing that error.\nPerhaps the code you're updating is not the code being run?\n\nOn Tue, Aug 12, 2014 at 1:17 PM, dguay notifications@github.com wrote:\n\n> Error: initializer for ctype 'char *' must be a str or list or tuple, not\n> unicode\n> on this line: credentials.refresh(http)\n> \n> I did change the crypt.py file line 131\n> \n> from: pkey = crypto.load_pkcs12(key, password).get_privatekey()\n> to: pkey = crypto.load_pkcs12(key,\n> password.encode('utf8')).get_privatekey()\n> \n> Also tried: pkey = crypto.load_pkcs12(key, str(password)).get_privatekey()\n> \n> And tried to upgrade oauth2client with easy_install as stated here.\n> easy_install --upgrade oauth2client\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/issues/28#issuecomment-51946182.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51946391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51946774", "html_url": "https://github.com/google/oauth2client/issues/28#issuecomment-51946774", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/28", "id": 51946774, "user": {"login": "dguay", "id": 5660258, "avatar_url": "https://avatars3.githubusercontent.com/u/5660258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dguay", "html_url": "https://github.com/dguay", "followers_url": "https://api.github.com/users/dguay/followers", "following_url": "https://api.github.com/users/dguay/following{/other_user}", "gists_url": "https://api.github.com/users/dguay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dguay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dguay/subscriptions", "organizations_url": "https://api.github.com/users/dguay/orgs", "repos_url": "https://api.github.com/users/dguay/repos", "events_url": "https://api.github.com/users/dguay/events{/privacy}", "received_events_url": "https://api.github.com/users/dguay/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-12T17:22:38Z", "updated_at": "2014-08-12T17:31:07Z", "author_association": "NONE", "body": "This is what I'm thinking too. I see this error:\n\nbuild/bdist.linux-x86_64/egg/oauth2client/crypt.py in from_string\n        pkey = crypto.load_pkcs12(key, password).get_privatekey() \n\nBut the file I fixed and I expected to be used is in myapp/lib/python2.7/site-packages/oauth2client/crypt.py\n\nCan't find that crypt.py file used.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51946774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51954788", "html_url": "https://github.com/google/oauth2client/issues/28#issuecomment-51954788", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/28", "id": 51954788, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-12T18:18:24Z", "updated_at": "2014-08-12T18:18:24Z", "author_association": "CONTRIBUTOR", "body": "Be old fashioned about it - stick in some random print statements :)\n\nOn Tue, Aug 12, 2014 at 1:22 PM, dguay notifications@github.com wrote:\n\n> This is what I'm thinking too. I'm not sure how to make sure this is the\n> good file. The file I fix is in\n> myapp/lib/python2.7/site-packages/oauth2client/crypt.py\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/issues/28#issuecomment-51946774.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/51954788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52285527", "html_url": "https://github.com/google/oauth2client/pull/3#issuecomment-52285527", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/3", "id": 52285527, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-15T08:36:54Z", "updated_at": "2014-08-15T08:36:54Z", "author_association": "MEMBER", "body": "hi @fthiery and @sde-melo -- i realized that it might make more sense for me to play with merging. i've gone ahead and merged with master, and then made a few more tweaks on top of that. the branch is here:\n  https://github.com/craigcitro/oauth2client/tree/experiment\n\nif one of you could take a quick look (there's just one merge and one more patch on top of this code), and it looks good, I'll go ahead and merge that into master (which will then pick up all these changes).\n\nthanks!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52285527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52324992", "html_url": "https://github.com/google/oauth2client/pull/34#issuecomment-52324992", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/34", "id": 52324992, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-15T16:08:24Z", "updated_at": "2014-08-15T16:08:24Z", "author_association": "MEMBER", "body": "hi @pferate -- so this looks great. (sorry again about the delay.)\n\ni think there are a few small changes i want to make, and a few parts (such as some of the import cleanup) that i'd like to start by making in the repo directly (since they're really cleanup independent of the py3 transition).\n\nsince you're already done more than enough, how about this -- i'll merge this into a new branch in this repo, and i'll start making some changes (and hoping to lean on you and @methane for some code reviews) and then merge it into master soon?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52324992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52374824", "html_url": "https://github.com/google/oauth2client/pull/10#issuecomment-52374824", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/10", "id": 52374824, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-16T00:00:39Z", "updated_at": "2014-08-16T00:00:39Z", "author_association": "MEMBER", "body": "i'm going to close this -- it turned out we didn't really need these two PRs for the original purpose, and the retry logic is going to land elsewhere.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52374824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52374832", "html_url": "https://github.com/google/oauth2client/pull/11#issuecomment-52374832", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/11", "id": 52374832, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-16T00:00:44Z", "updated_at": "2014-08-16T00:00:44Z", "author_association": "MEMBER", "body": "i'm going to close this -- it turned out we didn't really need these two PRs for the original purpose, and the retry logic is going to land elsewhere.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52374832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52386765", "html_url": "https://github.com/google/oauth2client/pull/14#issuecomment-52386765", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/14", "id": 52386765, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-16T07:51:58Z", "updated_at": "2014-08-16T07:51:58Z", "author_association": "MEMBER", "body": "OK, I finally got a chance to tackle this one. @Alexander-Attar  and @whirlycott -- PTAL at \n  https://github.com/craigcitro/oauth2client/tree/better_crypt_error\nand see if that looks good?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52386765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52428057", "html_url": "https://github.com/google/oauth2client/pull/34#issuecomment-52428057", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/34", "id": 52428057, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-17T17:06:48Z", "updated_at": "2014-08-17T17:06:48Z", "author_association": "MEMBER", "body": "OK, I've added a new [python3 branch](https://github.com/google/oauth2client/tree/python3) where we can continue working; I'll close this once we merge to master.\n\nSG?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52428057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52496915", "html_url": "https://github.com/google/oauth2client/pull/37#issuecomment-52496915", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/37", "id": 52496915, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-18T14:09:55Z", "updated_at": "2014-08-18T14:09:55Z", "author_association": "CONTRIBUTOR", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52496915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52586999", "html_url": "https://github.com/google/oauth2client/pull/39#issuecomment-52586999", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/39", "id": 52586999, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-19T03:43:23Z", "updated_at": "2014-08-19T03:43:23Z", "author_association": "CONTRIBUTOR", "body": "Is there any chance to change indent of all Python sources from 2-space to 4-space?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52586999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52597494", "html_url": "https://github.com/google/oauth2client/pull/39#issuecomment-52597494", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/39", "id": 52597494, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-19T07:05:59Z", "updated_at": "2014-08-19T07:05:59Z", "author_association": "MEMBER", "body": "it's possible we could switch from 2 spaces to 4, but it's low priority right now. (google style being 2 spaces is unfortunate -- i mostly want to make sure all the internal lint/etc tools continue to work as well once i switch.)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52597494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52597591", "html_url": "https://github.com/google/oauth2client/pull/40#issuecomment-52597591", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/40", "id": 52597591, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-19T07:07:14Z", "updated_at": "2014-08-19T07:07:14Z", "author_association": "MEMBER", "body": "(have you signed the CLA?)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52597591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52638406", "html_url": "https://github.com/google/oauth2client/pull/40#issuecomment-52638406", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/40", "id": 52638406, "user": {"login": "dustinfarris", "id": 1087165, "avatar_url": "https://avatars3.githubusercontent.com/u/1087165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dustinfarris", "html_url": "https://github.com/dustinfarris", "followers_url": "https://api.github.com/users/dustinfarris/followers", "following_url": "https://api.github.com/users/dustinfarris/following{/other_user}", "gists_url": "https://api.github.com/users/dustinfarris/gists{/gist_id}", "starred_url": "https://api.github.com/users/dustinfarris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dustinfarris/subscriptions", "organizations_url": "https://api.github.com/users/dustinfarris/orgs", "repos_url": "https://api.github.com/users/dustinfarris/repos", "events_url": "https://api.github.com/users/dustinfarris/events{/privacy}", "received_events_url": "https://api.github.com/users/dustinfarris/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-19T14:03:29Z", "updated_at": "2014-08-19T14:03:29Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro I just submitted it electronically.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52638406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52641417", "html_url": "https://github.com/google/oauth2client/pull/3#issuecomment-52641417", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/3", "id": 52641417, "user": {"login": "sde-melo", "id": 527446, "avatar_url": "https://avatars1.githubusercontent.com/u/527446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sde-melo", "html_url": "https://github.com/sde-melo", "followers_url": "https://api.github.com/users/sde-melo/followers", "following_url": "https://api.github.com/users/sde-melo/following{/other_user}", "gists_url": "https://api.github.com/users/sde-melo/gists{/gist_id}", "starred_url": "https://api.github.com/users/sde-melo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sde-melo/subscriptions", "organizations_url": "https://api.github.com/users/sde-melo/orgs", "repos_url": "https://api.github.com/users/sde-melo/repos", "events_url": "https://api.github.com/users/sde-melo/events{/privacy}", "received_events_url": "https://api.github.com/users/sde-melo/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-19T14:23:57Z", "updated_at": "2014-08-19T14:23:57Z", "author_association": "CONTRIBUTOR", "body": "Hello @craigcitro,\n\nI was on leave last week, sorry.\nI have taken a look and it's OK for us. Thank you for the tweaks!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52641417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52670337", "html_url": "https://github.com/google/oauth2client/pull/34#issuecomment-52670337", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/34", "id": 52670337, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-19T17:38:36Z", "updated_at": "2014-08-19T17:38:36Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro Could you create new pull request from Google's python3 branch to master branch?\nIt makes easier to people write comments on changes.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52670337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52678331", "html_url": "https://github.com/google/oauth2client/pull/40#issuecomment-52678331", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/40", "id": 52678331, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-19T18:32:37Z", "updated_at": "2014-08-19T18:32:37Z", "author_association": "MEMBER", "body": "looks good -- i agree that we need to come back and look at this, but happy to see it working for now.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52678331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52679944", "html_url": "https://github.com/google/oauth2client/pull/3#issuecomment-52679944", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/3", "id": 52679944, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-19T18:43:21Z", "updated_at": "2014-08-19T18:43:21Z", "author_association": "MEMBER", "body": "OK, all merged -- thanks so much for the PR!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52679944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52711643", "html_url": "https://github.com/google/oauth2client/issues/25#issuecomment-52711643", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/25", "id": 52711643, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-19T22:50:25Z", "updated_at": "2014-08-19T22:50:25Z", "author_association": "MEMBER", "body": "Moving this to #43.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52711643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52711668", "html_url": "https://github.com/google/oauth2client/pull/34#issuecomment-52711668", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/34", "id": 52711668, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-19T22:50:46Z", "updated_at": "2014-08-19T22:50:46Z", "author_association": "MEMBER", "body": "Moving this conversation to #43 to make comments easier.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52711668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52725063", "html_url": "https://github.com/google/oauth2client/pull/41#issuecomment-52725063", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/41", "id": 52725063, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-20T01:53:08Z", "updated_at": "2014-08-20T01:53:08Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro Should I support Python 3.2?  If Python 3.2 is not important for Google, I'd like to drop it.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52725063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52728191", "html_url": "https://github.com/google/oauth2client/pull/41#issuecomment-52728191", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/41", "id": 52728191, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-20T02:51:29Z", "updated_at": "2014-08-20T02:51:29Z", "author_association": "MEMBER", "body": "I think we're okay to say Python 3.3 or above - or maybe even 3.4 if we have good reason.\n\njust for my own education, what's simpler in our lives if we don't support 3.2?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52728191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52728601", "html_url": "https://github.com/google/oauth2client/pull/41#issuecomment-52728601", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/41", "id": 52728601, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-20T02:58:36Z", "updated_at": "2014-08-20T02:58:36Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro Big one is `u'string'` literal.\nIn this case, base64 start accepting string input from Python 3.3.\nhttps://docs.python.org/3/whatsnew/3.3.html#base64\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52728601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52816025", "html_url": "https://github.com/google/oauth2client/issues/42#issuecomment-52816025", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/42", "id": 52816025, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-20T17:57:44Z", "updated_at": "2014-08-20T17:57:44Z", "author_association": "CONTRIBUTOR", "body": "This is covered in https://github.com/google/oauth2client/blob/master/oauth2client/service_account.py\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/52816025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/53688035", "html_url": "https://github.com/google/oauth2client/pull/41#issuecomment-53688035", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/41", "id": 53688035, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-28T08:35:57Z", "updated_at": "2014-08-28T08:35:57Z", "author_association": "CONTRIBUTOR", "body": "ping?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/53688035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/53752603", "html_url": "https://github.com/google/oauth2client/pull/41#issuecomment-53752603", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/41", "id": 53752603, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-28T16:41:50Z", "updated_at": "2014-08-28T16:41:50Z", "author_association": "MEMBER", "body": "whoops -- missed this before vacation. `;)`\n\nthanks!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/53752603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/53966533", "html_url": "https://github.com/google/oauth2client/pull/47#issuecomment-53966533", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/47", "id": 53966533, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-30T18:31:34Z", "updated_at": "2014-08-30T18:31:34Z", "author_association": "MEMBER", "body": "looks like there are just a few travis failures left -- is that just openssl 1.3 vs. 1.4?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/53966533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/53966749", "html_url": "https://github.com/google/oauth2client/pull/47#issuecomment-53966749", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/47", "id": 53966749, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-30T18:39:48Z", "updated_at": "2014-08-30T18:39:48Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro Yes, I've removed openssl13 support from py3[34]. But I've forgot to remove them from .travis.yml.\n\nOn Python 3, pyopenssl 0.13 accepts only str (unicode) for password, and pyopenssl 0.14 accepts only\nbytes for password.\nInstead of adding dirty if statement, I want to remove pyopenssl13 support from Python 3.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/53966749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/54004440", "html_url": "https://github.com/google/oauth2client/pull/48#issuecomment-54004440", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/48", "id": 54004440, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-08-31T23:12:18Z", "updated_at": "2014-08-31T23:12:18Z", "author_association": "MEMBER", "body": "(have you signed the CLA?)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/54004440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/54007623", "html_url": "https://github.com/google/oauth2client/pull/48#issuecomment-54007623", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/48", "id": 54007623, "user": {"login": "bitle", "id": 285793, "avatar_url": "https://avatars0.githubusercontent.com/u/285793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitle", "html_url": "https://github.com/bitle", "followers_url": "https://api.github.com/users/bitle/followers", "following_url": "https://api.github.com/users/bitle/following{/other_user}", "gists_url": "https://api.github.com/users/bitle/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitle/subscriptions", "organizations_url": "https://api.github.com/users/bitle/orgs", "repos_url": "https://api.github.com/users/bitle/repos", "events_url": "https://api.github.com/users/bitle/events{/privacy}", "received_events_url": "https://api.github.com/users/bitle/received_events", "type": "User", "site_admin": false}, "created_at": "2014-09-01T01:20:05Z", "updated_at": "2014-09-01T01:20:05Z", "author_association": "NONE", "body": "Yes, I have\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/54007623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/54192690", "html_url": "https://github.com/google/oauth2client/pull/47#issuecomment-54192690", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/47", "id": 54192690, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2014-09-02T18:05:05Z", "updated_at": "2014-09-02T18:05:05Z", "author_association": "CONTRIBUTOR", "body": "When this branch is merged, I think python3 branch will be good enough to start reviewing for merge into master.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/54192690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/54500757", "html_url": "https://github.com/google/oauth2client/pull/47#issuecomment-54500757", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/47", "id": 54500757, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-09-04T15:59:15Z", "updated_at": "2014-09-04T15:59:15Z", "author_association": "MEMBER", "body": "cool -- i'm going to merge this.\n\nbefore we can start merging this into master, i need to start an internal process related to the 1.3 -> 1.4 switch. i'll need to block on that before i can start looking at merging this into master -- but i agree, it looks like this is in great shape.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/54500757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/54985945", "html_url": "https://github.com/google/oauth2client/pull/51#issuecomment-54985945", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/51", "id": 54985945, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-09-09T15:24:01Z", "updated_at": "2014-09-09T15:24:01Z", "author_association": "CONTRIBUTOR", "body": "Tests?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/54985945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/55012556", "html_url": "https://github.com/google/oauth2client/pull/51#issuecomment-55012556", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/51", "id": 55012556, "user": {"login": "liujin-google", "id": 8702079, "avatar_url": "https://avatars3.githubusercontent.com/u/8702079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liujin-google", "html_url": "https://github.com/liujin-google", "followers_url": "https://api.github.com/users/liujin-google/followers", "following_url": "https://api.github.com/users/liujin-google/following{/other_user}", "gists_url": "https://api.github.com/users/liujin-google/gists{/gist_id}", "starred_url": "https://api.github.com/users/liujin-google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liujin-google/subscriptions", "organizations_url": "https://api.github.com/users/liujin-google/orgs", "repos_url": "https://api.github.com/users/liujin-google/repos", "events_url": "https://api.github.com/users/liujin-google/events{/privacy}", "received_events_url": "https://api.github.com/users/liujin-google/received_events", "type": "User", "site_admin": false}, "created_at": "2014-09-09T18:26:23Z", "updated_at": "2014-09-09T18:26:23Z", "author_association": "CONTRIBUTOR", "body": "Test is fixed.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/55012556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/55277537", "html_url": "https://github.com/google/oauth2client/pull/51#issuecomment-55277537", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/51", "id": 55277537, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-09-11T15:07:02Z", "updated_at": "2014-09-11T15:07:02Z", "author_association": "CONTRIBUTOR", "body": "LGTM, craigcitro is merge cop.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/55277537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/56310690", "html_url": "https://github.com/google/oauth2client/pull/54#issuecomment-56310690", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/54", "id": 56310690, "user": {"login": "jay0lee", "id": 4623536, "avatar_url": "https://avatars2.githubusercontent.com/u/4623536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jay0lee", "html_url": "https://github.com/jay0lee", "followers_url": "https://api.github.com/users/jay0lee/followers", "following_url": "https://api.github.com/users/jay0lee/following{/other_user}", "gists_url": "https://api.github.com/users/jay0lee/gists{/gist_id}", "starred_url": "https://api.github.com/users/jay0lee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jay0lee/subscriptions", "organizations_url": "https://api.github.com/users/jay0lee/orgs", "repos_url": "https://api.github.com/users/jay0lee/repos", "events_url": "https://api.github.com/users/jay0lee/events{/privacy}", "received_events_url": "https://api.github.com/users/jay0lee/received_events", "type": "User", "site_admin": false}, "created_at": "2014-09-21T20:02:04Z", "updated_at": "2014-09-21T20:02:04Z", "author_association": "CONTRIBUTOR", "body": "Here's some sample code that will demonstrate the error. With the patch applied and scopes not sent, the token request succeeds.\n\nAnd the answer is yes, my app does use that many scopes :-) http://git.io/gam\n\n``` python\nimport oauth2client.client\nimport oauth2client.tools\n\nclass cmd_flags(object):\n  def __init__(self):\n    self.short_url = False\n    self.noauth_local_webserver = True\n    self.logging_level = u'ERROR'\n    self.auth_host_name = u'localhost'\n    self.auth_host_port = [8080, 9090]\n\nstorage = oauth2client.file.Storage(u'oauth2.json')\nscopes = [u'https://www.googleapis.com/auth/admin.directory.group',            # Groups Directory Scope\n          u'https://www.googleapis.com/auth/admin.directory.orgunit',          # Organization Directory Scope\n          u'https://www.googleapis.com/auth/admin.directory.user',             # Users Directory Scope\n          u'https://www.googleapis.com/auth/admin.directory.device.chromeos',  # Chrome OS Devices Directory Scope\n          u'https://www.googleapis.com/auth/admin.directory.device.mobile',    # Mobile Device Directory Scope\n          u'https://apps-apis.google.com/a/feeds/emailsettings/2.0/',          # Email Settings API\n          u'https://apps-apis.google.com/a/feeds/calendar/resource/',          # Calendar Resource API\n          u'https://apps-apis.google.com/a/feeds/compliance/audit/',           # Email Audit API\n          u'https://apps-apis.google.com/a/feeds/domain/',                     # Admin Settings API\n          u'https://www.googleapis.com/auth/apps.groups.settings',             # Group Settings API\n          u'https://www.googleapis.com/auth/calendar',                         # Calendar Data API\n          u'https://www.googleapis.com/auth/admin.reports.audit.readonly',     # Audit Reports\n          u'https://www.googleapis.com/auth/admin.reports.usage.readonly',     # Usage Reports\n          u'https://www.googleapis.com/auth/drive.file',                       # Drive API - Admin user access to files created or opened by the app\n          u'https://www.googleapis.com/auth/apps.licensing',                   # License Manager API\n          u'https://www.googleapis.com/auth/admin.directory.user.security',    # User Security Directory API\n          u'https://www.googleapis.com/auth/admin.directory.notifications',    # Notifications Directory API\n          u'https://www.googleapis.com/auth/siteverification',                 # Site Verification API\n          u'https://mail.google.com/',                                         # IMAP/SMTP authentication for admin notifications\n          u'https://www.googleapis.com/auth/admin.directory.userschema',       # Customer User Schema\n          u'https://www.googleapis.com/auth/admin.directory.domain']          # Domains\n\nflow = oauth2client.client.flow_from_clientsecrets(filename=u'client_secrets.json',\n                                                   scope=scopes)\nflags = cmd_flags()\ncredentials = oauth2client.tools.run_flow(flow=flow, storage=storage, flags=flags)\n```\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/56310690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/56382503", "html_url": "https://github.com/google/oauth2client/pull/54#issuecomment-56382503", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/54", "id": 56382503, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-09-22T14:37:53Z", "updated_at": "2014-09-22T14:37:53Z", "author_association": "CONTRIBUTOR", "body": "Does your token actually work if you don't have the scopes included when authenticating? How does Google find out what scopes are needed so that it can tell the user?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/56382503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/56551962", "html_url": "https://github.com/google/oauth2client/pull/55#issuecomment-56551962", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/55", "id": 56551962, "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "created_at": "2014-09-23T16:51:40Z", "updated_at": "2014-09-23T16:51:40Z", "author_association": "CONTRIBUTOR", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/56551962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/57239208", "html_url": "https://github.com/google/oauth2client/issues/13#issuecomment-57239208", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/13", "id": 57239208, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-09-29T22:16:18Z", "updated_at": "2014-09-29T22:16:18Z", "author_association": "MEMBER", "body": "Fixed by #56.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/57239208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/57239237", "html_url": "https://github.com/google/oauth2client/pull/14#issuecomment-57239237", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/14", "id": 57239237, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-09-29T22:16:39Z", "updated_at": "2014-09-29T22:16:39Z", "author_association": "MEMBER", "body": "I ended up closing this as #56.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/57239237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/57311844", "html_url": "https://github.com/google/oauth2client/pull/57#issuecomment-57311844", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/57", "id": 57311844, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-09-30T13:19:10Z", "updated_at": "2014-09-30T13:19:10Z", "author_association": "CONTRIBUTOR", "body": "LGTM!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/57311844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/57794775", "html_url": "https://github.com/google/oauth2client/issues/7#issuecomment-57794775", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/7", "id": 57794775, "user": {"login": "dbrgn", "id": 105168, "avatar_url": "https://avatars1.githubusercontent.com/u/105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbrgn", "html_url": "https://github.com/dbrgn", "followers_url": "https://api.github.com/users/dbrgn/followers", "following_url": "https://api.github.com/users/dbrgn/following{/other_user}", "gists_url": "https://api.github.com/users/dbrgn/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbrgn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbrgn/subscriptions", "organizations_url": "https://api.github.com/users/dbrgn/orgs", "repos_url": "https://api.github.com/users/dbrgn/repos", "events_url": "https://api.github.com/users/dbrgn/events{/privacy}", "received_events_url": "https://api.github.com/users/dbrgn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-03T13:16:17Z", "updated_at": "2014-10-03T13:16:17Z", "author_association": "NONE", "body": "Too bad. Would be great if Python 3 support would be offered soon.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/57794775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/57809320", "html_url": "https://github.com/google/oauth2client/issues/7#issuecomment-57809320", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/7", "id": 57809320, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-03T15:11:09Z", "updated_at": "2014-10-03T15:11:09Z", "author_association": "MEMBER", "body": "it's in the works! see the python3 branch in the repo, which i'm hoping to merge in the near future.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/57809320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/57984838", "html_url": "https://github.com/google/oauth2client/issues/7#issuecomment-57984838", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/7", "id": 57984838, "user": {"login": "dbrgn", "id": 105168, "avatar_url": "https://avatars1.githubusercontent.com/u/105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbrgn", "html_url": "https://github.com/dbrgn", "followers_url": "https://api.github.com/users/dbrgn/followers", "following_url": "https://api.github.com/users/dbrgn/following{/other_user}", "gists_url": "https://api.github.com/users/dbrgn/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbrgn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbrgn/subscriptions", "organizations_url": "https://api.github.com/users/dbrgn/orgs", "repos_url": "https://api.github.com/users/dbrgn/repos", "events_url": "https://api.github.com/users/dbrgn/events{/privacy}", "received_events_url": "https://api.github.com/users/dbrgn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-06T07:58:46Z", "updated_at": "2014-10-06T07:58:46Z", "author_association": "NONE", "body": "That's great!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/57984838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/59291165", "html_url": "https://github.com/google/oauth2client/pull/48#issuecomment-59291165", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/48", "id": 59291165, "user": {"login": "bitle", "id": 285793, "avatar_url": "https://avatars0.githubusercontent.com/u/285793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitle", "html_url": "https://github.com/bitle", "followers_url": "https://api.github.com/users/bitle/followers", "following_url": "https://api.github.com/users/bitle/following{/other_user}", "gists_url": "https://api.github.com/users/bitle/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitle/subscriptions", "organizations_url": "https://api.github.com/users/bitle/orgs", "repos_url": "https://api.github.com/users/bitle/repos", "events_url": "https://api.github.com/users/bitle/events{/privacy}", "received_events_url": "https://api.github.com/users/bitle/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-15T23:08:14Z", "updated_at": "2014-10-15T23:08:14Z", "author_association": "NONE", "body": "Thanks Craig, I would close this PR. I believe my PR will introduce confusion around usage of redirect_uri.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/59291165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/59291578", "html_url": "https://github.com/google/oauth2client/pull/48#issuecomment-59291578", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/48", "id": 59291578, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-15T23:12:43Z", "updated_at": "2014-10-15T23:12:43Z", "author_association": "MEMBER", "body": "sure, sounds good. i do like the idea, but i agree that it's not clear what to do with multiple `redirect_uri` entries ...\n\nthanks, and sorry i couldn't merge it!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/59291578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/59612728", "html_url": "https://github.com/google/oauth2client/pull/59#issuecomment-59612728", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/59", "id": 59612728, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-18T13:20:16Z", "updated_at": "2014-10-18T13:20:16Z", "author_association": "CONTRIBUTOR", "body": "ping?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/59612728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/59654274", "html_url": "https://github.com/google/oauth2client/pull/59#issuecomment-59654274", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/59", "id": 59654274, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-19T15:59:17Z", "updated_at": "2014-10-19T15:59:17Z", "author_association": "MEMBER", "body": "whoops! left this sitting.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/59654274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/59656348", "html_url": "https://github.com/google/oauth2client/pull/43#issuecomment-59656348", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/43", "id": 59656348, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-19T17:02:06Z", "updated_at": "2014-10-19T17:02:06Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro Could you review this PR?\nI think now is good time to merge this, because 1.3 was released and there are only few other PRs for now.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/59656348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/59668414", "html_url": "https://github.com/google/oauth2client/pull/43#issuecomment-59668414", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/43", "id": 59668414, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-10-19T22:26:50Z", "updated_at": "2014-10-19T22:26:50Z", "author_association": "MEMBER", "body": "@methane yep, i'm hoping to get to it this week, now that the previous oauth2client and apiclient versions are out.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/59668414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61529327", "html_url": "https://github.com/google/oauth2client/pull/65#issuecomment-61529327", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/65", "id": 61529327, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-03T19:02:56Z", "updated_at": "2014-11-03T19:02:56Z", "author_association": "CONTRIBUTOR", "body": "LGTM. Not sure why it wasn't done this way in the first place.\n\nLeaving it to @craigcitro to do final merge decisions.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61529327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61611730", "html_url": "https://github.com/google/oauth2client/pull/65#issuecomment-61611730", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/65", "id": 61611730, "user": {"login": "avivien", "id": 239073, "avatar_url": "https://avatars0.githubusercontent.com/u/239073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avivien", "html_url": "https://github.com/avivien", "followers_url": "https://api.github.com/users/avivien/followers", "following_url": "https://api.github.com/users/avivien/following{/other_user}", "gists_url": "https://api.github.com/users/avivien/gists{/gist_id}", "starred_url": "https://api.github.com/users/avivien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avivien/subscriptions", "organizations_url": "https://api.github.com/users/avivien/orgs", "repos_url": "https://api.github.com/users/avivien/repos", "events_url": "https://api.github.com/users/avivien/events{/privacy}", "received_events_url": "https://api.github.com/users/avivien/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-04T09:12:10Z", "updated_at": "2014-11-04T09:12:10Z", "author_association": "CONTRIBUTOR", "body": "Done.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61611730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61691412", "html_url": "https://github.com/google/oauth2client/pull/65#issuecomment-61691412", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/65", "id": 61691412, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-04T18:40:57Z", "updated_at": "2014-11-04T18:40:57Z", "author_association": "MEMBER", "body": "i'm going to merge and then make a small tweak -- thanks @avivien !\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61691412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61692560", "html_url": "https://github.com/google/oauth2client/pull/65#issuecomment-61692560", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/65", "id": 61692560, "user": {"login": "avivien", "id": 239073, "avatar_url": "https://avatars0.githubusercontent.com/u/239073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avivien", "html_url": "https://github.com/avivien", "followers_url": "https://api.github.com/users/avivien/followers", "following_url": "https://api.github.com/users/avivien/following{/other_user}", "gists_url": "https://api.github.com/users/avivien/gists{/gist_id}", "starred_url": "https://api.github.com/users/avivien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avivien/subscriptions", "organizations_url": "https://api.github.com/users/avivien/orgs", "repos_url": "https://api.github.com/users/avivien/repos", "events_url": "https://api.github.com/users/avivien/events{/privacy}", "received_events_url": "https://api.github.com/users/avivien/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-04T18:48:25Z", "updated_at": "2014-11-04T18:48:25Z", "author_association": "CONTRIBUTOR", "body": "Thank you @craigcitro Craig.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61692560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61702672", "html_url": "https://github.com/google/oauth2client/pull/43#issuecomment-61702672", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/43", "id": 61702672, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-04T19:50:59Z", "updated_at": "2014-11-04T19:50:59Z", "author_association": "MEMBER", "body": "wooooo! thanks for all the contributions everyone, this is merged.\n\nwe still should do some cleanup (for instance, i suspect we want to just support pyopenssl 1.4 going forward?), but this is fantastic. thanks, especially to @pferate and @methane !\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61702672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61743658", "html_url": "https://github.com/google/oauth2client/pull/43#issuecomment-61743658", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/43", "id": 61743658, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-05T01:02:09Z", "updated_at": "2014-11-05T01:02:09Z", "author_association": "CONTRIBUTOR", "body": "Great!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61743658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61760321", "html_url": "https://github.com/google/oauth2client/issues/66#issuecomment-61760321", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/66", "id": 61760321, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-05T05:03:19Z", "updated_at": "2014-11-05T05:03:19Z", "author_association": "CONTRIBUTOR", "body": "cc @craigcitro \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61760321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61832591", "html_url": "https://github.com/google/oauth2client/issues/64#issuecomment-61832591", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/64", "id": 61832591, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-05T16:13:54Z", "updated_at": "2014-11-05T16:13:54Z", "author_association": "MEMBER", "body": "fixed by #65 \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61832591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61833101", "html_url": "https://github.com/google/oauth2client/issues/66#issuecomment-61833101", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/66", "id": 61833101, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-05T16:15:58Z", "updated_at": "2014-11-05T16:15:58Z", "author_association": "MEMBER", "body": "this is an easy fix (rolling now) -- but i'm curious why tox/travis didn't hit this?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61833101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61833209", "html_url": "https://github.com/google/oauth2client/issues/66#issuecomment-61833209", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/66", "id": 61833209, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-05T16:16:26Z", "updated_at": "2014-11-05T16:16:26Z", "author_association": "MEMBER", "body": "aha! it's not a failure, just an error message during install.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/61833209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/62264765", "html_url": "https://github.com/google/oauth2client/issues/63#issuecomment-62264765", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/63", "id": 62264765, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-08T16:55:39Z", "updated_at": "2014-11-08T16:55:39Z", "author_association": "MEMBER", "body": "This should be fixed in `1.3.2` -- the logic is reworked a little in `step2_exchange` to handle dict-like objects correctly.\n\n(Reopen if you're still seeing it.)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/62264765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/62961052", "html_url": "https://github.com/google/oauth2client/pull/71#issuecomment-62961052", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/71", "id": 62961052, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-13T20:32:47Z", "updated_at": "2014-11-13T20:32:47Z", "author_association": "CONTRIBUTOR", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/62961052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/62967465", "html_url": "https://github.com/google/oauth2client/pull/54#issuecomment-62967465", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/54", "id": 62967465, "user": {"login": "jay0lee", "id": 4623536, "avatar_url": "https://avatars2.githubusercontent.com/u/4623536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jay0lee", "html_url": "https://github.com/jay0lee", "followers_url": "https://api.github.com/users/jay0lee/followers", "following_url": "https://api.github.com/users/jay0lee/following{/other_user}", "gists_url": "https://api.github.com/users/jay0lee/gists{/gist_id}", "starred_url": "https://api.github.com/users/jay0lee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jay0lee/subscriptions", "organizations_url": "https://api.github.com/users/jay0lee/orgs", "repos_url": "https://api.github.com/users/jay0lee/repos", "events_url": "https://api.github.com/users/jay0lee/events{/privacy}", "received_events_url": "https://api.github.com/users/jay0lee/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-13T21:16:07Z", "updated_at": "2014-11-13T21:16:07Z", "author_association": "CONTRIBUTOR", "body": "The scopes have already been sent in the initial token request. This is only preventing them from being sent again on the \"Exchange code for token\" step. See diagram at:\n\nhttps://developers.google.com/accounts/docs/OAuth2InstalledApp#overview\n\nmy patch simply prevents the scopes from being sent a 2nd time.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/62967465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/62970995", "html_url": "https://github.com/google/oauth2client/issues/72#issuecomment-62970995", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/72", "id": 62970995, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-13T21:39:50Z", "updated_at": "2014-11-13T21:39:50Z", "author_association": "CONTRIBUTOR", "body": "whoops! thanks, i'll take care of this.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/62970995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/62976029", "html_url": "https://github.com/google/oauth2client/issues/72#issuecomment-62976029", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/72", "id": 62976029, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-13T22:11:29Z", "updated_at": "2014-11-13T22:11:29Z", "author_association": "MEMBER", "body": "yep, fixed.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/62976029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/62976254", "html_url": "https://github.com/google/oauth2client/issues/68#issuecomment-62976254", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/68", "id": 62976254, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-13T22:13:06Z", "updated_at": "2014-11-13T22:13:06Z", "author_association": "MEMBER", "body": "done.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/62976254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/62999989", "html_url": "https://github.com/google/oauth2client/pull/70#issuecomment-62999989", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/70", "id": 62999989, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-14T02:03:26Z", "updated_at": "2014-11-14T02:03:26Z", "author_association": "CONTRIBUTOR", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/62999989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/63163981", "html_url": "https://github.com/google/oauth2client/pull/70#issuecomment-63163981", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/70", "id": 63163981, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-15T07:37:21Z", "updated_at": "2014-11-15T07:37:21Z", "author_association": "MEMBER", "body": "thanks!\n\nbefore i merge -- have you signed the CLA?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/63163981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/63170745", "html_url": "https://github.com/google/oauth2client/pull/70#issuecomment-63170745", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/70", "id": 63170745, "user": {"login": "rmsaksida", "id": 5094972, "avatar_url": "https://avatars3.githubusercontent.com/u/5094972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmsaksida", "html_url": "https://github.com/rmsaksida", "followers_url": "https://api.github.com/users/rmsaksida/followers", "following_url": "https://api.github.com/users/rmsaksida/following{/other_user}", "gists_url": "https://api.github.com/users/rmsaksida/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmsaksida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmsaksida/subscriptions", "organizations_url": "https://api.github.com/users/rmsaksida/orgs", "repos_url": "https://api.github.com/users/rmsaksida/repos", "events_url": "https://api.github.com/users/rmsaksida/events{/privacy}", "received_events_url": "https://api.github.com/users/rmsaksida/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-15T12:32:55Z", "updated_at": "2014-11-15T12:32:55Z", "author_association": "CONTRIBUTOR", "body": "Hey - yes, I signed it. :-)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/63170745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/63490071", "html_url": "https://github.com/google/oauth2client/pull/74#issuecomment-63490071", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/74", "id": 63490071, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-18T15:41:15Z", "updated_at": "2014-11-18T15:41:15Z", "author_association": "CONTRIBUTOR", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/63490071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/63533481", "html_url": "https://github.com/google/oauth2client/pull/75#issuecomment-63533481", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/75", "id": 63533481, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-18T19:52:18Z", "updated_at": "2014-11-18T19:52:18Z", "author_association": "MEMBER", "body": "looks good! have you signed the CLA?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/63533481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/63935311", "html_url": "https://github.com/google/oauth2client/pull/70#issuecomment-63935311", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/70", "id": 63935311, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-21T07:51:10Z", "updated_at": "2014-11-21T07:51:10Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro Could you release 1.4.2?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/63935311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/63972806", "html_url": "https://github.com/google/oauth2client/pull/78#issuecomment-63972806", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/78", "id": 63972806, "user": {"login": "dbrgn", "id": 105168, "avatar_url": "https://avatars1.githubusercontent.com/u/105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbrgn", "html_url": "https://github.com/dbrgn", "followers_url": "https://api.github.com/users/dbrgn/followers", "following_url": "https://api.github.com/users/dbrgn/following{/other_user}", "gists_url": "https://api.github.com/users/dbrgn/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbrgn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbrgn/subscriptions", "organizations_url": "https://api.github.com/users/dbrgn/orgs", "repos_url": "https://api.github.com/users/dbrgn/repos", "events_url": "https://api.github.com/users/dbrgn/events{/privacy}", "received_events_url": "https://api.github.com/users/dbrgn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-21T13:57:46Z", "updated_at": "2014-11-21T13:57:46Z", "author_association": "NONE", "body": "Yes please! :)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/63972806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/64217443", "html_url": "https://github.com/google/oauth2client/pull/70#issuecomment-64217443", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/70", "id": 64217443, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-24T16:13:11Z", "updated_at": "2014-11-24T16:13:11Z", "author_association": "MEMBER", "body": "@methane yeah, lemme work on that.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/64217443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/64225405", "html_url": "https://github.com/google/oauth2client/pull/70#issuecomment-64225405", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/70", "id": 64225405, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-24T16:58:36Z", "updated_at": "2014-11-24T16:58:36Z", "author_association": "MEMBER", "body": "done.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/64225405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/64225585", "html_url": "https://github.com/google/oauth2client/issues/76#issuecomment-64225585", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/76", "id": 64225585, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-24T16:59:40Z", "updated_at": "2014-11-24T16:59:40Z", "author_association": "MEMBER", "body": "what version of `six` do you have?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/64225585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/64235276", "html_url": "https://github.com/google/oauth2client/pull/70#issuecomment-64235276", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/70", "id": 64235276, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-24T18:00:42Z", "updated_at": "2014-11-24T18:00:42Z", "author_association": "CONTRIBUTOR", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/64235276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/64297209", "html_url": "https://github.com/google/oauth2client/issues/76#issuecomment-64297209", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/76", "id": 64297209, "user": {"login": "wannabeCitizen", "id": 3197428, "avatar_url": "https://avatars3.githubusercontent.com/u/3197428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wannabeCitizen", "html_url": "https://github.com/wannabeCitizen", "followers_url": "https://api.github.com/users/wannabeCitizen/followers", "following_url": "https://api.github.com/users/wannabeCitizen/following{/other_user}", "gists_url": "https://api.github.com/users/wannabeCitizen/gists{/gist_id}", "starred_url": "https://api.github.com/users/wannabeCitizen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wannabeCitizen/subscriptions", "organizations_url": "https://api.github.com/users/wannabeCitizen/orgs", "repos_url": "https://api.github.com/users/wannabeCitizen/repos", "events_url": "https://api.github.com/users/wannabeCitizen/events{/privacy}", "received_events_url": "https://api.github.com/users/wannabeCitizen/received_events", "type": "User", "site_admin": false}, "created_at": "2014-11-25T01:41:13Z", "updated_at": "2014-11-25T01:41:13Z", "author_association": "NONE", "body": "1.8.0 currently; though, I've migrated back to a different version of oauth\nto fix this issue, but may have changed my six version.\n\nOn Mon, Nov 24, 2014 at 9:59 AM, Craig Citro notifications@github.com\nwrote:\n\n> what version of six do you have?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/issues/76#issuecomment-64225585.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/64297209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65096288", "html_url": "https://github.com/google/oauth2client/pull/79#issuecomment-65096288", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/79", "id": 65096288, "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-01T16:58:25Z", "updated_at": "2014-12-01T16:58:25Z", "author_association": "CONTRIBUTOR", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65096288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65746318", "html_url": "https://github.com/google/oauth2client/pull/80#issuecomment-65746318", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/80", "id": 65746318, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-05T04:30:41Z", "updated_at": "2014-12-05T04:30:41Z", "author_association": "CONTRIBUTOR", "body": "See GoogleCloudPlatform/gcloud-python#335\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65746318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65818726", "html_url": "https://github.com/google/oauth2client/pull/80#issuecomment-65818726", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/80", "id": 65818726, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-05T16:56:36Z", "updated_at": "2014-12-05T16:56:36Z", "author_association": "MEMBER", "body": "going to look at this now -- but i've gotta clone and look locally, since github can't handle the first commit. ;)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65818726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65819340", "html_url": "https://github.com/google/oauth2client/pull/80#issuecomment-65819340", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/80", "id": 65819340, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-05T17:00:29Z", "updated_at": "2014-12-05T17:00:29Z", "author_association": "CONTRIBUTOR", "body": "Oh yes, I should also mention the docs are serving at\nhttp://dhermes.github.io/oauth2client\ncourtesy of\nhttps://github.com/dhermes/oauth2client/tree/gh-pages\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65819340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65822962", "html_url": "https://github.com/google/oauth2client/pull/81#issuecomment-65822962", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/81", "id": 65822962, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-05T17:21:38Z", "updated_at": "2014-12-05T17:21:38Z", "author_association": "CONTRIBUTOR", "body": "I just realized the current page looks kind of nice:\nhttp://google.github.io/oauth2client/\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65822962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65823475", "html_url": "https://github.com/google/oauth2client/pull/81#issuecomment-65823475", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/81", "id": 65823475, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-05T17:24:48Z", "updated_at": "2014-12-05T17:24:48Z", "author_association": "MEMBER", "body": "yeah, the docs aren't so bad. just never updated. ;)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65823475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65825297", "html_url": "https://github.com/google/oauth2client/pull/82#issuecomment-65825297", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/82", "id": 65825297, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-05T17:36:18Z", "updated_at": "2014-12-05T17:36:18Z", "author_association": "MEMBER", "body": "can you update `Makefile`?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65825297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65828465", "html_url": "https://github.com/google/oauth2client/pull/82#issuecomment-65828465", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/82", "id": 65828465, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-05T17:57:48Z", "updated_at": "2014-12-05T17:57:48Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro PTAL\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65828465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65831757", "html_url": "https://github.com/google/oauth2client/pull/80#issuecomment-65831757", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/80", "id": 65831757, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-05T18:22:26Z", "updated_at": "2014-12-05T18:22:26Z", "author_association": "CONTRIBUTOR", "body": "I just rebased on top of #84 and squashed the hack into a single commit and the test code into a separate single commit.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65831757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65835503", "html_url": "https://github.com/google/oauth2client/pull/83#issuecomment-65835503", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/83", "id": 65835503, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-05T18:48:51Z", "updated_at": "2014-12-05T18:48:51Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro This is rebased and ready to go\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65835503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65838782", "html_url": "https://github.com/google/oauth2client/pull/83#issuecomment-65838782", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/83", "id": 65838782, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-05T19:11:28Z", "updated_at": "2014-12-05T19:11:28Z", "author_association": "MEMBER", "body": "this looks good -- i like splitting out the logic for detecting GCE, which we should probably make a public function in `util.py`?\n\na few notes:\n- i don't think it's worth moving a global from one module to another -- if we want a settings object, let's just make one in this module and have a name for it. (on top of that, adding a new file complicates re-import of this code at the moment.)\n- i don't know if the sample code here is going to match external docs verbatim; @anthmgoogle, is there a canonical version of this code somewhere that we should make sure to match?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65838782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65840713", "html_url": "https://github.com/google/oauth2client/pull/83#issuecomment-65840713", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/83", "id": 65840713, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-05T19:24:49Z", "updated_at": "2014-12-05T19:24:49Z", "author_association": "CONTRIBUTOR", "body": "The main idea was just having a namespace so the `global` keyword wasn't used. I think there are plenty of other things that belong in a tweakable settings module, but you're right it's a bit much for a single thing.\n\nI don't need to change the docstring. The reason I did was because\n- It's weird to see `<code>` tags in a docstring made of code.\n- The second example had nothing to do with the class it was in.\n- The future import wasn't necessary since `print(var)` works. The future import is only required if extra features like `print(var, end='')`. are used.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65840713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65841230", "html_url": "https://github.com/google/oauth2client/pull/83#issuecomment-65841230", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/83", "id": 65841230, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-05T19:28:40Z", "updated_at": "2014-12-05T19:28:40Z", "author_association": "MEMBER", "body": "sgtm -- maybe: \n- move the config back to this module for now \n- drop the `<code>` tags\n- drop the `__future__` import? \n\nif/when we find out about the real home for samples, we can tweak those.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65841230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65842932", "html_url": "https://github.com/google/oauth2client/pull/83#issuecomment-65842932", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/83", "id": 65842932, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-05T19:40:19Z", "updated_at": "2014-12-05T19:40:19Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro PTAL\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65842932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65846808", "html_url": "https://github.com/google/oauth2client/pull/83#issuecomment-65846808", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/83", "id": 65846808, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-05T20:07:28Z", "updated_at": "2014-12-05T20:07:28Z", "author_association": "MEMBER", "body": "looks good! will merge once travis gives the OK.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65846808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65848482", "html_url": "https://github.com/google/oauth2client/pull/83#issuecomment-65848482", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/83", "id": 65848482, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-05T20:19:39Z", "updated_at": "2014-12-05T20:19:39Z", "author_association": "MEMBER", "body": "(travis is jsut about done, merging.)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65848482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65848547", "html_url": "https://github.com/google/oauth2client/pull/84#issuecomment-65848547", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/84", "id": 65848547, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-05T20:20:06Z", "updated_at": "2014-12-05T20:20:06Z", "author_association": "MEMBER", "body": "just merged the other one -- can you rebase and push? (just want to look at the diff one more time)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65848547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65848783", "html_url": "https://github.com/google/oauth2client/pull/80#issuecomment-65848783", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/80", "id": 65848783, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-05T20:22:06Z", "updated_at": "2014-12-05T20:22:06Z", "author_association": "CONTRIBUTOR", "body": "After ripping out `require_refresh` in #84 this is now out of sync, but I am going to hold off doing a fixed rebase until #84 is in.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65848783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65848849", "html_url": "https://github.com/google/oauth2client/pull/84#issuecomment-65848849", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/84", "id": 65848849, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-05T20:22:40Z", "updated_at": "2014-12-05T20:22:40Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro Rebased and pushed.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65848849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65878703", "html_url": "https://github.com/google/oauth2client/issues/85#issuecomment-65878703", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/85", "id": 65878703, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-06T01:10:42Z", "updated_at": "2014-12-06T01:25:38Z", "author_association": "CONTRIBUTOR", "body": "I am currently working on a fix.\n\nTwo main issues:\n- Nose [skips](http://stackoverflow.com/a/1579787/1068170) executable files. Holy moly!\n- Many of the py3 tests (that didn't previously run) fail. (`py33openssl14` and `py34openssl14` both have 11 errors and 1 failure, most of which seem to be related to unicode vs. bytestring issues)\n\nThree other issues:\n- Some of the tests are REALLY slow. Using the `nose.tools.timed(limit)` decorator and setting the limit to 0.2 seconds revealed 5 \"failures\"\n  1. `test_env_name`\n  2. `test_get_application_default_environment_not_set_up`\n  3. `test_get_application_default_from_environment_variable_authorized_user`\n  4. `test_get_application_default_from_environment_variable_malformed_file`\n  5. `test_get_application_default_from_environment_variable_service_account`\n- #83 and #84 introduced some issues (my bad)\n- One of the tests failed due to using an old `parse_qs` before the Py3K swap\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65878703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65878876", "html_url": "https://github.com/google/oauth2client/issues/85#issuecomment-65878876", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/85", "id": 65878876, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-06T01:14:18Z", "updated_at": "2014-12-06T01:14:18Z", "author_association": "CONTRIBUTOR", "body": "Turning them off `Ran 67 tests in 2.037s` compared to\n\n```\nRan 72 tests in 102.284s\n\nFAILED (failures=5)\n```\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65878876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65879756", "html_url": "https://github.com/google/oauth2client/pull/86#issuecomment-65879756", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/86", "id": 65879756, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-06T01:31:36Z", "updated_at": "2014-12-06T01:31:36Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro This will fail when Travis runs because of the failures in `py33openssl14` and `py34openssl14`. I can disable them so that they pass here and then we re-enable and fix in another PR. \n\nWDYT?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65879756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65880657", "html_url": "https://github.com/google/oauth2client/issues/85#issuecomment-65880657", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/85", "id": 65880657, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-06T01:52:55Z", "updated_at": "2014-12-06T01:52:55Z", "author_association": "CONTRIBUTOR", "body": "Things that need to still be done:\n- Two `tox` envs need to be re-enabled on Travis:\n  `\n  TOX_ENV=py33openssl14       \n  TOX_ENV=py34openssl14\n  `\n- Re-enabling the disabled slow tests that lack mocks.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65880657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65909582", "html_url": "https://github.com/google/oauth2client/pull/87#issuecomment-65909582", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/87", "id": 65909582, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-06T19:02:25Z", "updated_at": "2014-12-06T19:05:12Z", "author_association": "CONTRIBUTOR", "body": "I should mention that just because these tests pass does not mean the Py3 support is in good shape.\n\nOn the contrary, it is **really** bad.\n\nFor example:\n- Almost all of the strings are still `'val'` without declaring bytestring (Py2) or unicode (Py3). Hence they are a different type from one to the other.\n- The convenience method of casting to a string `str(e)` or `'%s' % val` is used without an idea of what the value actually is. In Py3, `str(b'a') == \"b'a'\"`. It's very clear just from the changes I had to make that the most parts of the code assume Python2 strings.\n\nAlso, it seems to me that one of the reasons the tests seem slow is file I/O. There is a nontrivial amount of reading from the `DATA_DIR` which could be replaced with a module containing the actual content. I somewhat understand wanting tests to actually make sure that file I/O is working, but it is so low-level it isn't really necessary to test (though `open(filename)` with no mode actually happens in this library :cry:).\n\nI don't think the people who gave Python3 support read this:\nhttps://docs.python.org/3/howto/pyporting.html\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/65909582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66167462", "html_url": "https://github.com/google/oauth2client/pull/87#issuecomment-66167462", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/87", "id": 66167462, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-08T19:04:48Z", "updated_at": "2014-12-08T19:04:48Z", "author_association": "MEMBER", "body": "yeah, i'm sure there's a lot to be done for better py3 support. the current support does seem to be much better than what we had before (i.e. none at all `;)`).\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66167462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66167797", "html_url": "https://github.com/google/oauth2client/issues/85#issuecomment-66167797", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/85", "id": 66167797, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-08T19:06:59Z", "updated_at": "2014-12-08T19:06:59Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro Can you re-open this (I don't have owner privileges)? The 5 disabled tests still need to be turned back on. I accidentally used the magic phrase \"fixes\" in the \"Partially fixes...\" description.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66167797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66168028", "html_url": "https://github.com/google/oauth2client/pull/87#issuecomment-66168028", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/87", "id": 66168028, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-08T19:08:30Z", "updated_at": "2014-12-08T19:08:30Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro I am legitimately concerned with the quality of the code, not just \"ew this is gross\" but actual places where no one is clear on the behavior. Just my two cents.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66168028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66213213", "html_url": "https://github.com/google/oauth2client/pull/83#issuecomment-66213213", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/83", "id": 66213213, "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-09T00:13:39Z", "updated_at": "2014-12-09T00:13:39Z", "author_association": "NONE", "body": "To follow up on the question above, I believe that our canonical\nimplementation of GCE detection in Python is indeed implemented in the\ncurrent OAuth2Client:\n\nhttps://github.com/google/oauth2client/blob/master/oauth2client/client.py\n\nIn the method _detect_gce_environment.\n\nOn Fri, Dec 5, 2014 at 12:19 PM, Craig Citro notifications@github.com\nwrote:\n\n> Merged #83 https://github.com/google/oauth2client/pull/83.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/pull/83#event-203503175.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66213213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66867114", "html_url": "https://github.com/google/oauth2client/issues/85#issuecomment-66867114", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/85", "id": 66867114, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-13T06:30:30Z", "updated_at": "2014-12-13T06:30:30Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro It turns out #89 was not a sufficient fix. The tests slow down to almost 2 minutes each test case instead of 6 seconds once the network is turned back on.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66867114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66889315", "html_url": "https://github.com/google/oauth2client/pull/90#issuecomment-66889315", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/90", "id": 66889315, "user": {"login": "coveralls", "id": 2354108, "avatar_url": "https://avatars1.githubusercontent.com/u/2354108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coveralls", "html_url": "https://github.com/coveralls", "followers_url": "https://api.github.com/users/coveralls/followers", "following_url": "https://api.github.com/users/coveralls/following{/other_user}", "gists_url": "https://api.github.com/users/coveralls/gists{/gist_id}", "starred_url": "https://api.github.com/users/coveralls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coveralls/subscriptions", "organizations_url": "https://api.github.com/users/coveralls/orgs", "repos_url": "https://api.github.com/users/coveralls/repos", "events_url": "https://api.github.com/users/coveralls/events{/privacy}", "received_events_url": "https://api.github.com/users/coveralls/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-13T20:08:04Z", "updated_at": "2014-12-13T20:08:04Z", "author_association": "NONE", "body": "[![Coverage Status](https://coveralls.io/builds/1607402/badge)](https://coveralls.io/builds/1607402)\n\nCoverage remained the same when pulling **830886a1f1b739ff4d176297d6845887e7fe45e4 on craigcitro:master** into **a823225514f13d7f508fb802d6a0ba8a5fc83c92 on google:master**.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66889315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66920711", "html_url": "https://github.com/google/oauth2client/pull/90#issuecomment-66920711", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/90", "id": 66920711, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-14T17:28:44Z", "updated_at": "2014-12-14T17:28:44Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro using `str` doesn't work because\n\n``` python\n$ python2.7\n>>> str is bytes\nTrue\n```\n\nand\n\n``` python\n$ python3.4\n>>> str is bytes\nFalse\n```\n\nAlso there is a big problem using `str` on `bytes` objects in Python 3:\n\n``` python\n$ python3.4\n>>> str(b'a')\n\"b'a'\"\n```\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66920711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66922911", "html_url": "https://github.com/google/oauth2client/issues/88#issuecomment-66922911", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/88", "id": 66922911, "user": {"login": "fcaza", "id": 3419779, "avatar_url": "https://avatars3.githubusercontent.com/u/3419779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fcaza", "html_url": "https://github.com/fcaza", "followers_url": "https://api.github.com/users/fcaza/followers", "following_url": "https://api.github.com/users/fcaza/following{/other_user}", "gists_url": "https://api.github.com/users/fcaza/gists{/gist_id}", "starred_url": "https://api.github.com/users/fcaza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fcaza/subscriptions", "organizations_url": "https://api.github.com/users/fcaza/orgs", "repos_url": "https://api.github.com/users/fcaza/repos", "events_url": "https://api.github.com/users/fcaza/events{/privacy}", "received_events_url": "https://api.github.com/users/fcaza/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-14T18:28:24Z", "updated_at": "2014-12-14T18:28:24Z", "author_association": "NONE", "body": "Hi is it possible to get a feedback regarding this issue?\nThanks in advance,\nfcaza\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66922911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66923161", "html_url": "https://github.com/google/oauth2client/pull/90#issuecomment-66923161", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/90", "id": 66923161, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-14T18:30:59Z", "updated_at": "2014-12-14T18:30:59Z", "author_association": "MEMBER", "body": "yes, `str` is different in py2 vs. py3. but the purpose of this function isn't to normalize types -- it's to get early warning about encoding failures.\n\nthat said, i had no idea about the `str(b'a')` issue in py3. `;)` in this case, explicit wins; new version coming in a bit. (probably this afternoon.)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66923161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66923474", "html_url": "https://github.com/google/oauth2client/issues/88#issuecomment-66923474", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/88", "id": 66923474, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-14T18:34:11Z", "updated_at": "2014-12-14T18:34:11Z", "author_association": "MEMBER", "body": "hi @fcaza -- i just haven't had a chance to take a look. i'll try soon.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66923474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66935814", "html_url": "https://github.com/google/oauth2client/pull/90#issuecomment-66935814", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/90", "id": 66935814, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-14T23:39:22Z", "updated_at": "2014-12-14T23:39:22Z", "author_association": "MEMBER", "body": "@dhermes PTAL\n\nso, to say it aloud: the core issue here is that if we get a key or value in `headers` that isn't a `bytes` object, we want to turn it into one. now the code does exactly that (and adds a bunch of tests).\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66935814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66936143", "html_url": "https://github.com/google/oauth2client/pull/90#issuecomment-66936143", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/90", "id": 66936143, "user": {"login": "coveralls", "id": 2354108, "avatar_url": "https://avatars1.githubusercontent.com/u/2354108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coveralls", "html_url": "https://github.com/coveralls", "followers_url": "https://api.github.com/users/coveralls/followers", "following_url": "https://api.github.com/users/coveralls/following{/other_user}", "gists_url": "https://api.github.com/users/coveralls/gists{/gist_id}", "starred_url": "https://api.github.com/users/coveralls/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coveralls/subscriptions", "organizations_url": "https://api.github.com/users/coveralls/orgs", "repos_url": "https://api.github.com/users/coveralls/repos", "events_url": "https://api.github.com/users/coveralls/events{/privacy}", "received_events_url": "https://api.github.com/users/coveralls/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-14T23:48:27Z", "updated_at": "2014-12-14T23:48:27Z", "author_association": "NONE", "body": "[![Coverage Status](https://coveralls.io/builds/1610546/badge)](https://coveralls.io/builds/1610546)\n\nCoverage increased (+0.04%) when pulling **75f59b269583e512227594a50d0b4bc927b5d436 on craigcitro:master** into **a823225514f13d7f508fb802d6a0ba8a5fc83c92 on google:master**.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66936143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66936253", "html_url": "https://github.com/google/oauth2client/issues/85#issuecomment-66936253", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/85", "id": 66936253, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-14T23:51:48Z", "updated_at": "2014-12-14T23:51:48Z", "author_association": "MEMBER", "body": "@dhermes this is odd -- i don't see anything running over ~6 seconds. or do you mean on travis?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66936253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66940143", "html_url": "https://github.com/google/oauth2client/pull/90#issuecomment-66940143", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/90", "id": 66940143, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-15T01:34:47Z", "updated_at": "2014-12-15T01:34:47Z", "author_association": "CONTRIBUTOR", "body": "The core issue is this library's ad hoc support for strings in Python3. It's unclear if a `bytes` object is even needed, but making the tests pass for #85 somewhat forced our hand.\n\nThe right thing to happen here would be to make sure callers give something standard, but it seems we have to live with the existing behavior. For example, @silvolu incidentally had an issue where passing an `int` no longer worked.\n\nUsing `str` is also just very hacky since we know it has explicitly different meanings between versions. You're better off using `six.text_type`.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/66940143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67013056", "html_url": "https://github.com/google/oauth2client/issues/88#issuecomment-67013056", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/88", "id": 67013056, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-15T15:44:09Z", "updated_at": "2014-12-15T15:44:09Z", "author_association": "MEMBER", "body": "so apparently this is \"working as intended\" -- certain scopes simply aren't supported for the oauth2 for devices flow. here's a relevant [mailing list thread](https://groups.google.com/forum/#!topic/oauth2-dev/Rc4CJiykhk4/discussion) with someone from security saying the same thing.\n\nunfortunately, i don't know where to find a list of allowable scopes for oauth2 for devices.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67013056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67020283", "html_url": "https://github.com/google/oauth2client/issues/88#issuecomment-67020283", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/88", "id": 67020283, "user": {"login": "fcaza", "id": 3419779, "avatar_url": "https://avatars3.githubusercontent.com/u/3419779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fcaza", "html_url": "https://github.com/fcaza", "followers_url": "https://api.github.com/users/fcaza/followers", "following_url": "https://api.github.com/users/fcaza/following{/other_user}", "gists_url": "https://api.github.com/users/fcaza/gists{/gist_id}", "starred_url": "https://api.github.com/users/fcaza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fcaza/subscriptions", "organizations_url": "https://api.github.com/users/fcaza/orgs", "repos_url": "https://api.github.com/users/fcaza/repos", "events_url": "https://api.github.com/users/fcaza/events{/privacy}", "received_events_url": "https://api.github.com/users/fcaza/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-15T16:25:03Z", "updated_at": "2014-12-15T16:25:03Z", "author_association": "NONE", "body": "Hi Craig,\n\nThanks a lot for your feedbacks.\nThat's too bad gmail scopes are not handled for devices.\n\nHow could I use oauth2 and gmail, for non screen devices? (actually I'm using an humanoid robot with TTS to give the information. There is no screen)\n\nIf you have ideas, feel free to let me know.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67020283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67040204", "html_url": "https://github.com/google/oauth2client/issues/88#issuecomment-67040204", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/88", "id": 67040204, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-15T18:25:42Z", "updated_at": "2014-12-15T18:25:42Z", "author_association": "MEMBER", "body": "do you need to authenticate against many different users, or just one?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67040204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67040936", "html_url": "https://github.com/google/oauth2client/issues/85#issuecomment-67040936", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/85", "id": 67040936, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-15T18:30:01Z", "updated_at": "2014-12-15T18:30:01Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro Nope, on my local machine. I just checked out from HEAD and have\n\n```\n$ tox -e py27openssl13\nGLOB sdist-make: /home/dhermes/google_contracting/oauth2client/setup.py\npy27openssl13 inst-nodeps: /home/dhermes/google_contracting/oauth2client/.tox/dist/oauth2client-1.4.4.zip\npy27openssl13 runtests: PYTHONHASHSEED='3090873714'\npy27openssl13 runtests: commands[0] | nosetests --ignore-files=test_appengine\\.py\n............................................................................................................... ..........................................\n----------------------------------------------------------------------\nRan 153 tests in 106.715s\n\nOK\n___________________________________________________________________ summary ____________________________________________________________________\n  py27openssl13: commands succeeded\n  congratulations :)\n```\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67040936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67042178", "html_url": "https://github.com/google/oauth2client/issues/85#issuecomment-67042178", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/85", "id": 67042178, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-15T18:38:11Z", "updated_at": "2014-12-15T18:38:11Z", "author_association": "MEMBER", "body": "what if you run a second time? (i.e. is that picking up the time spent building the tox virtualenv?)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67042178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67042431", "html_url": "https://github.com/google/oauth2client/issues/85#issuecomment-67042431", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/85", "id": 67042431, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-15T18:39:47Z", "updated_at": "2014-12-15T18:39:47Z", "author_association": "CONTRIBUTOR", "body": "No, the time is spent on the disabled tests re-enabled in #87. The strange thing is that they run in 6 seconds if the network is turned off on my machine. Heisen-\"slow test\".\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67042431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67043141", "html_url": "https://github.com/google/oauth2client/issues/85#issuecomment-67043141", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/85", "id": 67043141, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-15T18:44:12Z", "updated_at": "2014-12-15T18:44:12Z", "author_association": "MEMBER", "body": "yeah, there's some funny business going on there -- they're quick on my machine with network on _or_ off.\n\nhmm, i wonder -- any chance they're looking at a cached file? (have you read the tests? i haven't yet.)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67043141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67050679", "html_url": "https://github.com/google/oauth2client/issues/85#issuecomment-67050679", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/85", "id": 67050679, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-15T19:31:38Z", "updated_at": "2014-12-15T19:31:38Z", "author_association": "CONTRIBUTOR", "body": "Just ran a fresh check-out and ran three times, approximately 105 seconds for all three.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67050679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67081159", "html_url": "https://github.com/google/oauth2client/issues/76#issuecomment-67081159", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/76", "id": 67081159, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-15T22:47:17Z", "updated_at": "2014-12-15T22:47:17Z", "author_association": "MEMBER", "body": "this should be fixed with the addition of a minimum six version in 3badd79; feel free to reopen if you see this again. \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67081159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67081402", "html_url": "https://github.com/google/oauth2client/issues/85#issuecomment-67081402", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/85", "id": 67081402, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-15T22:48:58Z", "updated_at": "2014-12-15T22:48:58Z", "author_association": "MEMBER", "body": "so there were 5 tests you re-enabled in #89; is the time uniform among those 5?\n\n(relatedly, is there a classier way to get timings than switch `nosetests` to `nosetests -v` in `tox.ini` and just watch?)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67081402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67099122", "html_url": "https://github.com/google/oauth2client/issues/85#issuecomment-67099122", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/85", "id": 67099122, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-16T01:36:35Z", "updated_at": "2014-12-16T01:36:35Z", "author_association": "MEMBER", "body": "ooh, do you (1) have gcloud installed and (2) have some credentials set up with it?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67099122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67099616", "html_url": "https://github.com/google/oauth2client/issues/85#issuecomment-67099616", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/85", "id": 67099616, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-16T01:42:12Z", "updated_at": "2014-12-16T01:42:12Z", "author_association": "CONTRIBUTOR", "body": "Yes to both.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67099616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67099754", "html_url": "https://github.com/google/oauth2client/issues/85#issuecomment-67099754", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/85", "id": 67099754, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-16T01:43:41Z", "updated_at": "2014-12-16T01:43:41Z", "author_association": "MEMBER", "body": "what if you `mv ~/.config/gcloud ~/.config/whatzit` and try again?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67099754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67101165", "html_url": "https://github.com/google/oauth2client/issues/85#issuecomment-67101165", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/85", "id": 67101165, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-16T02:01:02Z", "updated_at": "2014-12-16T02:01:35Z", "author_association": "CONTRIBUTOR", "body": "Yeah that was the issue, but that doesn't mean the test or the code isn't flaky, it just tells us where the flakiness is.\n\nAfter moving `~/.config/gcloud` back I `revoke`d one of my two tokens and went through the flow again. I'm pretty sure my tokens were in an out-of-date format.\n\nRunning it with 1 old and 1 new token I got:\n\n```\n$ tox -e py27openssl13\nGLOB sdist-make: /home/dhermes/google_contracting/oauth2client/setup.py\npy27openssl13 inst-nodeps: /home/dhermes/google_contracting/oauth2client/.tox/dist/oauth2client-1.4.4.zip\npy27openssl13 runtests: PYTHONHASHSEED='1739892065'\npy27openssl13 runtests: commands[0] | nosetests --ignore-files=test_appengine\\.py\n............................................................................................................F............................................\n======================================================================\nFAIL: test_get_application_default_environment_not_set_up (tests.test_oauth2client.GoogleCredentialsTests)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/dhermes/google_contracting/oauth2client/tests/test_oauth2client.py\", line 428, in test_get_application_default_environment_not_set_up\n    self.fail('An exception was expected!')\nAssertionError: An exception was expected!\n\n----------------------------------------------------------------------\nRan 153 tests in 10.990s\n\nFAILED (failures=1)\n```\n\nEDIT: PS @craigcitro nice detective work\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67101165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67101592", "html_url": "https://github.com/google/oauth2client/issues/85#issuecomment-67101592", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/85", "id": 67101592, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-16T02:06:54Z", "updated_at": "2014-12-16T02:06:54Z", "author_association": "MEMBER", "body": "yes -- i was just trying to figure out what was different that you were seeing the slow runtimes. success. `;)`\n\nmoving to a new issue: #92\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67101592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67102749", "html_url": "https://github.com/google/oauth2client/issues/92#issuecomment-67102749", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/92", "id": 67102749, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-16T02:21:12Z", "updated_at": "2014-12-16T02:21:12Z", "author_association": "CONTRIBUTOR", "body": "Monkey patching [`_get_well_known_file`](https://github.com/google/oauth2client/blob/f8eec98a506277083f66588fc9ffc37e22484013/oauth2client/client.py#L1230) for those tests seems to be the easiest fix.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67102749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67103000", "html_url": "https://github.com/google/oauth2client/issues/92#issuecomment-67103000", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/92", "id": 67103000, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-16T02:24:10Z", "updated_at": "2014-12-16T02:24:10Z", "author_association": "MEMBER", "body": "sure -- but we want to make sure `_get_well_known_file` still has a test. (maybe it does elsewhere, i just haven't looked.)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67103000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67104017", "html_url": "https://github.com/google/oauth2client/issues/92#issuecomment-67104017", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/92", "id": 67104017, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-16T02:37:56Z", "updated_at": "2014-12-16T02:37:56Z", "author_association": "CONTRIBUTOR", "body": "I just meant in that test case, not in the whole suite.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67104017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67107069", "html_url": "https://github.com/google/oauth2client/issues/92#issuecomment-67107069", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/92", "id": 67107069, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-16T03:22:56Z", "updated_at": "2014-12-16T03:22:56Z", "author_association": "MEMBER", "body": "totes! I'm just curious if there's another test to cover it ;)\n\nOn Mon, Dec 15, 2014, 6:38 PM Danny Hermes notifications@github.com wrote:\n\n> I just meant in that test case, not in the whole suite.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/issues/92#issuecomment-67104017.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67107069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67119330", "html_url": "https://github.com/google/oauth2client/issues/92#issuecomment-67119330", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/92", "id": 67119330, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-16T06:46:39Z", "updated_at": "2014-12-16T06:46:39Z", "author_association": "MEMBER", "body": "just sat down and skimmed the code; i'm really curious about what's in your `~/.config/gcloud` directory. in particular, all the tests validate that the files fetched match some fixed dummy values -- if you are loading values from disk, then either (1) you've got some weird values in your `gcloud` directory, or (2) we're spending time on something before loading the right files. if it's the latter, i want to know where that time is going.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67119330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67126030", "html_url": "https://github.com/google/oauth2client/issues/92#issuecomment-67126030", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/92", "id": 67126030, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-16T08:19:15Z", "updated_at": "2014-12-16T08:19:15Z", "author_association": "MEMBER", "body": "turns out this was a red herring -- opening a new issue.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67126030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67127147", "html_url": "https://github.com/google/oauth2client/issues/93#issuecomment-67127147", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/93", "id": 67127147, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-16T08:32:09Z", "updated_at": "2014-12-16T08:32:09Z", "author_association": "MEMBER", "body": "this was originally misdiagnosed in #92 \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67127147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67133757", "html_url": "https://github.com/google/oauth2client/issues/93#issuecomment-67133757", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/93", "id": 67133757, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-16T09:39:23Z", "updated_at": "2014-12-16T09:39:23Z", "author_association": "CONTRIBUTOR", "body": "Now running `gcloud auth` and other commands I realize it has always stalled for a really long time on my machines. It seems this could be the cause there as well.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67133757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67227158", "html_url": "https://github.com/google/oauth2client/issues/88#issuecomment-67227158", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/88", "id": 67227158, "user": {"login": "fcaza", "id": 3419779, "avatar_url": "https://avatars3.githubusercontent.com/u/3419779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fcaza", "html_url": "https://github.com/fcaza", "followers_url": "https://api.github.com/users/fcaza/followers", "following_url": "https://api.github.com/users/fcaza/following{/other_user}", "gists_url": "https://api.github.com/users/fcaza/gists{/gist_id}", "starred_url": "https://api.github.com/users/fcaza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fcaza/subscriptions", "organizations_url": "https://api.github.com/users/fcaza/orgs", "repos_url": "https://api.github.com/users/fcaza/repos", "events_url": "https://api.github.com/users/fcaza/events{/privacy}", "received_events_url": "https://api.github.com/users/fcaza/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-16T20:35:12Z", "updated_at": "2014-12-16T20:35:12Z", "author_association": "NONE", "body": "In the first time, I just need to authenticate 1 user, but the user might change according to the robot owner.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67227158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67263079", "html_url": "https://github.com/google/oauth2client/issues/88#issuecomment-67263079", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/88", "id": 67263079, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-17T01:17:40Z", "updated_at": "2014-12-17T01:17:40Z", "author_association": "MEMBER", "body": "two options that might work:\n1. use a service account -- involves just transferring a file over to the robot\n2. do the auth dance on a computer, and just transfer the credential to the robot as json?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67263079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67285414", "html_url": "https://github.com/google/oauth2client/issues/93#issuecomment-67285414", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/93", "id": 67285414, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-17T07:16:12Z", "updated_at": "2014-12-17T07:16:12Z", "author_association": "MEMBER", "body": "we definitely need to fix this, but there's no clear answer; deferring to @anthmgoogle to decide how to do this consistently for usable auth libraries.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67285414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67428070", "html_url": "https://github.com/google/oauth2client/pull/94#issuecomment-67428070", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/94", "id": 67428070, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-18T01:27:45Z", "updated_at": "2014-12-18T01:27:45Z", "author_association": "CONTRIBUTOR", "body": "NVM\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67428070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67432769", "html_url": "https://github.com/google/oauth2client/pull/95#issuecomment-67432769", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/95", "id": 67432769, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-18T02:29:32Z", "updated_at": "2014-12-18T02:29:32Z", "author_association": "CONTRIBUTOR", "body": "LGTM (names only autocomplete for project members or people already on the issue)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67432769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67433017", "html_url": "https://github.com/google/oauth2client/pull/95#issuecomment-67433017", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/95", "id": 67433017, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-18T02:32:59Z", "updated_at": "2014-12-18T02:32:59Z", "author_association": "MEMBER", "body": "ah, it's the other googlers it's completing from. makes sense.\n\nmerging once travis gives the green.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67433017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67433147", "html_url": "https://github.com/google/oauth2client/pull/95#issuecomment-67433147", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/95", "id": 67433147, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-18T02:34:39Z", "updated_at": "2014-12-18T02:34:39Z", "author_association": "CONTRIBUTOR", "body": "You should check out GoogleCloudPlatform/gcloud-python-wheels to see how to speed up the build. You could probably get a similar wheels project set up in an hour or so.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67433147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67433194", "html_url": "https://github.com/google/oauth2client/pull/95#issuecomment-67433194", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/95", "id": 67433194, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-18T02:35:18Z", "updated_at": "2014-12-18T02:35:18Z", "author_association": "MEMBER", "body": "i'm hoping i can do it with travis+caching: http://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67433194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67433293", "html_url": "https://github.com/google/oauth2client/pull/95#issuecomment-67433293", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/95", "id": 67433293, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-18T02:36:40Z", "updated_at": "2014-12-18T02:36:40Z", "author_association": "CONTRIBUTOR", "body": "Whoa! Thanks for the pointer.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67433293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67433335", "html_url": "https://github.com/google/oauth2client/pull/95#issuecomment-67433335", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/95", "id": 67433335, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-18T02:37:10Z", "updated_at": "2014-12-18T02:37:10Z", "author_association": "MEMBER", "body": "this works -- we're waiting on the identical-and-rebased one. merging.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67433335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67438652", "html_url": "https://github.com/google/oauth2client/pull/97#issuecomment-67438652", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/97", "id": 67438652, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-18T04:03:55Z", "updated_at": "2014-12-18T04:03:55Z", "author_association": "MEMBER", "body": "email is off because I didn't want the extra email. ;)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67438652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67689230", "html_url": "https://github.com/google/oauth2client/issues/102#issuecomment-67689230", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/102", "id": 67689230, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-19T19:59:51Z", "updated_at": "2014-12-19T19:59:51Z", "author_association": "CONTRIBUTOR", "body": "And ported backwards. And supported on pypy.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67689230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67711371", "html_url": "https://github.com/google/oauth2client/pull/101#issuecomment-67711371", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/101", "id": 67711371, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-19T23:16:15Z", "updated_at": "2014-12-19T23:16:15Z", "author_association": "MEMBER", "body": "k, cleaned up and merging.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67711371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67720275", "html_url": "https://github.com/google/oauth2client/pull/101#issuecomment-67720275", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/101", "id": 67720275, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-20T01:43:19Z", "updated_at": "2014-12-20T01:43:19Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro Are you going to cut a release from this?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67720275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67720306", "html_url": "https://github.com/google/oauth2client/pull/101#issuecomment-67720306", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/101", "id": 67720306, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-20T01:43:58Z", "updated_at": "2014-12-20T01:43:58Z", "author_association": "MEMBER", "body": "lemme get the other one in and i will.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67720306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67743054", "html_url": "https://github.com/google/oauth2client/pull/103#issuecomment-67743054", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/103", "id": 67743054, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-20T17:32:15Z", "updated_at": "2014-12-20T17:32:15Z", "author_association": "CONTRIBUTOR", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67743054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67744682", "html_url": "https://github.com/google/oauth2client/pull/101#issuecomment-67744682", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/101", "id": 67744682, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-20T18:18:35Z", "updated_at": "2014-12-20T18:18:35Z", "author_association": "MEMBER", "body": "1.4.5 is out.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67744682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67754630", "html_url": "https://github.com/google/oauth2client/issues/93#issuecomment-67754630", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/93", "id": 67754630, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-20T23:58:04Z", "updated_at": "2014-12-20T23:58:04Z", "author_association": "CONTRIBUTOR", "body": "FYI this didn't actually fix the issue, I think the slowdown is something other than timeout (DNS related).\n\n#100 will be fine I guess?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67754630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67756642", "html_url": "https://github.com/google/oauth2client/issues/93#issuecomment-67756642", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/93", "id": 67756642, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-21T01:24:41Z", "updated_at": "2014-12-21T01:24:41Z", "author_association": "MEMBER", "body": ":cry: #100 won't help you when you still need to fall through to 3LO, i.e. all the time.\n\njust for kicks, can you try installing requests and doing the same thing? does it have the smarts to avoid this? (i'm guessing \"no\", but want to confirm.)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67756642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67756673", "html_url": "https://github.com/google/oauth2client/issues/93#issuecomment-67756673", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/93", "id": 67756673, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-21T01:26:18Z", "updated_at": "2014-12-21T01:26:18Z", "author_association": "MEMBER", "body": "or `urllib` for that matter.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67756673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67758464", "html_url": "https://github.com/google/oauth2client/issues/93#issuecomment-67758464", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/93", "id": 67758464, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-21T03:04:26Z", "updated_at": "2014-12-21T03:04:26Z", "author_association": "CONTRIBUTOR", "body": "``` python\nIn [3]: %paste\nstart = time.time()\ntry:\n    requests.get('http://github.com/', timeout=0.001)\nexcept:\n    pass\nprint time.time() - start\n## -- End pasted text --\n0.0234730243683\n\nIn [4]: %paste\nstart = time.time()\ntry:\n    requests.get('http://metadata.google.internal/', timeout=0.001)\nexcept:\n    pass\nprint time.time() - start\n## -- End pasted text --\n20.0183758736\n```\n\nI'm trying to read about ways to avoid this but not having much luck.\n\nSeemed promising, but meh: http://askubuntu.com/questions/272358/extrememly-slow-dns-lookup\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67758464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67762116", "html_url": "https://github.com/google/oauth2client/issues/93#issuecomment-67762116", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/93", "id": 67762116, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-21T06:56:27Z", "updated_at": "2014-12-21T06:56:27Z", "author_association": "MEMBER", "body": "yeah, there's no way around doing some refactoring and just doing this check at the _veeeery_ last minute. that's also what the AWS SDK does, it seems.\n\nin the short term, here's a [tweak](https://github.com/craigcitro/oauth2client/commit/b1a9989f95ac2d0ae633a684989ee843b38f5944) to fix it for now ... thoughts?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67762116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67762174", "html_url": "https://github.com/google/oauth2client/issues/93#issuecomment-67762174", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/93", "id": 67762174, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-21T07:00:06Z", "updated_at": "2014-12-21T07:00:06Z", "author_association": "CONTRIBUTOR", "body": "It seems very hacky. You should keep trying to send this up the chain.\n\nThere should be either\n- a dependable and fast way to check if running in GCE\n- no emphasis on code which can guess which environment it's in\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67762174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67801810", "html_url": "https://github.com/google/oauth2client/issues/93#issuecomment-67801810", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/93", "id": 67801810, "user": {"login": "aaronwinter", "id": 7871622, "avatar_url": "https://avatars2.githubusercontent.com/u/7871622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronwinter", "html_url": "https://github.com/aaronwinter", "followers_url": "https://api.github.com/users/aaronwinter/followers", "following_url": "https://api.github.com/users/aaronwinter/following{/other_user}", "gists_url": "https://api.github.com/users/aaronwinter/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronwinter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronwinter/subscriptions", "organizations_url": "https://api.github.com/users/aaronwinter/orgs", "repos_url": "https://api.github.com/users/aaronwinter/repos", "events_url": "https://api.github.com/users/aaronwinter/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronwinter/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-22T04:44:17Z", "updated_at": "2014-12-22T04:44:17Z", "author_association": "CONTRIBUTOR", "body": "Just a suggestion but if it is a network dependent issue then maybe using custom DNS servers (8.8.8.8 for example) would solve the problem. The \"technique\" looks well documented and not too difficult to implement (http://stackoverflow.com/questions/2236498/tell-urllib2-to-use-custom-dns).\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67801810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67809329", "html_url": "https://github.com/google/oauth2client/issues/93#issuecomment-67809329", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/93", "id": 67809329, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-22T07:32:23Z", "updated_at": "2014-12-22T07:32:23Z", "author_association": "CONTRIBUTOR", "body": "@aaronwinter Thanks for the suggest. AFAICT using a custom nameserver depends on some system internals like `dig` or `host` which may not be on every machine with a valid Python install.\n\nMaybe the source of [`dnspython`](https://github.com/rthalley/dnspython) will reveal something.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67809329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67907612", "html_url": "https://github.com/google/oauth2client/issues/93#issuecomment-67907612", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/93", "id": 67907612, "user": {"login": "aaronwinter", "id": 7871622, "avatar_url": "https://avatars2.githubusercontent.com/u/7871622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronwinter", "html_url": "https://github.com/aaronwinter", "followers_url": "https://api.github.com/users/aaronwinter/followers", "following_url": "https://api.github.com/users/aaronwinter/following{/other_user}", "gists_url": "https://api.github.com/users/aaronwinter/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronwinter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronwinter/subscriptions", "organizations_url": "https://api.github.com/users/aaronwinter/orgs", "repos_url": "https://api.github.com/users/aaronwinter/repos", "events_url": "https://api.github.com/users/aaronwinter/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronwinter/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-23T00:10:26Z", "updated_at": "2014-12-23T00:11:11Z", "author_association": "CONTRIBUTOR", "body": "I am not too sure if you are comfortable with using a different API but we can swap out the resolver trivially with [twisted](https://github.com/twisted) for example.  Let me know if it is ok and I will implement a solution using it asap.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/67907612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68278650", "html_url": "https://github.com/google/oauth2client/issues/105#issuecomment-68278650", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/105", "id": 68278650, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-29T17:37:12Z", "updated_at": "2014-12-29T17:37:12Z", "author_association": "MEMBER", "body": "this one's by design: we're only supporting 3.3+ for python 3. (it's in the classifiers, but we should add a check and exception in `setup.py`.)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68278650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68280334", "html_url": "https://github.com/google/oauth2client/pull/107#issuecomment-68280334", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/107", "id": 68280334, "user": {"login": "nicholaschen", "id": 5428350, "avatar_url": "https://avatars2.githubusercontent.com/u/5428350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicholaschen", "html_url": "https://github.com/nicholaschen", "followers_url": "https://api.github.com/users/nicholaschen/followers", "following_url": "https://api.github.com/users/nicholaschen/following{/other_user}", "gists_url": "https://api.github.com/users/nicholaschen/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicholaschen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicholaschen/subscriptions", "organizations_url": "https://api.github.com/users/nicholaschen/orgs", "repos_url": "https://api.github.com/users/nicholaschen/repos", "events_url": "https://api.github.com/users/nicholaschen/events{/privacy}", "received_events_url": "https://api.github.com/users/nicholaschen/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-29T17:56:00Z", "updated_at": "2014-12-29T17:56:00Z", "author_association": "NONE", "body": "Hi Craig,\n\nJust wondering what the justification for this decision was? Not a criticism, just honestly curious. Understandably there should be no harm in _updating_ a minor version for Python i.e. not going from 2 to 3, but I could also imagine consumers reluctant to do so.\n\nBest,\nNicholas\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68280334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68288038", "html_url": "https://github.com/google/oauth2client/pull/107#issuecomment-68288038", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/107", "id": 68288038, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-29T19:08:15Z", "updated_at": "2014-12-29T19:08:15Z", "author_association": "MEMBER", "body": "hi @nicholaschen, \n\nthe goal was to try and have minimal changes and pick up as many py3 versions as possible. in particular, python 3.3 added back unicode literals, which make a lot of things easier. the [py3 porting guide](https://docs.python.org/2/howto/pyporting.html) also recommends using unicode literals (which seems to hint at using a py3 version which supports them).\n\nplus, most importantly, the folks doing the first chunk of the porting wanted to handle 3.3 and newer -- which is much better than the \"no py3 support\" we had previously. `;)`\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68288038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68289048", "html_url": "https://github.com/google/oauth2client/pull/107#issuecomment-68289048", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/107", "id": 68289048, "user": {"login": "nicholaschen", "id": 5428350, "avatar_url": "https://avatars2.githubusercontent.com/u/5428350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicholaschen", "html_url": "https://github.com/nicholaschen", "followers_url": "https://api.github.com/users/nicholaschen/followers", "following_url": "https://api.github.com/users/nicholaschen/following{/other_user}", "gists_url": "https://api.github.com/users/nicholaschen/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicholaschen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicholaschen/subscriptions", "organizations_url": "https://api.github.com/users/nicholaschen/orgs", "repos_url": "https://api.github.com/users/nicholaschen/repos", "events_url": "https://api.github.com/users/nicholaschen/events{/privacy}", "received_events_url": "https://api.github.com/users/nicholaschen/received_events", "type": "User", "site_admin": false}, "created_at": "2014-12-29T19:11:35Z", "updated_at": "2014-12-29T19:11:35Z", "author_association": "NONE", "body": ":+1:  sounds good, was just curious since I have a feeling the enterprise crowd might be a bit sad about this. Also agreed on the '3.3+ py3 support is better than no py3 support' part\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68289048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68498847", "html_url": "https://github.com/google/oauth2client/pull/108#issuecomment-68498847", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/108", "id": 68498847, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-01T21:27:53Z", "updated_at": "2015-01-01T21:27:53Z", "author_association": "MEMBER", "body": "thanks! have you signed the cla?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68498847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68500600", "html_url": "https://github.com/google/oauth2client/pull/108#issuecomment-68500600", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/108", "id": 68500600, "user": {"login": "cyberplant", "id": 1236332, "avatar_url": "https://avatars3.githubusercontent.com/u/1236332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyberplant", "html_url": "https://github.com/cyberplant", "followers_url": "https://api.github.com/users/cyberplant/followers", "following_url": "https://api.github.com/users/cyberplant/following{/other_user}", "gists_url": "https://api.github.com/users/cyberplant/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyberplant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyberplant/subscriptions", "organizations_url": "https://api.github.com/users/cyberplant/orgs", "repos_url": "https://api.github.com/users/cyberplant/repos", "events_url": "https://api.github.com/users/cyberplant/events{/privacy}", "received_events_url": "https://api.github.com/users/cyberplant/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-01T22:29:43Z", "updated_at": "2015-01-01T22:29:43Z", "author_association": "CONTRIBUTOR", "body": "Oops, I didn't, but I did now. :smiley: \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68500600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68866730", "html_url": "https://github.com/google/oauth2client/issues/88#issuecomment-68866730", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/88", "id": 68866730, "user": {"login": "fcaza", "id": 3419779, "avatar_url": "https://avatars3.githubusercontent.com/u/3419779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fcaza", "html_url": "https://github.com/fcaza", "followers_url": "https://api.github.com/users/fcaza/followers", "following_url": "https://api.github.com/users/fcaza/following{/other_user}", "gists_url": "https://api.github.com/users/fcaza/gists{/gist_id}", "starred_url": "https://api.github.com/users/fcaza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fcaza/subscriptions", "organizations_url": "https://api.github.com/users/fcaza/orgs", "repos_url": "https://api.github.com/users/fcaza/repos", "events_url": "https://api.github.com/users/fcaza/events{/privacy}", "received_events_url": "https://api.github.com/users/fcaza/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-06T13:48:24Z", "updated_at": "2015-01-06T13:48:24Z", "author_association": "NONE", "body": "I used strategy 2 and it works like a charm. Thks for you tip.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68866730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68991521", "html_url": "https://github.com/google/oauth2client/pull/104#issuecomment-68991521", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/104", "id": 68991521, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T08:24:34Z", "updated_at": "2015-01-07T08:24:34Z", "author_association": "MEMBER", "body": "can you paste a traceback for the `httplib2` exception? (in particular, i confirmed that the cases i thought were likely would work with `httplib2` when i made this change, but if there are more we should add tests and find the right fix.)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68991521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68992310", "html_url": "https://github.com/google/oauth2client/pull/107#issuecomment-68992310", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/107", "id": 68992310, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T08:33:45Z", "updated_at": "2015-01-07T08:33:45Z", "author_association": "MEMBER", "body": "PTAL @dhermes if you have a sec?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68992310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68992476", "html_url": "https://github.com/google/oauth2client/issues/106#issuecomment-68992476", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/106", "id": 68992476, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T08:35:57Z", "updated_at": "2015-01-07T08:35:57Z", "author_association": "MEMBER", "body": "@msaniscalchi yep, this probably just hasn't been well-tested (or tried?) in python3 yet. \n\ni agree with the point about reading as `'rb'` -- at that point, it seems like the pyopenssl code would [do the right thing](https://github.com/pyca/pyopenssl/blob/27398343217703c5261e67d6c19dda89ba559f1b/OpenSSL/crypto.py#L2377-L2378), yeah?\n\nany chance you'd have time to send a PR?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68992476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68992789", "html_url": "https://github.com/google/oauth2client/issues/93#issuecomment-68992789", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/93", "id": 68992789, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T08:40:00Z", "updated_at": "2015-01-07T08:40:00Z", "author_association": "MEMBER", "body": "@aaronwinter in this case, we know what IP the hostname resolves to, so i think we _don't_ want to go the twisted/dnspython route. \n\ni think the best solution on the table is a three-pronged attack:\n- refactor the code a bit so that we can avoid the GCE check in more cases,\n- possibly switch to using the IP with a **short** timeout, and \n- add an env var that says \"i'm definitely not on gce, don't bother checking\".\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/68992789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69055700", "html_url": "https://github.com/google/oauth2client/pull/107#issuecomment-69055700", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/107", "id": 69055700, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T17:16:20Z", "updated_at": "2015-01-07T17:16:20Z", "author_association": "CONTRIBUTOR", "body": "@nicholaschen @craigcitro \n\nWe have an [explicit section](https://github.com/GoogleCloudPlatform/gcloud-python/blob/87273a15d9be2b56c7d51a3bea0b5884c2313af0/README.rst#supported-python-versions) explaining why we only support 3.3+.\n\nIn reality, enterprise didn't ever (still hasn't) really touch Py3. By forcing 3.3+, it's actually encouraging the community to move forward. See our reasoning for more. (And Craig it may be worth adding a similar section here.)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69055700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69055996", "html_url": "https://github.com/google/oauth2client/pull/107#issuecomment-69055996", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/107", "id": 69055996, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T17:18:14Z", "updated_at": "2015-01-07T17:18:14Z", "author_association": "CONTRIBUTOR", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69055996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69064590", "html_url": "https://github.com/google/oauth2client/pull/107#issuecomment-69064590", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/107", "id": 69064590, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-07T18:12:12Z", "updated_at": "2015-01-07T18:12:12Z", "author_association": "MEMBER", "body": "OK, added some notes, submitting.\n\nthanks again @nicholaschen for asking -- i wouldn't have thought to add a note. and thanks @dhermes for giving me boilerplate to steal. `;)`\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69064590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69230960", "html_url": "https://github.com/google/oauth2client/issues/93#issuecomment-69230960", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/93", "id": 69230960, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T19:07:40Z", "updated_at": "2015-01-08T19:07:40Z", "author_association": "MEMBER", "body": "The first step (switch to the IP for the metadata service) is bf9d46e. \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69230960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69246107", "html_url": "https://github.com/google/oauth2client/issues/93#issuecomment-69246107", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/93", "id": 69246107, "user": {"login": "aaronwinter", "id": 7871622, "avatar_url": "https://avatars2.githubusercontent.com/u/7871622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronwinter", "html_url": "https://github.com/aaronwinter", "followers_url": "https://api.github.com/users/aaronwinter/followers", "following_url": "https://api.github.com/users/aaronwinter/following{/other_user}", "gists_url": "https://api.github.com/users/aaronwinter/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronwinter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronwinter/subscriptions", "organizations_url": "https://api.github.com/users/aaronwinter/orgs", "repos_url": "https://api.github.com/users/aaronwinter/repos", "events_url": "https://api.github.com/users/aaronwinter/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronwinter/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-08T20:45:29Z", "updated_at": "2015-01-08T20:45:29Z", "author_association": "CONTRIBUTOR", "body": "Ok, thanks for the directions! Do you want the env var to be set to ~\"no need to check\" once a negative check has been done or something that is by default to \"not check gce\" and that the user will need to modify to enable gce checking?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69246107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69300037", "html_url": "https://github.com/google/oauth2client/pull/104#issuecomment-69300037", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/104", "id": 69300037, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-09T06:54:35Z", "updated_at": "2015-01-09T06:54:35Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro I'm suffered same error.\n\n``` pytb\n  File \"google.py\", line 93, in get_email\n    (resp, content) = http.request(\"https://www.googleapis.com/oauth2/v2/userinfo\")\n  File \"/venv/lib/python3.4/site-packages/oauth2client/util.py\", line 135, in positional_wrapper\n    return wrapped(*args, **kwargs)\n  File \"/venv/lib/python3.4/site-packages/oauth2client/client.py\", line 547, in new_request\n    redirections, connection_type)\n  File \"/venv/lib/python3.4/site-packages/httplib2/__init__.py\", line 1139, in request\n    headers = self._normalize_headers(headers)\n  File \"/venv/lib/python3.4/site-packages/httplib2/__init__.py\", line 1107, in _normalize_headers\n    return _normalize_headers(headers)\n  File \"/venv/lib/python3.4/site-packages/httplib2/__init__.py\", line 195, in _normalize_headers\n    return dict([ (key.lower(), NORMALIZE_SPACE.sub(value, ' ').strip())  for (key, value) in headers.items()])\n  File \"/venv/lib/python3.4/site-packages/httplib2/__init__.py\", line 195, in <listcomp>\n    return dict([ (key.lower(), NORMALIZE_SPACE.sub(value, ' ').strip())  for (key, value) in headers.items()])\nTypeError: sequence item 0: expected str instance, bytes found\n```\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69300037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69399994", "html_url": "https://github.com/google/oauth2client/issues/106#issuecomment-69399994", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/106", "id": 69399994, "user": {"login": "johnaft", "id": 9754180, "avatar_url": "https://avatars3.githubusercontent.com/u/9754180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnaft", "html_url": "https://github.com/johnaft", "followers_url": "https://api.github.com/users/johnaft/followers", "following_url": "https://api.github.com/users/johnaft/following{/other_user}", "gists_url": "https://api.github.com/users/johnaft/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnaft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnaft/subscriptions", "organizations_url": "https://api.github.com/users/johnaft/orgs", "repos_url": "https://api.github.com/users/johnaft/repos", "events_url": "https://api.github.com/users/johnaft/events{/privacy}", "received_events_url": "https://api.github.com/users/johnaft/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-09T21:14:48Z", "updated_at": "2015-01-09T21:14:48Z", "author_association": "NONE", "body": "+1 ran into same issue with SignedJwtAssertionCredentials\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69399994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69545923", "html_url": "https://github.com/google/oauth2client/pull/111#issuecomment-69545923", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/111", "id": 69545923, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-12T09:36:46Z", "updated_at": "2015-01-12T09:36:46Z", "author_association": "MEMBER", "body": "@anthmgoogle can you take a look?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69545923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69612506", "html_url": "https://github.com/google/oauth2client/pull/111#issuecomment-69612506", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/111", "id": 69612506, "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-12T17:51:10Z", "updated_at": "2015-01-12T17:51:10Z", "author_association": "NONE", "body": "Looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69612506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69638540", "html_url": "https://github.com/google/oauth2client/pull/111#issuecomment-69638540", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/111", "id": 69638540, "user": {"login": "aaronwinter", "id": 7871622, "avatar_url": "https://avatars2.githubusercontent.com/u/7871622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronwinter", "html_url": "https://github.com/aaronwinter", "followers_url": "https://api.github.com/users/aaronwinter/followers", "following_url": "https://api.github.com/users/aaronwinter/following{/other_user}", "gists_url": "https://api.github.com/users/aaronwinter/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronwinter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronwinter/subscriptions", "organizations_url": "https://api.github.com/users/aaronwinter/orgs", "repos_url": "https://api.github.com/users/aaronwinter/repos", "events_url": "https://api.github.com/users/aaronwinter/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronwinter/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-12T20:21:09Z", "updated_at": "2015-01-12T20:21:09Z", "author_association": "CONTRIBUTOR", "body": "Great!\n@craigcitro I have signed the contributor license agreement by the way.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69638540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69639175", "html_url": "https://github.com/google/oauth2client/pull/111#issuecomment-69639175", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/111", "id": 69639175, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-12T20:25:04Z", "updated_at": "2015-01-12T20:25:04Z", "author_association": "MEMBER", "body": "sweet! @aaronwinter you answered my question before i even asked it. `;)`\n\ni'm thinking we should maybe switch from a global to an env var? (or have the global default to the env var?)\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69639175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69641102", "html_url": "https://github.com/google/oauth2client/issues/93#issuecomment-69641102", "issue_url": "https://api.github.com/repos/google/oauth2client/issues/93", "id": 69641102, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "created_at": "2015-01-12T20:36:48Z", "updated_at": "2015-01-12T20:36:48Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro Care to close this out?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/issues/comments/69641102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "commit_comments": [{"url": "https://api.github.com/repos/google/oauth2client/comments/8112796", "html_url": "https://github.com/google/oauth2client/commit/72a6f30e00c482c6328047ff4f0a92e30b0477cc#commitcomment-8112796", "id": 8112796, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "position": 2, "line": 1, "path": "LICENSE", "commit_id": "72a6f30e00c482c6328047ff4f0a92e30b0477cc", "created_at": "2014-10-10T09:46:51Z", "updated_at": "2014-10-10T09:46:51Z", "author_association": "CONTRIBUTOR", "body": "2010-2014 ?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/8112796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/8116523", "html_url": "https://github.com/google/oauth2client/commit/72a6f30e00c482c6328047ff4f0a92e30b0477cc#commitcomment-8116523", "id": 8116523, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "position": 2, "line": 1, "path": "LICENSE", "commit_id": "72a6f30e00c482c6328047ff4f0a92e30b0477cc", "created_at": "2014-10-10T14:49:14Z", "updated_at": "2014-10-10T14:49:14Z", "author_association": "MEMBER", "body": "hah! bad sed on my part, looks like ... thanks!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/8116523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/8564588", "html_url": "https://github.com/google/oauth2client/commit/94bbf43b428f40c4ae696f853fc2cd1873ae4305#commitcomment-8564588", "id": 8564588, "user": {"login": "gcarothers", "id": 118299, "avatar_url": "https://avatars3.githubusercontent.com/u/118299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gcarothers", "html_url": "https://github.com/gcarothers", "followers_url": "https://api.github.com/users/gcarothers/followers", "following_url": "https://api.github.com/users/gcarothers/following{/other_user}", "gists_url": "https://api.github.com/users/gcarothers/gists{/gist_id}", "starred_url": "https://api.github.com/users/gcarothers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gcarothers/subscriptions", "organizations_url": "https://api.github.com/users/gcarothers/orgs", "repos_url": "https://api.github.com/users/gcarothers/repos", "events_url": "https://api.github.com/users/gcarothers/events{/privacy}", "received_events_url": "https://api.github.com/users/gcarothers/received_events", "type": "User", "site_admin": false}, "position": 23, "line": 53, "path": "oauth2client/tools.py", "commit_id": "94bbf43b428f40c4ae696f853fc2cd1873ae4305", "created_at": "2014-11-13T21:49:00Z", "updated_at": "2014-11-13T21:49:00Z", "author_association": "NONE", "body": "This refrencing is `_CreateArgumentParser` before it's defined, and is horribly broken. \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/8564588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/8564605", "html_url": "https://github.com/google/oauth2client/commit/94bbf43b428f40c4ae696f853fc2cd1873ae4305#commitcomment-8564605", "id": 8564605, "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "position": 23, "line": 53, "path": "oauth2client/tools.py", "commit_id": "94bbf43b428f40c4ae696f853fc2cd1873ae4305", "created_at": "2014-11-13T21:50:07Z", "updated_at": "2014-11-13T21:50:07Z", "author_association": "MEMBER", "body": "yes. already fixing.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/8564605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/8701319", "html_url": "https://github.com/google/oauth2client/commit/4de95cd5dfa6209db8c0d9e1d09f4152f912967a#commitcomment-8701319", "id": 8701319, "user": {"login": "sde-melo", "id": 527446, "avatar_url": "https://avatars1.githubusercontent.com/u/527446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sde-melo", "html_url": "https://github.com/sde-melo", "followers_url": "https://api.github.com/users/sde-melo/followers", "following_url": "https://api.github.com/users/sde-melo/following{/other_user}", "gists_url": "https://api.github.com/users/sde-melo/gists{/gist_id}", "starred_url": "https://api.github.com/users/sde-melo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sde-melo/subscriptions", "organizations_url": "https://api.github.com/users/sde-melo/orgs", "repos_url": "https://api.github.com/users/sde-melo/repos", "events_url": "https://api.github.com/users/sde-melo/events{/privacy}", "received_events_url": "https://api.github.com/users/sde-melo/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "4de95cd5dfa6209db8c0d9e1d09f4152f912967a", "created_at": "2014-11-24T17:45:16Z", "updated_at": "2014-11-24T17:45:16Z", "author_association": "CONTRIBUTOR", "body": "Thanks Craig!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/8701319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/9200383", "html_url": "https://github.com/google/oauth2client/commit/75f59b269583e512227594a50d0b4bc927b5d436#commitcomment-9200383", "id": 9200383, "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "position": 7, "line": 414, "path": "oauth2client/client.py", "commit_id": "75f59b269583e512227594a50d0b4bc927b5d436", "created_at": "2015-01-08T11:40:57Z", "updated_at": "2015-01-08T11:40:57Z", "author_association": "CONTRIBUTOR", "body": "@craigcitro httplib2 treats headers as native string.  It's unicode on Python 3.\nSee https://github.com/jcgregorio/httplib2/blob/master/python3/httplib2/__init__.py#L193-L195\n\n``` python\n    if six.PY3:\n        clean_k = clean_k.decode('ascii')\n        clean_v = clean_v.decode('ascii')\n    clean[clean_k] = clean_v\n```\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/9200383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/9207403", "html_url": "https://github.com/google/oauth2client/commit/8ee592b5c6ca004faa03f4e4a6d517c8d5a563ed#commitcomment-9207403", "id": 9207403, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "8ee592b5c6ca004faa03f4e4a6d517c8d5a563ed", "created_at": "2015-01-08T19:14:59Z", "updated_at": "2015-01-08T19:14:59Z", "author_association": "CONTRIBUTOR", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/9207403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/11439144", "html_url": "https://github.com/google/oauth2client/commit/c815c2babd6ed811ba426e014f03978d48f59d9c#commitcomment-11439144", "id": 11439144, "user": {"login": "gregorynicholas", "id": 407650, "avatar_url": "https://avatars1.githubusercontent.com/u/407650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregorynicholas", "html_url": "https://github.com/gregorynicholas", "followers_url": "https://api.github.com/users/gregorynicholas/followers", "following_url": "https://api.github.com/users/gregorynicholas/following{/other_user}", "gists_url": "https://api.github.com/users/gregorynicholas/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregorynicholas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregorynicholas/subscriptions", "organizations_url": "https://api.github.com/users/gregorynicholas/orgs", "repos_url": "https://api.github.com/users/gregorynicholas/repos", "events_url": "https://api.github.com/users/gregorynicholas/events{/privacy}", "received_events_url": "https://api.github.com/users/gregorynicholas/received_events", "type": "User", "site_admin": false}, "position": 4, "line": 47, "path": "tests/test_devshell.py", "commit_id": "c815c2babd6ed811ba426e014f03978d48f59d9c", "created_at": "2015-05-30T10:44:49Z", "updated_at": "2015-05-30T10:44:49Z", "author_association": "NONE", "body": "what does this do?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/11439144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/11988125", "html_url": "https://github.com/google/oauth2client/commit/0078035a0e04cb26581cb7e2f01ba0641f962278#commitcomment-11988125", "id": 11988125, "user": {"login": "bjmc", "id": 328557, "avatar_url": "https://avatars3.githubusercontent.com/u/328557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjmc", "html_url": "https://github.com/bjmc", "followers_url": "https://api.github.com/users/bjmc/followers", "following_url": "https://api.github.com/users/bjmc/following{/other_user}", "gists_url": "https://api.github.com/users/bjmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjmc/subscriptions", "organizations_url": "https://api.github.com/users/bjmc/orgs", "repos_url": "https://api.github.com/users/bjmc/repos", "events_url": "https://api.github.com/users/bjmc/events{/privacy}", "received_events_url": "https://api.github.com/users/bjmc/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "0078035a0e04cb26581cb7e2f01ba0641f962278", "created_at": "2015-07-03T04:11:19Z", "updated_at": "2015-07-03T04:11:19Z", "author_association": "CONTRIBUTOR", "body": "Nice catch. Sorry, I guess I didn't notice this because nose wasn't even running test_oauth2client when I ran tox.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/11988125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/12116100", "html_url": "https://github.com/google/oauth2client/commit/60fd97608ec3f7109026f7ad51c2deeb1fc22d47#commitcomment-12116100", "id": 12116100, "user": {"login": "jorr-at-google", "id": 5599032, "avatar_url": "https://avatars3.githubusercontent.com/u/5599032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorr-at-google", "html_url": "https://github.com/jorr-at-google", "followers_url": "https://api.github.com/users/jorr-at-google/followers", "following_url": "https://api.github.com/users/jorr-at-google/following{/other_user}", "gists_url": "https://api.github.com/users/jorr-at-google/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorr-at-google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorr-at-google/subscriptions", "organizations_url": "https://api.github.com/users/jorr-at-google/orgs", "repos_url": "https://api.github.com/users/jorr-at-google/repos", "events_url": "https://api.github.com/users/jorr-at-google/events{/privacy}", "received_events_url": "https://api.github.com/users/jorr-at-google/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 1852, "path": "oauth2client/client.py", "commit_id": "60fd97608ec3f7109026f7ad51c2deeb1fc22d47", "created_at": "2015-07-10T23:08:40Z", "updated_at": "2015-07-10T23:08:40Z", "author_association": "NONE", "body": "Nit: Should be document in docstring, eg:\n\nstate: string, Opaque state string which is passed through the OAuth2 flow and returned to the client as a query parameter in the callback.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/12116100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/12116106", "html_url": "https://github.com/google/oauth2client/commit/60fd97608ec3f7109026f7ad51c2deeb1fc22d47#commitcomment-12116106", "id": 12116106, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 1852, "path": "oauth2client/client.py", "commit_id": "60fd97608ec3f7109026f7ad51c2deeb1fc22d47", "created_at": "2015-07-10T23:09:22Z", "updated_at": "2015-07-10T23:09:22Z", "author_association": "CONTRIBUTOR", "body": "Sorry I missed it in the review.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/12116106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/12118096", "html_url": "https://github.com/google/oauth2client/commit/60fd97608ec3f7109026f7ad51c2deeb1fc22d47#commitcomment-12118096", "id": 12118096, "user": {"login": "bigblind", "id": 737493, "avatar_url": "https://avatars1.githubusercontent.com/u/737493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bigblind", "html_url": "https://github.com/bigblind", "followers_url": "https://api.github.com/users/bigblind/followers", "following_url": "https://api.github.com/users/bigblind/following{/other_user}", "gists_url": "https://api.github.com/users/bigblind/gists{/gist_id}", "starred_url": "https://api.github.com/users/bigblind/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bigblind/subscriptions", "organizations_url": "https://api.github.com/users/bigblind/orgs", "repos_url": "https://api.github.com/users/bigblind/repos", "events_url": "https://api.github.com/users/bigblind/events{/privacy}", "received_events_url": "https://api.github.com/users/bigblind/received_events", "type": "User", "site_admin": false}, "position": 5, "line": 1852, "path": "oauth2client/client.py", "commit_id": "60fd97608ec3f7109026f7ad51c2deeb1fc22d47", "created_at": "2015-07-11T07:55:58Z", "updated_at": "2015-07-11T07:55:58Z", "author_association": "CONTRIBUTOR", "body": "Done.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/12118096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/13121003", "html_url": "https://github.com/google/oauth2client/commit/f3f8b4f7b1828ddf75706a0366ff92f8c3f87060#commitcomment-13121003", "id": 13121003, "user": {"login": "tseaver", "id": 242750, "avatar_url": "https://avatars2.githubusercontent.com/u/242750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tseaver", "html_url": "https://github.com/tseaver", "followers_url": "https://api.github.com/users/tseaver/followers", "following_url": "https://api.github.com/users/tseaver/following{/other_user}", "gists_url": "https://api.github.com/users/tseaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/tseaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tseaver/subscriptions", "organizations_url": "https://api.github.com/users/tseaver/orgs", "repos_url": "https://api.github.com/users/tseaver/repos", "events_url": "https://api.github.com/users/tseaver/events{/privacy}", "received_events_url": "https://api.github.com/users/tseaver/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "f3f8b4f7b1828ddf75706a0366ff92f8c3f87060", "created_at": "2015-09-08T20:06:34Z", "updated_at": "2015-09-08T20:06:34Z", "author_association": "NONE", "body": "This change [breaks `gcloud.python`](https://travis-ci.org/GoogleCloudPlatform/gcloud-python/builds/79351464) now that `oauth2client` 1.5.0 is being used.\n\nWhat guarantees that `webapp2` as a top-level import will be available?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/13121003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/13143116", "html_url": "https://github.com/google/oauth2client/commit/f3f8b4f7b1828ddf75706a0366ff92f8c3f87060#commitcomment-13143116", "id": 13143116, "user": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "f3f8b4f7b1828ddf75706a0366ff92f8c3f87060", "created_at": "2015-09-09T18:28:37Z", "updated_at": "2015-09-09T18:28:37Z", "author_association": "CONTRIBUTOR", "body": "I'm... unclear on the premise of the question. Why should there be a guarantee that this module will have imported another particular module and exposed it as a certain attribute?\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/13143116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/13143217", "html_url": "https://github.com/google/oauth2client/commit/f3f8b4f7b1828ddf75706a0366ff92f8c3f87060#commitcomment-13143217", "id": 13143217, "user": {"login": "tseaver", "id": 242750, "avatar_url": "https://avatars2.githubusercontent.com/u/242750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tseaver", "html_url": "https://github.com/tseaver", "followers_url": "https://api.github.com/users/tseaver/followers", "following_url": "https://api.github.com/users/tseaver/following{/other_user}", "gists_url": "https://api.github.com/users/tseaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/tseaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tseaver/subscriptions", "organizations_url": "https://api.github.com/users/tseaver/orgs", "repos_url": "https://api.github.com/users/tseaver/repos", "events_url": "https://api.github.com/users/tseaver/events{/privacy}", "received_events_url": "https://api.github.com/users/tseaver/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "f3f8b4f7b1828ddf75706a0366ff92f8c3f87060", "created_at": "2015-09-09T18:34:24Z", "updated_at": "2015-09-09T18:34:24Z", "author_association": "NONE", "body": "`webapp2` is not listed as an `install_requires` dependency, which means it may not be installed (except, presumably on GAE).  See #302 for discussion.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/13143217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/16215954", "html_url": "https://github.com/google/oauth2client/commit/23b998ae7390f32962c12bb2e75ab4ff01e9642c#commitcomment-16215954", "id": 16215954, "user": {"login": "broady", "id": 24982, "avatar_url": "https://avatars0.githubusercontent.com/u/24982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/broady", "html_url": "https://github.com/broady", "followers_url": "https://api.github.com/users/broady/followers", "following_url": "https://api.github.com/users/broady/following{/other_user}", "gists_url": "https://api.github.com/users/broady/gists{/gist_id}", "starred_url": "https://api.github.com/users/broady/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/broady/subscriptions", "organizations_url": "https://api.github.com/users/broady/orgs", "repos_url": "https://api.github.com/users/broady/repos", "events_url": "https://api.github.com/users/broady/events{/privacy}", "received_events_url": "https://api.github.com/users/broady/received_events", "type": "User", "site_admin": false}, "position": 19, "line": 44, "path": "oauth2client/contrib/gce.py", "commit_id": "23b998ae7390f32962c12bb2e75ab4ff01e9642c", "created_at": "2016-02-19T22:49:46Z", "updated_at": "2016-02-19T22:49:46Z", "author_association": "MEMBER", "body": "overridden\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/16215954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/16216123", "html_url": "https://github.com/google/oauth2client/commit/23b998ae7390f32962c12bb2e75ab4ff01e9642c#commitcomment-16216123", "id": 16216123, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "position": 19, "line": 44, "path": "oauth2client/contrib/gce.py", "commit_id": "23b998ae7390f32962c12bb2e75ab4ff01e9642c", "created_at": "2016-02-19T23:01:12Z", "updated_at": "2016-02-19T23:01:12Z", "author_association": "CONTRIBUTOR", "body": "Thanks. Will fold the change into the original commit.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/16216123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/16260659", "html_url": "https://github.com/google/oauth2client/commit/98df500a29157ccaa3f6bdf4517d57a5be8e85f1#commitcomment-16260659", "id": 16260659, "user": {"login": "nad2000", "id": 177266, "avatar_url": "https://avatars1.githubusercontent.com/u/177266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nad2000", "html_url": "https://github.com/nad2000", "followers_url": "https://api.github.com/users/nad2000/followers", "following_url": "https://api.github.com/users/nad2000/following{/other_user}", "gists_url": "https://api.github.com/users/nad2000/gists{/gist_id}", "starred_url": "https://api.github.com/users/nad2000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nad2000/subscriptions", "organizations_url": "https://api.github.com/users/nad2000/orgs", "repos_url": "https://api.github.com/users/nad2000/repos", "events_url": "https://api.github.com/users/nad2000/events{/privacy}", "received_events_url": "https://api.github.com/users/nad2000/received_events", "type": "User", "site_admin": false}, "position": 4, "line": 116, "path": "oauth2client/tools.py", "commit_id": "98df500a29157ccaa3f6bdf4517d57a5be8e85f1", "created_at": "2016-02-23T07:08:57Z", "updated_at": "2016-02-23T07:09:32Z", "author_association": "NONE", "body": "Documentation and examples, eg, https://cloud.google.com/bigquery/authentication, still refer to **run** not **run_flow** :(\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/16260659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/16260685", "html_url": "https://github.com/google/oauth2client/commit/98df500a29157ccaa3f6bdf4517d57a5be8e85f1#commitcomment-16260685", "id": 16260685, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "position": 4, "line": 116, "path": "oauth2client/tools.py", "commit_id": "98df500a29157ccaa3f6bdf4517d57a5be8e85f1", "created_at": "2016-02-23T07:11:58Z", "updated_at": "2016-02-23T07:11:58Z", "author_association": "CONTRIBUTOR", "body": "Thanks for the pointer to the old docs. Filed #435. We can discuss there.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/16260685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/16261003", "html_url": "https://github.com/google/oauth2client/commit/34c1ff543dd16edf58dcf5b336076cf27de3721a#commitcomment-16261003", "id": 16261003, "user": {"login": "nad2000", "id": 177266, "avatar_url": "https://avatars1.githubusercontent.com/u/177266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nad2000", "html_url": "https://github.com/nad2000", "followers_url": "https://api.github.com/users/nad2000/followers", "following_url": "https://api.github.com/users/nad2000/following{/other_user}", "gists_url": "https://api.github.com/users/nad2000/gists{/gist_id}", "starred_url": "https://api.github.com/users/nad2000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nad2000/subscriptions", "organizations_url": "https://api.github.com/users/nad2000/orgs", "repos_url": "https://api.github.com/users/nad2000/repos", "events_url": "https://api.github.com/users/nad2000/events{/privacy}", "received_events_url": "https://api.github.com/users/nad2000/received_events", "type": "User", "site_admin": false}, "position": 139, "line": 149, "path": "oauth2client/old_run.py", "commit_id": "34c1ff543dd16edf58dcf5b336076cf27de3721a", "created_at": "2016-02-23T07:42:13Z", "updated_at": "2016-02-23T07:42:13Z", "author_association": "NONE", "body": "shouldn't it be **raw_input**??? **input** evaluates the entered string, btw\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/16261003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/16279577", "html_url": "https://github.com/google/oauth2client/commit/34c1ff543dd16edf58dcf5b336076cf27de3721a#commitcomment-16279577", "id": 16279577, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "position": 139, "line": 149, "path": "oauth2client/old_run.py", "commit_id": "34c1ff543dd16edf58dcf5b336076cf27de3721a", "created_at": "2016-02-23T20:47:31Z", "updated_at": "2016-02-23T20:47:31Z", "author_association": "CONTRIBUTOR", "body": "Filed #436 for you.\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/16279577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/comments/19056862", "html_url": "https://github.com/google/oauth2client/commit/d0a60203468037364401182219cbdffcecfb6cb8#commitcomment-19056862", "id": 19056862, "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "position": null, "line": null, "path": null, "commit_id": "d0a60203468037364401182219cbdffcecfb6cb8", "created_at": "2016-09-16T16:46:25Z", "updated_at": "2016-09-16T16:46:25Z", "author_association": "CONTRIBUTOR", "body": "Yippee for dogma!\n", "reactions": {"url": "https://api.github.com/repos/google/oauth2client/comments/19056862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}], "review_comments": [{"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7785678", "pull_request_review_id": null, "id": 7785678, "diff_hunk": "@@ -244,16 +244,86 @@ def from_string(key, password='notasecret'):\n   PyCryptoVerifier = None\n   PyCryptoSigner = None\n \n+# Use pure Python RSA module if installed.\n+# Dependencies:\n+# For signing only: easy_install rsa\n+# For X509 verifications: easy_install rsa pyasn1_modules\n+try:\n+  import rsa\n+\n+  def BitStringToByteString(bs):\n+    def BitsToInt(bits):\n+      return sum(v * (2 ** (7 - j)) for j, v in enumerate(bits))\n+    return str(bytearray([BitsToInt(bs[i:i + 8]) for i in range(0, len(bs), 8)]))\n+\n+  # Equivalent class to OpenSSLVerifier above\n+  class RsaVerifier(object):\n+    def __init__(self, pubkey):\n+      self._pubkey = pubkey\n+\n+    def verify(self, message, signature):\n+      try:\n+        return rsa.pkcs1.verify(message, signature, self._pubkey)\n+      except rsa.pkcs1.VerificationError:\n+        return False\n+\n+    @staticmethod\n+    def from_string(key_pem, is_x509_cert):\n+      if is_x509_cert:\n+        try:\n+          from pyasn1.codec.der import decoder\n+          from pyasn1_modules.rfc2459 import Certificate\n+\n+          der = rsa.pem.load_pem(key_pem, 'CERTIFICATE')\n+          asn1_cert, _ = decoder.decode(der, asn1Spec=Certificate())\n+\n+          pubkey = rsa.PublicKey.load_pkcs1(BitStringToByteString(\n+              asn1_cert['tbsCertificate']['subjectPublicKeyInfo']['subjectPublicKey']), 'DER')\n+        except ImportError:\n+          raise NotImplementedError(\n+              'Please install pyasn1 and pyasn1_module to parse x509.')", "path": "crypt.py", "position": null, "original_position": 41, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "ac0f2ee0bcc8a5e0337c6ee8562fe4271a94d7d9", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "two questions/nits:\n- `pyasn1_module` -> `pyasn1_modules`\n- did you want to say `rsa and pyasn1_modules` to match the `easy_install` line above?\n", "created_at": "2013-11-20T09:35:09Z", "updated_at": "2013-11-26T19:18:19Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7785678", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7785678"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7785678"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7785678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7785714", "pull_request_review_id": null, "id": 7785714, "diff_hunk": "@@ -244,16 +244,86 @@ def from_string(key, password='notasecret'):\n   PyCryptoVerifier = None\n   PyCryptoSigner = None\n \n+# Use pure Python RSA module if installed.\n+# Dependencies:\n+# For signing only: easy_install rsa\n+# For X509 verifications: easy_install rsa pyasn1_modules\n+try:\n+  import rsa\n+\n+  def BitStringToByteString(bs):\n+    def BitsToInt(bits):\n+      return sum(v * (2 ** (7 - j)) for j, v in enumerate(bits))\n+    return str(bytearray([BitsToInt(bs[i:i + 8]) for i in range(0, len(bs), 8)]))\n+\n+  # Equivalent class to OpenSSLVerifier above\n+  class RsaVerifier(object):\n+    def __init__(self, pubkey):\n+      self._pubkey = pubkey\n+\n+    def verify(self, message, signature):\n+      try:\n+        return rsa.pkcs1.verify(message, signature, self._pubkey)\n+      except rsa.pkcs1.VerificationError:\n+        return False\n+\n+    @staticmethod\n+    def from_string(key_pem, is_x509_cert):\n+      if is_x509_cert:\n+        try:\n+          from pyasn1.codec.der import decoder\n+          from pyasn1_modules.rfc2459 import Certificate\n+\n+          der = rsa.pem.load_pem(key_pem, 'CERTIFICATE')\n+          asn1_cert, _ = decoder.decode(der, asn1Spec=Certificate())\n+\n+          pubkey = rsa.PublicKey.load_pkcs1(BitStringToByteString(\n+              asn1_cert['tbsCertificate']['subjectPublicKeyInfo']['subjectPublicKey']), 'DER')\n+        except ImportError:\n+          raise NotImplementedError(\n+              'Please install pyasn1 and pyasn1_module to parse x509.')\n+      else:\n+        pubkey = rsa.PublicKey.load_pkcs1(key_pem, 'PEM')\n+      return RsaVerifier(pubkey)\n+\n+\n+  # Equivalent class to OpenSSLSigner above\n+  class RsaSigner(object):\n+    def __init__(self, pkey):\n+       self._key = pkey", "path": "crypt.py", "position": 90, "original_position": 50, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "ac0f2ee0bcc8a5e0337c6ee8562fe4271a94d7d9", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "might as well leave `_key` private for now?\n", "created_at": "2013-11-20T09:36:06Z", "updated_at": "2013-11-26T19:18:19Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7785714", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7785714"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7785714"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7785714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7785737", "pull_request_review_id": null, "id": 7785737, "diff_hunk": "@@ -244,16 +244,86 @@ def from_string(key, password='notasecret'):\n   PyCryptoVerifier = None\n   PyCryptoSigner = None\n \n+# Use pure Python RSA module if installed.\n+# Dependencies:\n+# For signing only: easy_install rsa\n+# For X509 verifications: easy_install rsa pyasn1_modules\n+try:\n+  import rsa\n+\n+  def BitStringToByteString(bs):\n+    def BitsToInt(bits):\n+      return sum(v * (2 ** (7 - j)) for j, v in enumerate(bits))\n+    return str(bytearray([BitsToInt(bs[i:i + 8]) for i in range(0, len(bs), 8)]))\n+\n+  # Equivalent class to OpenSSLVerifier above\n+  class RsaVerifier(object):\n+    def __init__(self, pubkey):\n+      self._pubkey = pubkey\n+\n+    def verify(self, message, signature):\n+      try:\n+        return rsa.pkcs1.verify(message, signature, self._pubkey)\n+      except rsa.pkcs1.VerificationError:\n+        return False\n+\n+    @staticmethod\n+    def from_string(key_pem, is_x509_cert):\n+      if is_x509_cert:\n+        try:\n+          from pyasn1.codec.der import decoder\n+          from pyasn1_modules.rfc2459 import Certificate\n+\n+          der = rsa.pem.load_pem(key_pem, 'CERTIFICATE')\n+          asn1_cert, _ = decoder.decode(der, asn1Spec=Certificate())\n+\n+          pubkey = rsa.PublicKey.load_pkcs1(BitStringToByteString(\n+              asn1_cert['tbsCertificate']['subjectPublicKeyInfo']['subjectPublicKey']), 'DER')\n+        except ImportError:\n+          raise NotImplementedError(\n+              'Please install pyasn1 and pyasn1_module to parse x509.')\n+      else:\n+        pubkey = rsa.PublicKey.load_pkcs1(key_pem, 'PEM')\n+      return RsaVerifier(pubkey)\n+\n+\n+  # Equivalent class to OpenSSLSigner above\n+  class RsaSigner(object):\n+    def __init__(self, pkey):\n+       self._key = pkey\n+\n+    def sign(self, message):\n+      return rsa.pkcs1.sign(message, self._key, 'SHA-256')\n+\n+    @staticmethod\n+    def from_string(key, password='notasecret'):\n+      if key.startswith('-----BEGIN '):\n+        pkey = rsa.key.PrivateKey.load_pkcs1(key, 'PEM')\n+      else:\n+        raise NotImplementedError(\n+            'PKCS12 format is not supported by the RSA library. '\n+            'Either install PyOpenSSL, or '\n+            'please convert .p12 format to .pem format: '", "path": "crypt.py", "position": null, "original_position": 63, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "ac0f2ee0bcc8a5e0337c6ee8562fe4271a94d7d9", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "it's awkward in an error message, but maybe worth throwing in a forced `\\n` here so that the command is _more_ likely to be copy-paste-able?\n", "created_at": "2013-11-20T09:37:17Z", "updated_at": "2013-11-26T19:18:19Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7785737", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7785737"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7785737"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7785737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7785785", "pull_request_review_id": null, "id": 7785785, "diff_hunk": "@@ -244,16 +244,86 @@ def from_string(key, password='notasecret'):\n   PyCryptoVerifier = None\n   PyCryptoSigner = None\n \n+# Use pure Python RSA module if installed.\n+# Dependencies:\n+# For signing only: easy_install rsa\n+# For X509 verifications: easy_install rsa pyasn1_modules\n+try:\n+  import rsa\n+\n+  def BitStringToByteString(bs):", "path": "crypt.py", "position": null, "original_position": 11, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "ac0f2ee0bcc8a5e0337c6ee8562fe4271a94d7d9", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Let's make it `_BitStringToByteString`, no reason to expose it for now.\n", "created_at": "2013-11-20T09:39:52Z", "updated_at": "2013-11-26T19:18:19Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7785785", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7785785"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7785785"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7785785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7786225", "pull_request_review_id": null, "id": 7786225, "diff_hunk": "@@ -244,16 +244,86 @@ def from_string(key, password='notasecret'):\n   PyCryptoVerifier = None\n   PyCryptoSigner = None\n \n+# Use pure Python RSA module if installed.\n+# Dependencies:\n+# For signing only: easy_install rsa\n+# For X509 verifications: easy_install rsa pyasn1_modules\n+try:\n+  import rsa\n+\n+  def BitStringToByteString(bs):", "path": "crypt.py", "position": null, "original_position": 11, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "ac0f2ee0bcc8a5e0337c6ee8562fe4271a94d7d9", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "can you add a docstring for what this is doing? in particular, what are the types on the input/output?\n\ni'm also worried that this doesn't do what you expect unless `len(bs)` is exactly a multiple of 8. for instance, if i just gave you `bs = [1]`, i believe you'd interpret that as though i gave you `[1, 0, 0, 0, 0, 0, 0, 0]`. what do we know about the values you're getting here?\n\nnote that part of this can definitely be simplified; a few quick thoughts:\n- python has left and right shift operators, so `a << 3` is the same as `a * (2 ** 3)`\n- the `int` constructor can take a string and a base, so eg `int('1101', 2)` returns `13`. if you've got strings, you can just call that.\n- `bytearray` takes an iterable, so you can drop the `[]` in the list comprehension (and it'll become a generator). \n- `range` -> `xrange`\n", "created_at": "2013-11-20T10:00:03Z", "updated_at": "2013-11-26T19:18:19Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7786225", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7786225"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7786225"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7786225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7786247", "pull_request_review_id": null, "id": 7786247, "diff_hunk": "@@ -244,16 +244,86 @@ def from_string(key, password='notasecret'):\n   PyCryptoVerifier = None\n   PyCryptoSigner = None\n \n+# Use pure Python RSA module if installed.\n+# Dependencies:\n+# For signing only: easy_install rsa\n+# For X509 verifications: easy_install rsa pyasn1_modules\n+try:\n+  import rsa\n+\n+  def BitStringToByteString(bs):\n+    def BitsToInt(bits):\n+      return sum(v * (2 ** (7 - j)) for j, v in enumerate(bits))\n+    return str(bytearray([BitsToInt(bs[i:i + 8]) for i in range(0, len(bs), 8)]))\n+\n+  # Equivalent class to OpenSSLVerifier above\n+  class RsaVerifier(object):\n+    def __init__(self, pubkey):\n+      self._pubkey = pubkey\n+\n+    def verify(self, message, signature):\n+      try:\n+        return rsa.pkcs1.verify(message, signature, self._pubkey)\n+      except rsa.pkcs1.VerificationError:\n+        return False\n+\n+    @staticmethod\n+    def from_string(key_pem, is_x509_cert):\n+      if is_x509_cert:\n+        try:\n+          from pyasn1.codec.der import decoder\n+          from pyasn1_modules.rfc2459 import Certificate\n+\n+          der = rsa.pem.load_pem(key_pem, 'CERTIFICATE')\n+          asn1_cert, _ = decoder.decode(der, asn1Spec=Certificate())\n+\n+          pubkey = rsa.PublicKey.load_pkcs1(BitStringToByteString(\n+              asn1_cert['tbsCertificate']['subjectPublicKeyInfo']['subjectPublicKey']), 'DER')\n+        except ImportError:\n+          raise NotImplementedError(\n+              'Please install pyasn1 and pyasn1_module to parse x509.')\n+      else:\n+        pubkey = rsa.PublicKey.load_pkcs1(key_pem, 'PEM')\n+      return RsaVerifier(pubkey)\n+\n+\n+  # Equivalent class to OpenSSLSigner above\n+  class RsaSigner(object):\n+    def __init__(self, pkey):\n+       self._key = pkey", "path": "crypt.py", "position": 90, "original_position": 50, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "ac0f2ee0bcc8a5e0337c6ee8562fe4271a94d7d9", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "(in particular, i'm saying `_key` -> `__key`.)\n", "created_at": "2013-11-20T10:01:18Z", "updated_at": "2013-11-26T19:18:19Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7786247", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7786247"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7786247"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7786247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7801175", "pull_request_review_id": null, "id": 7801175, "diff_hunk": "@@ -244,16 +244,86 @@ def from_string(key, password='notasecret'):\n   PyCryptoVerifier = None\n   PyCryptoSigner = None\n \n+# Use pure Python RSA module if installed.\n+# Dependencies:\n+# For signing only: easy_install rsa\n+# For X509 verifications: easy_install rsa pyasn1_modules\n+try:\n+  import rsa\n+\n+  def BitStringToByteString(bs):\n+    def BitsToInt(bits):\n+      return sum(v * (2 ** (7 - j)) for j, v in enumerate(bits))\n+    return str(bytearray([BitsToInt(bs[i:i + 8]) for i in range(0, len(bs), 8)]))\n+\n+  # Equivalent class to OpenSSLVerifier above\n+  class RsaVerifier(object):\n+    def __init__(self, pubkey):\n+      self._pubkey = pubkey\n+\n+    def verify(self, message, signature):\n+      try:\n+        return rsa.pkcs1.verify(message, signature, self._pubkey)\n+      except rsa.pkcs1.VerificationError:\n+        return False\n+\n+    @staticmethod\n+    def from_string(key_pem, is_x509_cert):\n+      if is_x509_cert:\n+        try:\n+          from pyasn1.codec.der import decoder\n+          from pyasn1_modules.rfc2459 import Certificate\n+\n+          der = rsa.pem.load_pem(key_pem, 'CERTIFICATE')\n+          asn1_cert, _ = decoder.decode(der, asn1Spec=Certificate())\n+\n+          pubkey = rsa.PublicKey.load_pkcs1(BitStringToByteString(\n+              asn1_cert['tbsCertificate']['subjectPublicKeyInfo']['subjectPublicKey']), 'DER')\n+        except ImportError:\n+          raise NotImplementedError(\n+              'Please install pyasn1 and pyasn1_module to parse x509.')", "path": "crypt.py", "position": null, "original_position": 41, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "ac0f2ee0bcc8a5e0337c6ee8562fe4271a94d7d9", "user": {"login": "aeijdenberg", "id": 5984070, "avatar_url": "https://avatars1.githubusercontent.com/u/5984070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeijdenberg", "html_url": "https://github.com/aeijdenberg", "followers_url": "https://api.github.com/users/aeijdenberg/followers", "following_url": "https://api.github.com/users/aeijdenberg/following{/other_user}", "gists_url": "https://api.github.com/users/aeijdenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeijdenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeijdenberg/subscriptions", "organizations_url": "https://api.github.com/users/aeijdenberg/orgs", "repos_url": "https://api.github.com/users/aeijdenberg/repos", "events_url": "https://api.github.com/users/aeijdenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/aeijdenberg/received_events", "type": "User", "site_admin": false}, "body": "Changed to add the \"s\".  I'd rather not go into too much detail how to do oneself as I'd really like to see us include everything you need in the build we provide \"batteries included\".\n", "created_at": "2013-11-20T18:55:07Z", "updated_at": "2013-11-26T19:18:19Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7801175", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7801175"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7801175"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7801175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7801204", "pull_request_review_id": null, "id": 7801204, "diff_hunk": "@@ -244,16 +244,86 @@ def from_string(key, password='notasecret'):\n   PyCryptoVerifier = None\n   PyCryptoSigner = None\n \n+# Use pure Python RSA module if installed.\n+# Dependencies:\n+# For signing only: easy_install rsa\n+# For X509 verifications: easy_install rsa pyasn1_modules\n+try:\n+  import rsa\n+\n+  def BitStringToByteString(bs):\n+    def BitsToInt(bits):\n+      return sum(v * (2 ** (7 - j)) for j, v in enumerate(bits))\n+    return str(bytearray([BitsToInt(bs[i:i + 8]) for i in range(0, len(bs), 8)]))\n+\n+  # Equivalent class to OpenSSLVerifier above\n+  class RsaVerifier(object):\n+    def __init__(self, pubkey):\n+      self._pubkey = pubkey\n+\n+    def verify(self, message, signature):\n+      try:\n+        return rsa.pkcs1.verify(message, signature, self._pubkey)\n+      except rsa.pkcs1.VerificationError:\n+        return False\n+\n+    @staticmethod\n+    def from_string(key_pem, is_x509_cert):\n+      if is_x509_cert:\n+        try:\n+          from pyasn1.codec.der import decoder\n+          from pyasn1_modules.rfc2459 import Certificate\n+\n+          der = rsa.pem.load_pem(key_pem, 'CERTIFICATE')\n+          asn1_cert, _ = decoder.decode(der, asn1Spec=Certificate())\n+\n+          pubkey = rsa.PublicKey.load_pkcs1(BitStringToByteString(\n+              asn1_cert['tbsCertificate']['subjectPublicKeyInfo']['subjectPublicKey']), 'DER')\n+        except ImportError:\n+          raise NotImplementedError(\n+              'Please install pyasn1 and pyasn1_module to parse x509.')\n+      else:\n+        pubkey = rsa.PublicKey.load_pkcs1(key_pem, 'PEM')\n+      return RsaVerifier(pubkey)\n+\n+\n+  # Equivalent class to OpenSSLSigner above\n+  class RsaSigner(object):\n+    def __init__(self, pkey):\n+       self._key = pkey", "path": "crypt.py", "position": 90, "original_position": 50, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "ac0f2ee0bcc8a5e0337c6ee8562fe4271a94d7d9", "user": {"login": "aeijdenberg", "id": 5984070, "avatar_url": "https://avatars1.githubusercontent.com/u/5984070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeijdenberg", "html_url": "https://github.com/aeijdenberg", "followers_url": "https://api.github.com/users/aeijdenberg/followers", "following_url": "https://api.github.com/users/aeijdenberg/following{/other_user}", "gists_url": "https://api.github.com/users/aeijdenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeijdenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeijdenberg/subscriptions", "organizations_url": "https://api.github.com/users/aeijdenberg/orgs", "repos_url": "https://api.github.com/users/aeijdenberg/repos", "events_url": "https://api.github.com/users/aeijdenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/aeijdenberg/received_events", "type": "User", "site_admin": false}, "body": "Not sure what you're asking...\n", "created_at": "2013-11-20T18:55:51Z", "updated_at": "2013-11-26T19:18:19Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7801204", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7801204"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7801204"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7801204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7801221", "pull_request_review_id": null, "id": 7801221, "diff_hunk": "@@ -244,16 +244,86 @@ def from_string(key, password='notasecret'):\n   PyCryptoVerifier = None\n   PyCryptoSigner = None\n \n+# Use pure Python RSA module if installed.\n+# Dependencies:\n+# For signing only: easy_install rsa\n+# For X509 verifications: easy_install rsa pyasn1_modules\n+try:\n+  import rsa\n+\n+  def BitStringToByteString(bs):\n+    def BitsToInt(bits):\n+      return sum(v * (2 ** (7 - j)) for j, v in enumerate(bits))\n+    return str(bytearray([BitsToInt(bs[i:i + 8]) for i in range(0, len(bs), 8)]))\n+\n+  # Equivalent class to OpenSSLVerifier above\n+  class RsaVerifier(object):\n+    def __init__(self, pubkey):\n+      self._pubkey = pubkey\n+\n+    def verify(self, message, signature):\n+      try:\n+        return rsa.pkcs1.verify(message, signature, self._pubkey)\n+      except rsa.pkcs1.VerificationError:\n+        return False\n+\n+    @staticmethod\n+    def from_string(key_pem, is_x509_cert):\n+      if is_x509_cert:\n+        try:\n+          from pyasn1.codec.der import decoder\n+          from pyasn1_modules.rfc2459 import Certificate\n+\n+          der = rsa.pem.load_pem(key_pem, 'CERTIFICATE')\n+          asn1_cert, _ = decoder.decode(der, asn1Spec=Certificate())\n+\n+          pubkey = rsa.PublicKey.load_pkcs1(BitStringToByteString(\n+              asn1_cert['tbsCertificate']['subjectPublicKeyInfo']['subjectPublicKey']), 'DER')\n+        except ImportError:\n+          raise NotImplementedError(\n+              'Please install pyasn1 and pyasn1_module to parse x509.')\n+      else:\n+        pubkey = rsa.PublicKey.load_pkcs1(key_pem, 'PEM')\n+      return RsaVerifier(pubkey)\n+\n+\n+  # Equivalent class to OpenSSLSigner above\n+  class RsaSigner(object):\n+    def __init__(self, pkey):\n+       self._key = pkey\n+\n+    def sign(self, message):\n+      return rsa.pkcs1.sign(message, self._key, 'SHA-256')\n+\n+    @staticmethod\n+    def from_string(key, password='notasecret'):\n+      if key.startswith('-----BEGIN '):\n+        pkey = rsa.key.PrivateKey.load_pkcs1(key, 'PEM')\n+      else:\n+        raise NotImplementedError(\n+            'PKCS12 format is not supported by the RSA library. '\n+            'Either install PyOpenSSL, or '\n+            'please convert .p12 format to .pem format: '", "path": "crypt.py", "position": null, "original_position": 63, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "ac0f2ee0bcc8a5e0337c6ee8562fe4271a94d7d9", "user": {"login": "aeijdenberg", "id": 5984070, "avatar_url": "https://avatars1.githubusercontent.com/u/5984070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeijdenberg", "html_url": "https://github.com/aeijdenberg", "followers_url": "https://api.github.com/users/aeijdenberg/followers", "following_url": "https://api.github.com/users/aeijdenberg/following{/other_user}", "gists_url": "https://api.github.com/users/aeijdenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeijdenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeijdenberg/subscriptions", "organizations_url": "https://api.github.com/users/aeijdenberg/orgs", "repos_url": "https://api.github.com/users/aeijdenberg/repos", "events_url": "https://api.github.com/users/aeijdenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/aeijdenberg/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2013-11-20T18:56:30Z", "updated_at": "2013-11-26T19:18:19Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7801221", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7801221"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7801221"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7801221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7801245", "pull_request_review_id": null, "id": 7801245, "diff_hunk": "@@ -244,16 +244,86 @@ def from_string(key, password='notasecret'):\n   PyCryptoVerifier = None\n   PyCryptoSigner = None\n \n+# Use pure Python RSA module if installed.\n+# Dependencies:\n+# For signing only: easy_install rsa\n+# For X509 verifications: easy_install rsa pyasn1_modules\n+try:\n+  import rsa\n+\n+  def BitStringToByteString(bs):", "path": "crypt.py", "position": null, "original_position": 11, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "ac0f2ee0bcc8a5e0337c6ee8562fe4271a94d7d9", "user": {"login": "aeijdenberg", "id": 5984070, "avatar_url": "https://avatars1.githubusercontent.com/u/5984070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeijdenberg", "html_url": "https://github.com/aeijdenberg", "followers_url": "https://api.github.com/users/aeijdenberg/followers", "following_url": "https://api.github.com/users/aeijdenberg/following{/other_user}", "gists_url": "https://api.github.com/users/aeijdenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeijdenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeijdenberg/subscriptions", "organizations_url": "https://api.github.com/users/aeijdenberg/orgs", "repos_url": "https://api.github.com/users/aeijdenberg/repos", "events_url": "https://api.github.com/users/aeijdenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/aeijdenberg/received_events", "type": "User", "site_admin": false}, "body": "Done\n", "created_at": "2013-11-20T18:56:59Z", "updated_at": "2013-11-26T19:18:19Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7801245", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7801245"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7801245"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7801245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7801355", "pull_request_review_id": null, "id": 7801355, "diff_hunk": "@@ -244,16 +244,86 @@ def from_string(key, password='notasecret'):\n   PyCryptoVerifier = None\n   PyCryptoSigner = None\n \n+# Use pure Python RSA module if installed.\n+# Dependencies:\n+# For signing only: easy_install rsa\n+# For X509 verifications: easy_install rsa pyasn1_modules\n+try:\n+  import rsa\n+\n+  def BitStringToByteString(bs):\n+    def BitsToInt(bits):\n+      return sum(v * (2 ** (7 - j)) for j, v in enumerate(bits))\n+    return str(bytearray([BitsToInt(bs[i:i + 8]) for i in range(0, len(bs), 8)]))\n+\n+  # Equivalent class to OpenSSLVerifier above\n+  class RsaVerifier(object):\n+    def __init__(self, pubkey):\n+      self._pubkey = pubkey\n+\n+    def verify(self, message, signature):\n+      try:\n+        return rsa.pkcs1.verify(message, signature, self._pubkey)\n+      except rsa.pkcs1.VerificationError:\n+        return False\n+\n+    @staticmethod\n+    def from_string(key_pem, is_x509_cert):\n+      if is_x509_cert:\n+        try:\n+          from pyasn1.codec.der import decoder\n+          from pyasn1_modules.rfc2459 import Certificate\n+\n+          der = rsa.pem.load_pem(key_pem, 'CERTIFICATE')\n+          asn1_cert, _ = decoder.decode(der, asn1Spec=Certificate())\n+\n+          pubkey = rsa.PublicKey.load_pkcs1(BitStringToByteString(\n+              asn1_cert['tbsCertificate']['subjectPublicKeyInfo']['subjectPublicKey']), 'DER')\n+        except ImportError:\n+          raise NotImplementedError(\n+              'Please install pyasn1 and pyasn1_module to parse x509.')\n+      else:\n+        pubkey = rsa.PublicKey.load_pkcs1(key_pem, 'PEM')\n+      return RsaVerifier(pubkey)\n+\n+\n+  # Equivalent class to OpenSSLSigner above\n+  class RsaSigner(object):\n+    def __init__(self, pkey):\n+       self._key = pkey", "path": "crypt.py", "position": 90, "original_position": 50, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "ac0f2ee0bcc8a5e0337c6ee8562fe4271a94d7d9", "user": {"login": "aeijdenberg", "id": 5984070, "avatar_url": "https://avatars1.githubusercontent.com/u/5984070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeijdenberg", "html_url": "https://github.com/aeijdenberg", "followers_url": "https://api.github.com/users/aeijdenberg/followers", "following_url": "https://api.github.com/users/aeijdenberg/following{/other_user}", "gists_url": "https://api.github.com/users/aeijdenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeijdenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeijdenberg/subscriptions", "organizations_url": "https://api.github.com/users/aeijdenberg/orgs", "repos_url": "https://api.github.com/users/aeijdenberg/repos", "events_url": "https://api.github.com/users/aeijdenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/aeijdenberg/received_events", "type": "User", "site_admin": false}, "body": "You're welcome to change - I'm just copying the style pre-existing in the file.\n", "created_at": "2013-11-20T19:00:26Z", "updated_at": "2013-11-26T19:18:19Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7801355", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7801355"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7801355"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7801355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7935126", "pull_request_review_id": null, "id": 7935126, "diff_hunk": "@@ -244,16 +244,86 @@ def from_string(key, password='notasecret'):\n   PyCryptoVerifier = None\n   PyCryptoSigner = None\n \n+# Use pure Python RSA module if installed.\n+# Dependencies:\n+# For signing only: easy_install rsa\n+# For X509 verifications: easy_install rsa pyasn1_modules\n+try:\n+  import rsa\n+\n+  def BitStringToByteString(bs):\n+    def BitsToInt(bits):\n+      return sum(v * (2 ** (7 - j)) for j, v in enumerate(bits))\n+    return str(bytearray([BitsToInt(bs[i:i + 8]) for i in range(0, len(bs), 8)]))\n+\n+  # Equivalent class to OpenSSLVerifier above\n+  class RsaVerifier(object):\n+    def __init__(self, pubkey):\n+      self._pubkey = pubkey\n+\n+    def verify(self, message, signature):\n+      try:\n+        return rsa.pkcs1.verify(message, signature, self._pubkey)\n+      except rsa.pkcs1.VerificationError:\n+        return False\n+\n+    @staticmethod\n+    def from_string(key_pem, is_x509_cert):\n+      if is_x509_cert:\n+        try:\n+          from pyasn1.codec.der import decoder\n+          from pyasn1_modules.rfc2459 import Certificate\n+\n+          der = rsa.pem.load_pem(key_pem, 'CERTIFICATE')\n+          asn1_cert, _ = decoder.decode(der, asn1Spec=Certificate())\n+\n+          pubkey = rsa.PublicKey.load_pkcs1(BitStringToByteString(\n+              asn1_cert['tbsCertificate']['subjectPublicKeyInfo']['subjectPublicKey']), 'DER')\n+        except ImportError:\n+          raise NotImplementedError(\n+              'Please install pyasn1 and pyasn1_module to parse x509.')\n+      else:\n+        pubkey = rsa.PublicKey.load_pkcs1(key_pem, 'PEM')\n+      return RsaVerifier(pubkey)\n+\n+\n+  # Equivalent class to OpenSSLSigner above\n+  class RsaSigner(object):\n+    def __init__(self, pkey):\n+       self._key = pkey", "path": "crypt.py", "position": 90, "original_position": 50, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "ac0f2ee0bcc8a5e0337c6ee8562fe4271a94d7d9", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "body": "changing it from _key to __key makes it so it's very difficult to get at that attribute if you do it from outside the module. Some kind of name mangling. Generally used for things that absolutely shouldn't be touched under any circumstances, where the single underscore is more of a signal that touching it is the wrong way to interact with the module.\n", "created_at": "2013-11-26T18:54:54Z", "updated_at": "2013-11-26T19:18:19Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7935126", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7935126"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7935126"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7935126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7935232", "pull_request_review_id": null, "id": 7935232, "diff_hunk": "@@ -244,16 +244,86 @@ def from_string(key, password='notasecret'):\n   PyCryptoVerifier = None\n   PyCryptoSigner = None\n \n+# Use pure Python RSA module if installed.\n+# Dependencies:\n+# For signing only: easy_install rsa\n+# For X509 verifications: easy_install rsa pyasn1_modules\n+try:\n+  import rsa\n+\n+  def _BitStringToByteString(bs):\n+    def BitsToInt(bits):\n+      return sum(v * (2 ** (7 - j)) for j, v in enumerate(bits))\n+    return str(bytearray([BitsToInt(bs[i:i + 8]) for i in range(0, len(bs), 8)]))\n+\n+  # Equivalent class to OpenSSLVerifier above\n+  class RsaVerifier(object):\n+    def __init__(self, pubkey):\n+      self._pubkey = pubkey\n+\n+    def verify(self, message, signature):\n+      try:\n+        return rsa.pkcs1.verify(message, signature, self._pubkey)\n+      except rsa.pkcs1.VerificationError:\n+        return False\n+\n+    @staticmethod\n+    def from_string(key_pem, is_x509_cert):\n+      if is_x509_cert:\n+        try:\n+          from pyasn1.codec.der import decoder\n+          from pyasn1_modules.rfc2459 import Certificate\n+\n+          der = rsa.pem.load_pem(key_pem, 'CERTIFICATE')\n+          asn1_cert, _ = decoder.decode(der, asn1Spec=Certificate())\n+\n+          pubkey = rsa.PublicKey.load_pkcs1(_BitStringToByteString(\n+              asn1_cert['tbsCertificate']['subjectPublicKeyInfo']['subjectPublicKey']), 'DER')\n+        except ImportError:\n+          raise NotImplementedError(\n+              'Please install pyasn1 and pyasn1_modules to parse x509.')\n+      else:\n+        pubkey = rsa.PublicKey.load_pkcs1(key_pem, 'PEM')\n+      return RsaVerifier(pubkey)\n+\n+\n+  # Equivalent class to OpenSSLSigner above\n+  class RsaSigner(object):\n+    def __init__(self, pkey):\n+       self._key = pkey\n+\n+    def sign(self, message):\n+      return rsa.pkcs1.sign(message, self._key, 'SHA-256')\n+\n+    @staticmethod\n+    def from_string(key, password='notasecret'):\n+      if key.startswith('-----BEGIN '):\n+        pkey = rsa.key.PrivateKey.load_pkcs1(key, 'PEM')\n+      else:\n+        raise NotImplementedError(\n+            'PKCS12 format is not supported by the RSA library. '\n+            'Either install PyOpenSSL, or '\n+            'please convert .p12 format to .pem format: \\n'\n+            'cat key.p12 | openssl pkcs12 -nodes -nocerts -passin '\n+            'pass:notasecret | openssl rsa > key.pem')\n+      return RsaSigner(pkey)\n+\n+except ImportError:\n+  RsaSigner = None", "path": "crypt.py", "position": 109, "original_position": 69, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "09d38306feb5d0e48de82e5fb565d86f58b858a9", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "body": "I'd rather see a function that throws a NotImplementedError.\n\ndef RsaSigner(pkey):\n  raise NotImplementedError('RsaSigner is only available if you have the rsa module installed.')\n\nor something to that effect.\n", "created_at": "2013-11-26T18:57:25Z", "updated_at": "2013-11-26T19:18:19Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7935232", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7935232"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7935232"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7935232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7938401", "pull_request_review_id": null, "id": 7938401, "diff_hunk": "@@ -230,30 +234,101 @@ def from_string(key, password='notasecret'):\n       Raises:\n         NotImplementedError if they key isn't in PEM format.\n       \"\"\"\n-      if key.startswith('-----BEGIN '):\n+      if _IsPEM(key):\n         pkey = RSA.importKey(key)\n       else:\n         raise NotImplementedError(\n-            'PKCS12 format is not supported by the PyCrpto library. '", "path": "crypt.py", "position": 29, "original_position": 29, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "body": "For big blocks of text like this, use textwrap.dedent() - makes it a lot easier to read and edit.\n", "created_at": "2013-11-26T20:29:47Z", "updated_at": "2013-11-26T20:29:47Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7938401", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7938401"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7938401"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7938401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7938589", "pull_request_review_id": null, "id": 7938589, "diff_hunk": "@@ -325,5 +325,68 @@ def test_true(self):\n     self.assertEqual(True, HAS_OPENSSL)\n     self.assertEqual(True, HAS_CRYPTO)\n \n+\n+class PEMSignedJwtAssertionCredentialsRsaTests(\n+    SignedJwtAssertionCredentialsTests):\n+  def setUp(self):\n+    self.format = 'pem'\n+    crypt.Signer = crypt.RsaSigner\n+\n+\n+class PKCSSignedJwtAssertionCredentialsRsaTests(unittest.TestCase):\n+  def test_for_failure(self):\n+    crypt.Signer = crypt.RsaSigner\n+    private_key = datafile('privatekey.p12')\n+    credentials = SignedJwtAssertionCredentials(\n+        'some_account@example.com',\n+        private_key,\n+        scope='read+write',\n+        sub='joe@example.org')", "path": "tests/test_oauth2client_jwt.py", "position": 20, "original_position": 20, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "body": "What is this parameter? I can't find it in the source/docs.\n", "created_at": "2013-11-26T20:35:05Z", "updated_at": "2013-11-26T20:35:05Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7938589", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7938589"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7938589"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7938589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7938707", "pull_request_review_id": null, "id": 7938707, "diff_hunk": "@@ -325,5 +325,68 @@ def test_true(self):\n     self.assertEqual(True, HAS_OPENSSL)\n     self.assertEqual(True, HAS_CRYPTO)\n \n+\n+class PEMSignedJwtAssertionCredentialsRsaTests(\n+    SignedJwtAssertionCredentialsTests):\n+  def setUp(self):\n+    self.format = 'pem'\n+    crypt.Signer = crypt.RsaSigner\n+\n+\n+class PKCSSignedJwtAssertionCredentialsRsaTests(unittest.TestCase):\n+  def test_for_failure(self):\n+    crypt.Signer = crypt.RsaSigner\n+    private_key = datafile('privatekey.p12')\n+    credentials = SignedJwtAssertionCredentials(\n+        'some_account@example.com',\n+        private_key,\n+        scope='read+write',\n+        sub='joe@example.org')\n+    try:", "path": "tests/test_oauth2client_jwt.py", "position": 21, "original_position": 21, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "body": "with self.assertRaises(NotImplementedError):\n  credentials._generate_assertion()\n", "created_at": "2013-11-26T20:38:56Z", "updated_at": "2013-11-26T20:38:56Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7938707", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7938707"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7938707"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7938707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7940341", "pull_request_review_id": null, "id": 7940341, "diff_hunk": "@@ -230,30 +234,101 @@ def from_string(key, password='notasecret'):\n       Raises:\n         NotImplementedError if they key isn't in PEM format.\n       \"\"\"\n-      if key.startswith('-----BEGIN '):\n+      if _IsPEM(key):\n         pkey = RSA.importKey(key)\n       else:\n         raise NotImplementedError(\n-            'PKCS12 format is not supported by the PyCrpto library. '\n-            'Try converting to a \"PEM\" '\n-            '(openssl pkcs12 -in xxxxx.p12 -nodes -nocerts > privatekey.pem) '\n-            'or using PyOpenSSL if native code is an option.')\n+            'PKCS12 format is not supported by the PyCrypto library. '\n+            'Either install PyOpenSSL, or '\n+            'please convert .p12 format to .pem format: \\n'\n+            'cat key.p12 | openssl pkcs12 -nodes -nocerts -passin '", "path": "crypt.py", "position": 36, "original_position": 36, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "body": "This message will be confusing for a Windows user. Maybe that doesn't matter.\n", "created_at": "2013-11-26T21:26:52Z", "updated_at": "2013-11-26T21:26:52Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7940341", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7940341"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7940341"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7940341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7941807", "pull_request_review_id": null, "id": 7941807, "diff_hunk": "@@ -244,16 +244,86 @@ def from_string(key, password='notasecret'):\n   PyCryptoVerifier = None\n   PyCryptoSigner = None\n \n+# Use pure Python RSA module if installed.\n+# Dependencies:\n+# For signing only: easy_install rsa\n+# For X509 verifications: easy_install rsa pyasn1_modules\n+try:\n+  import rsa\n+\n+  def BitStringToByteString(bs):\n+    def BitsToInt(bits):\n+      return sum(v * (2 ** (7 - j)) for j, v in enumerate(bits))\n+    return str(bytearray([BitsToInt(bs[i:i + 8]) for i in range(0, len(bs), 8)]))\n+\n+  # Equivalent class to OpenSSLVerifier above\n+  class RsaVerifier(object):\n+    def __init__(self, pubkey):\n+      self._pubkey = pubkey\n+\n+    def verify(self, message, signature):\n+      try:\n+        return rsa.pkcs1.verify(message, signature, self._pubkey)\n+      except rsa.pkcs1.VerificationError:\n+        return False\n+\n+    @staticmethod\n+    def from_string(key_pem, is_x509_cert):\n+      if is_x509_cert:\n+        try:\n+          from pyasn1.codec.der import decoder\n+          from pyasn1_modules.rfc2459 import Certificate\n+\n+          der = rsa.pem.load_pem(key_pem, 'CERTIFICATE')\n+          asn1_cert, _ = decoder.decode(der, asn1Spec=Certificate())\n+\n+          pubkey = rsa.PublicKey.load_pkcs1(BitStringToByteString(\n+              asn1_cert['tbsCertificate']['subjectPublicKeyInfo']['subjectPublicKey']), 'DER')\n+        except ImportError:\n+          raise NotImplementedError(\n+              'Please install pyasn1 and pyasn1_module to parse x509.')\n+      else:\n+        pubkey = rsa.PublicKey.load_pkcs1(key_pem, 'PEM')\n+      return RsaVerifier(pubkey)\n+\n+\n+  # Equivalent class to OpenSSLSigner above\n+  class RsaSigner(object):\n+    def __init__(self, pkey):\n+       self._key = pkey", "path": "crypt.py", "position": 90, "original_position": 50, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "ac0f2ee0bcc8a5e0337c6ee8562fe4271a94d7d9", "user": {"login": "aeijdenberg", "id": 5984070, "avatar_url": "https://avatars1.githubusercontent.com/u/5984070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeijdenberg", "html_url": "https://github.com/aeijdenberg", "followers_url": "https://api.github.com/users/aeijdenberg/followers", "following_url": "https://api.github.com/users/aeijdenberg/following{/other_user}", "gists_url": "https://api.github.com/users/aeijdenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeijdenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeijdenberg/subscriptions", "organizations_url": "https://api.github.com/users/aeijdenberg/orgs", "repos_url": "https://api.github.com/users/aeijdenberg/repos", "events_url": "https://api.github.com/users/aeijdenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/aeijdenberg/received_events", "type": "User", "site_admin": false}, "body": "Ack. There's probably a bunch of refactoring that could be done across the module - I'd like to restrict this set of changes to added support for the rsa library.\n", "created_at": "2013-11-26T22:13:00Z", "updated_at": "2013-11-26T22:13:00Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7941807", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7941807"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7941807"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7941807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7941822", "pull_request_review_id": null, "id": 7941822, "diff_hunk": "@@ -244,16 +244,86 @@ def from_string(key, password='notasecret'):\n   PyCryptoVerifier = None\n   PyCryptoSigner = None\n \n+# Use pure Python RSA module if installed.\n+# Dependencies:\n+# For signing only: easy_install rsa\n+# For X509 verifications: easy_install rsa pyasn1_modules\n+try:\n+  import rsa\n+\n+  def _BitStringToByteString(bs):\n+    def BitsToInt(bits):\n+      return sum(v * (2 ** (7 - j)) for j, v in enumerate(bits))\n+    return str(bytearray([BitsToInt(bs[i:i + 8]) for i in range(0, len(bs), 8)]))\n+\n+  # Equivalent class to OpenSSLVerifier above\n+  class RsaVerifier(object):\n+    def __init__(self, pubkey):\n+      self._pubkey = pubkey\n+\n+    def verify(self, message, signature):\n+      try:\n+        return rsa.pkcs1.verify(message, signature, self._pubkey)\n+      except rsa.pkcs1.VerificationError:\n+        return False\n+\n+    @staticmethod\n+    def from_string(key_pem, is_x509_cert):\n+      if is_x509_cert:\n+        try:\n+          from pyasn1.codec.der import decoder\n+          from pyasn1_modules.rfc2459 import Certificate\n+\n+          der = rsa.pem.load_pem(key_pem, 'CERTIFICATE')\n+          asn1_cert, _ = decoder.decode(der, asn1Spec=Certificate())\n+\n+          pubkey = rsa.PublicKey.load_pkcs1(_BitStringToByteString(\n+              asn1_cert['tbsCertificate']['subjectPublicKeyInfo']['subjectPublicKey']), 'DER')\n+        except ImportError:\n+          raise NotImplementedError(\n+              'Please install pyasn1 and pyasn1_modules to parse x509.')\n+      else:\n+        pubkey = rsa.PublicKey.load_pkcs1(key_pem, 'PEM')\n+      return RsaVerifier(pubkey)\n+\n+\n+  # Equivalent class to OpenSSLSigner above\n+  class RsaSigner(object):\n+    def __init__(self, pkey):\n+       self._key = pkey\n+\n+    def sign(self, message):\n+      return rsa.pkcs1.sign(message, self._key, 'SHA-256')\n+\n+    @staticmethod\n+    def from_string(key, password='notasecret'):\n+      if key.startswith('-----BEGIN '):\n+        pkey = rsa.key.PrivateKey.load_pkcs1(key, 'PEM')\n+      else:\n+        raise NotImplementedError(\n+            'PKCS12 format is not supported by the RSA library. '\n+            'Either install PyOpenSSL, or '\n+            'please convert .p12 format to .pem format: \\n'\n+            'cat key.p12 | openssl pkcs12 -nodes -nocerts -passin '\n+            'pass:notasecret | openssl rsa > key.pem')\n+      return RsaSigner(pkey)\n+\n+except ImportError:\n+  RsaSigner = None", "path": "crypt.py", "position": 109, "original_position": 69, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "09d38306feb5d0e48de82e5fb565d86f58b858a9", "user": {"login": "aeijdenberg", "id": 5984070, "avatar_url": "https://avatars1.githubusercontent.com/u/5984070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeijdenberg", "html_url": "https://github.com/aeijdenberg", "followers_url": "https://api.github.com/users/aeijdenberg/followers", "following_url": "https://api.github.com/users/aeijdenberg/following{/other_user}", "gists_url": "https://api.github.com/users/aeijdenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeijdenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeijdenberg/subscriptions", "organizations_url": "https://api.github.com/users/aeijdenberg/orgs", "repos_url": "https://api.github.com/users/aeijdenberg/repos", "events_url": "https://api.github.com/users/aeijdenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/aeijdenberg/received_events", "type": "User", "site_admin": false}, "body": "Ack. There's probably a bunch of refactoring that could be done across the module - I'd like to restrict this set of changes to added support for the rsa library.  This preserves current behavior for the other signature implementations.\n", "created_at": "2013-11-26T22:13:32Z", "updated_at": "2013-11-26T22:13:32Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7941822", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7941822"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7941822"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7941822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7941843", "pull_request_review_id": null, "id": 7941843, "diff_hunk": "@@ -230,30 +234,101 @@ def from_string(key, password='notasecret'):\n       Raises:\n         NotImplementedError if they key isn't in PEM format.\n       \"\"\"\n-      if key.startswith('-----BEGIN '):\n+      if _IsPEM(key):\n         pkey = RSA.importKey(key)\n       else:\n         raise NotImplementedError(\n-            'PKCS12 format is not supported by the PyCrpto library. '", "path": "crypt.py", "position": 29, "original_position": 29, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "user": {"login": "aeijdenberg", "id": 5984070, "avatar_url": "https://avatars1.githubusercontent.com/u/5984070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeijdenberg", "html_url": "https://github.com/aeijdenberg", "followers_url": "https://api.github.com/users/aeijdenberg/followers", "following_url": "https://api.github.com/users/aeijdenberg/following{/other_user}", "gists_url": "https://api.github.com/users/aeijdenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeijdenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeijdenberg/subscriptions", "organizations_url": "https://api.github.com/users/aeijdenberg/orgs", "repos_url": "https://api.github.com/users/aeijdenberg/repos", "events_url": "https://api.github.com/users/aeijdenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/aeijdenberg/received_events", "type": "User", "site_admin": false}, "body": "Ack.\n", "created_at": "2013-11-26T22:14:06Z", "updated_at": "2013-11-26T22:14:06Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7941843", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7941843"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7941843"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7941843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7941875", "pull_request_review_id": null, "id": 7941875, "diff_hunk": "@@ -325,5 +325,68 @@ def test_true(self):\n     self.assertEqual(True, HAS_OPENSSL)\n     self.assertEqual(True, HAS_CRYPTO)\n \n+\n+class PEMSignedJwtAssertionCredentialsRsaTests(\n+    SignedJwtAssertionCredentialsTests):\n+  def setUp(self):\n+    self.format = 'pem'\n+    crypt.Signer = crypt.RsaSigner\n+\n+\n+class PKCSSignedJwtAssertionCredentialsRsaTests(unittest.TestCase):\n+  def test_for_failure(self):\n+    crypt.Signer = crypt.RsaSigner\n+    private_key = datafile('privatekey.p12')\n+    credentials = SignedJwtAssertionCredentials(\n+        'some_account@example.com',\n+        private_key,\n+        scope='read+write',\n+        sub='joe@example.org')", "path": "tests/test_oauth2client_jwt.py", "position": 20, "original_position": 20, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "user": {"login": "aeijdenberg", "id": 5984070, "avatar_url": "https://avatars1.githubusercontent.com/u/5984070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeijdenberg", "html_url": "https://github.com/aeijdenberg", "followers_url": "https://api.github.com/users/aeijdenberg/followers", "following_url": "https://api.github.com/users/aeijdenberg/following{/other_user}", "gists_url": "https://api.github.com/users/aeijdenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeijdenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeijdenberg/subscriptions", "organizations_url": "https://api.github.com/users/aeijdenberg/orgs", "repos_url": "https://api.github.com/users/aeijdenberg/repos", "events_url": "https://api.github.com/users/aeijdenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/aeijdenberg/received_events", "type": "User", "site_admin": false}, "body": "Which one? Sub? I think that's a renamed prn.  I just copied and pasted the tests for the other signing modules to confirm we get the same behavior here.\n", "created_at": "2013-11-26T22:14:55Z", "updated_at": "2013-11-26T22:14:55Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7941875", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7941875"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7941875"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7941875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7941888", "pull_request_review_id": null, "id": 7941888, "diff_hunk": "@@ -325,5 +325,68 @@ def test_true(self):\n     self.assertEqual(True, HAS_OPENSSL)\n     self.assertEqual(True, HAS_CRYPTO)\n \n+\n+class PEMSignedJwtAssertionCredentialsRsaTests(\n+    SignedJwtAssertionCredentialsTests):\n+  def setUp(self):\n+    self.format = 'pem'\n+    crypt.Signer = crypt.RsaSigner\n+\n+\n+class PKCSSignedJwtAssertionCredentialsRsaTests(unittest.TestCase):\n+  def test_for_failure(self):\n+    crypt.Signer = crypt.RsaSigner\n+    private_key = datafile('privatekey.p12')\n+    credentials = SignedJwtAssertionCredentials(\n+        'some_account@example.com',\n+        private_key,\n+        scope='read+write',\n+        sub='joe@example.org')\n+    try:", "path": "tests/test_oauth2client_jwt.py", "position": 21, "original_position": 21, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "user": {"login": "aeijdenberg", "id": 5984070, "avatar_url": "https://avatars1.githubusercontent.com/u/5984070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeijdenberg", "html_url": "https://github.com/aeijdenberg", "followers_url": "https://api.github.com/users/aeijdenberg/followers", "following_url": "https://api.github.com/users/aeijdenberg/following{/other_user}", "gists_url": "https://api.github.com/users/aeijdenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeijdenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeijdenberg/subscriptions", "organizations_url": "https://api.github.com/users/aeijdenberg/orgs", "repos_url": "https://api.github.com/users/aeijdenberg/repos", "events_url": "https://api.github.com/users/aeijdenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/aeijdenberg/received_events", "type": "User", "site_admin": false}, "body": "Again, I'm just copying the existing unit test.\n", "created_at": "2013-11-26T22:15:22Z", "updated_at": "2013-11-26T22:15:22Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7941888", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7941888"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7941888"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7941888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7941901", "pull_request_review_id": null, "id": 7941901, "diff_hunk": "@@ -230,30 +234,101 @@ def from_string(key, password='notasecret'):\n       Raises:\n         NotImplementedError if they key isn't in PEM format.\n       \"\"\"\n-      if key.startswith('-----BEGIN '):\n+      if _IsPEM(key):\n         pkey = RSA.importKey(key)\n       else:\n         raise NotImplementedError(\n-            'PKCS12 format is not supported by the PyCrpto library. '\n-            'Try converting to a \"PEM\" '\n-            '(openssl pkcs12 -in xxxxx.p12 -nodes -nocerts > privatekey.pem) '\n-            'or using PyOpenSSL if native code is an option.')\n+            'PKCS12 format is not supported by the PyCrypto library. '\n+            'Either install PyOpenSSL, or '\n+            'please convert .p12 format to .pem format: \\n'\n+            'cat key.p12 | openssl pkcs12 -nodes -nocerts -passin '", "path": "crypt.py", "position": 36, "original_position": 36, "commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "original_commit_id": "af69b758bb4766740136dc9d7aa85c8f46c8b6ec", "user": {"login": "aeijdenberg", "id": 5984070, "avatar_url": "https://avatars1.githubusercontent.com/u/5984070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeijdenberg", "html_url": "https://github.com/aeijdenberg", "followers_url": "https://api.github.com/users/aeijdenberg/followers", "following_url": "https://api.github.com/users/aeijdenberg/following{/other_user}", "gists_url": "https://api.github.com/users/aeijdenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeijdenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeijdenberg/subscriptions", "organizations_url": "https://api.github.com/users/aeijdenberg/orgs", "repos_url": "https://api.github.com/users/aeijdenberg/repos", "events_url": "https://api.github.com/users/aeijdenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/aeijdenberg/received_events", "type": "User", "site_admin": false}, "body": "Ack.\n", "created_at": "2013-11-26T22:15:45Z", "updated_at": "2013-11-26T22:15:45Z", "html_url": "https://github.com/google/oauth2client/pull/1#discussion_r7941901", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/1", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/7941901"}, "html": {"href": "https://github.com/google/oauth2client/pull/1#discussion_r7941901"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/1"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/7941901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12532490", "pull_request_review_id": null, "id": 12532490, "diff_hunk": "@@ -128,7 +128,7 @@ def from_string(key, password='notasecret'):\n       if parsed_pem_key:\n         pkey = crypto.load_privatekey(crypto.FILETYPE_PEM, parsed_pem_key)\n       else:\n-        pkey = crypto.load_pkcs12(key, password).get_privatekey()\n+        pkey = crypto.load_pkcs12(file(key,\"rb\").read(),str(password)).get_privatekey()", "path": "oauth2client/crypt.py", "position": null, "original_position": 5, "commit_id": "d7960cfd0eb0a264f22788f562d5be54c8d3d6d8", "original_commit_id": "daeacbe15e59f58d3ffd6e04e0a9aadc3d5c6722", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "body": "I would have thought \"open(key)\" instead of file. Also, you'd need to do, eg\nwith open(key) as key_file:\n  ... key_file.read() ...\n", "created_at": "2014-05-12T14:45:04Z", "updated_at": "2014-05-12T15:05:25Z", "html_url": "https://github.com/google/oauth2client/pull/8#discussion_r12532490", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/8", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12532490"}, "html": {"href": "https://github.com/google/oauth2client/pull/8#discussion_r12532490"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/8"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12532490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12573001", "pull_request_review_id": null, "id": 12573001, "diff_hunk": "@@ -116,14 +116,19 @@ def locked_get(self):\n         credential.set_store(self)\n     return credential\n \n-  def locked_put(self, credentials):\n+  def locked_put(self, credentials, overwrite=False):\n     \"\"\"Write a Credentials to the datastore.\n \n     Args:\n       credentials: Credentials, the credentials to store.", "path": "oauth2client/django_orm.py", "position": 9, "original_position": 9, "commit_id": "56f0ecd33e3e87ee687f21da7e135d376572e09e", "original_commit_id": "e2e988f8d6619e903769667dd1b25f8c213cb1c0", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Could you add a description of the new argument to the docstring?\n", "created_at": "2014-05-13T08:48:42Z", "updated_at": "2014-05-14T16:14:10Z", "html_url": "https://github.com/google/oauth2client/pull/2#discussion_r12573001", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/2", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12573001"}, "html": {"href": "https://github.com/google/oauth2client/pull/2#discussion_r12573001"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/2"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12573001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12573027", "pull_request_review_id": null, "id": 12573027, "diff_hunk": "@@ -116,14 +116,19 @@ def locked_get(self):\n         credential.set_store(self)\n     return credential\n \n-  def locked_put(self, credentials):\n+  def locked_put(self, credentials, overwrite=False):\n     \"\"\"Write a Credentials to the datastore.\n \n     Args:\n       credentials: Credentials, the credentials to store.\n     \"\"\"\n     args = {self.key_name: self.key_value}\n-    entity = self.model_class(**args)\n+    \n+    if overwrite: \n+      entity, is_new = self.model_class.objects.get_or_create(**args)", "path": "oauth2client/django_orm.py", "position": null, "original_position": 15, "commit_id": "56f0ecd33e3e87ee687f21da7e135d376572e09e", "original_commit_id": "e2e988f8d6619e903769667dd1b25f8c213cb1c0", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Did you want to use `is_new`? If not, maybe just call it `unused_is_new` or `_`?\n", "created_at": "2014-05-13T08:49:33Z", "updated_at": "2014-05-14T16:14:10Z", "html_url": "https://github.com/google/oauth2client/pull/2#discussion_r12573027", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/2", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12573027"}, "html": {"href": "https://github.com/google/oauth2client/pull/2#discussion_r12573027"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/2"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12573027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12750814", "pull_request_review_id": null, "id": 12750814, "diff_hunk": "@@ -128,7 +128,7 @@ def from_string(key, password='notasecret'):\n       if parsed_pem_key:\n         pkey = crypto.load_privatekey(crypto.FILETYPE_PEM, parsed_pem_key)\n       else:\n-        pkey = crypto.load_pkcs12(key, password).get_privatekey()\n+        pkey = crypto.load_pkcs12(key, str(password)).get_privatekey()", "path": "oauth2client/crypt.py", "position": 5, "original_position": 5, "commit_id": "0b5b6175b288ae815a22b1c490317339647c4eab", "original_commit_id": "0b5b6175b288ae815a22b1c490317339647c4eab", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "should we be worried about the case of actual non-ascii characters in password?\n", "created_at": "2014-05-16T17:48:25Z", "updated_at": "2014-05-16T17:48:25Z", "html_url": "https://github.com/google/oauth2client/pull/9#discussion_r12750814", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/9", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12750814"}, "html": {"href": "https://github.com/google/oauth2client/pull/9#discussion_r12750814"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/9"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12750814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12758525", "pull_request_review_id": null, "id": 12758525, "diff_hunk": "@@ -0,0 +1,215 @@\n+# Copyright (C) 2014 Google Inc.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"Provides default Credentials to be used in authenticating Google APIs calls.\n+\n+Here is an example of how to use the default credentials for a service that\n+requires authentication:\n+\n+<code>\n+from googleapiclient.discovery import build\n+from oauth2client.default_credential import GoogleCredential\n+\n+PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+service = build('compute', 'v1',\n+    credential=GoogleCredential.get_default_credential())\n+\n+resource = service.instances()\n+request = resource.list(project=PROJECT, zone=ZONE)\n+response = request.execute()\n+\n+print response\n+</code>\n+\n+A service that does not require authentication does not need a credential\n+to be passed in:\n+\n+<code>\n+from googleapiclient.discovery import build\n+from oauth2client.default_credential import GoogleCredential\n+\n+service = build('discovery', 'v1')\n+resource = service.apis()\n+request = resource.list()\n+response = request.execute()\n+\n+print response\n+</code>\n+\"\"\"\n+\n+__author__ = 'orest@google.com (Orest Bolohan)'\n+\n+import os\n+\n+class GoogleCredential:\n+  \"\"\"Conveniently wrap the get_default_credential method.\n+  \n+  This is to keep it in line with the Java implementation's idiom.\n+  \"\"\"\n+  \n+  @staticmethod\n+  def get_default_credential(scopes=[]):\n+    \"\"\"Get the default credentials with the given scopes.\"\"\"\n+    \n+    env_name = get_environment()\n+    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT')\n+      well_known_file = get_well_known_file()\n+\n+    if default_credential_file:\n+      return get_default_credential_from_file(default_credential_file, scopes)\n+    elif well_known_file:\n+      return get_default_credential_from_file(well_known_file, scopes)\n+    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return get_default_credential_GAE(scopes)\n+    elif env_name == 'GCE_PRODUCTION':\n+      return get_default_credential_GCE(scopes)\n+    else:\n+      raise Exception('Either GOOGLE_CREDENTIALS_DEFAULT '", "path": "oauth2client/default_credential.py", "position": null, "original_position": 86, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "0342e21dcc4a73b6812c7396f70c5f06c9ad37c7", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "We want to raise exceptions from this package, not just base `Exception`\n\n(sample comment)\n", "created_at": "2014-05-16T20:38:30Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12758525", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12758525"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12758525"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12758525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810102", "pull_request_review_id": null, "id": 12810102, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Provides default credentials to be used in authenticating", "path": "oauth2client/client.py", "position": null, "original_position": 28, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "If this is the starting point for the online docs, I would include a very breif summary what this does, i.e it uses the GAE or GCE built in service accounts, or it uses the environment variable or it uses the credential provided by \"gcloud auth logic\"\n", "created_at": "2014-05-19T18:56:37Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12810102", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810102"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12810102"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810194", "pull_request_review_id": null, "id": 12810194, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Provides default credentials to be used in authenticating\n+    Google APIs calls.\n+\n+    Here is an example of how to use the default credentials for a service that\n+    requires authentication:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+    from oauth2client.client import Credentials\n+\n+    PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+    ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+    service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+    resource = service.instances()\n+    request = resource.list(project=PROJECT, zone=ZONE)\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+\n+    A service that does not require authentication does not need credentials\n+    to be passed in:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+\n+    service = build('discovery', 'v1')\n+    resource = service.apis()\n+    request = resource.list()\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+    \"\"\"\n+\n+    env_name = _get_environment()\n+    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_google_credentials_default()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      return _get_default_credential_from_file(default_credential_file, True)\n+    elif well_known_file:\n+      return _get_default_credential_from_file(well_known_file, False)\n+    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise Exception('Either GOOGLE_CREDENTIALS_DEFAULT '\n+                      'environment variable must be set or you need '\n+                      'to run \"gcloud auth login\"! '\n+                      'Please see https://developers.google.com/'\n+                      'accounts/docs/default-credential')\n+\n+\n+def _get_google_credentials_default():", "path": "oauth2client/client.py", "position": null, "original_position": 91, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "A nit: I found the name of this method confusing at first before i read the code to discover that it is environment variable path. Perhaps call it _get_environment_variable_credentials or something with environment_variable in it.\n", "created_at": "2014-05-19T18:58:54Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12810194", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810194"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12810194"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810297", "pull_request_review_id": null, "id": 12810297, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Provides default credentials to be used in authenticating\n+    Google APIs calls.\n+\n+    Here is an example of how to use the default credentials for a service that\n+    requires authentication:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+    from oauth2client.client import Credentials\n+\n+    PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+    ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+    service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+    resource = service.instances()\n+    request = resource.list(project=PROJECT, zone=ZONE)\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+\n+    A service that does not require authentication does not need credentials\n+    to be passed in:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+\n+    service = build('discovery', 'v1')\n+    resource = service.apis()\n+    request = resource.list()\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+    \"\"\"\n+\n+    env_name = _get_environment()\n+    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_google_credentials_default()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      return _get_default_credential_from_file(default_credential_file, True)\n+    elif well_known_file:\n+      return _get_default_credential_from_file(well_known_file, False)\n+    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise Exception('Either GOOGLE_CREDENTIALS_DEFAULT '\n+                      'environment variable must be set or you need '\n+                      'to run \"gcloud auth login\"! '\n+                      'Please see https://developers.google.com/'\n+                      'accounts/docs/default-credential')\n+\n+\n+def _get_google_credentials_default():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT')\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise Exception('File ' + default_credential_file +\n+                      ' (pointed by GOOGLE_CREDENTIALS_DEFAULT environment'\n+                      ' variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = \"credentials_default.json\"\n+  CLOUDSDK_CONFIG_WORD = \"gcloud\"", "path": "oauth2client/client.py", "position": null, "original_position": 107, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "In the Java version, Brian Eaton suggested I change this to CLOUDSDK_CONFIG_DIRECTORY.\n", "created_at": "2014-05-19T19:00:33Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12810297", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810297"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12810297"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810382", "pull_request_review_id": null, "id": 12810382, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Provides default credentials to be used in authenticating\n+    Google APIs calls.\n+\n+    Here is an example of how to use the default credentials for a service that\n+    requires authentication:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+    from oauth2client.client import Credentials\n+\n+    PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+    ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+    service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+    resource = service.instances()\n+    request = resource.list(project=PROJECT, zone=ZONE)\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+\n+    A service that does not require authentication does not need credentials\n+    to be passed in:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+\n+    service = build('discovery', 'v1')\n+    resource = service.apis()\n+    request = resource.list()\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+    \"\"\"\n+\n+    env_name = _get_environment()\n+    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_google_credentials_default()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      return _get_default_credential_from_file(default_credential_file, True)\n+    elif well_known_file:\n+      return _get_default_credential_from_file(well_known_file, False)\n+    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise Exception('Either GOOGLE_CREDENTIALS_DEFAULT '\n+                      'environment variable must be set or you need '\n+                      'to run \"gcloud auth login\"! '\n+                      'Please see https://developers.google.com/'\n+                      'accounts/docs/default-credential')\n+\n+\n+def _get_google_credentials_default():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT')\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise Exception('File ' + default_credential_file +\n+                      ' (pointed by GOOGLE_CREDENTIALS_DEFAULT environment'\n+                      ' variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = \"credentials_default.json\"\n+  CLOUDSDK_CONFIG_WORD = \"gcloud\"\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(\n+          os.environ['APPDATA'], CLOUDSDK_CONFIG_WORD)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(\n+          drive, '\\\\', CLOUDSDK_CONFIG_WORD)\n+  else:\n+    default_config_path = os.path.join(\n+        os.path.expanduser('~'), '.config', CLOUDSDK_CONFIG_WORD)\n+\n+  default_config_path = os.path.join(default_config_path,\n+      WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_environment():\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    return 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    return 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      response, _ = httplib2.Http().request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        return 'GCE_PRODUCTION'\n+      else:\n+        return 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      return 'UNKNOWN'\n+\n+\n+def _get_default_credential_from_file(default_credential_file,\n+                                      google_credentials_default):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  try:\n+    # read the credentials from the file\n+    with open(default_credential_file) as default_credential:\n+      client_credentials = service_account.simplejson.load(default_credential)\n+\n+    if ('type' not in client_credentials or\n+        client_credentials['type'] != 'authorized_user' and\n+        client_credentials['type'] != 'service_account'):\n+      raise Exception(\"'type' field should be defined \"\n+                      \"(and have one of the 'authorized_user' \"\n+                      \"or 'service_account' values)\")\n+\n+    if client_credentials['type'] == 'authorized_user':\n+      missing_fields = []\n+      if 'client_id' not in client_credentials:\n+        missing_fields.append('client_id')\n+      if 'client_secret' not in client_credentials:\n+        missing_fields.append('client_secret')\n+      if 'refresh_token' not in client_credentials:\n+        missing_fields.append('refresh_token')\n+      if len(missing_fields) > 0:\n+        _raise_exception_for_missing_fields(missing_fields)\n+\n+      return OAuth2Credentials(\n+          None,\n+          client_credentials['client_id'],\n+          client_credentials['client_secret'],\n+          client_credentials['refresh_token'],\n+          None,\n+          'https://accounts.google.com/o/oauth2/token',", "path": "oauth2client/client.py", "position": null, "original_position": 187, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "This must be used elsewhere in the file. Can it be a constant?\n", "created_at": "2014-05-19T19:02:02Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12810382", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810382"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12810382"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810417", "pull_request_review_id": null, "id": 12810417, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Provides default credentials to be used in authenticating\n+    Google APIs calls.\n+\n+    Here is an example of how to use the default credentials for a service that\n+    requires authentication:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+    from oauth2client.client import Credentials\n+\n+    PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+    ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+    service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+    resource = service.instances()\n+    request = resource.list(project=PROJECT, zone=ZONE)\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+\n+    A service that does not require authentication does not need credentials\n+    to be passed in:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+\n+    service = build('discovery', 'v1')\n+    resource = service.apis()\n+    request = resource.list()\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+    \"\"\"\n+\n+    env_name = _get_environment()\n+    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_google_credentials_default()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      return _get_default_credential_from_file(default_credential_file, True)\n+    elif well_known_file:\n+      return _get_default_credential_from_file(well_known_file, False)\n+    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise Exception('Either GOOGLE_CREDENTIALS_DEFAULT '\n+                      'environment variable must be set or you need '\n+                      'to run \"gcloud auth login\"! '\n+                      'Please see https://developers.google.com/'\n+                      'accounts/docs/default-credential')\n+\n+\n+def _get_google_credentials_default():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT')\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise Exception('File ' + default_credential_file +\n+                      ' (pointed by GOOGLE_CREDENTIALS_DEFAULT environment'\n+                      ' variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = \"credentials_default.json\"\n+  CLOUDSDK_CONFIG_WORD = \"gcloud\"\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(\n+          os.environ['APPDATA'], CLOUDSDK_CONFIG_WORD)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(\n+          drive, '\\\\', CLOUDSDK_CONFIG_WORD)\n+  else:\n+    default_config_path = os.path.join(\n+        os.path.expanduser('~'), '.config', CLOUDSDK_CONFIG_WORD)\n+\n+  default_config_path = os.path.join(default_config_path,\n+      WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_environment():\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    return 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    return 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      response, _ = httplib2.Http().request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        return 'GCE_PRODUCTION'\n+      else:\n+        return 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      return 'UNKNOWN'\n+\n+\n+def _get_default_credential_from_file(default_credential_file,\n+                                      google_credentials_default):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  try:\n+    # read the credentials from the file\n+    with open(default_credential_file) as default_credential:\n+      client_credentials = service_account.simplejson.load(default_credential)\n+\n+    if ('type' not in client_credentials or\n+        client_credentials['type'] != 'authorized_user' and\n+        client_credentials['type'] != 'service_account'):\n+      raise Exception(\"'type' field should be defined \"\n+                      \"(and have one of the 'authorized_user' \"\n+                      \"or 'service_account' values)\")\n+\n+    if client_credentials['type'] == 'authorized_user':\n+      missing_fields = []\n+      if 'client_id' not in client_credentials:\n+        missing_fields.append('client_id')\n+      if 'client_secret' not in client_credentials:\n+        missing_fields.append('client_secret')\n+      if 'refresh_token' not in client_credentials:\n+        missing_fields.append('refresh_token')\n+      if len(missing_fields) > 0:\n+        _raise_exception_for_missing_fields(missing_fields)\n+\n+      return OAuth2Credentials(\n+          None,", "path": "oauth2client/client.py", "position": null, "original_position": 182, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "Minor: this call might be a good place to use named arguments as many of the arguments are not obvious from context.\n", "created_at": "2014-05-19T19:02:50Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12810417", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810417"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12810417"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810444", "pull_request_review_id": null, "id": 12810444, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Provides default credentials to be used in authenticating\n+    Google APIs calls.\n+\n+    Here is an example of how to use the default credentials for a service that\n+    requires authentication:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+    from oauth2client.client import Credentials\n+\n+    PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+    ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+    service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+    resource = service.instances()\n+    request = resource.list(project=PROJECT, zone=ZONE)\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+\n+    A service that does not require authentication does not need credentials\n+    to be passed in:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+\n+    service = build('discovery', 'v1')\n+    resource = service.apis()\n+    request = resource.list()\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+    \"\"\"\n+\n+    env_name = _get_environment()\n+    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_google_credentials_default()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      return _get_default_credential_from_file(default_credential_file, True)\n+    elif well_known_file:\n+      return _get_default_credential_from_file(well_known_file, False)\n+    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise Exception('Either GOOGLE_CREDENTIALS_DEFAULT '\n+                      'environment variable must be set or you need '\n+                      'to run \"gcloud auth login\"! '\n+                      'Please see https://developers.google.com/'\n+                      'accounts/docs/default-credential')\n+\n+\n+def _get_google_credentials_default():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT')\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise Exception('File ' + default_credential_file +\n+                      ' (pointed by GOOGLE_CREDENTIALS_DEFAULT environment'\n+                      ' variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = \"credentials_default.json\"\n+  CLOUDSDK_CONFIG_WORD = \"gcloud\"\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(\n+          os.environ['APPDATA'], CLOUDSDK_CONFIG_WORD)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(\n+          drive, '\\\\', CLOUDSDK_CONFIG_WORD)\n+  else:\n+    default_config_path = os.path.join(\n+        os.path.expanduser('~'), '.config', CLOUDSDK_CONFIG_WORD)\n+\n+  default_config_path = os.path.join(default_config_path,\n+      WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_environment():\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    return 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    return 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      response, _ = httplib2.Http().request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        return 'GCE_PRODUCTION'\n+      else:\n+        return 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      return 'UNKNOWN'\n+\n+\n+def _get_default_credential_from_file(default_credential_file,\n+                                      google_credentials_default):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  try:\n+    # read the credentials from the file\n+    with open(default_credential_file) as default_credential:\n+      client_credentials = service_account.simplejson.load(default_credential)\n+\n+    if ('type' not in client_credentials or\n+        client_credentials['type'] != 'authorized_user' and\n+        client_credentials['type'] != 'service_account'):\n+      raise Exception(\"'type' field should be defined \"\n+                      \"(and have one of the 'authorized_user' \"\n+                      \"or 'service_account' values)\")\n+\n+    if client_credentials['type'] == 'authorized_user':\n+      missing_fields = []\n+      if 'client_id' not in client_credentials:\n+        missing_fields.append('client_id')\n+      if 'client_secret' not in client_credentials:\n+        missing_fields.append('client_secret')\n+      if 'refresh_token' not in client_credentials:\n+        missing_fields.append('refresh_token')\n+      if len(missing_fields) > 0:\n+        _raise_exception_for_missing_fields(missing_fields)\n+\n+      return OAuth2Credentials(\n+          None,\n+          client_credentials['client_id'],\n+          client_credentials['client_secret'],\n+          client_credentials['refresh_token'],\n+          None,\n+          'https://accounts.google.com/o/oauth2/token',\n+          'Python client library')\n+    elif client_credentials['type'] == 'service_account':\n+      missing_fields = []\n+      if 'client_email' not in client_credentials:\n+        missing_fields.append('client_email')\n+      if 'private_key_id' not in client_credentials:\n+        missing_fields.append('private_key_id')\n+      if 'private_key' not in client_credentials:\n+        missing_fields.append('private_key')\n+      if len(missing_fields) > 0:\n+        _raise_exception_for_missing_fields(missing_fields)\n+\n+      return service_account.ServiceAccountCredentials(\n+          client_credentials['client_email'],\n+          client_credentials['private_key_id'],\n+          client_credentials['private_key'],\n+          [])", "path": "oauth2client/client.py", "position": null, "original_position": 204, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "Named argument just for the scopes might be more readable.\n", "created_at": "2014-05-19T19:03:30Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12810444", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810444"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12810444"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810540", "pull_request_review_id": null, "id": 12810540, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Provides default credentials to be used in authenticating\n+    Google APIs calls.\n+\n+    Here is an example of how to use the default credentials for a service that\n+    requires authentication:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+    from oauth2client.client import Credentials\n+\n+    PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+    ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+    service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+    resource = service.instances()\n+    request = resource.list(project=PROJECT, zone=ZONE)\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+\n+    A service that does not require authentication does not need credentials\n+    to be passed in:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+\n+    service = build('discovery', 'v1')\n+    resource = service.apis()\n+    request = resource.list()\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+    \"\"\"\n+\n+    env_name = _get_environment()\n+    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_google_credentials_default()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      return _get_default_credential_from_file(default_credential_file, True)\n+    elif well_known_file:\n+      return _get_default_credential_from_file(well_known_file, False)\n+    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise Exception('Either GOOGLE_CREDENTIALS_DEFAULT '\n+                      'environment variable must be set or you need '\n+                      'to run \"gcloud auth login\"! '\n+                      'Please see https://developers.google.com/'\n+                      'accounts/docs/default-credential')\n+\n+\n+def _get_google_credentials_default():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT')\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise Exception('File ' + default_credential_file +\n+                      ' (pointed by GOOGLE_CREDENTIALS_DEFAULT environment'\n+                      ' variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = \"credentials_default.json\"\n+  CLOUDSDK_CONFIG_WORD = \"gcloud\"\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(\n+          os.environ['APPDATA'], CLOUDSDK_CONFIG_WORD)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(\n+          drive, '\\\\', CLOUDSDK_CONFIG_WORD)\n+  else:\n+    default_config_path = os.path.join(\n+        os.path.expanduser('~'), '.config', CLOUDSDK_CONFIG_WORD)\n+\n+  default_config_path = os.path.join(default_config_path,\n+      WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_environment():\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    return 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    return 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      response, _ = httplib2.Http().request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        return 'GCE_PRODUCTION'\n+      else:\n+        return 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      return 'UNKNOWN'\n+\n+\n+def _get_default_credential_from_file(default_credential_file,\n+                                      google_credentials_default):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  try:\n+    # read the credentials from the file\n+    with open(default_credential_file) as default_credential:\n+      client_credentials = service_account.simplejson.load(default_credential)\n+\n+    if ('type' not in client_credentials or\n+        client_credentials['type'] != 'authorized_user' and\n+        client_credentials['type'] != 'service_account'):\n+      raise Exception(\"'type' field should be defined \"\n+                      \"(and have one of the 'authorized_user' \"\n+                      \"or 'service_account' values)\")\n+\n+    if client_credentials['type'] == 'authorized_user':\n+      missing_fields = []\n+      if 'client_id' not in client_credentials:\n+        missing_fields.append('client_id')\n+      if 'client_secret' not in client_credentials:\n+        missing_fields.append('client_secret')\n+      if 'refresh_token' not in client_credentials:\n+        missing_fields.append('refresh_token')\n+      if len(missing_fields) > 0:\n+        _raise_exception_for_missing_fields(missing_fields)\n+\n+      return OAuth2Credentials(\n+          None,\n+          client_credentials['client_id'],\n+          client_credentials['client_secret'],\n+          client_credentials['refresh_token'],\n+          None,\n+          'https://accounts.google.com/o/oauth2/token',\n+          'Python client library')\n+    elif client_credentials['type'] == 'service_account':\n+      missing_fields = []\n+      if 'client_email' not in client_credentials:\n+        missing_fields.append('client_email')\n+      if 'private_key_id' not in client_credentials:\n+        missing_fields.append('private_key_id')\n+      if 'private_key' not in client_credentials:\n+        missing_fields.append('private_key')\n+      if len(missing_fields) > 0:\n+        _raise_exception_for_missing_fields(missing_fields)\n+\n+      return service_account.ServiceAccountCredentials(", "path": "oauth2client/client.py", "position": null, "original_position": 200, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "In the Java version we do check for an pass in the \"client_id\" in addition to the email. The Java class does actually have inputs for it, although it does not seem to do anything interesting with them other than make them visible on the object. We should perhaps discuss this in the next meeting.\n", "created_at": "2014-05-19T19:05:42Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12810540", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810540"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12810540"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810713", "pull_request_review_id": null, "id": 12810713, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Provides default credentials to be used in authenticating\n+    Google APIs calls.\n+\n+    Here is an example of how to use the default credentials for a service that\n+    requires authentication:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+    from oauth2client.client import Credentials\n+\n+    PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+    ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+    service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+    resource = service.instances()\n+    request = resource.list(project=PROJECT, zone=ZONE)\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+\n+    A service that does not require authentication does not need credentials\n+    to be passed in:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+\n+    service = build('discovery', 'v1')\n+    resource = service.apis()\n+    request = resource.list()\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+    \"\"\"\n+\n+    env_name = _get_environment()\n+    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_google_credentials_default()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      return _get_default_credential_from_file(default_credential_file, True)\n+    elif well_known_file:\n+      return _get_default_credential_from_file(well_known_file, False)\n+    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise Exception('Either GOOGLE_CREDENTIALS_DEFAULT '\n+                      'environment variable must be set or you need '\n+                      'to run \"gcloud auth login\"! '\n+                      'Please see https://developers.google.com/'\n+                      'accounts/docs/default-credential')\n+\n+\n+def _get_google_credentials_default():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT')\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise Exception('File ' + default_credential_file +\n+                      ' (pointed by GOOGLE_CREDENTIALS_DEFAULT environment'\n+                      ' variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = \"credentials_default.json\"\n+  CLOUDSDK_CONFIG_WORD = \"gcloud\"\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(\n+          os.environ['APPDATA'], CLOUDSDK_CONFIG_WORD)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(\n+          drive, '\\\\', CLOUDSDK_CONFIG_WORD)\n+  else:\n+    default_config_path = os.path.join(\n+        os.path.expanduser('~'), '.config', CLOUDSDK_CONFIG_WORD)\n+\n+  default_config_path = os.path.join(default_config_path,\n+      WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_environment():\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    return 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    return 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      response, _ = httplib2.Http().request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        return 'GCE_PRODUCTION'\n+      else:\n+        return 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      return 'UNKNOWN'\n+\n+\n+def _get_default_credential_from_file(default_credential_file,\n+                                      google_credentials_default):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  try:\n+    # read the credentials from the file\n+    with open(default_credential_file) as default_credential:\n+      client_credentials = service_account.simplejson.load(default_credential)\n+\n+    if ('type' not in client_credentials or\n+        client_credentials['type'] != 'authorized_user' and\n+        client_credentials['type'] != 'service_account'):\n+      raise Exception(\"'type' field should be defined \"\n+                      \"(and have one of the 'authorized_user' \"\n+                      \"or 'service_account' values)\")\n+\n+    if client_credentials['type'] == 'authorized_user':\n+      missing_fields = []\n+      if 'client_id' not in client_credentials:\n+        missing_fields.append('client_id')\n+      if 'client_secret' not in client_credentials:\n+        missing_fields.append('client_secret')\n+      if 'refresh_token' not in client_credentials:\n+        missing_fields.append('refresh_token')\n+      if len(missing_fields) > 0:\n+        _raise_exception_for_missing_fields(missing_fields)\n+\n+      return OAuth2Credentials(\n+          None,\n+          client_credentials['client_id'],\n+          client_credentials['client_secret'],\n+          client_credentials['refresh_token'],\n+          None,\n+          'https://accounts.google.com/o/oauth2/token',\n+          'Python client library')\n+    elif client_credentials['type'] == 'service_account':\n+      missing_fields = []\n+      if 'client_email' not in client_credentials:\n+        missing_fields.append('client_email')\n+      if 'private_key_id' not in client_credentials:\n+        missing_fields.append('private_key_id')\n+      if 'private_key' not in client_credentials:\n+        missing_fields.append('private_key')\n+      if len(missing_fields) > 0:\n+        _raise_exception_for_missing_fields(missing_fields)\n+\n+      return service_account.ServiceAccountCredentials(\n+          client_credentials['client_email'],\n+          client_credentials['private_key_id'],\n+          client_credentials['private_key'],\n+          [])\n+  except Exception as ex:\n+    if google_credentials_default:", "path": "oauth2client/client.py", "position": null, "original_position": 206, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "This feels like an implementation detail of the calling method bleeding into the interior method. It may be more maintainble to have this catch in the calling method. This also allows implementing from_stream if we decide that it needs to be public.\n", "created_at": "2014-05-19T19:08:36Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12810713", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810713"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12810713"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810781", "pull_request_review_id": null, "id": 12810781, "diff_hunk": "@@ -0,0 +1,130 @@\n+# Copyright (C) 2014 Google Inc.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"A service account credentials class.\n+\n+This credentials class is implemented on top of rsa library.\n+\"\"\"\n+\n+__author__ = 'orest@google.com (Orest Bolohan)'\n+\n+import base64\n+import rsa\n+import time\n+import types\n+\n+from oauth2client import util\n+from oauth2client.anyjson import simplejson\n+from oauth2client.client import AssertionCredentials\n+\n+from pyasn1.codec.ber import decoder\n+from pyasn1_modules.rfc5208 import PrivateKeyInfo\n+\n+\n+class ServiceAccountCredentials(AssertionCredentials):\n+  \"\"\"Class representing a service account (signed JWT) credential.\"\"\"\n+\n+  GOOGLE_REVOKE_URI = 'https://accounts.google.com/o/oauth2/revoke'\n+  GOOGLE_TOKEN_URI = 'https://accounts.google.com/o/oauth2/token'\n+\n+  MAX_TOKEN_LIFETIME_SECS = 3600 # 1 hour in seconds\n+\n+  def __init__(self,\n+      service_account_email,", "path": "oauth2client/service_account.py", "position": null, "original_position": 44, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "As mentioned, we should discuss whether we shoul add service_account_id here.\n", "created_at": "2014-05-19T19:10:09Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12810781", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810781"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12810781"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810977", "pull_request_review_id": null, "id": 12810977, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod", "path": "oauth2client/client.py", "position": null, "original_position": 26, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "As per the spec, I was expecting this on a new class in this same file called GoogleCredentials inherited from Credentials.\n", "created_at": "2014-05-19T19:12:18Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12810977", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810977"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12810977"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12810977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12811023", "pull_request_review_id": null, "id": 12811023, "diff_hunk": "@@ -0,0 +1,16 @@\n+# To be used to test GoogleCredential.GetDefaultCredential()\n+# from local machine and GCE.\n+\n+from googleapiclient.discovery import build\n+from oauth2client.client import Credentials\n+\n+PROJECT = \"bamboo-machine-422\"  # Provide your own GCE project here\n+ZONE = \"us-central1-a\"          # Put here a zone which has some VMs\n+\n+service = build(\"compute\", \"v1\", credentials=Credentials.get_default())", "path": "samples/call_compute_service.py", "position": null, "original_position": 10, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "Expecting this to be GoogleCredentials.get_default()\n", "created_at": "2014-05-19T19:13:09Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12811023", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12811023"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12811023"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12811023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12811122", "pull_request_review_id": null, "id": 12811122, "diff_hunk": "@@ -0,0 +1,130 @@\n+# Copyright (C) 2014 Google Inc.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"A service account credentials class.\n+\n+This credentials class is implemented on top of rsa library.\n+\"\"\"\n+\n+__author__ = 'orest@google.com (Orest Bolohan)'\n+\n+import base64\n+import rsa\n+import time\n+import types\n+\n+from oauth2client import util\n+from oauth2client.anyjson import simplejson\n+from oauth2client.client import AssertionCredentials\n+\n+from pyasn1.codec.ber import decoder\n+from pyasn1_modules.rfc5208 import PrivateKeyInfo\n+\n+\n+class ServiceAccountCredentials(AssertionCredentials):", "path": "oauth2client/service_account.py", "position": null, "original_position": 35, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "It was expected that this class inherit from a new GoogleCredentials class. If AssertionCredentials can have that injected as a parent and that is not a breaking change in Python, that should do the trick.\n", "created_at": "2014-05-19T19:15:18Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12811122", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12811122"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12811122"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12811122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12811490", "pull_request_review_id": null, "id": 12811490, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Provides default credentials to be used in authenticating\n+    Google APIs calls.\n+\n+    Here is an example of how to use the default credentials for a service that\n+    requires authentication:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+    from oauth2client.client import Credentials\n+\n+    PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+    ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+    service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+    resource = service.instances()\n+    request = resource.list(project=PROJECT, zone=ZONE)\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+\n+    A service that does not require authentication does not need credentials\n+    to be passed in:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+\n+    service = build('discovery', 'v1')\n+    resource = service.apis()\n+    request = resource.list()\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+    \"\"\"\n+", "path": "oauth2client/client.py", "position": null, "original_position": 64, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "The java implementation caches this in a static variable, and the non-functional requirements indicate that repeated calls should not need to recreate the instance, re-parse files, etc. This also requires simple locking on the fetch. This is non-trivial to test. I Java I did this by putting all the static state into an internal class only visible to the tests, and this also makes the tests thread-safe if run concurrently. \n", "created_at": "2014-05-19T19:24:03Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12811490", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12811490"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12811490"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12811490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12811731", "pull_request_review_id": null, "id": 12811731, "diff_hunk": "@@ -100,12 +101,21 @@ def set(self, key, value, namespace=''):\n ", "path": "tests/test_oauth2client.py", "position": 1, "original_position": 9, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "Some potential gaps in the testing: it would be good to test the file format parsing, and exposing and testing _from_stream should enable this, as that part of the call would not touch the file system, environment variables, etc. Coverage of the error cases is important too.\n\nThere seems to be no coverage of the environment variable or well known file discovery paths, including errors. These are not straight-forward to test so, it might not be inconsistent with the depth of the testing that exists already to skip or defer these. In Java I did this with an internal class holding both the state and virtual methods to allow mocking things like checking for files or reading environment variables. \n", "created_at": "2014-05-19T19:29:18Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12811731", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12811731"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12811731"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12811731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821292", "pull_request_review_id": null, "id": 12821292, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod", "path": "oauth2client/client.py", "position": null, "original_position": 26, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done. I made OAuth2Credentials inherit from GoogleCredentials, instead of Credentials. Hopefully this won't break the backwards compatibility.\n", "created_at": "2014-05-19T23:11:14Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12821292", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821292"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12821292"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821325", "pull_request_review_id": null, "id": 12821325, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Provides default credentials to be used in authenticating", "path": "oauth2client/client.py", "position": null, "original_position": 28, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "I moved the comment to the newly created GoogleCredentials class' level. I put a link to https://developers.google.com/accounts/docs/default-credentials for further details.\n", "created_at": "2014-05-19T23:12:19Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12821325", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821325"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12821325"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821358", "pull_request_review_id": null, "id": 12821358, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Provides default credentials to be used in authenticating\n+    Google APIs calls.\n+\n+    Here is an example of how to use the default credentials for a service that\n+    requires authentication:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+    from oauth2client.client import Credentials\n+\n+    PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+    ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+    service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+    resource = service.instances()\n+    request = resource.list(project=PROJECT, zone=ZONE)\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+\n+    A service that does not require authentication does not need credentials\n+    to be passed in:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+\n+    service = build('discovery', 'v1')\n+    resource = service.apis()\n+    request = resource.list()\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+    \"\"\"\n+", "path": "oauth2client/client.py", "position": null, "original_position": 64, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "I moved _env_name variable at the module level so it is static for all practical purposes.\n", "created_at": "2014-05-19T23:13:20Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12821358", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821358"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12821358"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821450", "pull_request_review_id": null, "id": 12821450, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Provides default credentials to be used in authenticating\n+    Google APIs calls.\n+\n+    Here is an example of how to use the default credentials for a service that\n+    requires authentication:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+    from oauth2client.client import Credentials\n+\n+    PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+    ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+    service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+    resource = service.instances()\n+    request = resource.list(project=PROJECT, zone=ZONE)\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+\n+    A service that does not require authentication does not need credentials\n+    to be passed in:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+\n+    service = build('discovery', 'v1')\n+    resource = service.apis()\n+    request = resource.list()\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+    \"\"\"\n+\n+    env_name = _get_environment()\n+    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_google_credentials_default()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      return _get_default_credential_from_file(default_credential_file, True)\n+    elif well_known_file:\n+      return _get_default_credential_from_file(well_known_file, False)\n+    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise Exception('Either GOOGLE_CREDENTIALS_DEFAULT '\n+                      'environment variable must be set or you need '\n+                      'to run \"gcloud auth login\"! '\n+                      'Please see https://developers.google.com/'\n+                      'accounts/docs/default-credential')\n+\n+\n+def _get_google_credentials_default():", "path": "oauth2client/client.py", "position": null, "original_position": 91, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "I changed it to _get_environment_variable_file().\n", "created_at": "2014-05-19T23:16:50Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12821450", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821450"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12821450"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821511", "pull_request_review_id": null, "id": 12821511, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Provides default credentials to be used in authenticating\n+    Google APIs calls.\n+\n+    Here is an example of how to use the default credentials for a service that\n+    requires authentication:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+    from oauth2client.client import Credentials\n+\n+    PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+    ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+    service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+    resource = service.instances()\n+    request = resource.list(project=PROJECT, zone=ZONE)\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+\n+    A service that does not require authentication does not need credentials\n+    to be passed in:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+\n+    service = build('discovery', 'v1')\n+    resource = service.apis()\n+    request = resource.list()\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+    \"\"\"\n+\n+    env_name = _get_environment()\n+    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_google_credentials_default()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      return _get_default_credential_from_file(default_credential_file, True)\n+    elif well_known_file:\n+      return _get_default_credential_from_file(well_known_file, False)\n+    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise Exception('Either GOOGLE_CREDENTIALS_DEFAULT '\n+                      'environment variable must be set or you need '\n+                      'to run \"gcloud auth login\"! '\n+                      'Please see https://developers.google.com/'\n+                      'accounts/docs/default-credential')\n+\n+\n+def _get_google_credentials_default():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT')\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise Exception('File ' + default_credential_file +\n+                      ' (pointed by GOOGLE_CREDENTIALS_DEFAULT environment'\n+                      ' variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = \"credentials_default.json\"\n+  CLOUDSDK_CONFIG_WORD = \"gcloud\"", "path": "oauth2client/client.py", "position": null, "original_position": 107, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-05-19T23:18:31Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12821511", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821511"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12821511"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821620", "pull_request_review_id": null, "id": 12821620, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Provides default credentials to be used in authenticating\n+    Google APIs calls.\n+\n+    Here is an example of how to use the default credentials for a service that\n+    requires authentication:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+    from oauth2client.client import Credentials\n+\n+    PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+    ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+    service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+    resource = service.instances()\n+    request = resource.list(project=PROJECT, zone=ZONE)\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+\n+    A service that does not require authentication does not need credentials\n+    to be passed in:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+\n+    service = build('discovery', 'v1')\n+    resource = service.apis()\n+    request = resource.list()\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+    \"\"\"\n+\n+    env_name = _get_environment()\n+    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_google_credentials_default()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      return _get_default_credential_from_file(default_credential_file, True)\n+    elif well_known_file:\n+      return _get_default_credential_from_file(well_known_file, False)\n+    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise Exception('Either GOOGLE_CREDENTIALS_DEFAULT '\n+                      'environment variable must be set or you need '\n+                      'to run \"gcloud auth login\"! '\n+                      'Please see https://developers.google.com/'\n+                      'accounts/docs/default-credential')\n+\n+\n+def _get_google_credentials_default():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT')\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise Exception('File ' + default_credential_file +\n+                      ' (pointed by GOOGLE_CREDENTIALS_DEFAULT environment'\n+                      ' variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = \"credentials_default.json\"\n+  CLOUDSDK_CONFIG_WORD = \"gcloud\"\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(\n+          os.environ['APPDATA'], CLOUDSDK_CONFIG_WORD)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(\n+          drive, '\\\\', CLOUDSDK_CONFIG_WORD)\n+  else:\n+    default_config_path = os.path.join(\n+        os.path.expanduser('~'), '.config', CLOUDSDK_CONFIG_WORD)\n+\n+  default_config_path = os.path.join(default_config_path,\n+      WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_environment():\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    return 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    return 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      response, _ = httplib2.Http().request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        return 'GCE_PRODUCTION'\n+      else:\n+        return 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      return 'UNKNOWN'\n+\n+\n+def _get_default_credential_from_file(default_credential_file,\n+                                      google_credentials_default):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  try:\n+    # read the credentials from the file\n+    with open(default_credential_file) as default_credential:\n+      client_credentials = service_account.simplejson.load(default_credential)\n+\n+    if ('type' not in client_credentials or\n+        client_credentials['type'] != 'authorized_user' and\n+        client_credentials['type'] != 'service_account'):\n+      raise Exception(\"'type' field should be defined \"\n+                      \"(and have one of the 'authorized_user' \"\n+                      \"or 'service_account' values)\")\n+\n+    if client_credentials['type'] == 'authorized_user':\n+      missing_fields = []\n+      if 'client_id' not in client_credentials:\n+        missing_fields.append('client_id')\n+      if 'client_secret' not in client_credentials:\n+        missing_fields.append('client_secret')\n+      if 'refresh_token' not in client_credentials:\n+        missing_fields.append('refresh_token')\n+      if len(missing_fields) > 0:\n+        _raise_exception_for_missing_fields(missing_fields)\n+\n+      return OAuth2Credentials(\n+          None,", "path": "oauth2client/client.py", "position": null, "original_position": 182, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-05-19T23:22:38Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12821620", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821620"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12821620"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821766", "pull_request_review_id": null, "id": 12821766, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Provides default credentials to be used in authenticating\n+    Google APIs calls.\n+\n+    Here is an example of how to use the default credentials for a service that\n+    requires authentication:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+    from oauth2client.client import Credentials\n+\n+    PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+    ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+    service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+    resource = service.instances()\n+    request = resource.list(project=PROJECT, zone=ZONE)\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+\n+    A service that does not require authentication does not need credentials\n+    to be passed in:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+\n+    service = build('discovery', 'v1')\n+    resource = service.apis()\n+    request = resource.list()\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+    \"\"\"\n+\n+    env_name = _get_environment()\n+    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_google_credentials_default()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      return _get_default_credential_from_file(default_credential_file, True)\n+    elif well_known_file:\n+      return _get_default_credential_from_file(well_known_file, False)\n+    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise Exception('Either GOOGLE_CREDENTIALS_DEFAULT '\n+                      'environment variable must be set or you need '\n+                      'to run \"gcloud auth login\"! '\n+                      'Please see https://developers.google.com/'\n+                      'accounts/docs/default-credential')\n+\n+\n+def _get_google_credentials_default():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT')\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise Exception('File ' + default_credential_file +\n+                      ' (pointed by GOOGLE_CREDENTIALS_DEFAULT environment'\n+                      ' variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = \"credentials_default.json\"\n+  CLOUDSDK_CONFIG_WORD = \"gcloud\"\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(\n+          os.environ['APPDATA'], CLOUDSDK_CONFIG_WORD)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(\n+          drive, '\\\\', CLOUDSDK_CONFIG_WORD)\n+  else:\n+    default_config_path = os.path.join(\n+        os.path.expanduser('~'), '.config', CLOUDSDK_CONFIG_WORD)\n+\n+  default_config_path = os.path.join(default_config_path,\n+      WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_environment():\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    return 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    return 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      response, _ = httplib2.Http().request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        return 'GCE_PRODUCTION'\n+      else:\n+        return 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      return 'UNKNOWN'\n+\n+\n+def _get_default_credential_from_file(default_credential_file,\n+                                      google_credentials_default):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  try:\n+    # read the credentials from the file\n+    with open(default_credential_file) as default_credential:\n+      client_credentials = service_account.simplejson.load(default_credential)\n+\n+    if ('type' not in client_credentials or\n+        client_credentials['type'] != 'authorized_user' and\n+        client_credentials['type'] != 'service_account'):\n+      raise Exception(\"'type' field should be defined \"\n+                      \"(and have one of the 'authorized_user' \"\n+                      \"or 'service_account' values)\")\n+\n+    if client_credentials['type'] == 'authorized_user':\n+      missing_fields = []\n+      if 'client_id' not in client_credentials:\n+        missing_fields.append('client_id')\n+      if 'client_secret' not in client_credentials:\n+        missing_fields.append('client_secret')\n+      if 'refresh_token' not in client_credentials:\n+        missing_fields.append('refresh_token')\n+      if len(missing_fields) > 0:\n+        _raise_exception_for_missing_fields(missing_fields)\n+\n+      return OAuth2Credentials(\n+          None,\n+          client_credentials['client_id'],\n+          client_credentials['client_secret'],\n+          client_credentials['refresh_token'],\n+          None,\n+          'https://accounts.google.com/o/oauth2/token',", "path": "oauth2client/client.py", "position": null, "original_position": 187, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-05-19T23:28:05Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12821766", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821766"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12821766"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12821766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12822188", "pull_request_review_id": null, "id": 12822188, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Provides default credentials to be used in authenticating\n+    Google APIs calls.\n+\n+    Here is an example of how to use the default credentials for a service that\n+    requires authentication:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+    from oauth2client.client import Credentials\n+\n+    PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+    ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+    service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+    resource = service.instances()\n+    request = resource.list(project=PROJECT, zone=ZONE)\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+\n+    A service that does not require authentication does not need credentials\n+    to be passed in:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+\n+    service = build('discovery', 'v1')\n+    resource = service.apis()\n+    request = resource.list()\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+    \"\"\"\n+\n+    env_name = _get_environment()\n+    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_google_credentials_default()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      return _get_default_credential_from_file(default_credential_file, True)\n+    elif well_known_file:\n+      return _get_default_credential_from_file(well_known_file, False)\n+    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise Exception('Either GOOGLE_CREDENTIALS_DEFAULT '\n+                      'environment variable must be set or you need '\n+                      'to run \"gcloud auth login\"! '\n+                      'Please see https://developers.google.com/'\n+                      'accounts/docs/default-credential')\n+\n+\n+def _get_google_credentials_default():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT')\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise Exception('File ' + default_credential_file +\n+                      ' (pointed by GOOGLE_CREDENTIALS_DEFAULT environment'\n+                      ' variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = \"credentials_default.json\"\n+  CLOUDSDK_CONFIG_WORD = \"gcloud\"\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(\n+          os.environ['APPDATA'], CLOUDSDK_CONFIG_WORD)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(\n+          drive, '\\\\', CLOUDSDK_CONFIG_WORD)\n+  else:\n+    default_config_path = os.path.join(\n+        os.path.expanduser('~'), '.config', CLOUDSDK_CONFIG_WORD)\n+\n+  default_config_path = os.path.join(default_config_path,\n+      WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_environment():\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    return 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    return 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      response, _ = httplib2.Http().request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        return 'GCE_PRODUCTION'\n+      else:\n+        return 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      return 'UNKNOWN'\n+\n+\n+def _get_default_credential_from_file(default_credential_file,\n+                                      google_credentials_default):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  try:\n+    # read the credentials from the file\n+    with open(default_credential_file) as default_credential:\n+      client_credentials = service_account.simplejson.load(default_credential)\n+\n+    if ('type' not in client_credentials or\n+        client_credentials['type'] != 'authorized_user' and\n+        client_credentials['type'] != 'service_account'):\n+      raise Exception(\"'type' field should be defined \"\n+                      \"(and have one of the 'authorized_user' \"\n+                      \"or 'service_account' values)\")\n+\n+    if client_credentials['type'] == 'authorized_user':\n+      missing_fields = []\n+      if 'client_id' not in client_credentials:\n+        missing_fields.append('client_id')\n+      if 'client_secret' not in client_credentials:\n+        missing_fields.append('client_secret')\n+      if 'refresh_token' not in client_credentials:\n+        missing_fields.append('refresh_token')\n+      if len(missing_fields) > 0:\n+        _raise_exception_for_missing_fields(missing_fields)\n+\n+      return OAuth2Credentials(\n+          None,\n+          client_credentials['client_id'],\n+          client_credentials['client_secret'],\n+          client_credentials['refresh_token'],\n+          None,\n+          'https://accounts.google.com/o/oauth2/token',\n+          'Python client library')\n+    elif client_credentials['type'] == 'service_account':\n+      missing_fields = []\n+      if 'client_email' not in client_credentials:\n+        missing_fields.append('client_email')\n+      if 'private_key_id' not in client_credentials:\n+        missing_fields.append('private_key_id')\n+      if 'private_key' not in client_credentials:\n+        missing_fields.append('private_key')\n+      if len(missing_fields) > 0:\n+        _raise_exception_for_missing_fields(missing_fields)\n+\n+      return service_account.ServiceAccountCredentials(", "path": "oauth2client/client.py", "position": null, "original_position": 200, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "I added the dummy client_id in the game.\nDo you want me to add a getter on the ServiceAccountCredentials class for it?\n", "created_at": "2014-05-19T23:43:44Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12822188", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12822188"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12822188"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12822188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12822298", "pull_request_review_id": null, "id": 12822298, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Provides default credentials to be used in authenticating\n+    Google APIs calls.\n+\n+    Here is an example of how to use the default credentials for a service that\n+    requires authentication:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+    from oauth2client.client import Credentials\n+\n+    PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+    ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+    service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+    resource = service.instances()\n+    request = resource.list(project=PROJECT, zone=ZONE)\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+\n+    A service that does not require authentication does not need credentials\n+    to be passed in:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+\n+    service = build('discovery', 'v1')\n+    resource = service.apis()\n+    request = resource.list()\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+    \"\"\"\n+\n+    env_name = _get_environment()\n+    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_google_credentials_default()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      return _get_default_credential_from_file(default_credential_file, True)\n+    elif well_known_file:\n+      return _get_default_credential_from_file(well_known_file, False)\n+    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise Exception('Either GOOGLE_CREDENTIALS_DEFAULT '\n+                      'environment variable must be set or you need '\n+                      'to run \"gcloud auth login\"! '\n+                      'Please see https://developers.google.com/'\n+                      'accounts/docs/default-credential')\n+\n+\n+def _get_google_credentials_default():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT')\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise Exception('File ' + default_credential_file +\n+                      ' (pointed by GOOGLE_CREDENTIALS_DEFAULT environment'\n+                      ' variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = \"credentials_default.json\"\n+  CLOUDSDK_CONFIG_WORD = \"gcloud\"\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(\n+          os.environ['APPDATA'], CLOUDSDK_CONFIG_WORD)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(\n+          drive, '\\\\', CLOUDSDK_CONFIG_WORD)\n+  else:\n+    default_config_path = os.path.join(\n+        os.path.expanduser('~'), '.config', CLOUDSDK_CONFIG_WORD)\n+\n+  default_config_path = os.path.join(default_config_path,\n+      WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_environment():\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    return 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    return 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      response, _ = httplib2.Http().request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        return 'GCE_PRODUCTION'\n+      else:\n+        return 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      return 'UNKNOWN'\n+\n+\n+def _get_default_credential_from_file(default_credential_file,\n+                                      google_credentials_default):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  try:\n+    # read the credentials from the file\n+    with open(default_credential_file) as default_credential:\n+      client_credentials = service_account.simplejson.load(default_credential)\n+\n+    if ('type' not in client_credentials or\n+        client_credentials['type'] != 'authorized_user' and\n+        client_credentials['type'] != 'service_account'):\n+      raise Exception(\"'type' field should be defined \"\n+                      \"(and have one of the 'authorized_user' \"\n+                      \"or 'service_account' values)\")\n+\n+    if client_credentials['type'] == 'authorized_user':\n+      missing_fields = []\n+      if 'client_id' not in client_credentials:\n+        missing_fields.append('client_id')\n+      if 'client_secret' not in client_credentials:\n+        missing_fields.append('client_secret')\n+      if 'refresh_token' not in client_credentials:\n+        missing_fields.append('refresh_token')\n+      if len(missing_fields) > 0:\n+        _raise_exception_for_missing_fields(missing_fields)\n+\n+      return OAuth2Credentials(\n+          None,\n+          client_credentials['client_id'],\n+          client_credentials['client_secret'],\n+          client_credentials['refresh_token'],\n+          None,\n+          'https://accounts.google.com/o/oauth2/token',\n+          'Python client library')\n+    elif client_credentials['type'] == 'service_account':\n+      missing_fields = []\n+      if 'client_email' not in client_credentials:\n+        missing_fields.append('client_email')\n+      if 'private_key_id' not in client_credentials:\n+        missing_fields.append('private_key_id')\n+      if 'private_key' not in client_credentials:\n+        missing_fields.append('private_key')\n+      if len(missing_fields) > 0:\n+        _raise_exception_for_missing_fields(missing_fields)\n+\n+      return service_account.ServiceAccountCredentials(\n+          client_credentials['client_email'],\n+          client_credentials['private_key_id'],\n+          client_credentials['private_key'],\n+          [])", "path": "oauth2client/client.py", "position": null, "original_position": 204, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Added for all of them, to be consistent.\n", "created_at": "2014-05-19T23:47:01Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12822298", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12822298"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12822298"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12822298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12823001", "pull_request_review_id": null, "id": 12823001, "diff_hunk": "@@ -242,6 +257,211 @@ def from_json(cls, s):\n     \"\"\"\n     return Credentials()\n \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Provides default credentials to be used in authenticating\n+    Google APIs calls.\n+\n+    Here is an example of how to use the default credentials for a service that\n+    requires authentication:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+    from oauth2client.client import Credentials\n+\n+    PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+    ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+    service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+    resource = service.instances()\n+    request = resource.list(project=PROJECT, zone=ZONE)\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+\n+    A service that does not require authentication does not need credentials\n+    to be passed in:\n+\n+    <code>\n+    from googleapiclient.discovery import build\n+\n+    service = build('discovery', 'v1')\n+    resource = service.apis()\n+    request = resource.list()\n+    response = request.execute()\n+\n+    print response\n+    </code>\n+    \"\"\"\n+\n+    env_name = _get_environment()\n+    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_google_credentials_default()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      return _get_default_credential_from_file(default_credential_file, True)\n+    elif well_known_file:\n+      return _get_default_credential_from_file(well_known_file, False)\n+    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise Exception('Either GOOGLE_CREDENTIALS_DEFAULT '\n+                      'environment variable must be set or you need '\n+                      'to run \"gcloud auth login\"! '\n+                      'Please see https://developers.google.com/'\n+                      'accounts/docs/default-credential')\n+\n+\n+def _get_google_credentials_default():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT')\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise Exception('File ' + default_credential_file +\n+                      ' (pointed by GOOGLE_CREDENTIALS_DEFAULT environment'\n+                      ' variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = \"credentials_default.json\"\n+  CLOUDSDK_CONFIG_WORD = \"gcloud\"\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(\n+          os.environ['APPDATA'], CLOUDSDK_CONFIG_WORD)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(\n+          drive, '\\\\', CLOUDSDK_CONFIG_WORD)\n+  else:\n+    default_config_path = os.path.join(\n+        os.path.expanduser('~'), '.config', CLOUDSDK_CONFIG_WORD)\n+\n+  default_config_path = os.path.join(default_config_path,\n+      WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_environment():\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    return 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    return 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      response, _ = httplib2.Http().request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        return 'GCE_PRODUCTION'\n+      else:\n+        return 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      return 'UNKNOWN'\n+\n+\n+def _get_default_credential_from_file(default_credential_file,\n+                                      google_credentials_default):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  try:\n+    # read the credentials from the file\n+    with open(default_credential_file) as default_credential:\n+      client_credentials = service_account.simplejson.load(default_credential)\n+\n+    if ('type' not in client_credentials or\n+        client_credentials['type'] != 'authorized_user' and\n+        client_credentials['type'] != 'service_account'):\n+      raise Exception(\"'type' field should be defined \"\n+                      \"(and have one of the 'authorized_user' \"\n+                      \"or 'service_account' values)\")\n+\n+    if client_credentials['type'] == 'authorized_user':\n+      missing_fields = []\n+      if 'client_id' not in client_credentials:\n+        missing_fields.append('client_id')\n+      if 'client_secret' not in client_credentials:\n+        missing_fields.append('client_secret')\n+      if 'refresh_token' not in client_credentials:\n+        missing_fields.append('refresh_token')\n+      if len(missing_fields) > 0:\n+        _raise_exception_for_missing_fields(missing_fields)\n+\n+      return OAuth2Credentials(\n+          None,\n+          client_credentials['client_id'],\n+          client_credentials['client_secret'],\n+          client_credentials['refresh_token'],\n+          None,\n+          'https://accounts.google.com/o/oauth2/token',\n+          'Python client library')\n+    elif client_credentials['type'] == 'service_account':\n+      missing_fields = []\n+      if 'client_email' not in client_credentials:\n+        missing_fields.append('client_email')\n+      if 'private_key_id' not in client_credentials:\n+        missing_fields.append('private_key_id')\n+      if 'private_key' not in client_credentials:\n+        missing_fields.append('private_key')\n+      if len(missing_fields) > 0:\n+        _raise_exception_for_missing_fields(missing_fields)\n+\n+      return service_account.ServiceAccountCredentials(\n+          client_credentials['client_email'],\n+          client_credentials['private_key_id'],\n+          client_credentials['private_key'],\n+          [])\n+  except Exception as ex:\n+    if google_credentials_default:", "path": "oauth2client/client.py", "position": null, "original_position": 206, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "You are spot on.\nI moved it one level up.\n", "created_at": "2014-05-20T00:15:08Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12823001", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12823001"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12823001"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12823001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12823098", "pull_request_review_id": null, "id": 12823098, "diff_hunk": "@@ -0,0 +1,130 @@\n+# Copyright (C) 2014 Google Inc.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"A service account credentials class.\n+\n+This credentials class is implemented on top of rsa library.\n+\"\"\"\n+\n+__author__ = 'orest@google.com (Orest Bolohan)'\n+\n+import base64\n+import rsa\n+import time\n+import types\n+\n+from oauth2client import util\n+from oauth2client.anyjson import simplejson\n+from oauth2client.client import AssertionCredentials\n+\n+from pyasn1.codec.ber import decoder\n+from pyasn1_modules.rfc5208 import PrivateKeyInfo\n+\n+\n+class ServiceAccountCredentials(AssertionCredentials):", "path": "oauth2client/service_account.py", "position": null, "original_position": 35, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "I introduced GoogleCredentials inheriting from Credentials and made OAuth2Credentials inherit from GoogleCredentials. As AssertionCredentials inherits from OAuth2Credentials, we should be good.\n", "created_at": "2014-05-20T00:19:27Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12823098", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12823098"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12823098"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12823098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12823114", "pull_request_review_id": null, "id": 12823114, "diff_hunk": "@@ -0,0 +1,130 @@\n+# Copyright (C) 2014 Google Inc.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"A service account credentials class.\n+\n+This credentials class is implemented on top of rsa library.\n+\"\"\"\n+\n+__author__ = 'orest@google.com (Orest Bolohan)'\n+\n+import base64\n+import rsa\n+import time\n+import types\n+\n+from oauth2client import util\n+from oauth2client.anyjson import simplejson\n+from oauth2client.client import AssertionCredentials\n+\n+from pyasn1.codec.ber import decoder\n+from pyasn1_modules.rfc5208 import PrivateKeyInfo\n+\n+\n+class ServiceAccountCredentials(AssertionCredentials):\n+  \"\"\"Class representing a service account (signed JWT) credential.\"\"\"\n+\n+  GOOGLE_REVOKE_URI = 'https://accounts.google.com/o/oauth2/revoke'\n+  GOOGLE_TOKEN_URI = 'https://accounts.google.com/o/oauth2/token'\n+\n+  MAX_TOKEN_LIFETIME_SECS = 3600 # 1 hour in seconds\n+\n+  def __init__(self,\n+      service_account_email,", "path": "oauth2client/service_account.py", "position": null, "original_position": 44, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "I already introduced it.\nLet's discuss whether we need to remove it now. :)\n", "created_at": "2014-05-20T00:20:00Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12823114", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12823114"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12823114"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12823114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12823121", "pull_request_review_id": null, "id": 12823121, "diff_hunk": "@@ -0,0 +1,16 @@\n+# To be used to test GoogleCredential.GetDefaultCredential()\n+# from local machine and GCE.\n+\n+from googleapiclient.discovery import build\n+from oauth2client.client import Credentials\n+\n+PROJECT = \"bamboo-machine-422\"  # Provide your own GCE project here\n+ZONE = \"us-central1-a\"          # Put here a zone which has some VMs\n+\n+service = build(\"compute\", \"v1\", credentials=Credentials.get_default())", "path": "samples/call_compute_service.py", "position": null, "original_position": 10, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "It is now.\n", "created_at": "2014-05-20T00:20:20Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12823121", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12823121"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12823121"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12823121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12823152", "pull_request_review_id": null, "id": 12823152, "diff_hunk": "@@ -526,7 +562,7 @@ def test_exchange_id_token_fail(self):\n     self.assertRaises(VerifyJwtTokenError, self.flow.step2_exchange,\n       'some random code', http=http)\n \n-  def test_exchange_id_token_fail(self):\n+  def test_exchange_id_token_fail_encore(self):", "path": "tests/test_oauth2client.py", "position": null, "original_position": 70, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Please expand the code above.\nThere were two test methods with the same name: test_exchange_id_token_fail.\nI thought I would be a good citizen if I differentiated them somehow.\n", "created_at": "2014-05-20T00:22:08Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12823152", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12823152"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12823152"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12823152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12823202", "pull_request_review_id": null, "id": 12823202, "diff_hunk": "@@ -100,12 +101,21 @@ def set(self, key, value, namespace=''):\n ", "path": "tests/test_oauth2client.py", "position": 1, "original_position": 9, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "I'll work tomorrow on adding more tests.\nAnd once I do that, I'll push my code so you'll be able to see all the changes I've made at your suggestions.\n", "created_at": "2014-05-20T00:23:53Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12823202", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12823202"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12823202"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12823202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12915566", "pull_request_review_id": null, "id": 12915566, "diff_hunk": "@@ -169,6 +173,21 @@ def apply(self, headers):\n       headers: dict, the headers to add the Authorization header to.\n     \"\"\"\n     _abstract()\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a proper Credentials object.", "path": "oauth2client/client.py", "position": null, "original_position": 29, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "80d385dad4dc6dfab1eb9ba7526592a80c24ed23", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "Perhaps \"a Credentials object for API calls\" instead of \"a proper Credentials object\".\n", "created_at": "2014-05-21T19:00:16Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12915566", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12915566"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12915566"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12915566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12915740", "pull_request_review_id": null, "id": 12915740, "diff_hunk": "@@ -169,6 +173,21 @@ def apply(self, headers):\n       headers: dict, the headers to add the Authorization header to.\n     \"\"\"\n     _abstract()\n+    \n+  def create_scoped_required(self):", "path": "oauth2client/client.py", "position": null, "original_position": 25, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "80d385dad4dc6dfab1eb9ba7526592a80c24ed23", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "The spec indicates that these should be surfaced on GoogleCredentials, not Credentials. We can discuss when we talk about the surface, but the equivalent for Java is on the Google-specific class.\n", "created_at": "2014-05-21T19:03:53Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12915740", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12915740"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12915740"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12915740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12915957", "pull_request_review_id": null, "id": 12915957, "diff_hunk": "@@ -243,6 +262,246 @@ def from_json(cls, s):\n     return Credentials()\n \n \n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    return 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    return 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        return 'GCE_PRODUCTION'\n+      else:\n+        return 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      return 'UNKNOWN'\n+\n+\n+_env_name = _get_environment()", "path": "oauth2client/client.py", "position": null, "original_position": 69, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "80d385dad4dc6dfab1eb9ba7526592a80c24ed23", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "This looks like it may have some side effects we might want to prevent. For example, would this do the server call now whenever the Credentials type was touched? It also looks like it might do this query  even if the environment variable or well known file were present. This could be prevented by doing the file checks first, doing this on-demand when get_default is called, and keeping a flag to make sure this query happens only once.\n", "created_at": "2014-05-21T19:08:02Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12915957", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12915957"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12915957"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12915957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12916022", "pull_request_review_id": null, "id": 12916022, "diff_hunk": "@@ -243,6 +262,246 @@ def from_json(cls, s):\n     return Credentials()\n \n \n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    return 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    return 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        return 'GCE_PRODUCTION'\n+      else:\n+        return 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      return 'UNKNOWN'\n+\n+\n+_env_name = _get_environment()\n+\n+\n+class GoogleCredentials(Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import Credentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the default credentials fail to be\n+      retrieved.\n+  \"\"\"\n+  \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file, False)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError('Either GOOGLE_CREDENTIALS_DEFAULT '\n+                                    'environment variable must be set or '\n+                                    'you need to run \"gcloud auth login\"! '\n+                                    'Please see https://developers.google.com/'\n+                                    'accounts/docs/default-credential')", "path": "oauth2client/client.py", "position": null, "original_position": 160, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "80d385dad4dc6dfab1eb9ba7526592a80c24ed23", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "Note, I changed this url to be plural: default-credentials\n", "created_at": "2014-05-21T19:09:06Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12916022", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12916022"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12916022"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12916022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12920712", "pull_request_review_id": null, "id": 12920712, "diff_hunk": "@@ -169,6 +173,21 @@ def apply(self, headers):\n       headers: dict, the headers to add the Authorization header to.\n     \"\"\"\n     _abstract()\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a proper Credentials object.", "path": "oauth2client/client.py", "position": null, "original_position": 29, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "80d385dad4dc6dfab1eb9ba7526592a80c24ed23", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "My intent was to convey the information that a Credentials object of the appropriate class would be returned.\nApplied your suggestion.\n", "created_at": "2014-05-21T20:33:00Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12920712", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12920712"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12920712"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12920712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12920749", "pull_request_review_id": null, "id": 12920749, "diff_hunk": "@@ -169,6 +173,21 @@ def apply(self, headers):\n       headers: dict, the headers to add the Authorization header to.\n     \"\"\"\n     _abstract()\n+    \n+  def create_scoped_required(self):", "path": "oauth2client/client.py", "position": null, "original_position": 25, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "80d385dad4dc6dfab1eb9ba7526592a80c24ed23", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Moved the two new methods to GoogleCredentials class.\n", "created_at": "2014-05-21T20:33:33Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12920749", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12920749"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12920749"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12920749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12921272", "pull_request_review_id": null, "id": 12921272, "diff_hunk": "@@ -243,6 +262,246 @@ def from_json(cls, s):\n     return Credentials()\n \n \n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    return 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    return 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        return 'GCE_PRODUCTION'\n+      else:\n+        return 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      return 'UNKNOWN'\n+\n+\n+_env_name = _get_environment()\n+\n+\n+class GoogleCredentials(Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import Credentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the default credentials fail to be\n+      retrieved.\n+  \"\"\"\n+  \n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file, False)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError('Either GOOGLE_CREDENTIALS_DEFAULT '\n+                                    'environment variable must be set or '\n+                                    'you need to run \"gcloud auth login\"! '\n+                                    'Please see https://developers.google.com/'\n+                                    'accounts/docs/default-credential')", "path": "oauth2client/client.py", "position": null, "original_position": 160, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "80d385dad4dc6dfab1eb9ba7526592a80c24ed23", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Good catch.\nDone.\n", "created_at": "2014-05-21T20:43:08Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12921272", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12921272"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12921272"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12921272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12927458", "pull_request_review_id": null, "id": 12927458, "diff_hunk": "@@ -243,6 +262,246 @@ def from_json(cls, s):\n     return Credentials()\n \n \n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    return 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    return 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        return 'GCE_PRODUCTION'\n+      else:\n+        return 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      return 'UNKNOWN'\n+\n+\n+_env_name = _get_environment()", "path": "oauth2client/client.py", "position": null, "original_position": 69, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "80d385dad4dc6dfab1eb9ba7526592a80c24ed23", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "I modified the code so _get_environment() gets called only once: the very first time the GoogleCredentials.get_default() is called.\n", "created_at": "2014-05-21T22:42:32Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12927458", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12927458"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12927458"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12927458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12966351", "pull_request_review_id": null, "id": 12966351, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import Credentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=Credentials.get_default())", "path": "oauth2client/client.py", "position": null, "original_position": 100, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "f19ce2a6e4f87f86f206f273f7d6cbe29dad0e71", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "Should this get GoogleCredentials.get_default()\n", "created_at": "2014-05-22T18:35:10Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12966351", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12966351"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12966351"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12966351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12966476", "pull_request_review_id": null, "id": 12966476, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import Credentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type _ServiceAccountCredentials/GoogleCredentials.", "path": "oauth2client/client.py", "position": null, "original_position": 233, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "f19ce2a6e4f87f86f206f273f7d6cbe29dad0e71", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "I would just say GoogleCredentials here, as the _ServiceAccountCredentials should probably not be referenced in public docs and it should inherit from GoogleCredentials.\n", "created_at": "2014-05-22T18:37:12Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12966476", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12966476"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12966476"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12966476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12966528", "pull_request_review_id": null, "id": 12966528, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import Credentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=Credentials.get_default())", "path": "oauth2client/client.py", "position": null, "original_position": 100, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "f19ce2a6e4f87f86f206f273f7d6cbe29dad0e71", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Yes, it should. Nice catch.\nDone.\n", "created_at": "2014-05-22T18:38:03Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12966528", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12966528"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12966528"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12966528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12966598", "pull_request_review_id": null, "id": 12966598, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import Credentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=Credentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type _ServiceAccountCredentials/GoogleCredentials.", "path": "oauth2client/client.py", "position": null, "original_position": 233, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "f19ce2a6e4f87f86f206f273f7d6cbe29dad0e71", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-05-22T18:39:09Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12966598", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12966598"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12966598"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12966598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12966880", "pull_request_review_id": null, "id": 12966880, "diff_hunk": "@@ -107,6 +120,314 @@ def test_to_from_json(self):\n     restored = Credentials.new_from_json(json)\n \n \n+class GoogleCredentialsTests(unittest.TestCase):\n+\n+  def setUp(self):\n+    self.env_server_software = os.environ.get('SERVER_SOFTWARE', None)\n+    self.env_google_credentials_default = (\n+        os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None))\n+    self.env_appdata = os.environ.get('APPDATA', None)\n+    self.os_name = os.name\n+    from oauth2client import client\n+    setattr(client, '_computed_env_name', False)\n+\n+  def tearDown(self):\n+    self.reset_env('SERVER_SOFTWARE', self.env_server_software)", "path": "tests/test_oauth2client.py", "position": null, "original_position": 58, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "f19ce2a6e4f87f86f206f273f7d6cbe29dad0e71", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "This pattern will have side-effects that could cause errors if the tests are run multi-threaded or if the there is an error in the tear-down code. This might not be a problem depending on how Python unit tests get run. It may be worth double-checking with Craig Citro/John Asmuth to see if it is OK to have tests that modify the process environment like this. If not, this can be handled by having the product code go through an non-public overridable virtual call for things like checking the environment.\n", "created_at": "2014-05-22T18:44:15Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12966880", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12966880"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12966880"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12966880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12971753", "pull_request_review_id": null, "id": 12971753, "diff_hunk": "@@ -107,6 +120,314 @@ def test_to_from_json(self):\n     restored = Credentials.new_from_json(json)\n \n \n+class GoogleCredentialsTests(unittest.TestCase):\n+\n+  def setUp(self):\n+    self.env_server_software = os.environ.get('SERVER_SOFTWARE', None)\n+    self.env_google_credentials_default = (\n+        os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None))\n+    self.env_appdata = os.environ.get('APPDATA', None)\n+    self.os_name = os.name\n+    from oauth2client import client\n+    setattr(client, '_computed_env_name', False)\n+\n+  def tearDown(self):\n+    self.reset_env('SERVER_SOFTWARE', self.env_server_software)", "path": "tests/test_oauth2client.py", "position": null, "original_position": 58, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "f19ce2a6e4f87f86f206f273f7d6cbe29dad0e71", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Hopefully, Craig will enlighten me how to do this (more) properly, once you give me your OK to get him involved.\n", "created_at": "2014-05-22T20:15:25Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12971753", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12971753"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12971753"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12971753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12980212", "pull_request_review_id": null, "id": 12980212, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .", "path": "oauth2client/client.py", "position": null, "original_position": 88, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Is there even a draft of this to look at somewhere?\n", "created_at": "2014-05-22T23:29:13Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12980212", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12980212"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12980212"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12980212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12980276", "pull_request_review_id": null, "id": 12980276, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .", "path": "oauth2client/client.py", "position": null, "original_position": 88, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Yes. Here: https://docs.google.com/a/google.com/document/d/1jvTfUBqBgqVDQI24kzoE_YrAUbl6j4kKUshaSGWw0E0\n", "created_at": "2014-05-22T23:31:33Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r12980276", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/12980276"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r12980276"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/12980276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108133", "pull_request_review_id": null, "id": 13108133, "diff_hunk": "@@ -196,6 +197,13 @@ def _refresh(self, http_request):\n       raise AccessTokenRefreshError(str(e))\n     self.access_token = token\n \n+  def create_scoped_required(self):\n+    return not bool(self.scope)", "path": "oauth2client/appengine.py", "position": null, "original_position": 13, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "You can drop the `bool` -- just `not self.scope` works (and is preferred by various style guides).\n", "created_at": "2014-05-27T23:08:09Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13108133", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108133"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13108133"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108142", "pull_request_review_id": null, "id": 13108142, "diff_hunk": "@@ -196,6 +197,13 @@ def _refresh(self, http_request):\n       raise AccessTokenRefreshError(str(e))\n     self.access_token = token\n \n+  def create_scoped_required(self):\n+    return not bool(self.scope)\n+\n+  def create_scoped(self, scopes):\n+    return AppAssertionCredentials(scopes,\n+                                   **self.kwargs)", "path": "oauth2client/appengine.py", "position": null, "original_position": 17, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "bump this up one line.\n", "created_at": "2014-05-27T23:08:23Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13108142", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108142"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13108142"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108402", "pull_request_review_id": null, "id": 13108402, "diff_hunk": "@@ -99,6 +99,10 @@ class NonAsciiHeaderError(Error):\n   \"\"\"Header names and values must be ASCII strings.\"\"\"\n \n \n+class DefaultCredentialsError(Error):\n+  \"\"\"Error retrieving the default credentials.\"\"\"", "path": "oauth2client/client.py", "position": null, "original_position": 5, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "we seem to have a little inconsistency around how we talk about this -- the external docs seem to prefer the slightly unfortunate 'the Default Credentials', so we should probably go with that.\n", "created_at": "2014-05-27T23:14:27Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13108402", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108402"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13108402"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108752", "pull_request_review_id": null, "id": 13108752, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and", "path": "oauth2client/client.py", "position": null, "original_position": 70, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Python dictionaries have a `.get()` method that simplifies this:\n\n```\nif response.get('metadata-flavor') == 'Google':\n```\n", "created_at": "2014-05-27T23:24:41Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13108752", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108752"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13108752"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108799", "pull_request_review_id": null, "id": 13108799, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name", "path": "oauth2client/client.py", "position": null, "original_position": 53, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Why the second variable? Seems easier to just check for `_env_name` being `None`. (If the thought was \"oh performance\", remember it's Python.)\n", "created_at": "2014-05-27T23:25:47Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13108799", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108799"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13108799"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108914", "pull_request_review_id": null, "id": 13108914, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2", "path": "oauth2client/client.py", "position": null, "original_position": 65, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "I'd prefer to use `urllib2` in this case, for three reasons:\n- First and foremost, I eventually want to drop the dependency on `httplib2` in this library. No point in adding more references.\n- As a symptom of why I want to drop it, last week the GCS folks hit some strange issues with `httplib2` in this particular codepath (in apitools, but it's doing the same thing). We didn't dig much, but switching to `urllib2` fixed it.\n- Given that we're testing for GCE anyway, I don't see an important use case for the user passing in a custom http instance.\n", "created_at": "2014-05-27T23:28:49Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13108914", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108914"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13108914"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108953", "pull_request_review_id": null, "id": 13108953, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating", "path": "oauth2client/client.py", "position": null, "original_position": 83, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "This should be one line -- I'd say just `Default credentials for use in calling Google APIs.`\n", "created_at": "2014-05-27T23:29:30Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13108953", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108953"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13108953"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108956", "pull_request_review_id": null, "id": 13108956, "diff_hunk": "@@ -196,6 +197,13 @@ def _refresh(self, http_request):\n       raise AccessTokenRefreshError(str(e))\n     self.access_token = token\n \n+  def create_scoped_required(self):\n+    return not bool(self.scope)\n+\n+  def create_scoped(self, scopes):\n+    return AppAssertionCredentials(scopes,\n+                                   **self.kwargs)", "path": "oauth2client/appengine.py", "position": null, "original_position": 17, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-05-27T23:29:35Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13108956", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108956"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13108956"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108973", "pull_request_review_id": null, "id": 13108973, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .", "path": "oauth2client/client.py", "position": null, "original_position": 88, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Feel free to drop the `.`, which is always awkward with URLs anyway.\n", "created_at": "2014-05-27T23:29:52Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13108973", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108973"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13108973"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108975", "pull_request_review_id": null, "id": 13108975, "diff_hunk": "@@ -196,6 +197,13 @@ def _refresh(self, http_request):\n       raise AccessTokenRefreshError(str(e))\n     self.access_token = token\n \n+  def create_scoped_required(self):\n+    return not bool(self.scope)", "path": "oauth2client/appengine.py", "position": null, "original_position": 13, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done. (also in gce.py and account_service.py)\n", "created_at": "2014-05-27T23:29:54Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13108975", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108975"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13108975"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108996", "pull_request_review_id": null, "id": 13108996, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>", "path": "oauth2client/client.py", "position": null, "original_position": 93, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "I'd rather see this in the samples and have a pointer here; multiple copies of hand-written docs just get out of sync too fast.\n", "created_at": "2014-05-27T23:30:27Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13108996", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108996"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13108996"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13108996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109020", "pull_request_review_id": null, "id": 13109020, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)", "path": "oauth2client/client.py", "position": null, "original_position": 103, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "I'd at least combine this line with the one above.\n", "created_at": "2014-05-27T23:31:01Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109020", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109020"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109020"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109112", "pull_request_review_id": null, "id": 13109112, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:", "path": "oauth2client/client.py", "position": null, "original_position": 123, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "This probably belongs on the docstrings of the method(s) that raise it, not here.\n", "created_at": "2014-05-27T23:31:42Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109112", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109112"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109112"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109149", "pull_request_review_id": null, "id": 13109149, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,", "path": "oauth2client/client.py", "position": null, "original_position": 127, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Let's pack these a little tighter.\n", "created_at": "2014-05-27T23:32:01Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109149", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109149"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109149"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109176", "pull_request_review_id": null, "id": 13109176, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the", "path": "oauth2client/client.py", "position": null, "original_position": 139, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Drop \"the\".\n", "created_at": "2014-05-27T23:32:27Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109176", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109176"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109176"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109180", "pull_request_review_id": null, "id": 13109180, "diff_hunk": "@@ -99,6 +99,10 @@ class NonAsciiHeaderError(Error):\n   \"\"\"Header names and values must be ASCII strings.\"\"\"\n \n \n+class DefaultCredentialsError(Error):\n+  \"\"\"Error retrieving the default credentials.\"\"\"", "path": "oauth2client/client.py", "position": null, "original_position": 5, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done. (also in other 5 places in this file)\n", "created_at": "2014-05-27T23:32:35Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109180", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109180"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109180"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109181", "pull_request_review_id": null, "id": 13109181, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().", "path": "oauth2client/client.py", "position": null, "original_position": 140, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "silly: and -> or\n", "created_at": "2014-05-27T23:32:35Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109181", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109181"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109181"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109210", "pull_request_review_id": null, "id": 13109210, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the", "path": "oauth2client/client.py", "position": null, "original_position": 179, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "This needs to be a one-liner. Maybe `Fetch the default credentials for this environment`?\n", "created_at": "2014-05-27T23:33:18Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109210", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109210"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109210"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109247", "pull_request_review_id": null, "id": 13109247, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):", "path": "oauth2client/client.py", "position": null, "original_position": 230, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "This isn't a file, it's a filename.\n\nRelatedly, this would be significantly more useful if it took a file instead of a filename, but that would involve breaking compatibility with the other clients, possibly.\n", "created_at": "2014-05-27T23:34:22Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109247", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109247"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109247"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109311", "pull_request_review_id": null, "id": 13109311, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'", "path": "oauth2client/client.py", "position": null, "original_position": 244, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "maybe `helping` -> `help`?\n", "created_at": "2014-05-27T23:36:35Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109311", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109311"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109311"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109320", "pull_request_review_id": null, "id": 13109320, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'", "path": "oauth2client/client.py", "position": null, "original_position": 244, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Or `extra_help`? \n", "created_at": "2014-05-27T23:36:57Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109320", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109320"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109320"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109354", "pull_request_review_id": null, "id": 13109354, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"", "path": "oauth2client/client.py", "position": null, "original_position": 217, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "We should use `'` for consistency here; in addition, I'd vote to start this on the line below, so that we don't use up so much vertical space.\n", "created_at": "2014-05-27T23:37:53Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109354", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109354"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109354"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109458", "pull_request_review_id": null, "id": 13109458, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"", "path": "oauth2client/client.py", "position": null, "original_position": 266, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "I have two worries about all these `gcloud` references:\n- `gcloud` doesn't cover nearly all the Google APIs (eg Drive); I don't want anyone to think this library isn't useful outside cloud APIs.\n- If the command name changes, we have a **lot** of references to update.\n", "created_at": "2014-05-27T23:40:57Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109458", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109458"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109458"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109478", "pull_request_review_id": null, "id": 13109478, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive,", "path": "oauth2client/client.py", "position": null, "original_position": 278, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Will this all fit on one line?\n", "created_at": "2014-05-27T23:41:24Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109478", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109478"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109478"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109493", "pull_request_review_id": null, "id": 13109493, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive,\n+                                         '\\\\',\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None", "path": "oauth2client/client.py", "position": null, "original_position": 292, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "You don't need this -- falling off the end of a function returns `None`.\n", "created_at": "2014-05-27T23:41:55Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109493", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109493"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109493"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109561", "pull_request_review_id": null, "id": 13109561, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"", "path": "oauth2client/client.py", "position": null, "original_position": 266, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "And now, reading the body of this function, we're taking quite a dependency on logic about where `gcloud` puts its credentials. Is there a way to depend on this logic over there? (Maybe they could set an env var?)\n", "created_at": "2014-05-27T23:43:26Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109561", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109561"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109561"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109576", "pull_request_review_id": null, "id": 13109576, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name", "path": "oauth2client/client.py", "position": null, "original_position": 53, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "You are right. It's not worth explaining why I chose to use both (it has to do with me learning Python).\nI got rid of the _computed_env_name variable.\n", "created_at": "2014-05-27T23:43:54Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109576", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109576"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109576"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109593", "pull_request_review_id": null, "id": 13109593, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive,\n+                                         '\\\\',\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_default_credential_from_file(default_credential_file):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  # read the credentials from the file\n+  with open(default_credential_file) as default_credential:\n+    client_credentials = service_account.simplejson.load(default_credential)\n+\n+  if ('type' not in client_credentials or", "path": "oauth2client/client.py", "position": null, "original_position": 304, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "```\nif client_credentials.get('type') not in ('authorized_user', 'service_account'):\n```\n\nFor the record, just depending on strings is going to get us into trouble one day. Let's not worry about that here.\n", "created_at": "2014-05-27T23:44:32Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109593", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109593"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109593"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109610", "pull_request_review_id": null, "id": 13109610, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive,\n+                                         '\\\\',\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_default_credential_from_file(default_credential_file):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  # read the credentials from the file\n+  with open(default_credential_file) as default_credential:\n+    client_credentials = service_account.simplejson.load(default_credential)\n+\n+  if ('type' not in client_credentials or\n+      client_credentials['type'] != 'authorized_user' and\n+      client_credentials['type'] != 'service_account'):\n+    raise DefaultCredentialsError(\"'type' field should be defined \"", "path": "oauth2client/client.py", "position": null, "original_position": 307, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "This is a place where `\"` is totally legit (because it's a string containing `'`).\n", "created_at": "2014-05-27T23:44:56Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109610", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109610"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109610"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109690", "pull_request_review_id": null, "id": 13109690, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive,\n+                                         '\\\\',\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_default_credential_from_file(default_credential_file):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  # read the credentials from the file\n+  with open(default_credential_file) as default_credential:\n+    client_credentials = service_account.simplejson.load(default_credential)\n+\n+  if ('type' not in client_credentials or\n+      client_credentials['type'] != 'authorized_user' and\n+      client_credentials['type'] != 'service_account'):\n+    raise DefaultCredentialsError(\"'type' field should be defined \"\n+                                  \"(and have one of the 'authorized_user' \"\n+                                  \"or 'service_account' values)\")\n+", "path": "oauth2client/client.py", "position": null, "original_position": 310, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Two thoughts:\n- Lots of duplication here; any reason we can't collapse it?\n- Should some/all of this code live on the classes for the credentials they create?\n", "created_at": "2014-05-27T23:47:42Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109690", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109690"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109690"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109800", "pull_request_review_id": null, "id": 13109800, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive,\n+                                         '\\\\',\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_default_credential_from_file(default_credential_file):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  # read the credentials from the file\n+  with open(default_credential_file) as default_credential:\n+    client_credentials = service_account.simplejson.load(default_credential)\n+\n+  if ('type' not in client_credentials or\n+      client_credentials['type'] != 'authorized_user' and\n+      client_credentials['type'] != 'service_account'):\n+    raise DefaultCredentialsError(\"'type' field should be defined \"\n+                                  \"(and have one of the 'authorized_user' \"\n+                                  \"or 'service_account' values)\")\n+\n+  if client_credentials['type'] == 'authorized_user':\n+    missing_fields = []", "path": "oauth2client/client.py", "position": null, "original_position": 312, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Kudos on the good error message here!\n\nPython has a pretty featureful `set` type; I think it'd help here. For instance:\n\n```\nrequired_fields = set(['client_id', 'client_secret', 'refresh_token'])\nmissing_fields = required_fields.difference(client_credentials.keys())\nif missing_fields:\n  ...\n```\n", "created_at": "2014-05-27T23:51:03Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109800", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109800"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109800"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109813", "pull_request_review_id": null, "id": 13109813, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive,\n+                                         '\\\\',\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_default_credential_from_file(default_credential_file):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  # read the credentials from the file\n+  with open(default_credential_file) as default_credential:\n+    client_credentials = service_account.simplejson.load(default_credential)\n+\n+  if ('type' not in client_credentials or\n+      client_credentials['type'] != 'authorized_user' and\n+      client_credentials['type'] != 'service_account'):\n+    raise DefaultCredentialsError(\"'type' field should be defined \"\n+                                  \"(and have one of the 'authorized_user' \"\n+                                  \"or 'service_account' values)\")\n+\n+  if client_credentials['type'] == 'authorized_user':\n+    missing_fields = []\n+    if 'client_id' not in client_credentials:\n+      missing_fields.append('client_id')\n+    if 'client_secret' not in client_credentials:\n+      missing_fields.append('client_secret')\n+    if 'refresh_token' not in client_credentials:\n+      missing_fields.append('refresh_token')\n+    if len(missing_fields) > 0:\n+      _raise_exception_for_missing_fields(missing_fields)\n+\n+    return GoogleCredentials(\n+        access_token=None,\n+        client_id=client_credentials['client_id'],\n+        client_secret=client_credentials['client_secret'],\n+        refresh_token=client_credentials['refresh_token'],\n+        token_expiry=None,\n+        token_uri=GOOGLE_TOKEN_URI,\n+        user_agent='Python client library')\n+  elif client_credentials['type'] == 'service_account':\n+    missing_fields = []\n+    if 'client_id' not in client_credentials:\n+      missing_fields.append('client_id')\n+    if 'client_email' not in client_credentials:\n+      missing_fields.append('client_email')\n+    if 'private_key_id' not in client_credentials:\n+      missing_fields.append('private_key_id')\n+    if 'private_key' not in client_credentials:\n+      missing_fields.append('private_key')\n+    if len(missing_fields) > 0:\n+      _raise_exception_for_missing_fields(missing_fields)\n+\n+    return service_account._ServiceAccountCredentials(\n+        service_account_id=client_credentials['client_id'],\n+        service_account_email=client_credentials['client_email'],\n+        private_key_id=client_credentials['private_key_id'],\n+        private_key_pkcs8_text=client_credentials['private_key'],\n+        scopes=[])\n+\n+\n+def _raise_exception_for_missing_fields(missing_fields):\n+  raise DefaultCredentialsError('The following field(s): ' +\n+                                ', '.join(missing_fields) + ' must be defined.')\n+\n+\n+def _raise_exception_for_reading_json(credential_file,\n+                                      helping_message,\n+                                      error):\n+  raise DefaultCredentialsError('An error was encountered while reading '\n+                                'json file: '+ credential_file +\n+                                helping_message + ': ' + str(error))\n+\n+\n+def _get_default_credential_GAE():", "path": "oauth2client/client.py", "position": null, "original_position": 364, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Seems like this could live on the GAE credential class?\n", "created_at": "2014-05-27T23:51:36Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109813", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109813"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109813"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109824", "pull_request_review_id": null, "id": 13109824, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive,\n+                                         '\\\\',\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_default_credential_from_file(default_credential_file):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  # read the credentials from the file\n+  with open(default_credential_file) as default_credential:\n+    client_credentials = service_account.simplejson.load(default_credential)\n+\n+  if ('type' not in client_credentials or\n+      client_credentials['type'] != 'authorized_user' and\n+      client_credentials['type'] != 'service_account'):\n+    raise DefaultCredentialsError(\"'type' field should be defined \"\n+                                  \"(and have one of the 'authorized_user' \"\n+                                  \"or 'service_account' values)\")\n+\n+  if client_credentials['type'] == 'authorized_user':\n+    missing_fields = []\n+    if 'client_id' not in client_credentials:\n+      missing_fields.append('client_id')\n+    if 'client_secret' not in client_credentials:\n+      missing_fields.append('client_secret')\n+    if 'refresh_token' not in client_credentials:\n+      missing_fields.append('refresh_token')\n+    if len(missing_fields) > 0:\n+      _raise_exception_for_missing_fields(missing_fields)\n+\n+    return GoogleCredentials(\n+        access_token=None,\n+        client_id=client_credentials['client_id'],\n+        client_secret=client_credentials['client_secret'],\n+        refresh_token=client_credentials['refresh_token'],\n+        token_expiry=None,\n+        token_uri=GOOGLE_TOKEN_URI,\n+        user_agent='Python client library')\n+  elif client_credentials['type'] == 'service_account':\n+    missing_fields = []\n+    if 'client_id' not in client_credentials:\n+      missing_fields.append('client_id')\n+    if 'client_email' not in client_credentials:\n+      missing_fields.append('client_email')\n+    if 'private_key_id' not in client_credentials:\n+      missing_fields.append('private_key_id')\n+    if 'private_key' not in client_credentials:\n+      missing_fields.append('private_key')\n+    if len(missing_fields) > 0:\n+      _raise_exception_for_missing_fields(missing_fields)\n+\n+    return service_account._ServiceAccountCredentials(\n+        service_account_id=client_credentials['client_id'],\n+        service_account_email=client_credentials['client_email'],\n+        private_key_id=client_credentials['private_key_id'],\n+        private_key_pkcs8_text=client_credentials['private_key'],\n+        scopes=[])\n+\n+\n+def _raise_exception_for_missing_fields(missing_fields):\n+  raise DefaultCredentialsError('The following field(s): ' +\n+                                ', '.join(missing_fields) + ' must be defined.')\n+\n+\n+def _raise_exception_for_reading_json(credential_file,\n+                                      helping_message,\n+                                      error):\n+  raise DefaultCredentialsError('An error was encountered while reading '\n+                                'json file: '+ credential_file +\n+                                helping_message + ': ' + str(error))\n+\n+\n+def _get_default_credential_GAE():\n+  from oauth2client.appengine import AppAssertionCredentials\n+\n+  return AppAssertionCredentials([])", "path": "oauth2client/client.py", "position": 357, "original_position": 367, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "it really doesn't need any args?\n", "created_at": "2014-05-27T23:51:52Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109824", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109824"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109824"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109886", "pull_request_review_id": null, "id": 13109886, "diff_hunk": "@@ -87,4 +88,14 @@ def _refresh(self, http_request):\n         raise AccessTokenRefreshError(str(e))\n       self.access_token = d['accessToken']\n     else:\n+      if content.find('Error 404') >= 0:", "path": "oauth2client/gce.py", "position": null, "original_position": 12, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Can't we check against the status code on the response? I don't like grepping error strings unless we have to.\n", "created_at": "2014-05-27T23:53:32Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109886", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109886"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109886"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109894", "pull_request_review_id": null, "id": 13109894, "diff_hunk": "@@ -0,0 +1,132 @@\n+# Copyright (C) 2014 Google Inc.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"A service account credentials class.\n+\n+This credentials class is implemented on top of rsa library.\n+\"\"\"\n+\n+__author__ = 'orest@google.com (Orest Bolohan)'", "path": "oauth2client/service_account.py", "position": null, "original_position": 20, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "We don't actually need `__author__` tags anymore.\n", "created_at": "2014-05-27T23:53:52Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109894", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109894"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109894"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109909", "pull_request_review_id": null, "id": 13109909, "diff_hunk": "@@ -0,0 +1,132 @@\n+# Copyright (C) 2014 Google Inc.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"A service account credentials class.\n+\n+This credentials class is implemented on top of rsa library.\n+\"\"\"\n+\n+__author__ = 'orest@google.com (Orest Bolohan)'\n+\n+import base64\n+import rsa\n+import time\n+import types\n+\n+from oauth2client import GOOGLE_REVOKE_URI\n+from oauth2client import GOOGLE_TOKEN_URI\n+from oauth2client import util\n+from oauth2client.anyjson import simplejson\n+from oauth2client.client import AssertionCredentials\n+\n+from pyasn1.codec.ber import decoder\n+from pyasn1_modules.rfc5208 import PrivateKeyInfo\n+\n+\n+class _ServiceAccountCredentials(AssertionCredentials):\n+  \"\"\"Class representing a service account (signed JWT) credential.\"\"\"\n+\n+  MAX_TOKEN_LIFETIME_SECS = 3600 # 1 hour in seconds\n+\n+  def __init__(self,", "path": "oauth2client/service_account.py", "position": null, "original_position": 42, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Let's pack these arguments.\n", "created_at": "2014-05-27T23:54:27Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109909", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109909"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109909"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109952", "pull_request_review_id": null, "id": 13109952, "diff_hunk": "@@ -0,0 +1,132 @@\n+# Copyright (C) 2014 Google Inc.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"A service account credentials class.\n+\n+This credentials class is implemented on top of rsa library.\n+\"\"\"\n+\n+__author__ = 'orest@google.com (Orest Bolohan)'\n+\n+import base64\n+import rsa\n+import time\n+import types\n+\n+from oauth2client import GOOGLE_REVOKE_URI\n+from oauth2client import GOOGLE_TOKEN_URI\n+from oauth2client import util\n+from oauth2client.anyjson import simplejson\n+from oauth2client.client import AssertionCredentials\n+\n+from pyasn1.codec.ber import decoder\n+from pyasn1_modules.rfc5208 import PrivateKeyInfo\n+\n+\n+class _ServiceAccountCredentials(AssertionCredentials):\n+  \"\"\"Class representing a service account (signed JWT) credential.\"\"\"\n+\n+  MAX_TOKEN_LIFETIME_SECS = 3600 # 1 hour in seconds\n+\n+  def __init__(self,\n+      service_account_id,\n+      service_account_email,\n+      private_key_id,\n+      private_key_pkcs8_text,\n+      scopes,\n+      user_agent=None,\n+      token_uri=GOOGLE_TOKEN_URI,\n+      revoke_uri=GOOGLE_REVOKE_URI,\n+      **kwargs):\n+\n+    super(_ServiceAccountCredentials, self).__init__(\n+        None,\n+        user_agent=user_agent,\n+        token_uri=token_uri,\n+        revoke_uri=revoke_uri)\n+    \n+    self._service_account_id = service_account_id\n+    self._service_account_email = service_account_email\n+    self._private_key_id = private_key_id\n+    self._private_key = _get_pk(private_key_pkcs8_text)\n+    self._private_key_pkcs8_text = private_key_pkcs8_text\n+    self._scopes = util.scopes_to_string(scopes)\n+    self._user_agent = user_agent\n+    self._token_uri = token_uri\n+    self._revoke_uri = revoke_uri\n+    self._kwargs = kwargs\n+\n+  def _generate_assertion(self):\n+    \"\"\"Generate the assertion that will be used in the request.\"\"\"\n+\n+    header = {\n+        'alg': 'RS256',\n+        'typ': 'JWT',\n+        'keyid': self._private_key_id\n+    }\n+\n+    now = long(time.time())\n+    payload = {\n+        'aud': self._token_uri,\n+        'scope': self._scopes,\n+        'iat': now,\n+        'exp': now + _ServiceAccountCredentials.MAX_TOKEN_LIFETIME_SECS,\n+        'iss': self._service_account_email\n+    }\n+    payload.update(self._kwargs)\n+\n+    assertion_input = '%s.%s' % (\n+        _urlsafe_b64encode(header),\n+        _urlsafe_b64encode(payload))\n+\n+    # Sign the assertion.\n+    signature = base64.urlsafe_b64encode(rsa.pkcs1.sign(\n+        assertion_input, self._private_key, 'SHA-256')).rstrip('=')\n+\n+    return '%s.%s' % (assertion_input, signature)\n+\n+  def sign_blob(self, blob):\n+    return (self._private_key_id,\n+            rsa.pkcs1.sign(blob, self._private_key, 'SHA-256'))\n+\n+  def get_service_account_email(self):", "path": "oauth2client/service_account.py", "position": null, "original_position": 103, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Just make this\n\n```\n@property\ndef service_account_email(self):\n  return self._service_account_email\n```\n\nand then you have a getter; callers can just say `credential.service_account_email` and it does what you expect.\n", "created_at": "2014-05-27T23:55:54Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109952", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109952"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109952"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109965", "pull_request_review_id": null, "id": 13109965, "diff_hunk": "@@ -0,0 +1,132 @@\n+# Copyright (C) 2014 Google Inc.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"A service account credentials class.\n+\n+This credentials class is implemented on top of rsa library.\n+\"\"\"\n+\n+__author__ = 'orest@google.com (Orest Bolohan)'\n+\n+import base64\n+import rsa\n+import time\n+import types\n+\n+from oauth2client import GOOGLE_REVOKE_URI\n+from oauth2client import GOOGLE_TOKEN_URI\n+from oauth2client import util\n+from oauth2client.anyjson import simplejson\n+from oauth2client.client import AssertionCredentials\n+\n+from pyasn1.codec.ber import decoder\n+from pyasn1_modules.rfc5208 import PrivateKeyInfo\n+\n+\n+class _ServiceAccountCredentials(AssertionCredentials):\n+  \"\"\"Class representing a service account (signed JWT) credential.\"\"\"\n+\n+  MAX_TOKEN_LIFETIME_SECS = 3600 # 1 hour in seconds\n+\n+  def __init__(self,\n+      service_account_id,\n+      service_account_email,\n+      private_key_id,\n+      private_key_pkcs8_text,\n+      scopes,\n+      user_agent=None,\n+      token_uri=GOOGLE_TOKEN_URI,\n+      revoke_uri=GOOGLE_REVOKE_URI,\n+      **kwargs):\n+\n+    super(_ServiceAccountCredentials, self).__init__(\n+        None,\n+        user_agent=user_agent,\n+        token_uri=token_uri,\n+        revoke_uri=revoke_uri)\n+    \n+    self._service_account_id = service_account_id\n+    self._service_account_email = service_account_email\n+    self._private_key_id = private_key_id\n+    self._private_key = _get_pk(private_key_pkcs8_text)\n+    self._private_key_pkcs8_text = private_key_pkcs8_text\n+    self._scopes = util.scopes_to_string(scopes)\n+    self._user_agent = user_agent\n+    self._token_uri = token_uri\n+    self._revoke_uri = revoke_uri\n+    self._kwargs = kwargs\n+\n+  def _generate_assertion(self):\n+    \"\"\"Generate the assertion that will be used in the request.\"\"\"\n+\n+    header = {\n+        'alg': 'RS256',\n+        'typ': 'JWT',\n+        'keyid': self._private_key_id\n+    }\n+\n+    now = long(time.time())\n+    payload = {\n+        'aud': self._token_uri,\n+        'scope': self._scopes,\n+        'iat': now,\n+        'exp': now + _ServiceAccountCredentials.MAX_TOKEN_LIFETIME_SECS,\n+        'iss': self._service_account_email\n+    }\n+    payload.update(self._kwargs)\n+\n+    assertion_input = '%s.%s' % (\n+        _urlsafe_b64encode(header),\n+        _urlsafe_b64encode(payload))\n+\n+    # Sign the assertion.\n+    signature = base64.urlsafe_b64encode(rsa.pkcs1.sign(\n+        assertion_input, self._private_key, 'SHA-256')).rstrip('=')\n+\n+    return '%s.%s' % (assertion_input, signature)\n+\n+  def sign_blob(self, blob):\n+    return (self._private_key_id,\n+            rsa.pkcs1.sign(blob, self._private_key, 'SHA-256'))\n+\n+  def get_service_account_email(self):\n+    return self._service_account_email\n+\n+  def create_scoped_required(self):\n+    return not bool(self._scopes)\n+\n+  def create_scoped(self, scopes):\n+    return _ServiceAccountCredentials(self._service_account_id,\n+                                      self._service_account_email,\n+                                      self._private_key_id,\n+                                      self._private_key_pkcs8_text,\n+                                      scopes,\n+                                      user_agent=self._user_agent,\n+                                      token_uri=self._token_uri,\n+                                      revoke_uri=self._revoke_uri,\n+                                      **self._kwargs)\n+\n+def _urlsafe_b64encode(data):\n+  return base64.urlsafe_b64encode(\n+      simplejson.dumps(data, separators = (',', ':'))\\\n+          .encode('UTF-8')).rstrip('=')\n+\n+def _get_pk(private_key_pkcs8_text):", "path": "oauth2client/service_account.py", "position": null, "original_position": 125, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "let's expand out the name (pk = private key?)\n", "created_at": "2014-05-27T23:56:19Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109965", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109965"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109965"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109989", "pull_request_review_id": null, "id": 13109989, "diff_hunk": "@@ -0,0 +1,10 @@\n+application: bamboo-machine-422", "path": "samples/app.yaml", "position": null, "original_position": 1, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "actually, why don't we make a folder for the sample GAE app inside `samples/`? it's always frustrating when you don't know which file(s) are part of a bundle like that.\n", "created_at": "2014-05-27T23:56:59Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13109989", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109989"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13109989"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13109989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13110014", "pull_request_review_id": null, "id": 13110014, "diff_hunk": "@@ -0,0 +1,24 @@\n+# To be used to test GoogleCredential.GetDefaultCredential()\n+# from devel GAE (ie, dev_appserver.py).\n+\n+import webapp2\n+from googleapiclient.discovery import build\n+from oauth2client.client import GoogleCredentials\n+\n+PROJECT = \"bamboo-machine-422\"  # Provide your own GCE project here\n+ZONE = \"us-central1-a\"          # Put here a zone which has some VMs\n+\n+def get_instances():\n+  service = build(\"compute\", \"v1\", credentials=GoogleCredentials.get_default())\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  return request.execute()\n+\n+class MainPage(webapp2.RequestHandler):\n+\n+  def get(self):\n+    self.response.write(get_instances())\n+\n+app = webapp2.WSGIApplication([", "path": "samples/call_compute_service_from_gae.py", "position": null, "original_position": 22, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "one line\n", "created_at": "2014-05-27T23:57:34Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13110014", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13110014"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13110014"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13110014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13110030", "pull_request_review_id": null, "id": 13110030, "diff_hunk": "@@ -26,6 +26,9 @@\n \n install_requires = [\n     'httplib2>=0.8',\n+    'pyasn1==0.1.7',\n+    'pyasn1_modules==0.0.5',", "path": "setup.py", "position": 5, "original_position": 5, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "do we know anything about these modules? taking a dependency on something at version `0.0.5` worries me; have we at least forked them ourselves in case they disappear?\n", "created_at": "2014-05-27T23:58:07Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13110030", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13110030"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13110030"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13110030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13110053", "pull_request_review_id": null, "id": 13110053, "diff_hunk": "@@ -0,0 +1,9 @@\n+-----BEGIN PUBLIC KEY-----", "path": "tests/data/publickey_openssl.pem", "position": 1, "original_position": 1, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "is this a public key you have the private key for?\n", "created_at": "2014-05-27T23:58:34Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13110053", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13110053"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13110053"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13110053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13110149", "pull_request_review_id": null, "id": 13110149, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2", "path": "oauth2client/client.py", "position": null, "original_position": 65, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "[Sample code](https://github.com/GoogleCloudPlatform/gsutil/blob/master/gslib/third_party/storage_apitools/credentials_lib.py#L135) where we use `urllib2` in `gsutil`, for exactly this purpose.\n", "created_at": "2014-05-28T00:01:41Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13110149", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13110149"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13110149"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13110149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13142806", "pull_request_review_id": null, "id": 13142806, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2", "path": "oauth2client/client.py", "position": null, "original_position": 65, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-05-28T17:11:57Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13142806", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13142806"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13142806"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13142806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13142857", "pull_request_review_id": null, "id": 13142857, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and", "path": "oauth2client/client.py", "position": null, "original_position": 70, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Indeed, I should have used the get('metadata-flavor', '') instead of checking like this.\nIn the new implementation (using urllib2 instead of httplib2), it is not needed anymore.\n", "created_at": "2014-05-28T17:13:06Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13142857", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13142857"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13142857"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13142857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13143099", "pull_request_review_id": null, "id": 13143099, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)", "path": "oauth2client/client.py", "position": null, "original_position": 103, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Combined the previous two lines into one.\n", "created_at": "2014-05-28T17:17:44Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13143099", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13143099"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13143099"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13143099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13143373", "pull_request_review_id": null, "id": 13143373, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:", "path": "oauth2client/client.py", "position": null, "original_position": 123, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "I borrowed the idea from the docstring of class AccessTokenCredentials.\nI moved it down to get_default() and from_stream() methods.\n", "created_at": "2014-05-28T17:22:31Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13143373", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13143373"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13143373"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13143373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13143519", "pull_request_review_id": null, "id": 13143519, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,", "path": "oauth2client/client.py", "position": null, "original_position": 127, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-05-28T17:24:34Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13143519", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13143519"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13143519"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13143519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13143557", "pull_request_review_id": null, "id": 13143557, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the", "path": "oauth2client/client.py", "position": null, "original_position": 139, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-05-28T17:25:10Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13143557", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13143557"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13143557"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13143557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13143607", "pull_request_review_id": null, "id": 13143607, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().", "path": "oauth2client/client.py", "position": null, "original_position": 140, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-05-28T17:25:55Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13143607", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13143607"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13143607"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13143607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13143987", "pull_request_review_id": null, "id": 13143987, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"", "path": "oauth2client/client.py", "position": null, "original_position": 217, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "I used \" because there is 'gcloud auth login' somewhere there inside the string.\nI consolidated the text a little bit.\n", "created_at": "2014-05-28T17:33:15Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13143987", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13143987"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13143987"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13143987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13144554", "pull_request_review_id": null, "id": 13144554, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):", "path": "oauth2client/client.py", "position": null, "original_position": 230, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "I changed it to credential_filename. Let's leave like this.\n", "created_at": "2014-05-28T17:43:39Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13144554", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13144554"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13144554"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13144554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13144871", "pull_request_review_id": null, "id": 13144871, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'", "path": "oauth2client/client.py", "position": null, "original_position": 244, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Renamed it to extra_help.\n", "created_at": "2014-05-28T17:49:07Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13144871", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13144871"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13144871"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13144871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13145771", "pull_request_review_id": null, "id": 13145771, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"", "path": "oauth2client/client.py", "position": null, "original_position": 266, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "We plan to announce the 'gcloud auth login' in the public go to page for education purposes.\nI sent you an internal link (via email) regarding where I borrowed the code from.\n", "created_at": "2014-05-28T18:03:06Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13145771", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13145771"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13145771"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13145771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13145851", "pull_request_review_id": null, "id": 13145851, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive,", "path": "oauth2client/client.py", "position": null, "original_position": 278, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Yes.\nI moved everything on a single line.\n", "created_at": "2014-05-28T18:04:08Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13145851", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13145851"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13145851"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13145851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13146084", "pull_request_review_id": null, "id": 13146084, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive,\n+                                         '\\\\',\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None", "path": "oauth2client/client.py", "position": null, "original_position": 292, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Got rid of it.\n", "created_at": "2014-05-28T18:06:52Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13146084", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13146084"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13146084"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13146084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13146185", "pull_request_review_id": null, "id": 13146185, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive,\n+                                         '\\\\',\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_default_credential_from_file(default_credential_file):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  # read the credentials from the file\n+  with open(default_credential_file) as default_credential:\n+    client_credentials = service_account.simplejson.load(default_credential)\n+\n+  if ('type' not in client_credentials or\n+      client_credentials['type'] != 'authorized_user' and\n+      client_credentials['type'] != 'service_account'):\n+    raise DefaultCredentialsError(\"'type' field should be defined \"", "path": "oauth2client/client.py", "position": null, "original_position": 307, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "This was my rationale behind the previous \", as well.\n", "created_at": "2014-05-28T18:08:46Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13146185", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13146185"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13146185"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13146185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13150308", "pull_request_review_id": null, "id": 13150308, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive,\n+                                         '\\\\',\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_default_credential_from_file(default_credential_file):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  # read the credentials from the file\n+  with open(default_credential_file) as default_credential:\n+    client_credentials = service_account.simplejson.load(default_credential)\n+\n+  if ('type' not in client_credentials or", "path": "oauth2client/client.py", "position": null, "original_position": 304, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Thanks.\nPython style is more concise, indeed.\n", "created_at": "2014-05-28T19:18:20Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13150308", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13150308"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13150308"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13150308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13150580", "pull_request_review_id": null, "id": 13150580, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive,\n+                                         '\\\\',\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_default_credential_from_file(default_credential_file):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  # read the credentials from the file\n+  with open(default_credential_file) as default_credential:\n+    client_credentials = service_account.simplejson.load(default_credential)\n+\n+  if ('type' not in client_credentials or\n+      client_credentials['type'] != 'authorized_user' and\n+      client_credentials['type'] != 'service_account'):\n+    raise DefaultCredentialsError(\"'type' field should be defined \"\n+                                  \"(and have one of the 'authorized_user' \"\n+                                  \"or 'service_account' values)\")\n+", "path": "oauth2client/client.py", "position": null, "original_position": 310, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "I restructured it a little bit.\nI would rather keep the validation of fields' existence here, than pushing it down into the credentials classes.\n", "created_at": "2014-05-28T19:24:04Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13150580", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13150580"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13150580"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13150580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13150943", "pull_request_review_id": null, "id": 13150943, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive,\n+                                         '\\\\',\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_default_credential_from_file(default_credential_file):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  # read the credentials from the file\n+  with open(default_credential_file) as default_credential:\n+    client_credentials = service_account.simplejson.load(default_credential)\n+\n+  if ('type' not in client_credentials or\n+      client_credentials['type'] != 'authorized_user' and\n+      client_credentials['type'] != 'service_account'):\n+    raise DefaultCredentialsError(\"'type' field should be defined \"\n+                                  \"(and have one of the 'authorized_user' \"\n+                                  \"or 'service_account' values)\")\n+\n+  if client_credentials['type'] == 'authorized_user':\n+    missing_fields = []", "path": "oauth2client/client.py", "position": null, "original_position": 312, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "This is more elegant, indeed. Thank you.\n", "created_at": "2014-05-28T19:31:46Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13150943", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13150943"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13150943"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13150943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13151094", "pull_request_review_id": null, "id": 13151094, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive,\n+                                         '\\\\',\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_default_credential_from_file(default_credential_file):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  # read the credentials from the file\n+  with open(default_credential_file) as default_credential:\n+    client_credentials = service_account.simplejson.load(default_credential)\n+\n+  if ('type' not in client_credentials or\n+      client_credentials['type'] != 'authorized_user' and\n+      client_credentials['type'] != 'service_account'):\n+    raise DefaultCredentialsError(\"'type' field should be defined \"\n+                                  \"(and have one of the 'authorized_user' \"\n+                                  \"or 'service_account' values)\")\n+\n+  if client_credentials['type'] == 'authorized_user':\n+    missing_fields = []\n+    if 'client_id' not in client_credentials:\n+      missing_fields.append('client_id')\n+    if 'client_secret' not in client_credentials:\n+      missing_fields.append('client_secret')\n+    if 'refresh_token' not in client_credentials:\n+      missing_fields.append('refresh_token')\n+    if len(missing_fields) > 0:\n+      _raise_exception_for_missing_fields(missing_fields)\n+\n+    return GoogleCredentials(\n+        access_token=None,\n+        client_id=client_credentials['client_id'],\n+        client_secret=client_credentials['client_secret'],\n+        refresh_token=client_credentials['refresh_token'],\n+        token_expiry=None,\n+        token_uri=GOOGLE_TOKEN_URI,\n+        user_agent='Python client library')\n+  elif client_credentials['type'] == 'service_account':\n+    missing_fields = []\n+    if 'client_id' not in client_credentials:\n+      missing_fields.append('client_id')\n+    if 'client_email' not in client_credentials:\n+      missing_fields.append('client_email')\n+    if 'private_key_id' not in client_credentials:\n+      missing_fields.append('private_key_id')\n+    if 'private_key' not in client_credentials:\n+      missing_fields.append('private_key')\n+    if len(missing_fields) > 0:\n+      _raise_exception_for_missing_fields(missing_fields)\n+\n+    return service_account._ServiceAccountCredentials(\n+        service_account_id=client_credentials['client_id'],\n+        service_account_email=client_credentials['client_email'],\n+        private_key_id=client_credentials['private_key_id'],\n+        private_key_pkcs8_text=client_credentials['private_key'],\n+        scopes=[])\n+\n+\n+def _raise_exception_for_missing_fields(missing_fields):\n+  raise DefaultCredentialsError('The following field(s): ' +\n+                                ', '.join(missing_fields) + ' must be defined.')\n+\n+\n+def _raise_exception_for_reading_json(credential_file,\n+                                      helping_message,\n+                                      error):\n+  raise DefaultCredentialsError('An error was encountered while reading '\n+                                'json file: '+ credential_file +\n+                                helping_message + ': ' + str(error))\n+\n+\n+def _get_default_credential_GAE():", "path": "oauth2client/client.py", "position": null, "original_position": 364, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Moving it as a public method to appengine.AppAssertionCredentials class would increase the new surface we introduce. We don't want that.\nMoving it as a private method over there wouldn't gain us much: we'd still need an import followed by a one line to call this method.\nI would rather let it here.\n", "created_at": "2014-05-28T19:35:25Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13151094", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13151094"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13151094"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13151094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13151248", "pull_request_review_id": null, "id": 13151248, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive,\n+                                         '\\\\',\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+  else:\n+    return None\n+\n+\n+def _get_default_credential_from_file(default_credential_file):\n+  \"\"\"Build the default credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  # read the credentials from the file\n+  with open(default_credential_file) as default_credential:\n+    client_credentials = service_account.simplejson.load(default_credential)\n+\n+  if ('type' not in client_credentials or\n+      client_credentials['type'] != 'authorized_user' and\n+      client_credentials['type'] != 'service_account'):\n+    raise DefaultCredentialsError(\"'type' field should be defined \"\n+                                  \"(and have one of the 'authorized_user' \"\n+                                  \"or 'service_account' values)\")\n+\n+  if client_credentials['type'] == 'authorized_user':\n+    missing_fields = []\n+    if 'client_id' not in client_credentials:\n+      missing_fields.append('client_id')\n+    if 'client_secret' not in client_credentials:\n+      missing_fields.append('client_secret')\n+    if 'refresh_token' not in client_credentials:\n+      missing_fields.append('refresh_token')\n+    if len(missing_fields) > 0:\n+      _raise_exception_for_missing_fields(missing_fields)\n+\n+    return GoogleCredentials(\n+        access_token=None,\n+        client_id=client_credentials['client_id'],\n+        client_secret=client_credentials['client_secret'],\n+        refresh_token=client_credentials['refresh_token'],\n+        token_expiry=None,\n+        token_uri=GOOGLE_TOKEN_URI,\n+        user_agent='Python client library')\n+  elif client_credentials['type'] == 'service_account':\n+    missing_fields = []\n+    if 'client_id' not in client_credentials:\n+      missing_fields.append('client_id')\n+    if 'client_email' not in client_credentials:\n+      missing_fields.append('client_email')\n+    if 'private_key_id' not in client_credentials:\n+      missing_fields.append('private_key_id')\n+    if 'private_key' not in client_credentials:\n+      missing_fields.append('private_key')\n+    if len(missing_fields) > 0:\n+      _raise_exception_for_missing_fields(missing_fields)\n+\n+    return service_account._ServiceAccountCredentials(\n+        service_account_id=client_credentials['client_id'],\n+        service_account_email=client_credentials['client_email'],\n+        private_key_id=client_credentials['private_key_id'],\n+        private_key_pkcs8_text=client_credentials['private_key'],\n+        scopes=[])\n+\n+\n+def _raise_exception_for_missing_fields(missing_fields):\n+  raise DefaultCredentialsError('The following field(s): ' +\n+                                ', '.join(missing_fields) + ' must be defined.')\n+\n+\n+def _raise_exception_for_reading_json(credential_file,\n+                                      helping_message,\n+                                      error):\n+  raise DefaultCredentialsError('An error was encountered while reading '\n+                                'json file: '+ credential_file +\n+                                helping_message + ': ' + str(error))\n+\n+\n+def _get_default_credential_GAE():\n+  from oauth2client.appengine import AppAssertionCredentials\n+\n+  return AppAssertionCredentials([])", "path": "oauth2client/client.py", "position": 357, "original_position": 367, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "It needs only scopes. Passing an empty list of scopes defers them for later filling.\n", "created_at": "2014-05-28T19:38:52Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13151248", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13151248"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13151248"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13151248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152124", "pull_request_review_id": null, "id": 13152124, "diff_hunk": "@@ -87,4 +88,14 @@ def _refresh(self, http_request):\n         raise AccessTokenRefreshError(str(e))\n       self.access_token = d['accessToken']\n     else:\n+      if content.find('Error 404') >= 0:", "path": "oauth2client/gce.py", "position": null, "original_position": 12, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-05-28T19:55:35Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13152124", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152124"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13152124"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152168", "pull_request_review_id": null, "id": 13152168, "diff_hunk": "@@ -0,0 +1,132 @@\n+# Copyright (C) 2014 Google Inc.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"A service account credentials class.\n+\n+This credentials class is implemented on top of rsa library.\n+\"\"\"\n+\n+__author__ = 'orest@google.com (Orest Bolohan)'", "path": "oauth2client/service_account.py", "position": null, "original_position": 20, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Dropped it.\n", "created_at": "2014-05-28T19:56:22Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13152168", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152168"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13152168"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152247", "pull_request_review_id": null, "id": 13152247, "diff_hunk": "@@ -0,0 +1,132 @@\n+# Copyright (C) 2014 Google Inc.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"A service account credentials class.\n+\n+This credentials class is implemented on top of rsa library.\n+\"\"\"\n+\n+__author__ = 'orest@google.com (Orest Bolohan)'\n+\n+import base64\n+import rsa\n+import time\n+import types\n+\n+from oauth2client import GOOGLE_REVOKE_URI\n+from oauth2client import GOOGLE_TOKEN_URI\n+from oauth2client import util\n+from oauth2client.anyjson import simplejson\n+from oauth2client.client import AssertionCredentials\n+\n+from pyasn1.codec.ber import decoder\n+from pyasn1_modules.rfc5208 import PrivateKeyInfo\n+\n+\n+class _ServiceAccountCredentials(AssertionCredentials):\n+  \"\"\"Class representing a service account (signed JWT) credential.\"\"\"\n+\n+  MAX_TOKEN_LIFETIME_SECS = 3600 # 1 hour in seconds\n+\n+  def __init__(self,", "path": "oauth2client/service_account.py", "position": null, "original_position": 42, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-05-28T19:57:49Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13152247", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152247"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13152247"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152483", "pull_request_review_id": null, "id": 13152483, "diff_hunk": "@@ -0,0 +1,132 @@\n+# Copyright (C) 2014 Google Inc.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"A service account credentials class.\n+\n+This credentials class is implemented on top of rsa library.\n+\"\"\"\n+\n+__author__ = 'orest@google.com (Orest Bolohan)'\n+\n+import base64\n+import rsa\n+import time\n+import types\n+\n+from oauth2client import GOOGLE_REVOKE_URI\n+from oauth2client import GOOGLE_TOKEN_URI\n+from oauth2client import util\n+from oauth2client.anyjson import simplejson\n+from oauth2client.client import AssertionCredentials\n+\n+from pyasn1.codec.ber import decoder\n+from pyasn1_modules.rfc5208 import PrivateKeyInfo\n+\n+\n+class _ServiceAccountCredentials(AssertionCredentials):\n+  \"\"\"Class representing a service account (signed JWT) credential.\"\"\"\n+\n+  MAX_TOKEN_LIFETIME_SECS = 3600 # 1 hour in seconds\n+\n+  def __init__(self,\n+      service_account_id,\n+      service_account_email,\n+      private_key_id,\n+      private_key_pkcs8_text,\n+      scopes,\n+      user_agent=None,\n+      token_uri=GOOGLE_TOKEN_URI,\n+      revoke_uri=GOOGLE_REVOKE_URI,\n+      **kwargs):\n+\n+    super(_ServiceAccountCredentials, self).__init__(\n+        None,\n+        user_agent=user_agent,\n+        token_uri=token_uri,\n+        revoke_uri=revoke_uri)\n+    \n+    self._service_account_id = service_account_id\n+    self._service_account_email = service_account_email\n+    self._private_key_id = private_key_id\n+    self._private_key = _get_pk(private_key_pkcs8_text)\n+    self._private_key_pkcs8_text = private_key_pkcs8_text\n+    self._scopes = util.scopes_to_string(scopes)\n+    self._user_agent = user_agent\n+    self._token_uri = token_uri\n+    self._revoke_uri = revoke_uri\n+    self._kwargs = kwargs\n+\n+  def _generate_assertion(self):\n+    \"\"\"Generate the assertion that will be used in the request.\"\"\"\n+\n+    header = {\n+        'alg': 'RS256',\n+        'typ': 'JWT',\n+        'keyid': self._private_key_id\n+    }\n+\n+    now = long(time.time())\n+    payload = {\n+        'aud': self._token_uri,\n+        'scope': self._scopes,\n+        'iat': now,\n+        'exp': now + _ServiceAccountCredentials.MAX_TOKEN_LIFETIME_SECS,\n+        'iss': self._service_account_email\n+    }\n+    payload.update(self._kwargs)\n+\n+    assertion_input = '%s.%s' % (\n+        _urlsafe_b64encode(header),\n+        _urlsafe_b64encode(payload))\n+\n+    # Sign the assertion.\n+    signature = base64.urlsafe_b64encode(rsa.pkcs1.sign(\n+        assertion_input, self._private_key, 'SHA-256')).rstrip('=')\n+\n+    return '%s.%s' % (assertion_input, signature)\n+\n+  def sign_blob(self, blob):\n+    return (self._private_key_id,\n+            rsa.pkcs1.sign(blob, self._private_key, 'SHA-256'))\n+\n+  def get_service_account_email(self):", "path": "oauth2client/service_account.py", "position": null, "original_position": 103, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Neat.\nThank you.\n", "created_at": "2014-05-28T20:02:57Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13152483", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152483"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13152483"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152548", "pull_request_review_id": null, "id": 13152548, "diff_hunk": "@@ -0,0 +1,132 @@\n+# Copyright (C) 2014 Google Inc.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"A service account credentials class.\n+\n+This credentials class is implemented on top of rsa library.\n+\"\"\"\n+\n+__author__ = 'orest@google.com (Orest Bolohan)'\n+\n+import base64\n+import rsa\n+import time\n+import types\n+\n+from oauth2client import GOOGLE_REVOKE_URI\n+from oauth2client import GOOGLE_TOKEN_URI\n+from oauth2client import util\n+from oauth2client.anyjson import simplejson\n+from oauth2client.client import AssertionCredentials\n+\n+from pyasn1.codec.ber import decoder\n+from pyasn1_modules.rfc5208 import PrivateKeyInfo\n+\n+\n+class _ServiceAccountCredentials(AssertionCredentials):\n+  \"\"\"Class representing a service account (signed JWT) credential.\"\"\"\n+\n+  MAX_TOKEN_LIFETIME_SECS = 3600 # 1 hour in seconds\n+\n+  def __init__(self,\n+      service_account_id,\n+      service_account_email,\n+      private_key_id,\n+      private_key_pkcs8_text,\n+      scopes,\n+      user_agent=None,\n+      token_uri=GOOGLE_TOKEN_URI,\n+      revoke_uri=GOOGLE_REVOKE_URI,\n+      **kwargs):\n+\n+    super(_ServiceAccountCredentials, self).__init__(\n+        None,\n+        user_agent=user_agent,\n+        token_uri=token_uri,\n+        revoke_uri=revoke_uri)\n+    \n+    self._service_account_id = service_account_id\n+    self._service_account_email = service_account_email\n+    self._private_key_id = private_key_id\n+    self._private_key = _get_pk(private_key_pkcs8_text)\n+    self._private_key_pkcs8_text = private_key_pkcs8_text\n+    self._scopes = util.scopes_to_string(scopes)\n+    self._user_agent = user_agent\n+    self._token_uri = token_uri\n+    self._revoke_uri = revoke_uri\n+    self._kwargs = kwargs\n+\n+  def _generate_assertion(self):\n+    \"\"\"Generate the assertion that will be used in the request.\"\"\"\n+\n+    header = {\n+        'alg': 'RS256',\n+        'typ': 'JWT',\n+        'keyid': self._private_key_id\n+    }\n+\n+    now = long(time.time())\n+    payload = {\n+        'aud': self._token_uri,\n+        'scope': self._scopes,\n+        'iat': now,\n+        'exp': now + _ServiceAccountCredentials.MAX_TOKEN_LIFETIME_SECS,\n+        'iss': self._service_account_email\n+    }\n+    payload.update(self._kwargs)\n+\n+    assertion_input = '%s.%s' % (\n+        _urlsafe_b64encode(header),\n+        _urlsafe_b64encode(payload))\n+\n+    # Sign the assertion.\n+    signature = base64.urlsafe_b64encode(rsa.pkcs1.sign(\n+        assertion_input, self._private_key, 'SHA-256')).rstrip('=')\n+\n+    return '%s.%s' % (assertion_input, signature)\n+\n+  def sign_blob(self, blob):\n+    return (self._private_key_id,\n+            rsa.pkcs1.sign(blob, self._private_key, 'SHA-256'))\n+\n+  def get_service_account_email(self):\n+    return self._service_account_email\n+\n+  def create_scoped_required(self):\n+    return not bool(self._scopes)\n+\n+  def create_scoped(self, scopes):\n+    return _ServiceAccountCredentials(self._service_account_id,\n+                                      self._service_account_email,\n+                                      self._private_key_id,\n+                                      self._private_key_pkcs8_text,\n+                                      scopes,\n+                                      user_agent=self._user_agent,\n+                                      token_uri=self._token_uri,\n+                                      revoke_uri=self._revoke_uri,\n+                                      **self._kwargs)\n+\n+def _urlsafe_b64encode(data):\n+  return base64.urlsafe_b64encode(\n+      simplejson.dumps(data, separators = (',', ':'))\\\n+          .encode('UTF-8')).rstrip('=')\n+\n+def _get_pk(private_key_pkcs8_text):", "path": "oauth2client/service_account.py", "position": null, "original_position": 125, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-05-28T20:04:14Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13152548", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152548"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13152548"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152825", "pull_request_review_id": null, "id": 13152825, "diff_hunk": "@@ -0,0 +1,10 @@\n+application: bamboo-machine-422", "path": "samples/app.yaml", "position": null, "original_position": 1, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-05-28T20:08:23Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13152825", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152825"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13152825"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152861", "pull_request_review_id": null, "id": 13152861, "diff_hunk": "@@ -0,0 +1,24 @@\n+# To be used to test GoogleCredential.GetDefaultCredential()\n+# from devel GAE (ie, dev_appserver.py).\n+\n+import webapp2\n+from googleapiclient.discovery import build\n+from oauth2client.client import GoogleCredentials\n+\n+PROJECT = \"bamboo-machine-422\"  # Provide your own GCE project here\n+ZONE = \"us-central1-a\"          # Put here a zone which has some VMs\n+\n+def get_instances():\n+  service = build(\"compute\", \"v1\", credentials=GoogleCredentials.get_default())\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  return request.execute()\n+\n+class MainPage(webapp2.RequestHandler):\n+\n+  def get(self):\n+    self.response.write(get_instances())\n+\n+app = webapp2.WSGIApplication([", "path": "samples/call_compute_service_from_gae.py", "position": null, "original_position": 22, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-05-28T20:09:06Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13152861", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152861"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13152861"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152893", "pull_request_review_id": null, "id": 13152893, "diff_hunk": "@@ -26,6 +26,9 @@\n \n install_requires = [\n     'httplib2>=0.8',\n+    'pyasn1==0.1.7',\n+    'pyasn1_modules==0.0.5',", "path": "setup.py", "position": 5, "original_position": 5, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Should I get rid of the versions?\n", "created_at": "2014-05-28T20:09:47Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13152893", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152893"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13152893"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13152893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13153479", "pull_request_review_id": null, "id": 13153479, "diff_hunk": "@@ -0,0 +1,9 @@\n+-----BEGIN PUBLIC KEY-----", "path": "tests/data/publickey_openssl.pem", "position": 1, "original_position": 1, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "This public key was generated from the certificate from the existing publickey.pem file, by running:\n\nopenssl x509 -pubkey -noout -in publickey.pem\n\nThis public key goes hand in hand with the private key from various privatekey files from the same directory (as you'll see in test_service_account.py).\n", "created_at": "2014-05-28T20:21:53Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13153479", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13153479"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13153479"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13153479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13154925", "pull_request_review_id": null, "id": 13154925, "diff_hunk": "@@ -107,6 +120,314 @@ def test_to_from_json(self):\n     restored = Credentials.new_from_json(json)\n \n \n+class GoogleCredentialsTests(unittest.TestCase):\n+\n+  def setUp(self):\n+    self.env_server_software = os.environ.get('SERVER_SOFTWARE', None)\n+    self.env_google_credentials_default = (\n+        os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None))\n+    self.env_appdata = os.environ.get('APPDATA', None)\n+    self.os_name = os.name\n+    from oauth2client import client\n+    setattr(client, '_computed_env_name', False)\n+\n+  def tearDown(self):\n+    self.reset_env('SERVER_SOFTWARE', self.env_server_software)", "path": "tests/test_oauth2client.py", "position": null, "original_position": 58, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "f19ce2a6e4f87f86f206f273f7d6cbe29dad0e71", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "A few thoughts:\n- The tests are never run in any sort of parallel/multithreaded environment, so there's unlikely to be a problem on that front.\n- Most of the env stuff is harmless enough, but modifying anything in `os` is more worrisome.\n- There's definitely a cleaner way to handle this in python, though I'm not sure how much you want to do. The \"right\" answer here is to write a [context manager](https://docs.python.org/2/library/contextlib.html); roughly speaking, you'd write something that looks like (where you're welcome to change the names):\n  \n  ```\n  @contextlib.contextmanager\n  def SetupEnv(desired_os, desired_server_software):\n    original_server_software = os.environ.get('SERVER_SOFTWARE')\n    os.environ['SERVER_SOFTWARE'] = desired_server_software\n    ... <more env setup> ...\n    yield\n    os.environ['SERVER_SOFTWARE'] = original_server_software\n    ... <more resetting> ...\n  ```\n  \n  Then you can just say\n  \n  ```\n  with SetupEnv('nt', 'DEV_APPSERVER'):\n    ... <tests for that env> ...\n  ```\n", "created_at": "2014-05-28T20:46:23Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13154925", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13154925"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13154925"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13154925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13154960", "pull_request_review_id": null, "id": 13154960, "diff_hunk": "@@ -107,6 +120,314 @@ def test_to_from_json(self):\n     restored = Credentials.new_from_json(json)\n \n \n+class GoogleCredentialsTests(unittest.TestCase):\n+\n+  def setUp(self):\n+    self.env_server_software = os.environ.get('SERVER_SOFTWARE', None)\n+    self.env_google_credentials_default = (\n+        os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None))\n+    self.env_appdata = os.environ.get('APPDATA', None)\n+    self.os_name = os.name\n+    from oauth2client import client\n+    setattr(client, '_computed_env_name', False)\n+\n+  def tearDown(self):\n+    self.reset_env('SERVER_SOFTWARE', self.env_server_software)\n+    self.reset_env('GOOGLE_CREDENTIALS_DEFAULT',\n+                   self.env_google_credentials_default)\n+    self.reset_env('APPDATA', self.env_appdata)\n+    os.name = self.os_name\n+\n+  def reset_env(self, env, value):", "path": "tests/test_oauth2client.py", "position": 83, "original_position": 64, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "I think you could simplify this using `os.environ.pop`, but it's not deeply important.\n", "created_at": "2014-05-28T20:47:29Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13154960", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13154960"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13154960"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13154960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13154979", "pull_request_review_id": null, "id": 13154979, "diff_hunk": "@@ -107,6 +120,314 @@ def test_to_from_json(self):\n     restored = Credentials.new_from_json(json)\n \n \n+class GoogleCredentialsTests(unittest.TestCase):\n+\n+  def setUp(self):\n+    self.env_server_software = os.environ.get('SERVER_SOFTWARE', None)\n+    self.env_google_credentials_default = (\n+        os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None))\n+    self.env_appdata = os.environ.get('APPDATA', None)\n+    self.os_name = os.name\n+    from oauth2client import client\n+    setattr(client, '_computed_env_name', False)\n+\n+  def tearDown(self):\n+    self.reset_env('SERVER_SOFTWARE', self.env_server_software)\n+    self.reset_env('GOOGLE_CREDENTIALS_DEFAULT',\n+                   self.env_google_credentials_default)\n+    self.reset_env('APPDATA', self.env_appdata)\n+    os.name = self.os_name\n+\n+  def reset_env(self, env, value):\n+    if value is not None:\n+      os.environ[env] = value\n+    else:\n+      if os.environ.get(env, None):\n+        del os.environ[env]\n+\n+  def validate_service_account_credentials(self, credentials):\n+    self.assertTrue(isinstance(credentials, _ServiceAccountCredentials))\n+    self.assertEqual('123', credentials._service_account_id)\n+    self.assertEqual('dummy@google.com', credentials._service_account_email)\n+    self.assertEqual('ABCDEF', credentials._private_key_id)\n+    self.assertEqual('', credentials._scopes)\n+\n+  def validate_google_credentials(self, credentials):\n+    self.assertTrue(isinstance(credentials, GoogleCredentials))\n+    self.assertEqual(None, credentials.access_token)\n+    self.assertEqual('123', credentials.client_id)\n+    self.assertEqual('secret', credentials.client_secret)\n+    self.assertEqual('alabalaportocala', credentials.refresh_token)\n+    self.assertEqual(None, credentials.token_expiry)\n+    self.assertEqual(GOOGLE_TOKEN_URI, credentials.token_uri)\n+    self.assertEqual('Python client library', credentials.user_agent)\n+\n+  def get_a_google_credentials_object(self):\n+    return GoogleCredentials(None,", "path": "tests/test_oauth2client.py", "position": null, "original_position": 89, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Let's compact these\n", "created_at": "2014-05-28T20:47:45Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13154979", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13154979"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13154979"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13154979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13154989", "pull_request_review_id": null, "id": 13154989, "diff_hunk": "@@ -107,6 +120,314 @@ def test_to_from_json(self):\n     restored = Credentials.new_from_json(json)\n \n \n+class GoogleCredentialsTests(unittest.TestCase):\n+\n+  def setUp(self):\n+    self.env_server_software = os.environ.get('SERVER_SOFTWARE', None)\n+    self.env_google_credentials_default = (\n+        os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None))\n+    self.env_appdata = os.environ.get('APPDATA', None)\n+    self.os_name = os.name\n+    from oauth2client import client\n+    setattr(client, '_computed_env_name', False)\n+\n+  def tearDown(self):\n+    self.reset_env('SERVER_SOFTWARE', self.env_server_software)\n+    self.reset_env('GOOGLE_CREDENTIALS_DEFAULT',\n+                   self.env_google_credentials_default)\n+    self.reset_env('APPDATA', self.env_appdata)\n+    os.name = self.os_name\n+\n+  def reset_env(self, env, value):\n+    if value is not None:\n+      os.environ[env] = value\n+    else:\n+      if os.environ.get(env, None):\n+        del os.environ[env]\n+\n+  def validate_service_account_credentials(self, credentials):\n+    self.assertTrue(isinstance(credentials, _ServiceAccountCredentials))\n+    self.assertEqual('123', credentials._service_account_id)\n+    self.assertEqual('dummy@google.com', credentials._service_account_email)\n+    self.assertEqual('ABCDEF', credentials._private_key_id)\n+    self.assertEqual('', credentials._scopes)\n+\n+  def validate_google_credentials(self, credentials):\n+    self.assertTrue(isinstance(credentials, GoogleCredentials))\n+    self.assertEqual(None, credentials.access_token)\n+    self.assertEqual('123', credentials.client_id)\n+    self.assertEqual('secret', credentials.client_secret)\n+    self.assertEqual('alabalaportocala', credentials.refresh_token)\n+    self.assertEqual(None, credentials.token_expiry)\n+    self.assertEqual(GOOGLE_TOKEN_URI, credentials.token_uri)\n+    self.assertEqual('Python client library', credentials.user_agent)\n+\n+  def get_a_google_credentials_object(self):\n+    return GoogleCredentials(None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None)\n+\n+  def test_create_scoped_required(self):\n+    self.assertFalse(\n+        self.get_a_google_credentials_object().create_scoped_required())\n+\n+  def test_create_scoped(self):\n+    credentials = self.get_a_google_credentials_object() \n+    self.assertEqual(credentials, credentials.create_scoped(None))\n+    self.assertEqual(credentials,\n+                     credentials.create_scoped(['dummy_scope']))\n+\n+  def test_get_environment_gae_production(self):\n+    os.environ['SERVER_SOFTWARE'] = 'Google App Engine/XYZ'", "path": "tests/test_oauth2client.py", "position": 121, "original_position": 109, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Probably want to reset this after.\n", "created_at": "2014-05-28T20:47:59Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13154989", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13154989"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13154989"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13154989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13154992", "pull_request_review_id": null, "id": 13154992, "diff_hunk": "@@ -107,6 +120,314 @@ def test_to_from_json(self):\n     restored = Credentials.new_from_json(json)\n \n \n+class GoogleCredentialsTests(unittest.TestCase):\n+\n+  def setUp(self):\n+    self.env_server_software = os.environ.get('SERVER_SOFTWARE', None)\n+    self.env_google_credentials_default = (\n+        os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None))\n+    self.env_appdata = os.environ.get('APPDATA', None)\n+    self.os_name = os.name\n+    from oauth2client import client\n+    setattr(client, '_computed_env_name', False)\n+\n+  def tearDown(self):\n+    self.reset_env('SERVER_SOFTWARE', self.env_server_software)\n+    self.reset_env('GOOGLE_CREDENTIALS_DEFAULT',\n+                   self.env_google_credentials_default)\n+    self.reset_env('APPDATA', self.env_appdata)\n+    os.name = self.os_name\n+\n+  def reset_env(self, env, value):\n+    if value is not None:\n+      os.environ[env] = value\n+    else:\n+      if os.environ.get(env, None):\n+        del os.environ[env]\n+\n+  def validate_service_account_credentials(self, credentials):\n+    self.assertTrue(isinstance(credentials, _ServiceAccountCredentials))\n+    self.assertEqual('123', credentials._service_account_id)\n+    self.assertEqual('dummy@google.com', credentials._service_account_email)\n+    self.assertEqual('ABCDEF', credentials._private_key_id)\n+    self.assertEqual('', credentials._scopes)\n+\n+  def validate_google_credentials(self, credentials):\n+    self.assertTrue(isinstance(credentials, GoogleCredentials))\n+    self.assertEqual(None, credentials.access_token)\n+    self.assertEqual('123', credentials.client_id)\n+    self.assertEqual('secret', credentials.client_secret)\n+    self.assertEqual('alabalaportocala', credentials.refresh_token)\n+    self.assertEqual(None, credentials.token_expiry)\n+    self.assertEqual(GOOGLE_TOKEN_URI, credentials.token_uri)\n+    self.assertEqual('Python client library', credentials.user_agent)\n+\n+  def get_a_google_credentials_object(self):\n+    return GoogleCredentials(None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None)\n+\n+  def test_create_scoped_required(self):\n+    self.assertFalse(\n+        self.get_a_google_credentials_object().create_scoped_required())\n+\n+  def test_create_scoped(self):\n+    credentials = self.get_a_google_credentials_object() \n+    self.assertEqual(credentials, credentials.create_scoped(None))\n+    self.assertEqual(credentials,\n+                     credentials.create_scoped(['dummy_scope']))\n+\n+  def test_get_environment_gae_production(self):\n+    os.environ['SERVER_SOFTWARE'] = 'Google App Engine/XYZ'", "path": "tests/test_oauth2client.py", "position": 121, "original_position": 109, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "(and below)\n", "created_at": "2014-05-28T20:48:04Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13154992", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13154992"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13154992"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13154992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13155023", "pull_request_review_id": null, "id": 13155023, "diff_hunk": "@@ -107,6 +120,314 @@ def test_to_from_json(self):\n     restored = Credentials.new_from_json(json)\n \n \n+class GoogleCredentialsTests(unittest.TestCase):\n+\n+  def setUp(self):\n+    self.env_server_software = os.environ.get('SERVER_SOFTWARE', None)\n+    self.env_google_credentials_default = (\n+        os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None))\n+    self.env_appdata = os.environ.get('APPDATA', None)\n+    self.os_name = os.name\n+    from oauth2client import client\n+    setattr(client, '_computed_env_name', False)\n+\n+  def tearDown(self):\n+    self.reset_env('SERVER_SOFTWARE', self.env_server_software)\n+    self.reset_env('GOOGLE_CREDENTIALS_DEFAULT',\n+                   self.env_google_credentials_default)\n+    self.reset_env('APPDATA', self.env_appdata)\n+    os.name = self.os_name\n+\n+  def reset_env(self, env, value):\n+    if value is not None:\n+      os.environ[env] = value\n+    else:\n+      if os.environ.get(env, None):\n+        del os.environ[env]\n+\n+  def validate_service_account_credentials(self, credentials):\n+    self.assertTrue(isinstance(credentials, _ServiceAccountCredentials))\n+    self.assertEqual('123', credentials._service_account_id)\n+    self.assertEqual('dummy@google.com', credentials._service_account_email)\n+    self.assertEqual('ABCDEF', credentials._private_key_id)\n+    self.assertEqual('', credentials._scopes)\n+\n+  def validate_google_credentials(self, credentials):\n+    self.assertTrue(isinstance(credentials, GoogleCredentials))\n+    self.assertEqual(None, credentials.access_token)\n+    self.assertEqual('123', credentials.client_id)\n+    self.assertEqual('secret', credentials.client_secret)\n+    self.assertEqual('alabalaportocala', credentials.refresh_token)\n+    self.assertEqual(None, credentials.token_expiry)\n+    self.assertEqual(GOOGLE_TOKEN_URI, credentials.token_uri)\n+    self.assertEqual('Python client library', credentials.user_agent)\n+\n+  def get_a_google_credentials_object(self):\n+    return GoogleCredentials(None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None)\n+\n+  def test_create_scoped_required(self):\n+    self.assertFalse(\n+        self.get_a_google_credentials_object().create_scoped_required())\n+\n+  def test_create_scoped(self):\n+    credentials = self.get_a_google_credentials_object() \n+    self.assertEqual(credentials, credentials.create_scoped(None))\n+    self.assertEqual(credentials,\n+                     credentials.create_scoped(['dummy_scope']))\n+\n+  def test_get_environment_gae_production(self):\n+    os.environ['SERVER_SOFTWARE'] = 'Google App Engine/XYZ'\n+    self.assertEquals('GAE_PRODUCTION', _get_environment())\n+\n+  def test_get_environment_gae_local(self):\n+    os.environ['SERVER_SOFTWARE'] = 'Development/XYZ'\n+    self.assertEqual('GAE_LOCAL', _get_environment())\n+\n+  def test_get_environment_gce_production(self):\n+    os.environ['SERVER_SOFTWARE'] = ''\n+    m = mox.Mox()\n+\n+    http_request = m.CreateMock(object)\n+    http_request.__call__(('http://metadata.google.internal'\n+                          )).AndReturn(({'metadata-flavor':'Google'}, ''))\n+\n+    m.ReplayAll()\n+\n+    self.assertEqual('GCE_PRODUCTION', _get_environment(http_request))\n+\n+    m.UnsetStubs()\n+    m.VerifyAll()\n+\n+  def test_get_environment_unknown(self):\n+    os.environ['SERVER_SOFTWARE'] = ''\n+    m = mox.Mox()\n+\n+    http_request = m.CreateMock(object)\n+    http_request.__call__(('http://metadata.google.internal'\n+                          )).AndReturn(({}, ''))\n+\n+    m.ReplayAll()\n+\n+    self.assertEqual('UNKNOWN', _get_environment(http_request))\n+\n+    m.UnsetStubs()\n+    m.VerifyAll()\n+\n+  def test_get_environment_variable_file(self):\n+    environment_variable_file = datafile(\n+        os.path.join('gcloud', 'credentials_default.json'))\n+    os.environ['GOOGLE_CREDENTIALS_DEFAULT'] = environment_variable_file\n+    self.assertEqual(environment_variable_file,\n+                     _get_environment_variable_file())\n+\n+  def test_get_environment_variable_file_error(self):\n+    nonexistent_file = datafile('nonexistent')\n+    os.environ['GOOGLE_CREDENTIALS_DEFAULT'] = nonexistent_file\n+    try:", "path": "tests/test_oauth2client.py", "position": null, "original_position": 156, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "You should check out `self.assertRaises`, which will let you clean this up.\n", "created_at": "2014-05-28T20:48:36Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13155023", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13155023"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13155023"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13155023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13155246", "pull_request_review_id": null, "id": 13155246, "diff_hunk": "@@ -526,7 +562,7 @@ def test_exchange_id_token_fail(self):\n     self.assertRaises(VerifyJwtTokenError, self.flow.step2_exchange,\n       'some random code', http=http)\n \n-  def test_exchange_id_token_fail(self):\n+  def test_exchange_id_token_fail_encore(self):", "path": "tests/test_oauth2client.py", "position": null, "original_position": 70, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "18bcc4911e2fcd92245f60224d8edbf59bea9e8e", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Yes! I also spotted this the other day and fixed it, but apparently hadn't pushed to this repo; it's now e48d951. \n", "created_at": "2014-05-28T20:52:23Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13155246", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13155246"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13155246"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13155246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13155524", "pull_request_review_id": null, "id": 13155524, "diff_hunk": "@@ -0,0 +1,121 @@\n+#!/usr/bin/python2.4\n+#\n+# Copyright 2014 Google Inc.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\n+\"\"\"Oauth2client tests\n+\n+Unit tests for service account credentials implemented using RSA.\n+\"\"\"\n+\n+__author__ = 'orest@google.com (Orest Bolohan)'\n+\n+import os\n+import rsa\n+import time\n+import unittest\n+\n+from http_mock import HttpMockSequence\n+from oauth2client.anyjson import simplejson\n+from oauth2client.service_account import _ServiceAccountCredentials\n+\n+\n+def datafile(filename):", "path": "tests/test_service_account.py", "position": 33, "original_position": 35, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "The right way to do this is with `pkgutil.get_data`; we do this in the [bq code](https://code.google.com/p/google-bigquery-tools/source/browse/bq/bigquery_client.py#471), but it also requires a little work in `setup.py` to make sure you've got it right. You can leave a `TODO` on this one if you'd like.\n", "created_at": "2014-05-28T20:57:29Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13155524", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13155524"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13155524"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13155524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13161433", "pull_request_review_id": null, "id": 13161433, "diff_hunk": "@@ -107,6 +120,314 @@ def test_to_from_json(self):\n     restored = Credentials.new_from_json(json)\n \n \n+class GoogleCredentialsTests(unittest.TestCase):\n+\n+  def setUp(self):\n+    self.env_server_software = os.environ.get('SERVER_SOFTWARE', None)\n+    self.env_google_credentials_default = (\n+        os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None))\n+    self.env_appdata = os.environ.get('APPDATA', None)\n+    self.os_name = os.name\n+    from oauth2client import client\n+    setattr(client, '_computed_env_name', False)\n+\n+  def tearDown(self):\n+    self.reset_env('SERVER_SOFTWARE', self.env_server_software)\n+    self.reset_env('GOOGLE_CREDENTIALS_DEFAULT',\n+                   self.env_google_credentials_default)\n+    self.reset_env('APPDATA', self.env_appdata)\n+    os.name = self.os_name\n+\n+  def reset_env(self, env, value):", "path": "tests/test_oauth2client.py", "position": 83, "original_position": 64, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Is this what you had in mind?\n", "created_at": "2014-05-28T23:03:20Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13161433", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13161433"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13161433"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13161433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13161466", "pull_request_review_id": null, "id": 13161466, "diff_hunk": "@@ -107,6 +120,314 @@ def test_to_from_json(self):\n     restored = Credentials.new_from_json(json)\n \n \n+class GoogleCredentialsTests(unittest.TestCase):\n+\n+  def setUp(self):\n+    self.env_server_software = os.environ.get('SERVER_SOFTWARE', None)\n+    self.env_google_credentials_default = (\n+        os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None))\n+    self.env_appdata = os.environ.get('APPDATA', None)\n+    self.os_name = os.name\n+    from oauth2client import client\n+    setattr(client, '_computed_env_name', False)\n+\n+  def tearDown(self):\n+    self.reset_env('SERVER_SOFTWARE', self.env_server_software)\n+    self.reset_env('GOOGLE_CREDENTIALS_DEFAULT',\n+                   self.env_google_credentials_default)\n+    self.reset_env('APPDATA', self.env_appdata)\n+    os.name = self.os_name\n+\n+  def reset_env(self, env, value):\n+    if value is not None:\n+      os.environ[env] = value\n+    else:\n+      if os.environ.get(env, None):\n+        del os.environ[env]\n+\n+  def validate_service_account_credentials(self, credentials):\n+    self.assertTrue(isinstance(credentials, _ServiceAccountCredentials))\n+    self.assertEqual('123', credentials._service_account_id)\n+    self.assertEqual('dummy@google.com', credentials._service_account_email)\n+    self.assertEqual('ABCDEF', credentials._private_key_id)\n+    self.assertEqual('', credentials._scopes)\n+\n+  def validate_google_credentials(self, credentials):\n+    self.assertTrue(isinstance(credentials, GoogleCredentials))\n+    self.assertEqual(None, credentials.access_token)\n+    self.assertEqual('123', credentials.client_id)\n+    self.assertEqual('secret', credentials.client_secret)\n+    self.assertEqual('alabalaportocala', credentials.refresh_token)\n+    self.assertEqual(None, credentials.token_expiry)\n+    self.assertEqual(GOOGLE_TOKEN_URI, credentials.token_uri)\n+    self.assertEqual('Python client library', credentials.user_agent)\n+\n+  def get_a_google_credentials_object(self):\n+    return GoogleCredentials(None,", "path": "tests/test_oauth2client.py", "position": null, "original_position": 89, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-05-28T23:04:20Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13161466", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13161466"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13161466"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13161466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13161579", "pull_request_review_id": null, "id": 13161579, "diff_hunk": "@@ -107,6 +120,314 @@ def test_to_from_json(self):\n     restored = Credentials.new_from_json(json)\n \n \n+class GoogleCredentialsTests(unittest.TestCase):\n+\n+  def setUp(self):\n+    self.env_server_software = os.environ.get('SERVER_SOFTWARE', None)\n+    self.env_google_credentials_default = (\n+        os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None))\n+    self.env_appdata = os.environ.get('APPDATA', None)\n+    self.os_name = os.name\n+    from oauth2client import client\n+    setattr(client, '_computed_env_name', False)\n+\n+  def tearDown(self):\n+    self.reset_env('SERVER_SOFTWARE', self.env_server_software)\n+    self.reset_env('GOOGLE_CREDENTIALS_DEFAULT',\n+                   self.env_google_credentials_default)\n+    self.reset_env('APPDATA', self.env_appdata)\n+    os.name = self.os_name\n+\n+  def reset_env(self, env, value):\n+    if value is not None:\n+      os.environ[env] = value\n+    else:\n+      if os.environ.get(env, None):\n+        del os.environ[env]\n+\n+  def validate_service_account_credentials(self, credentials):\n+    self.assertTrue(isinstance(credentials, _ServiceAccountCredentials))\n+    self.assertEqual('123', credentials._service_account_id)\n+    self.assertEqual('dummy@google.com', credentials._service_account_email)\n+    self.assertEqual('ABCDEF', credentials._private_key_id)\n+    self.assertEqual('', credentials._scopes)\n+\n+  def validate_google_credentials(self, credentials):\n+    self.assertTrue(isinstance(credentials, GoogleCredentials))\n+    self.assertEqual(None, credentials.access_token)\n+    self.assertEqual('123', credentials.client_id)\n+    self.assertEqual('secret', credentials.client_secret)\n+    self.assertEqual('alabalaportocala', credentials.refresh_token)\n+    self.assertEqual(None, credentials.token_expiry)\n+    self.assertEqual(GOOGLE_TOKEN_URI, credentials.token_uri)\n+    self.assertEqual('Python client library', credentials.user_agent)\n+\n+  def get_a_google_credentials_object(self):\n+    return GoogleCredentials(None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None)\n+\n+  def test_create_scoped_required(self):\n+    self.assertFalse(\n+        self.get_a_google_credentials_object().create_scoped_required())\n+\n+  def test_create_scoped(self):\n+    credentials = self.get_a_google_credentials_object() \n+    self.assertEqual(credentials, credentials.create_scoped(None))\n+    self.assertEqual(credentials,\n+                     credentials.create_scoped(['dummy_scope']))\n+\n+  def test_get_environment_gae_production(self):\n+    os.environ['SERVER_SOFTWARE'] = 'Google App Engine/XYZ'", "path": "tests/test_oauth2client.py", "position": 121, "original_position": 109, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "setUp() and tearDown() take care of this.\n", "created_at": "2014-05-28T23:07:23Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13161579", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13161579"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13161579"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13161579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13161844", "pull_request_review_id": null, "id": 13161844, "diff_hunk": "@@ -107,6 +120,314 @@ def test_to_from_json(self):\n     restored = Credentials.new_from_json(json)\n \n \n+class GoogleCredentialsTests(unittest.TestCase):\n+\n+  def setUp(self):\n+    self.env_server_software = os.environ.get('SERVER_SOFTWARE', None)\n+    self.env_google_credentials_default = (\n+        os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None))\n+    self.env_appdata = os.environ.get('APPDATA', None)\n+    self.os_name = os.name\n+    from oauth2client import client\n+    setattr(client, '_computed_env_name', False)\n+\n+  def tearDown(self):\n+    self.reset_env('SERVER_SOFTWARE', self.env_server_software)\n+    self.reset_env('GOOGLE_CREDENTIALS_DEFAULT',\n+                   self.env_google_credentials_default)\n+    self.reset_env('APPDATA', self.env_appdata)\n+    os.name = self.os_name\n+\n+  def reset_env(self, env, value):\n+    if value is not None:\n+      os.environ[env] = value\n+    else:\n+      if os.environ.get(env, None):\n+        del os.environ[env]\n+\n+  def validate_service_account_credentials(self, credentials):\n+    self.assertTrue(isinstance(credentials, _ServiceAccountCredentials))\n+    self.assertEqual('123', credentials._service_account_id)\n+    self.assertEqual('dummy@google.com', credentials._service_account_email)\n+    self.assertEqual('ABCDEF', credentials._private_key_id)\n+    self.assertEqual('', credentials._scopes)\n+\n+  def validate_google_credentials(self, credentials):\n+    self.assertTrue(isinstance(credentials, GoogleCredentials))\n+    self.assertEqual(None, credentials.access_token)\n+    self.assertEqual('123', credentials.client_id)\n+    self.assertEqual('secret', credentials.client_secret)\n+    self.assertEqual('alabalaportocala', credentials.refresh_token)\n+    self.assertEqual(None, credentials.token_expiry)\n+    self.assertEqual(GOOGLE_TOKEN_URI, credentials.token_uri)\n+    self.assertEqual('Python client library', credentials.user_agent)\n+\n+  def get_a_google_credentials_object(self):\n+    return GoogleCredentials(None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None)\n+\n+  def test_create_scoped_required(self):\n+    self.assertFalse(\n+        self.get_a_google_credentials_object().create_scoped_required())\n+\n+  def test_create_scoped(self):\n+    credentials = self.get_a_google_credentials_object() \n+    self.assertEqual(credentials, credentials.create_scoped(None))\n+    self.assertEqual(credentials,\n+                     credentials.create_scoped(['dummy_scope']))\n+\n+  def test_get_environment_gae_production(self):\n+    os.environ['SERVER_SOFTWARE'] = 'Google App Engine/XYZ'\n+    self.assertEquals('GAE_PRODUCTION', _get_environment())\n+\n+  def test_get_environment_gae_local(self):\n+    os.environ['SERVER_SOFTWARE'] = 'Development/XYZ'\n+    self.assertEqual('GAE_LOCAL', _get_environment())\n+\n+  def test_get_environment_gce_production(self):\n+    os.environ['SERVER_SOFTWARE'] = ''\n+    m = mox.Mox()\n+\n+    http_request = m.CreateMock(object)\n+    http_request.__call__(('http://metadata.google.internal'\n+                          )).AndReturn(({'metadata-flavor':'Google'}, ''))\n+\n+    m.ReplayAll()\n+\n+    self.assertEqual('GCE_PRODUCTION', _get_environment(http_request))\n+\n+    m.UnsetStubs()\n+    m.VerifyAll()\n+\n+  def test_get_environment_unknown(self):\n+    os.environ['SERVER_SOFTWARE'] = ''\n+    m = mox.Mox()\n+\n+    http_request = m.CreateMock(object)\n+    http_request.__call__(('http://metadata.google.internal'\n+                          )).AndReturn(({}, ''))\n+\n+    m.ReplayAll()\n+\n+    self.assertEqual('UNKNOWN', _get_environment(http_request))\n+\n+    m.UnsetStubs()\n+    m.VerifyAll()\n+\n+  def test_get_environment_variable_file(self):\n+    environment_variable_file = datafile(\n+        os.path.join('gcloud', 'credentials_default.json'))\n+    os.environ['GOOGLE_CREDENTIALS_DEFAULT'] = environment_variable_file\n+    self.assertEqual(environment_variable_file,\n+                     _get_environment_variable_file())\n+\n+  def test_get_environment_variable_file_error(self):\n+    nonexistent_file = datafile('nonexistent')\n+    os.environ['GOOGLE_CREDENTIALS_DEFAULT'] = nonexistent_file\n+    try:", "path": "tests/test_oauth2client.py", "position": null, "original_position": 156, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "self.assertRaises() looks nice if I just want to make sure a DefaultCredentialsError exception is being raised. But could I test its message the way I do it here?\n", "created_at": "2014-05-28T23:14:23Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13161844", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13161844"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13161844"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13161844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13161923", "pull_request_review_id": null, "id": 13161923, "diff_hunk": "@@ -0,0 +1,121 @@\n+#!/usr/bin/python2.4\n+#\n+# Copyright 2014 Google Inc.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\n+\"\"\"Oauth2client tests\n+\n+Unit tests for service account credentials implemented using RSA.\n+\"\"\"\n+\n+__author__ = 'orest@google.com (Orest Bolohan)'\n+\n+import os\n+import rsa\n+import time\n+import unittest\n+\n+from http_mock import HttpMockSequence\n+from oauth2client.anyjson import simplejson\n+from oauth2client.service_account import _ServiceAccountCredentials\n+\n+\n+def datafile(filename):", "path": "tests/test_service_account.py", "position": 33, "original_position": 35, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "I got inspired from test_jwt.py, which uses this very pattern.\nI put a TODO.\n", "created_at": "2014-05-28T23:17:08Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13161923", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13161923"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13161923"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13161923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171493", "pull_request_review_id": null, "id": 13171493, "diff_hunk": "@@ -164,6 +164,7 @@ def __init__(self, scope, **kwargs):\n           unspecified, the default service account for the app is used.\n     \"\"\"\n     self.scope = util.scopes_to_string(scope)\n+    self.kwargs = kwargs", "path": "oauth2client/appengine.py", "position": null, "original_position": 4, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "fa41768ab580a2f99c71ee7ebeff0b7df8ca77c7", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Any reason to leave this public?\n\n(I could _swear_ I already made this comment, but don't see it; if I'm repeating myself, just tell me I'm getting senile.)\n", "created_at": "2014-05-29T07:25:47Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13171493", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171493"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13171493"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171524", "pull_request_review_id": null, "id": 13171524, "diff_hunk": "@@ -820,7 +838,304 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_env_name = None\n+\n+\n+def _get_environment(urllib2_urlopen=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _env_name\n+  \n+  if _env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import urllib2\n+    try:\n+      if urllib2_urlopen is None:\n+        urllib2_urlopen = urllib2.urlopen\n+      response = urllib2_urlopen('http://metadata.google.internal')\n+      if 'Metadata-Flavor: Google\\r\\n' in response.info().headers:", "path": "oauth2client/client.py", "position": null, "original_position": 68, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "fa41768ab580a2f99c71ee7ebeff0b7df8ca77c7", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "It might be worth calling `.rstrip()` on the headers and checking without the `\\r\\n` -- that seems like it might fail painfully one day.\n", "created_at": "2014-05-29T07:27:30Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13171524", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171524"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13171524"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171546", "pull_request_review_id": null, "id": 13171546, "diff_hunk": "@@ -820,7 +838,304 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_env_name = None\n+\n+\n+def _get_environment(urllib2_urlopen=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _env_name\n+  \n+  if _env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import urllib2\n+    try:\n+      if urllib2_urlopen is None:\n+        urllib2_urlopen = urllib2.urlopen\n+      response = urllib2_urlopen('http://metadata.google.internal')\n+      if 'Metadata-Flavor: Google\\r\\n' in response.info().headers:", "path": "oauth2client/client.py", "position": null, "original_position": 68, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "fa41768ab580a2f99c71ee7ebeff0b7df8ca77c7", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "or, alternately:\n\n```\nif any('Metadata-Flavor: Google' in h for h in response.info().headers):\n```\n", "created_at": "2014-05-29T07:28:47Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13171546", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171546"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13171546"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171637", "pull_request_review_id": null, "id": 13171637, "diff_hunk": "@@ -820,7 +838,304 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_env_name = None\n+\n+\n+def _get_environment(urllib2_urlopen=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _env_name\n+  \n+  if _env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import urllib2\n+    try:\n+      if urllib2_urlopen is None:\n+        urllib2_urlopen = urllib2.urlopen\n+      response = urllib2_urlopen('http://metadata.google.internal')\n+      if 'Metadata-Flavor: Google\\r\\n' in response.info().headers:\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except urllib2.URLError:\n+      _env_name = 'UNKNOWN'\n+\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides Default Credentials to be used in authenticating", "path": "oauth2client/client.py", "position": null, "original_position": 79, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "fa41768ab580a2f99c71ee7ebeff0b7df8ca77c7", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "This still needs to be shortened to one line.\n", "created_at": "2014-05-29T07:31:40Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13171637", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171637"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13171637"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171752", "pull_request_review_id": null, "id": 13171752, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"", "path": "oauth2client/client.py", "position": null, "original_position": 266, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "OK; I'd ultimately like to figure out a way to have gcloud tell us this file location, but that doesn't have to happen right now.\n", "created_at": "2014-05-29T07:37:10Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13171752", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171752"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13171752"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171820", "pull_request_review_id": null, "id": 13171820, "diff_hunk": "@@ -820,7 +838,304 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_env_name = None\n+\n+\n+def _get_environment(urllib2_urlopen=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _env_name\n+  \n+  if _env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import urllib2\n+    try:\n+      if urllib2_urlopen is None:\n+        urllib2_urlopen = urllib2.urlopen\n+      response = urllib2_urlopen('http://metadata.google.internal')\n+      if 'Metadata-Flavor: Google\\r\\n' in response.info().headers:\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except urllib2.URLError:\n+      _env_name = 'UNKNOWN'\n+\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides Default Credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The Default Credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials\n+\n+  Here is an example of how to use the Default Credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  request = service.instances().list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+\n+  request = service.apis().list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+  \"\"\"\n+\n+  def __init__(self, access_token, client_id, client_secret, refresh_token,\n+               token_expiry, token_uri, user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by\n+    GoogleCredentials.from_stream() or GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(\n+        access_token, client_id, client_secret, refresh_token, token_expiry,\n+        token_uri, user_agent, revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the Default Credentials appropriate for the environment in which the\n+    code is being run.\n+\n+    Exceptions:\n+      DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_filename = None\n+      well_known_file = None\n+    else:\n+      default_credential_filename = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_filename:\n+      try:\n+        return _get_default_credential_from_file(default_credential_filename)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        extra_help = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                      ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_filename,\n+                                          extra_help, error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        extra_help = (' (produced automatically when running'\n+                      ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file, extra_help, error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\n+          \"The Default Credentials are not available. They are available if \"\n+          \"running in Google App Engine or Google Compute Engine. They are \"\n+          \"also available if using the Google Cloud SDK and running 'gcloud \"\n+          \"auth login'. Otherwise, the environment variable \"\n+          \"GOOGLE_CREDENTIALS_DEFAULT must be defined pointing to a file \"\n+          \"defining the credentials. \"\n+          \"See https://developers.google.com/accounts/docs/default-credentials \"\n+          \"for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_filename):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_filename: the path to the file from where the credentials\n+        are to be read\n+\n+    Exceptions:\n+      DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+    \"\"\"\n+\n+    if credential_filename and os.path.isfile(credential_filename):\n+      try:\n+        return _get_default_credential_from_file(credential_filename)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        extra_help = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_filename,\n+                                          extra_help,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_filename = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT',\n+                                               None)\n+\n+  if default_credential_filename:\n+    if os.path.isfile(default_credential_filename):\n+      return default_credential_filename\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_filename +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive, '\\\\', CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+\n+\n+def _get_default_credential_from_file(default_credential_filename):\n+  \"\"\"Build the Default Credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  # read the credentials from the file\n+  with open(default_credential_filename) as default_credential:\n+    client_credentials = service_account.simplejson.load(default_credential)\n+\n+  if (client_credentials.get('type') not in ('authorized_user',\n+                                             'service_account')):\n+    raise DefaultCredentialsError(\"'type' field should be defined \"\n+                                  \"(and have one of the 'authorized_user' \"\n+                                  \"or 'service_account' values)\")\n+\n+  if client_credentials['type'] == 'authorized_user':\n+    required_fields = set(['client_id', 'client_secret', 'refresh_token'])\n+  else: # client_credentials['type'] == 'service_account'", "path": "oauth2client/client.py", "position": null, "original_position": 291, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "fa41768ab580a2f99c71ee7ebeff0b7df8ca77c7", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "nit: python-style wants two spaces before the comment (so `else:  # ...`).\n", "created_at": "2014-05-29T07:41:43Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13171820", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171820"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13171820"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171836", "pull_request_review_id": null, "id": 13171836, "diff_hunk": "@@ -820,7 +838,304 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_env_name = None\n+\n+\n+def _get_environment(urllib2_urlopen=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _env_name\n+  \n+  if _env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import urllib2\n+    try:\n+      if urllib2_urlopen is None:\n+        urllib2_urlopen = urllib2.urlopen\n+      response = urllib2_urlopen('http://metadata.google.internal')\n+      if 'Metadata-Flavor: Google\\r\\n' in response.info().headers:\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except urllib2.URLError:\n+      _env_name = 'UNKNOWN'\n+\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides Default Credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The Default Credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials\n+\n+  Here is an example of how to use the Default Credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  request = service.instances().list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+\n+  request = service.apis().list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+  \"\"\"\n+\n+  def __init__(self, access_token, client_id, client_secret, refresh_token,\n+               token_expiry, token_uri, user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by\n+    GoogleCredentials.from_stream() or GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(\n+        access_token, client_id, client_secret, refresh_token, token_expiry,\n+        token_uri, user_agent, revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the Default Credentials appropriate for the environment in which the\n+    code is being run.\n+\n+    Exceptions:\n+      DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_filename = None\n+      well_known_file = None\n+    else:\n+      default_credential_filename = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_filename:\n+      try:\n+        return _get_default_credential_from_file(default_credential_filename)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        extra_help = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                      ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_filename,\n+                                          extra_help, error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        extra_help = (' (produced automatically when running'\n+                      ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file, extra_help, error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\n+          \"The Default Credentials are not available. They are available if \"\n+          \"running in Google App Engine or Google Compute Engine. They are \"\n+          \"also available if using the Google Cloud SDK and running 'gcloud \"\n+          \"auth login'. Otherwise, the environment variable \"\n+          \"GOOGLE_CREDENTIALS_DEFAULT must be defined pointing to a file \"\n+          \"defining the credentials. \"\n+          \"See https://developers.google.com/accounts/docs/default-credentials \"\n+          \"for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_filename):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_filename: the path to the file from where the credentials\n+        are to be read\n+\n+    Exceptions:\n+      DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+    \"\"\"\n+\n+    if credential_filename and os.path.isfile(credential_filename):\n+      try:\n+        return _get_default_credential_from_file(credential_filename)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        extra_help = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_filename,\n+                                          extra_help,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_filename = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT',\n+                                               None)\n+\n+  if default_credential_filename:\n+    if os.path.isfile(default_credential_filename):\n+      return default_credential_filename\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_filename +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive, '\\\\', CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+\n+\n+def _get_default_credential_from_file(default_credential_filename):\n+  \"\"\"Build the Default Credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  # read the credentials from the file\n+  with open(default_credential_filename) as default_credential:\n+    client_credentials = service_account.simplejson.load(default_credential)\n+\n+  if (client_credentials.get('type') not in ('authorized_user',\n+                                             'service_account')):\n+    raise DefaultCredentialsError(\"'type' field should be defined \"\n+                                  \"(and have one of the 'authorized_user' \"\n+                                  \"or 'service_account' values)\")\n+\n+  if client_credentials['type'] == 'authorized_user':\n+    required_fields = set(['client_id', 'client_secret', 'refresh_token'])\n+  else: # client_credentials['type'] == 'service_account'", "path": "oauth2client/client.py", "position": null, "original_position": 291, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "fa41768ab580a2f99c71ee7ebeff0b7df8ca77c7", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "also, in this case, why not just combine this with the previous if:\n\n```\ncredentials_type = client_credentials.get('type')\nif credentials_type == 'authorized_user':\n  ...\nelif credentials_type == 'service_account':\n  ...\nelse:\n  raise DefaultCredentialsError(...)\n```\n", "created_at": "2014-05-29T07:43:27Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13171836", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171836"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13171836"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171865", "pull_request_review_id": null, "id": 13171865, "diff_hunk": "@@ -820,7 +838,304 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_env_name = None\n+\n+\n+def _get_environment(urllib2_urlopen=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _env_name\n+  \n+  if _env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import urllib2\n+    try:\n+      if urllib2_urlopen is None:\n+        urllib2_urlopen = urllib2.urlopen\n+      response = urllib2_urlopen('http://metadata.google.internal')\n+      if 'Metadata-Flavor: Google\\r\\n' in response.info().headers:\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except urllib2.URLError:\n+      _env_name = 'UNKNOWN'\n+\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides Default Credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The Default Credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials\n+\n+  Here is an example of how to use the Default Credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  request = service.instances().list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+\n+  request = service.apis().list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+  \"\"\"\n+\n+  def __init__(self, access_token, client_id, client_secret, refresh_token,\n+               token_expiry, token_uri, user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by\n+    GoogleCredentials.from_stream() or GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(\n+        access_token, client_id, client_secret, refresh_token, token_expiry,\n+        token_uri, user_agent, revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the Default Credentials appropriate for the environment in which the\n+    code is being run.\n+\n+    Exceptions:\n+      DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_filename = None\n+      well_known_file = None\n+    else:\n+      default_credential_filename = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_filename:\n+      try:\n+        return _get_default_credential_from_file(default_credential_filename)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        extra_help = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                      ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_filename,\n+                                          extra_help, error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        extra_help = (' (produced automatically when running'\n+                      ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file, extra_help, error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\n+          \"The Default Credentials are not available. They are available if \"\n+          \"running in Google App Engine or Google Compute Engine. They are \"\n+          \"also available if using the Google Cloud SDK and running 'gcloud \"\n+          \"auth login'. Otherwise, the environment variable \"\n+          \"GOOGLE_CREDENTIALS_DEFAULT must be defined pointing to a file \"\n+          \"defining the credentials. \"\n+          \"See https://developers.google.com/accounts/docs/default-credentials \"\n+          \"for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_filename):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_filename: the path to the file from where the credentials\n+        are to be read\n+\n+    Exceptions:\n+      DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+    \"\"\"\n+\n+    if credential_filename and os.path.isfile(credential_filename):\n+      try:\n+        return _get_default_credential_from_file(credential_filename)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        extra_help = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_filename,\n+                                          extra_help,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_filename = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT',\n+                                               None)\n+\n+  if default_credential_filename:\n+    if os.path.isfile(default_credential_filename):\n+      return default_credential_filename\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_filename +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive, '\\\\', CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+\n+\n+def _get_default_credential_from_file(default_credential_filename):\n+  \"\"\"Build the Default Credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  # read the credentials from the file\n+  with open(default_credential_filename) as default_credential:\n+    client_credentials = service_account.simplejson.load(default_credential)\n+\n+  if (client_credentials.get('type') not in ('authorized_user',", "path": "oauth2client/client.py", "position": null, "original_position": 283, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "fa41768ab580a2f99c71ee7ebeff0b7df8ca77c7", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "can you give these two strings (`'authorized_user'` and `'service_account'`) names that we use throughout?\n", "created_at": "2014-05-29T07:45:33Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13171865", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171865"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13171865"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171999", "pull_request_review_id": null, "id": 13171999, "diff_hunk": "@@ -26,6 +26,9 @@\n \n install_requires = [\n     'httplib2>=0.8',\n+    'pyasn1==0.1.7',\n+    'pyasn1_modules==0.0.5',", "path": "setup.py", "position": 5, "original_position": 5, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "I'm less worried about the versions, and more worried about the prospect of those packages disappearing from the world.\n", "created_at": "2014-05-29T07:51:58Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13171999", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171999"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13171999"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13171999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13172009", "pull_request_review_id": null, "id": 13172009, "diff_hunk": "@@ -0,0 +1,9 @@\n+-----BEGIN PUBLIC KEY-----", "path": "tests/data/publickey_openssl.pem", "position": 1, "original_position": 1, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "aha -- I forgot there was already a key in this repo. no worries.\n", "created_at": "2014-05-29T07:52:14Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13172009", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13172009"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13172009"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13172009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13172033", "pull_request_review_id": null, "id": 13172033, "diff_hunk": "@@ -107,6 +120,314 @@ def test_to_from_json(self):\n     restored = Credentials.new_from_json(json)\n \n \n+class GoogleCredentialsTests(unittest.TestCase):\n+\n+  def setUp(self):\n+    self.env_server_software = os.environ.get('SERVER_SOFTWARE', None)\n+    self.env_google_credentials_default = (\n+        os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None))\n+    self.env_appdata = os.environ.get('APPDATA', None)\n+    self.os_name = os.name\n+    from oauth2client import client\n+    setattr(client, '_computed_env_name', False)\n+\n+  def tearDown(self):\n+    self.reset_env('SERVER_SOFTWARE', self.env_server_software)\n+    self.reset_env('GOOGLE_CREDENTIALS_DEFAULT',\n+                   self.env_google_credentials_default)\n+    self.reset_env('APPDATA', self.env_appdata)\n+    os.name = self.os_name\n+\n+  def reset_env(self, env, value):", "path": "tests/test_oauth2client.py", "position": 83, "original_position": 64, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Yep. Can you add a docstring for this function?\n", "created_at": "2014-05-29T07:53:22Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13172033", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13172033"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13172033"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13172033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13172069", "pull_request_review_id": null, "id": 13172069, "diff_hunk": "@@ -107,6 +120,314 @@ def test_to_from_json(self):\n     restored = Credentials.new_from_json(json)\n \n \n+class GoogleCredentialsTests(unittest.TestCase):\n+\n+  def setUp(self):\n+    self.env_server_software = os.environ.get('SERVER_SOFTWARE', None)\n+    self.env_google_credentials_default = (\n+        os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None))\n+    self.env_appdata = os.environ.get('APPDATA', None)\n+    self.os_name = os.name\n+    from oauth2client import client\n+    setattr(client, '_computed_env_name', False)\n+\n+  def tearDown(self):\n+    self.reset_env('SERVER_SOFTWARE', self.env_server_software)\n+    self.reset_env('GOOGLE_CREDENTIALS_DEFAULT',\n+                   self.env_google_credentials_default)\n+    self.reset_env('APPDATA', self.env_appdata)\n+    os.name = self.os_name\n+\n+  def reset_env(self, env, value):\n+    if value is not None:\n+      os.environ[env] = value\n+    else:\n+      if os.environ.get(env, None):\n+        del os.environ[env]\n+\n+  def validate_service_account_credentials(self, credentials):\n+    self.assertTrue(isinstance(credentials, _ServiceAccountCredentials))\n+    self.assertEqual('123', credentials._service_account_id)\n+    self.assertEqual('dummy@google.com', credentials._service_account_email)\n+    self.assertEqual('ABCDEF', credentials._private_key_id)\n+    self.assertEqual('', credentials._scopes)\n+\n+  def validate_google_credentials(self, credentials):\n+    self.assertTrue(isinstance(credentials, GoogleCredentials))\n+    self.assertEqual(None, credentials.access_token)\n+    self.assertEqual('123', credentials.client_id)\n+    self.assertEqual('secret', credentials.client_secret)\n+    self.assertEqual('alabalaportocala', credentials.refresh_token)\n+    self.assertEqual(None, credentials.token_expiry)\n+    self.assertEqual(GOOGLE_TOKEN_URI, credentials.token_uri)\n+    self.assertEqual('Python client library', credentials.user_agent)\n+\n+  def get_a_google_credentials_object(self):\n+    return GoogleCredentials(None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None)\n+\n+  def test_create_scoped_required(self):\n+    self.assertFalse(\n+        self.get_a_google_credentials_object().create_scoped_required())\n+\n+  def test_create_scoped(self):\n+    credentials = self.get_a_google_credentials_object() \n+    self.assertEqual(credentials, credentials.create_scoped(None))\n+    self.assertEqual(credentials,\n+                     credentials.create_scoped(['dummy_scope']))\n+\n+  def test_get_environment_gae_production(self):\n+    os.environ['SERVER_SOFTWARE'] = 'Google App Engine/XYZ'\n+    self.assertEquals('GAE_PRODUCTION', _get_environment())\n+\n+  def test_get_environment_gae_local(self):\n+    os.environ['SERVER_SOFTWARE'] = 'Development/XYZ'\n+    self.assertEqual('GAE_LOCAL', _get_environment())\n+\n+  def test_get_environment_gce_production(self):\n+    os.environ['SERVER_SOFTWARE'] = ''\n+    m = mox.Mox()\n+\n+    http_request = m.CreateMock(object)\n+    http_request.__call__(('http://metadata.google.internal'\n+                          )).AndReturn(({'metadata-flavor':'Google'}, ''))\n+\n+    m.ReplayAll()\n+\n+    self.assertEqual('GCE_PRODUCTION', _get_environment(http_request))\n+\n+    m.UnsetStubs()\n+    m.VerifyAll()\n+\n+  def test_get_environment_unknown(self):\n+    os.environ['SERVER_SOFTWARE'] = ''\n+    m = mox.Mox()\n+\n+    http_request = m.CreateMock(object)\n+    http_request.__call__(('http://metadata.google.internal'\n+                          )).AndReturn(({}, ''))\n+\n+    m.ReplayAll()\n+\n+    self.assertEqual('UNKNOWN', _get_environment(http_request))\n+\n+    m.UnsetStubs()\n+    m.VerifyAll()\n+\n+  def test_get_environment_variable_file(self):\n+    environment_variable_file = datafile(\n+        os.path.join('gcloud', 'credentials_default.json'))\n+    os.environ['GOOGLE_CREDENTIALS_DEFAULT'] = environment_variable_file\n+    self.assertEqual(environment_variable_file,\n+                     _get_environment_variable_file())\n+\n+  def test_get_environment_variable_file_error(self):\n+    nonexistent_file = datafile('nonexistent')\n+    os.environ['GOOGLE_CREDENTIALS_DEFAULT'] = nonexistent_file\n+    try:", "path": "tests/test_oauth2client.py", "position": null, "original_position": 156, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Yes -- also check out `assertRaisesRegexp`.\n", "created_at": "2014-05-29T07:54:35Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13172069", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13172069"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13172069"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13172069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13172076", "pull_request_review_id": null, "id": 13172076, "diff_hunk": "@@ -0,0 +1,121 @@\n+#!/usr/bin/python2.4\n+#\n+# Copyright 2014 Google Inc.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\n+\"\"\"Oauth2client tests\n+\n+Unit tests for service account credentials implemented using RSA.\n+\"\"\"\n+\n+__author__ = 'orest@google.com (Orest Bolohan)'\n+\n+import os\n+import rsa\n+import time\n+import unittest\n+\n+from http_mock import HttpMockSequence\n+from oauth2client.anyjson import simplejson\n+from oauth2client.service_account import _ServiceAccountCredentials\n+\n+\n+def datafile(filename):", "path": "tests/test_service_account.py", "position": 33, "original_position": 35, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "TODO works.\n", "created_at": "2014-05-29T07:54:53Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13172076", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13172076"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13172076"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13172076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13196116", "pull_request_review_id": null, "id": 13196116, "diff_hunk": "@@ -164,6 +164,7 @@ def __init__(self, scope, **kwargs):\n           unspecified, the default service account for the app is used.\n     \"\"\"\n     self.scope = util.scopes_to_string(scope)\n+    self.kwargs = kwargs", "path": "oauth2client/appengine.py", "position": null, "original_position": 4, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "fa41768ab580a2f99c71ee7ebeff0b7df8ca77c7", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "No reason. I just wanted to preserve the look of the surrounding instance variable.\nI made it private.\n", "created_at": "2014-05-29T18:25:04Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13196116", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13196116"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13196116"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13196116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13200982", "pull_request_review_id": null, "id": 13200982, "diff_hunk": "@@ -820,7 +838,304 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_env_name = None\n+\n+\n+def _get_environment(urllib2_urlopen=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _env_name\n+  \n+  if _env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import urllib2\n+    try:\n+      if urllib2_urlopen is None:\n+        urllib2_urlopen = urllib2.urlopen\n+      response = urllib2_urlopen('http://metadata.google.internal')\n+      if 'Metadata-Flavor: Google\\r\\n' in response.info().headers:", "path": "oauth2client/client.py", "position": null, "original_position": 68, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "fa41768ab580a2f99c71ee7ebeff0b7df8ca77c7", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Chose the 'if 'Metadata-Flavor: Google\\r\\n' in response.info().headers:' option.\n", "created_at": "2014-05-29T19:54:10Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13200982", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13200982"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13200982"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13200982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13202439", "pull_request_review_id": null, "id": 13202439, "diff_hunk": "@@ -820,7 +838,304 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_env_name = None\n+\n+\n+def _get_environment(urllib2_urlopen=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _env_name\n+  \n+  if _env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import urllib2\n+    try:\n+      if urllib2_urlopen is None:\n+        urllib2_urlopen = urllib2.urlopen\n+      response = urllib2_urlopen('http://metadata.google.internal')\n+      if 'Metadata-Flavor: Google\\r\\n' in response.info().headers:\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except urllib2.URLError:\n+      _env_name = 'UNKNOWN'\n+\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides Default Credentials to be used in authenticating", "path": "oauth2client/client.py", "position": null, "original_position": 79, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "fa41768ab580a2f99c71ee7ebeff0b7df8ca77c7", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "I remember seeing this suggestion in the email, but it did not show up in https://github.com/google/oauth2client/pull/6/files\nHave you experienced inconsistencies with github's reviewing tools?\n\nDone.\n", "created_at": "2014-05-29T20:24:59Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13202439", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13202439"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13202439"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13202439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13202532", "pull_request_review_id": null, "id": 13202532, "diff_hunk": "@@ -820,7 +838,337 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_computed_env_name = False\n+_env_name = None\n+\n+\n+def _get_environment(http_request=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _computed_env_name\n+  global _env_name\n+  \n+  if _computed_env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import httplib2\n+    try:\n+      if http_request is None:\n+        http_request = httplib2.Http().request\n+      response, _ = http_request('http://metadata.google.internal')\n+      if ('metadata-flavor' in response and\n+          response['metadata-flavor'] == 'Google'):\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except httplib2.ServerNotFoundError:\n+      _env_name = 'UNKNOWN'\n+\n+  _computed_env_name = True\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides default credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The default credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials .\n+\n+  Here is an example of how to use the default credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  resource = service.instances()\n+  request = resource.list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+  resource = service.apis()\n+  request = resource.list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  Exceptions:\n+    DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+  \"\"\"\n+\n+  def __init__(self,\n+               access_token,\n+               client_id,\n+               client_secret,\n+               refresh_token,\n+               token_expiry,\n+               token_uri,\n+               user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by the\n+    GoogleCredentials.from_stream() and GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(access_token,\n+                                            client_id,\n+                                            client_secret,\n+                                            refresh_token,\n+                                            token_expiry,\n+                                            token_uri,\n+                                            user_agent,\n+                                            revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the default credentials appropriate for the environment in which the\n+    code is being run.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_file = None\n+      well_known_file = None\n+    else:\n+      default_credential_file = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_file:\n+      try:\n+        return _get_default_credential_from_file(default_credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                           ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_file,\n+                                          helping_message,\n+                                          error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = (' (produced automatically when running'\n+                           ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file,\n+                                          helping_message,\n+                                          error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\"The Default Credentials are not available.\"\n+                                    \" They are available if running in Google\"\n+                                    \" App Engine or Google Compute Engine. They\"\n+                                    \" are also available if using the Google\"\n+                                    \" Cloud SDK and running 'gcloud auth login'\"\n+                                    \". Otherwise, the environment variable\"\n+                                    \" GOOGLE_CREDENTIALS_DEFAULT must be\"\n+                                    \" defined pointing to a file defining the\"\n+                                    \" credentials. See https://developers.\"\n+                                    \"google.com/accounts/docs/default-\"\n+                                    \"credentials for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_file):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_file: the path to the file from where the credentials\n+        are to be read\n+    \"\"\"\n+\n+    if credential_file and os.path.isfile(credential_file):\n+      try:\n+        return _get_default_credential_from_file(credential_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        helping_message = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_file,\n+                                          helping_message,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_file = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None)\n+\n+  if default_credential_file:\n+    if os.path.isfile(default_credential_file):\n+      return default_credential_file\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_file +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"", "path": "oauth2client/client.py", "position": null, "original_position": 266, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "I left a TODO.\n", "created_at": "2014-05-29T20:27:17Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13202532", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13202532"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13202532"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13202532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13203814", "pull_request_review_id": null, "id": 13203814, "diff_hunk": "@@ -820,7 +838,304 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_env_name = None\n+\n+\n+def _get_environment(urllib2_urlopen=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _env_name\n+  \n+  if _env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import urllib2\n+    try:\n+      if urllib2_urlopen is None:\n+        urllib2_urlopen = urllib2.urlopen\n+      response = urllib2_urlopen('http://metadata.google.internal')\n+      if 'Metadata-Flavor: Google\\r\\n' in response.info().headers:\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except urllib2.URLError:\n+      _env_name = 'UNKNOWN'\n+\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides Default Credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The Default Credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials\n+\n+  Here is an example of how to use the Default Credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  request = service.instances().list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+\n+  request = service.apis().list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+  \"\"\"\n+\n+  def __init__(self, access_token, client_id, client_secret, refresh_token,\n+               token_expiry, token_uri, user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by\n+    GoogleCredentials.from_stream() or GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(\n+        access_token, client_id, client_secret, refresh_token, token_expiry,\n+        token_uri, user_agent, revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the Default Credentials appropriate for the environment in which the\n+    code is being run.\n+\n+    Exceptions:\n+      DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_filename = None\n+      well_known_file = None\n+    else:\n+      default_credential_filename = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_filename:\n+      try:\n+        return _get_default_credential_from_file(default_credential_filename)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        extra_help = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                      ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_filename,\n+                                          extra_help, error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        extra_help = (' (produced automatically when running'\n+                      ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file, extra_help, error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\n+          \"The Default Credentials are not available. They are available if \"\n+          \"running in Google App Engine or Google Compute Engine. They are \"\n+          \"also available if using the Google Cloud SDK and running 'gcloud \"\n+          \"auth login'. Otherwise, the environment variable \"\n+          \"GOOGLE_CREDENTIALS_DEFAULT must be defined pointing to a file \"\n+          \"defining the credentials. \"\n+          \"See https://developers.google.com/accounts/docs/default-credentials \"\n+          \"for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_filename):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_filename: the path to the file from where the credentials\n+        are to be read\n+\n+    Exceptions:\n+      DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+    \"\"\"\n+\n+    if credential_filename and os.path.isfile(credential_filename):\n+      try:\n+        return _get_default_credential_from_file(credential_filename)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        extra_help = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_filename,\n+                                          extra_help,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_filename = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT',\n+                                               None)\n+\n+  if default_credential_filename:\n+    if os.path.isfile(default_credential_filename):\n+      return default_credential_filename\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_filename +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive, '\\\\', CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+\n+\n+def _get_default_credential_from_file(default_credential_filename):\n+  \"\"\"Build the Default Credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  # read the credentials from the file\n+  with open(default_credential_filename) as default_credential:\n+    client_credentials = service_account.simplejson.load(default_credential)\n+\n+  if (client_credentials.get('type') not in ('authorized_user',", "path": "oauth2client/client.py", "position": null, "original_position": 283, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "fa41768ab580a2f99c71ee7ebeff0b7df8ca77c7", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-05-29T20:51:48Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13203814", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13203814"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13203814"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13203814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13204962", "pull_request_review_id": null, "id": 13204962, "diff_hunk": "@@ -820,7 +838,304 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_env_name = None\n+\n+\n+def _get_environment(urllib2_urlopen=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _env_name\n+  \n+  if _env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import urllib2\n+    try:\n+      if urllib2_urlopen is None:\n+        urllib2_urlopen = urllib2.urlopen\n+      response = urllib2_urlopen('http://metadata.google.internal')\n+      if 'Metadata-Flavor: Google\\r\\n' in response.info().headers:\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except urllib2.URLError:\n+      _env_name = 'UNKNOWN'\n+\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides Default Credentials to be used in authenticating", "path": "oauth2client/client.py", "position": null, "original_position": 79, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "fa41768ab580a2f99c71ee7ebeff0b7df8ca77c7", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Yes, I think sometimes comments are hard to find unless you trawl through all the commits. It's sub-par.\n", "created_at": "2014-05-29T21:13:09Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13204962", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13204962"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13204962"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13204962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13205097", "pull_request_review_id": null, "id": 13205097, "diff_hunk": "@@ -820,7 +838,304 @@ def _revoke(self, http_request):\n     self._do_revoke(http_request, self.access_token)\n \n \n-class AssertionCredentials(OAuth2Credentials):\n+_env_name = None\n+\n+\n+def _get_environment(urllib2_urlopen=None):\n+  \"\"\"Detect the environment the code is being run on.\"\"\"\n+\n+  global _env_name\n+  \n+  if _env_name:\n+    return _env_name\n+\n+  server_software = os.environ.get('SERVER_SOFTWARE', '')\n+  if server_software.startswith('Google App Engine/'):\n+    _env_name = 'GAE_PRODUCTION'\n+  elif server_software.startswith('Development/'):\n+    _env_name = 'GAE_LOCAL'\n+  else:\n+    import urllib2\n+    try:\n+      if urllib2_urlopen is None:\n+        urllib2_urlopen = urllib2.urlopen\n+      response = urllib2_urlopen('http://metadata.google.internal')\n+      if 'Metadata-Flavor: Google\\r\\n' in response.info().headers:\n+        _env_name = 'GCE_PRODUCTION'\n+      else:\n+        _env_name = 'UNKNOWN'\n+    except urllib2.URLError:\n+      _env_name = 'UNKNOWN'\n+\n+  return _env_name\n+\n+\n+class GoogleCredentials(OAuth2Credentials):\n+  \"\"\"Provides Default Credentials to be used in authenticating\n+  Google APIs calls.\n+  \n+  The Default Credentials are being constructed as a function of the environment\n+  where the code is being run. More details can be found on this page:\n+  https://developers.google.com/accounts/docs/default-credentials\n+\n+  Here is an example of how to use the Default Credentials for a service that\n+  requires authentication:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+  from oauth2client.client import GoogleCredentials\n+\n+  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n+  ZONE = 'us-central1-a'          # replace this with the zone you care about\n+\n+  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+\n+  request = service.instances().list(project=PROJECT, zone=ZONE)\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+\n+  A service that does not require authentication does not need credentials\n+  to be passed in:\n+\n+  <code>\n+  from googleapiclient.discovery import build\n+\n+  service = build('discovery', 'v1')\n+\n+  request = service.apis().list()\n+  response = request.execute()\n+\n+  print response\n+  </code>\n+  \"\"\"\n+\n+  def __init__(self, access_token, client_id, client_secret, refresh_token,\n+               token_expiry, token_uri, user_agent,\n+               revoke_uri=GOOGLE_REVOKE_URI):\n+    \"\"\"Create an instance of GoogleCredentials.\n+\n+    This constructor is not usually called by the user, instead\n+    GoogleCredentials objects are instantiated by\n+    GoogleCredentials.from_stream() or GoogleCredentials.get_default().\n+\n+    Args:\n+      access_token: string, access token.\n+      client_id: string, client identifier.\n+      client_secret: string, client secret.\n+      refresh_token: string, refresh token.\n+      token_expiry: datetime, when the access_token expires.\n+      token_uri: string, URI of token endpoint.\n+      user_agent: string, The HTTP User-Agent to provide for this application.\n+      revoke_uri: string, URI for revoke endpoint.\n+        Defaults to GOOGLE_REVOKE_URI; a token can't be revoked if this is None.\n+    \"\"\"\n+    super(GoogleCredentials, self).__init__(\n+        access_token, client_id, client_secret, refresh_token, token_expiry,\n+        token_uri, user_agent, revoke_uri=revoke_uri)\n+    \n+  def create_scoped_required(self):\n+    \"\"\"Whether this Credentials object is scopeless.\n+    \n+    create_scoped(scopes) method needs to be called in order to create\n+    a Credentials object for API calls.\n+    \"\"\"\n+    return False\n+  \n+  def create_scoped(self, scopes):\n+    \"\"\"Create a Credentials object for the given scopes.\n+    \n+    The Credentials type is preserved.\n+    \"\"\" \n+    return self\n+\n+  @staticmethod\n+  def get_default():\n+    \"\"\"Get the Default Credentials appropriate for the environment in which the\n+    code is being run.\n+\n+    Exceptions:\n+      DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+    \"\"\"\n+\n+    _env_name = _get_environment()\n+\n+    if _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      # if we are running inside Google App Engine\n+      # there is no need to look for credentials in local files\n+      default_credential_filename = None\n+      well_known_file = None\n+    else:\n+      default_credential_filename = _get_environment_variable_file()\n+      well_known_file = _get_well_known_file()\n+\n+    if default_credential_filename:\n+      try:\n+        return _get_default_credential_from_file(default_credential_filename)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        extra_help = (' (pointed to by GOOGLE_CREDENTIALS_DEFAULT'\n+                      ' environment variable)')\n+        _raise_exception_for_reading_json(default_credential_filename,\n+                                          extra_help, error)\n+    elif well_known_file:\n+      try:\n+        return _get_default_credential_from_file(well_known_file)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        extra_help = (' (produced automatically when running'\n+                      ' \"gcloud auth login\" command)')\n+        _raise_exception_for_reading_json(well_known_file, extra_help, error)\n+    elif _env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return _get_default_credential_GAE()\n+    elif _env_name == 'GCE_PRODUCTION':\n+      return _get_default_credential_GCE()\n+    else:\n+      raise DefaultCredentialsError(\n+          \"The Default Credentials are not available. They are available if \"\n+          \"running in Google App Engine or Google Compute Engine. They are \"\n+          \"also available if using the Google Cloud SDK and running 'gcloud \"\n+          \"auth login'. Otherwise, the environment variable \"\n+          \"GOOGLE_CREDENTIALS_DEFAULT must be defined pointing to a file \"\n+          \"defining the credentials. \"\n+          \"See https://developers.google.com/accounts/docs/default-credentials \"\n+          \"for details.\")\n+\n+  @staticmethod\n+  def from_stream(credential_filename):\n+    \"\"\"Create a Credentials object by reading the information from a given file.\n+    \n+    It returns an object of type GoogleCredentials.\n+    \n+    Args:\n+      credential_filename: the path to the file from where the credentials\n+        are to be read\n+\n+    Exceptions:\n+      DefaultCredentialsError: raised when the credentials fail to be retrieved.\n+    \"\"\"\n+\n+    if credential_filename and os.path.isfile(credential_filename):\n+      try:\n+        return _get_default_credential_from_file(credential_filename)\n+      except (DefaultCredentialsError, ValueError) as error:\n+        extra_help = ' (provided as parameter to the from_stream() method)'\n+        _raise_exception_for_reading_json(credential_filename,\n+                                          extra_help,\n+                                          error)\n+    else:\n+      raise DefaultCredentialsError('The parameter passed to the from_stream()'\n+                                    ' method should point to a file.')\n+\n+\n+def _get_environment_variable_file():\n+  default_credential_filename = os.environ.get('GOOGLE_CREDENTIALS_DEFAULT',\n+                                               None)\n+\n+  if default_credential_filename:\n+    if os.path.isfile(default_credential_filename):\n+      return default_credential_filename\n+    else:\n+      raise DefaultCredentialsError('File ' + default_credential_filename +\n+                                    ' (pointed by GOOGLE_CREDENTIALS_DEFAULT'\n+                                    ' environment variable) does not exist!')\n+\n+\n+def _get_well_known_file():\n+  \"\"\"Get the well known file produced by command 'gcloud auth login'.\"\"\"\n+\n+  WELL_KNOWN_CREDENTIALS_FILE = 'credentials_default.json'\n+  CLOUDSDK_CONFIG_DIRECTORY = 'gcloud'\n+\n+  if os.name == 'nt':\n+    try:\n+      default_config_path = os.path.join(os.environ['APPDATA'],\n+                                         CLOUDSDK_CONFIG_DIRECTORY)\n+    except KeyError:\n+      # This should never happen unless someone is really messing with things.\n+      drive = os.environ.get('SystemDrive', 'C:')\n+      default_config_path = os.path.join(drive, '\\\\', CLOUDSDK_CONFIG_DIRECTORY)\n+  else:\n+    default_config_path = os.path.join(os.path.expanduser('~'),\n+                                       '.config',\n+                                       CLOUDSDK_CONFIG_DIRECTORY)\n+\n+  default_config_path = os.path.join(default_config_path,\n+                                     WELL_KNOWN_CREDENTIALS_FILE)\n+\n+  if os.path.isfile(default_config_path):\n+    return default_config_path\n+\n+\n+def _get_default_credential_from_file(default_credential_filename):\n+  \"\"\"Build the Default Credentials from file.\"\"\"\n+\n+  import service_account\n+\n+  # read the credentials from the file\n+  with open(default_credential_filename) as default_credential:\n+    client_credentials = service_account.simplejson.load(default_credential)\n+\n+  if (client_credentials.get('type') not in ('authorized_user',\n+                                             'service_account')):\n+    raise DefaultCredentialsError(\"'type' field should be defined \"\n+                                  \"(and have one of the 'authorized_user' \"\n+                                  \"or 'service_account' values)\")\n+\n+  if client_credentials['type'] == 'authorized_user':\n+    required_fields = set(['client_id', 'client_secret', 'refresh_token'])\n+  else: # client_credentials['type'] == 'service_account'", "path": "oauth2client/client.py", "position": null, "original_position": 291, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "fa41768ab580a2f99c71ee7ebeff0b7df8ca77c7", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-05-29T21:15:56Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13205097", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13205097"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13205097"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13205097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13205429", "pull_request_review_id": null, "id": 13205429, "diff_hunk": "@@ -26,6 +26,9 @@\n \n install_requires = [\n     'httplib2>=0.8',\n+    'pyasn1==0.1.7',\n+    'pyasn1_modules==0.0.5',", "path": "setup.py", "position": 5, "original_position": 5, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Replied to you on email.\n", "created_at": "2014-05-29T21:20:36Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13205429", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13205429"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13205429"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13205429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13205467", "pull_request_review_id": null, "id": 13205467, "diff_hunk": "@@ -0,0 +1,9 @@\n+-----BEGIN PUBLIC KEY-----", "path": "tests/data/publickey_openssl.pem", "position": 1, "original_position": 1, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Ack.\n", "created_at": "2014-05-29T21:21:11Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13205467", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13205467"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13205467"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13205467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13205782", "pull_request_review_id": null, "id": 13205782, "diff_hunk": "@@ -107,6 +120,314 @@ def test_to_from_json(self):\n     restored = Credentials.new_from_json(json)\n \n \n+class GoogleCredentialsTests(unittest.TestCase):\n+\n+  def setUp(self):\n+    self.env_server_software = os.environ.get('SERVER_SOFTWARE', None)\n+    self.env_google_credentials_default = (\n+        os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None))\n+    self.env_appdata = os.environ.get('APPDATA', None)\n+    self.os_name = os.name\n+    from oauth2client import client\n+    setattr(client, '_computed_env_name', False)\n+\n+  def tearDown(self):\n+    self.reset_env('SERVER_SOFTWARE', self.env_server_software)\n+    self.reset_env('GOOGLE_CREDENTIALS_DEFAULT',\n+                   self.env_google_credentials_default)\n+    self.reset_env('APPDATA', self.env_appdata)\n+    os.name = self.os_name\n+\n+  def reset_env(self, env, value):", "path": "tests/test_oauth2client.py", "position": 83, "original_position": 64, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-05-29T21:25:58Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13205782", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13205782"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13205782"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13205782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13208010", "pull_request_review_id": null, "id": 13208010, "diff_hunk": "@@ -107,6 +120,314 @@ def test_to_from_json(self):\n     restored = Credentials.new_from_json(json)\n \n \n+class GoogleCredentialsTests(unittest.TestCase):\n+\n+  def setUp(self):\n+    self.env_server_software = os.environ.get('SERVER_SOFTWARE', None)\n+    self.env_google_credentials_default = (\n+        os.environ.get('GOOGLE_CREDENTIALS_DEFAULT', None))\n+    self.env_appdata = os.environ.get('APPDATA', None)\n+    self.os_name = os.name\n+    from oauth2client import client\n+    setattr(client, '_computed_env_name', False)\n+\n+  def tearDown(self):\n+    self.reset_env('SERVER_SOFTWARE', self.env_server_software)\n+    self.reset_env('GOOGLE_CREDENTIALS_DEFAULT',\n+                   self.env_google_credentials_default)\n+    self.reset_env('APPDATA', self.env_appdata)\n+    os.name = self.os_name\n+\n+  def reset_env(self, env, value):\n+    if value is not None:\n+      os.environ[env] = value\n+    else:\n+      if os.environ.get(env, None):\n+        del os.environ[env]\n+\n+  def validate_service_account_credentials(self, credentials):\n+    self.assertTrue(isinstance(credentials, _ServiceAccountCredentials))\n+    self.assertEqual('123', credentials._service_account_id)\n+    self.assertEqual('dummy@google.com', credentials._service_account_email)\n+    self.assertEqual('ABCDEF', credentials._private_key_id)\n+    self.assertEqual('', credentials._scopes)\n+\n+  def validate_google_credentials(self, credentials):\n+    self.assertTrue(isinstance(credentials, GoogleCredentials))\n+    self.assertEqual(None, credentials.access_token)\n+    self.assertEqual('123', credentials.client_id)\n+    self.assertEqual('secret', credentials.client_secret)\n+    self.assertEqual('alabalaportocala', credentials.refresh_token)\n+    self.assertEqual(None, credentials.token_expiry)\n+    self.assertEqual(GOOGLE_TOKEN_URI, credentials.token_uri)\n+    self.assertEqual('Python client library', credentials.user_agent)\n+\n+  def get_a_google_credentials_object(self):\n+    return GoogleCredentials(None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None,\n+                             None)\n+\n+  def test_create_scoped_required(self):\n+    self.assertFalse(\n+        self.get_a_google_credentials_object().create_scoped_required())\n+\n+  def test_create_scoped(self):\n+    credentials = self.get_a_google_credentials_object() \n+    self.assertEqual(credentials, credentials.create_scoped(None))\n+    self.assertEqual(credentials,\n+                     credentials.create_scoped(['dummy_scope']))\n+\n+  def test_get_environment_gae_production(self):\n+    os.environ['SERVER_SOFTWARE'] = 'Google App Engine/XYZ'\n+    self.assertEquals('GAE_PRODUCTION', _get_environment())\n+\n+  def test_get_environment_gae_local(self):\n+    os.environ['SERVER_SOFTWARE'] = 'Development/XYZ'\n+    self.assertEqual('GAE_LOCAL', _get_environment())\n+\n+  def test_get_environment_gce_production(self):\n+    os.environ['SERVER_SOFTWARE'] = ''\n+    m = mox.Mox()\n+\n+    http_request = m.CreateMock(object)\n+    http_request.__call__(('http://metadata.google.internal'\n+                          )).AndReturn(({'metadata-flavor':'Google'}, ''))\n+\n+    m.ReplayAll()\n+\n+    self.assertEqual('GCE_PRODUCTION', _get_environment(http_request))\n+\n+    m.UnsetStubs()\n+    m.VerifyAll()\n+\n+  def test_get_environment_unknown(self):\n+    os.environ['SERVER_SOFTWARE'] = ''\n+    m = mox.Mox()\n+\n+    http_request = m.CreateMock(object)\n+    http_request.__call__(('http://metadata.google.internal'\n+                          )).AndReturn(({}, ''))\n+\n+    m.ReplayAll()\n+\n+    self.assertEqual('UNKNOWN', _get_environment(http_request))\n+\n+    m.UnsetStubs()\n+    m.VerifyAll()\n+\n+  def test_get_environment_variable_file(self):\n+    environment_variable_file = datafile(\n+        os.path.join('gcloud', 'credentials_default.json'))\n+    os.environ['GOOGLE_CREDENTIALS_DEFAULT'] = environment_variable_file\n+    self.assertEqual(environment_variable_file,\n+                     _get_environment_variable_file())\n+\n+  def test_get_environment_variable_file_error(self):\n+    nonexistent_file = datafile('nonexistent')\n+    os.environ['GOOGLE_CREDENTIALS_DEFAULT'] = nonexistent_file\n+    try:", "path": "tests/test_oauth2client.py", "position": null, "original_position": 156, "commit_id": "98938dc6000e85cbfa57d1de9510d11059e7a13e", "original_commit_id": "8bb6f077ec8a7d765f84294f1d90892b3248ee2c", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\nThank you.\n", "created_at": "2014-05-29T22:12:11Z", "updated_at": "2014-05-29T23:35:25Z", "html_url": "https://github.com/google/oauth2client/pull/6#discussion_r13208010", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/6", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13208010"}, "html": {"href": "https://github.com/google/oauth2client/pull/6#discussion_r13208010"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/6"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13208010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13339363", "pull_request_review_id": null, "id": 13339363, "diff_hunk": "@@ -625,6 +628,16 @@ def set_store(self, store):\n     \"\"\"\n     self.store = store\n \n+  def _expires_in(self):\n+    \"\"\"Get in how many seconds does the token expire.\"\"\"\n+    if self.token_expiry:\n+      now = datetime.datetime.utcnow()\n+      if self.token_expiry > now:\n+        time_delta = self.token_expiry - now\n+        return int(round(time_delta.days * 86400.0 +", "path": "oauth2client/client.py", "position": null, "original_position": 51, "commit_id": "95830b0a52be1e64d60b331e917b0e8618a559a9", "original_commit_id": "dff7414cb7926d1467fe7334b6d97febccd63637", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "might be easier to just return `time_delta.total_seconds` :)\n", "created_at": "2014-06-03T15:08:51Z", "updated_at": "2014-06-03T22:36:25Z", "html_url": "https://github.com/google/oauth2client/pull/15#discussion_r13339363", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/15", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13339363"}, "html": {"href": "https://github.com/google/oauth2client/pull/15#discussion_r13339363"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/15"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13339363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13339406", "pull_request_review_id": null, "id": 13339406, "diff_hunk": "@@ -625,6 +628,16 @@ def set_store(self, store):\n     \"\"\"\n     self.store = store\n \n+  def _expires_in(self):\n+    \"\"\"Get in how many seconds does the token expire.\"\"\"", "path": "oauth2client/client.py", "position": null, "original_position": 46, "commit_id": "95830b0a52be1e64d60b331e917b0e8618a559a9", "original_commit_id": "dff7414cb7926d1467fe7334b6d97febccd63637", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Maybe `Return the number of seconds until this token expires.`\n", "created_at": "2014-06-03T15:09:41Z", "updated_at": "2014-06-03T22:36:25Z", "html_url": "https://github.com/google/oauth2client/pull/15#discussion_r13339406", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/15", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13339406"}, "html": {"href": "https://github.com/google/oauth2client/pull/15#discussion_r13339406"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/15"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13339406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13339444", "pull_request_review_id": null, "id": 13339444, "diff_hunk": "@@ -625,6 +628,16 @@ def set_store(self, store):\n     \"\"\"\n     self.store = store\n \n+  def _expires_in(self):", "path": "oauth2client/client.py", "position": 45, "original_position": 45, "commit_id": "95830b0a52be1e64d60b331e917b0e8618a559a9", "original_commit_id": "dff7414cb7926d1467fe7334b6d97febccd63637", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "If the token _has_ expired, this returns `None`; might be nicer to return `0`.\n", "created_at": "2014-06-03T15:10:22Z", "updated_at": "2014-06-03T22:36:25Z", "html_url": "https://github.com/google/oauth2client/pull/15#discussion_r13339444", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/15", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13339444"}, "html": {"href": "https://github.com/google/oauth2client/pull/15#discussion_r13339444"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/15"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13339444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13341299", "pull_request_review_id": null, "id": 13341299, "diff_hunk": "@@ -625,6 +628,16 @@ def set_store(self, store):\n     \"\"\"\n     self.store = store\n \n+  def _expires_in(self):\n+    \"\"\"Get in how many seconds does the token expire.\"\"\"\n+    if self.token_expiry:\n+      now = datetime.datetime.utcnow()\n+      if self.token_expiry > now:\n+        time_delta = self.token_expiry - now\n+        return int(round(time_delta.days * 86400.0 +", "path": "oauth2client/client.py", "position": null, "original_position": 51, "commit_id": "95830b0a52be1e64d60b331e917b0e8618a559a9", "original_commit_id": "dff7414cb7926d1467fe7334b6d97febccd63637", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "I thought of that.\nThe problem is that total_seconds come into existence in Python 2.7 .\nI am afraid using total_seconds will make the Python 2.6 tests fail.\n\nOn Tue, Jun 3, 2014 at 8:08 AM, Craig Citro notifications@github.com\nwrote:\n\n> In oauth2client/client.py:\n> \n> > @@ -625,6 +628,16 @@ def set_store(self, store):\n> >      \"\"\"\n> >      self.store = store\n> > -  def _expires_in(self):\n> > -    \"\"\"Get in how many seconds does the token expire.\"\"\"\n> > -    if self.token_expiry:\n> > -      now = datetime.datetime.utcnow()\n> > -      if self.token_expiry > now:\n> > -        time_delta = self.token_expiry - now\n> > -        return int(round(time_delta.days \\* 86400.0 +\n> \n> might be easier to just return time_delta.total_seconds :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/pull/15/files#r13339363.\n\n## \n\nOrest Bolohan\n\nSoftware Engineer\nCloud/TI Identity and Access Management Services\nGoogle Inc.\nMountain View, CA\n\n(650) 214 3458\norest@google.com\n", "created_at": "2014-06-03T15:39:01Z", "updated_at": "2014-06-03T22:36:25Z", "html_url": "https://github.com/google/oauth2client/pull/15#discussion_r13341299", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/15", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13341299"}, "html": {"href": "https://github.com/google/oauth2client/pull/15#discussion_r13341299"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/15"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13341299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13341427", "pull_request_review_id": null, "id": 13341427, "diff_hunk": "@@ -625,6 +628,16 @@ def set_store(self, store):\n     \"\"\"\n     self.store = store\n \n+  def _expires_in(self):", "path": "oauth2client/client.py", "position": 45, "original_position": 45, "commit_id": "95830b0a52be1e64d60b331e917b0e8618a559a9", "original_commit_id": "dff7414cb7926d1467fe7334b6d97febccd63637", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n\nOn Tue, Jun 3, 2014 at 8:10 AM, Craig Citro notifications@github.com\nwrote:\n\n> In oauth2client/client.py:\n> \n> > @@ -625,6 +628,16 @@ def set_store(self, store):\n> >      \"\"\"\n> >      self.store = store\n> > -  def _expires_in(self):\n> \n> If the token _has_ expired, this returns None; might be nicer to return 0.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/pull/15/files#r13339444.\n\n## \n\nOrest Bolohan\n\nSoftware Engineer\nCloud/TI Identity and Access Management Services\nGoogle Inc.\nMountain View, CA\n\n(650) 214 3458\norest@google.com\n", "created_at": "2014-06-03T15:41:05Z", "updated_at": "2014-06-03T22:36:25Z", "html_url": "https://github.com/google/oauth2client/pull/15#discussion_r13341427", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/15", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13341427"}, "html": {"href": "https://github.com/google/oauth2client/pull/15#discussion_r13341427"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/15"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13341427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13341439", "pull_request_review_id": null, "id": 13341439, "diff_hunk": "@@ -625,6 +628,16 @@ def set_store(self, store):\n     \"\"\"\n     self.store = store\n \n+  def _expires_in(self):\n+    \"\"\"Get in how many seconds does the token expire.\"\"\"", "path": "oauth2client/client.py", "position": null, "original_position": 46, "commit_id": "95830b0a52be1e64d60b331e917b0e8618a559a9", "original_commit_id": "dff7414cb7926d1467fe7334b6d97febccd63637", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n\nOn Tue, Jun 3, 2014 at 8:09 AM, Craig Citro notifications@github.com\nwrote:\n\n> In oauth2client/client.py:\n> \n> > @@ -625,6 +628,16 @@ def set_store(self, store):\n> >      \"\"\"\n> >      self.store = store\n> > -  def _expires_in(self):\n> > -    \"\"\"Get in how many seconds does the token expire.\"\"\"\n> \n> Maybe Return the number of seconds until this token expires.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/pull/15/files#r13339406.\n\n## \n\nOrest Bolohan\n\nSoftware Engineer\nCloud/TI Identity and Access Management Services\nGoogle Inc.\nMountain View, CA\n\n(650) 214 3458\norest@google.com\n", "created_at": "2014-06-03T15:41:15Z", "updated_at": "2014-06-03T22:36:25Z", "html_url": "https://github.com/google/oauth2client/pull/15#discussion_r13341439", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/15", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13341439"}, "html": {"href": "https://github.com/google/oauth2client/pull/15#discussion_r13341439"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/15"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13341439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13345606", "pull_request_review_id": null, "id": 13345606, "diff_hunk": "@@ -625,6 +628,16 @@ def set_store(self, store):\n     \"\"\"\n     self.store = store\n \n+  def _expires_in(self):\n+    \"\"\"Get in how many seconds does the token expire.\"\"\"\n+    if self.token_expiry:\n+      now = datetime.datetime.utcnow()\n+      if self.token_expiry > now:\n+        time_delta = self.token_expiry - now\n+        return int(round(time_delta.days * 86400.0 +", "path": "oauth2client/client.py", "position": null, "original_position": 51, "commit_id": "95830b0a52be1e64d60b331e917b0e8618a559a9", "original_commit_id": "dff7414cb7926d1467fe7334b6d97febccd63637", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "ugh, 2.6. `;)`\n\nok, so let's shorten it slightly -- in particular, i'd like to just copy the existing code from the stdlib (maybe even leaving a note saying \"TODO: switch to total_seconds when we drop 2.6 compatibility\"):\n\n```\nreturn ((time_delta.days * 86400 + time_delta.seconds)*10**6 +\n         time_delta.microseconds) / 10**6\n```\n", "created_at": "2014-06-03T16:57:45Z", "updated_at": "2014-06-03T22:36:25Z", "html_url": "https://github.com/google/oauth2client/pull/15#discussion_r13345606", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/15", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13345606"}, "html": {"href": "https://github.com/google/oauth2client/pull/15#discussion_r13345606"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/15"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13345606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13347311", "pull_request_review_id": null, "id": 13347311, "diff_hunk": "@@ -625,6 +628,16 @@ def set_store(self, store):\n     \"\"\"\n     self.store = store\n \n+  def _expires_in(self):\n+    \"\"\"Get in how many seconds does the token expire.\"\"\"\n+    if self.token_expiry:\n+      now = datetime.datetime.utcnow()\n+      if self.token_expiry > now:\n+        time_delta = self.token_expiry - now\n+        return int(round(time_delta.days * 86400.0 +", "path": "oauth2client/client.py", "position": null, "original_position": 51, "commit_id": "95830b0a52be1e64d60b331e917b0e8618a559a9", "original_commit_id": "dff7414cb7926d1467fe7334b6d97febccd63637", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "With this in mind:\nhttps://docs.python.org/2/library/datetime.html#timedelta-objects (hint: 0\n<= microseconds < 1000000)\n\nreturn ((time_delta.days \\* 86400 + time_delta.seconds)_10__6 +\n         time_delta.microseconds) / 10_*6\n\nbecomes equivalent with\n\nreturn time_delta.days \\* 86400 + time_delta.seconds\n\nThis is to say that 2.999999 seconds are considered to be 2 seconds for our\npurpose. Claiming that the token expires in 3 seconds (the way originally I\nintended) might upset some purists. Better to under promise and over\ndeliver than the other way around.\n\nAre we on the same page?\n\nOn Tue, Jun 3, 2014 at 9:57 AM, Craig Citro notifications@github.com\nwrote:\n\n> In oauth2client/client.py:\n> \n> > @@ -625,6 +628,16 @@ def set_store(self, store):\n> >      \"\"\"\n> >      self.store = store\n> > -  def _expires_in(self):\n> > -    \"\"\"Get in how many seconds does the token expire.\"\"\"\n> > -    if self.token_expiry:\n> > -      now = datetime.datetime.utcnow()\n> > -      if self.token_expiry > now:\n> > -        time_delta = self.token_expiry - now\n> > -        return int(round(time_delta.days \\* 86400.0 +\n> \n> ugh, 2.6. ;)\n> \n> ok, so let's shorten it slightly -- in particular, i'd like to just copy\n> the existing code from the stdlib (maybe even leaving a note saying \"TODO:\n> switch to total_seconds when we drop 2.6 compatibility\"):\n> \n> return ((time_delta.days \\* 86400 + time_delta.seconds)_10__6 +\n>          time_delta.microseconds) / 10_*6\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/pull/15/files#r13345606.\n\n## \n\nOrest Bolohan\n\nSoftware Engineer\nCloud/TI Identity and Access Management Services\nGoogle Inc.\nMountain View, CA\n\n(650) 214 3458\norest@google.com\n", "created_at": "2014-06-03T17:28:07Z", "updated_at": "2014-06-03T22:36:26Z", "html_url": "https://github.com/google/oauth2client/pull/15#discussion_r13347311", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/15", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13347311"}, "html": {"href": "https://github.com/google/oauth2client/pull/15#discussion_r13347311"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/15"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13347311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13350809", "pull_request_review_id": null, "id": 13350809, "diff_hunk": "@@ -625,6 +628,18 @@ def set_store(self, store):\n     \"\"\"\n     self.store = store\n \n+  def _expires_in(self):\n+    \"\"\"Return the number of seconds until this token expires.\"\"\"\n+    if self.token_expiry:\n+      now = datetime.datetime.utcnow()\n+      if self.token_expiry > now:\n+        time_delta = self.token_expiry - now\n+        # TODO(orestica): return time_delta.total_seconds()\n+        # once dropping support for Python 2.6\n+        return time_delta.days * 86400 + time_delta.seconds\n+      else:", "path": "oauth2client/client.py", "position": 61, "original_position": 54, "commit_id": "95830b0a52be1e64d60b331e917b0e8618a559a9", "original_commit_id": "4bcd15ed0e0b672bdd6d17ef950366c7d8a9b157", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Actually, this function might still return `None` (say if `token_expiry` is missing); how about we just drop this line and outdent the next to be what happens if anything falls through? (i'm shooting for a consistent return type here.)\n", "created_at": "2014-06-03T18:29:23Z", "updated_at": "2014-06-03T22:36:26Z", "html_url": "https://github.com/google/oauth2client/pull/15#discussion_r13350809", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/15", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13350809"}, "html": {"href": "https://github.com/google/oauth2client/pull/15#discussion_r13350809"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/15"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13350809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13350853", "pull_request_review_id": null, "id": 13350853, "diff_hunk": "@@ -625,6 +628,16 @@ def set_store(self, store):\n     \"\"\"\n     self.store = store\n \n+  def _expires_in(self):\n+    \"\"\"Get in how many seconds does the token expire.\"\"\"\n+    if self.token_expiry:\n+      now = datetime.datetime.utcnow()\n+      if self.token_expiry > now:\n+        time_delta = self.token_expiry - now\n+        return int(round(time_delta.days * 86400.0 +", "path": "oauth2client/client.py", "position": null, "original_position": 51, "commit_id": "95830b0a52be1e64d60b331e917b0e8618a559a9", "original_commit_id": "dff7414cb7926d1467fe7334b6d97febccd63637", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "yes -- i'm really happy with this.\n", "created_at": "2014-06-03T18:30:09Z", "updated_at": "2014-06-03T22:36:26Z", "html_url": "https://github.com/google/oauth2client/pull/15#discussion_r13350853", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/15", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13350853"}, "html": {"href": "https://github.com/google/oauth2client/pull/15#discussion_r13350853"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/15"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13350853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13353728", "pull_request_review_id": null, "id": 13353728, "diff_hunk": "@@ -625,6 +628,18 @@ def set_store(self, store):\n     \"\"\"\n     self.store = store\n \n+  def _expires_in(self):\n+    \"\"\"Return the number of seconds until this token expires.\"\"\"\n+    if self.token_expiry:\n+      now = datetime.datetime.utcnow()\n+      if self.token_expiry > now:\n+        time_delta = self.token_expiry - now\n+        # TODO(orestica): return time_delta.total_seconds()\n+        # once dropping support for Python 2.6\n+        return time_delta.days * 86400 + time_delta.seconds\n+      else:", "path": "oauth2client/client.py", "position": 61, "original_position": 54, "commit_id": "95830b0a52be1e64d60b331e917b0e8618a559a9", "original_commit_id": "4bcd15ed0e0b672bdd6d17ef950366c7d8a9b157", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "It returns None on purpose, when there is no token_expiry set.\nIf you look at method _do_refresh_request(), line 730, you'll see that the\ntoken_expiry is explicitly set to None when it is explicitly not returned\nfrom the http call.\n\nMaybe I should explicitly state this in the docstring of the method.\n\nOn Tue, Jun 3, 2014 at 11:29 AM, Craig Citro notifications@github.com\nwrote:\n\n> In oauth2client/client.py:\n> \n> > @@ -625,6 +628,18 @@ def set_store(self, store):\n> >      \"\"\"\n> >      self.store = store\n> > -  def _expires_in(self):\n> > -    \"\"\"Return the number of seconds until this token expires.\"\"\"\n> > -    if self.token_expiry:\n> > -      now = datetime.datetime.utcnow()\n> > -      if self.token_expiry > now:\n> > -        time_delta = self.token_expiry - now\n> > -        # TODO(orestica): return time_delta.total_seconds()\n> > -        # once dropping support for Python 2.6\n> > -        return time_delta.days \\* 86400 + time_delta.seconds\n> > -      else:\n> \n> Actually, this function might still return None (say if token_expiry is\n> missing); how about we just drop this line and outdent the next to be what\n> happens if anything falls through? (i'm shooting for a consistent return\n> type here.)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/pull/15/files#r13350809.\n\n## \n\nOrest Bolohan\n\nSoftware Engineer\nCloud/TI Identity and Access Management Services\nGoogle Inc.\nMountain View, CA\n\n(650) 214 3458\norest@google.com\n", "created_at": "2014-06-03T19:21:05Z", "updated_at": "2014-06-03T22:36:26Z", "html_url": "https://github.com/google/oauth2client/pull/15#discussion_r13353728", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/15", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13353728"}, "html": {"href": "https://github.com/google/oauth2client/pull/15#discussion_r13353728"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/15"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13353728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13354743", "pull_request_review_id": null, "id": 13354743, "diff_hunk": "@@ -625,6 +628,18 @@ def set_store(self, store):\n     \"\"\"\n     self.store = store\n \n+  def _expires_in(self):\n+    \"\"\"Return the number of seconds until this token expires.\"\"\"\n+    if self.token_expiry:\n+      now = datetime.datetime.utcnow()\n+      if self.token_expiry > now:\n+        time_delta = self.token_expiry - now\n+        # TODO(orestica): return time_delta.total_seconds()\n+        # once dropping support for Python 2.6\n+        return time_delta.days * 86400 + time_delta.seconds\n+      else:", "path": "oauth2client/client.py", "position": 61, "original_position": 54, "commit_id": "95830b0a52be1e64d60b331e917b0e8618a559a9", "original_commit_id": "4bcd15ed0e0b672bdd6d17ef950366c7d8a9b157", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "You can think of this method as a convenience method returning the\ntoken_expiry, but in an interval representation, rather than a date in the\nfuture.\nIf token_expiry is not defined, let's not define expires_in.\n\nOn Tue, Jun 3, 2014 at 12:21 PM, Orest Bolohan orest@google.com wrote:\n\n> It returns None on purpose, when there is no token_expiry set.\n> If you look at method _do_refresh_request(), line 730, you'll see that the\n> token_expiry is explicitly set to None when it is explicitly not returned\n> from the http call.\n> \n> Maybe I should explicitly state this in the docstring of the method.\n> \n> On Tue, Jun 3, 2014 at 11:29 AM, Craig Citro notifications@github.com\n> wrote:\n> \n> > In oauth2client/client.py:\n> > \n> > > @@ -625,6 +628,18 @@ def set_store(self, store):\n> > >      \"\"\"\n> > >      self.store = store\n> > > -  def _expires_in(self):\n> > > -    \"\"\"Return the number of seconds until this token expires.\"\"\"\n> > > -    if self.token_expiry:\n> > > -      now = datetime.datetime.utcnow()\n> > > -      if self.token_expiry > now:\n> > > -        time_delta = self.token_expiry - now\n> > > -        # TODO(orestica): return time_delta.total_seconds()\n> > > -        # once dropping support for Python 2.6\n> > > -        return time_delta.days \\* 86400 + time_delta.seconds\n> > > -      else:\n> > \n> > Actually, this function might still return None (say if token_expiry is\n> > missing); how about we just drop this line and outdent the next to be what\n> > happens if anything falls through? (i'm shooting for a consistent return\n> > type here.)\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/google/oauth2client/pull/15/files#r13350809.\n> \n> ## \n> \n> Orest Bolohan\n> \n> Software Engineer\n> Cloud/TI Identity and Access Management Services\n> Google Inc.\n> Mountain View, CA\n> \n> (650) 214 3458\n> orest@google.com\n\n## \n\nOrest Bolohan\n\nSoftware Engineer\nCloud/TI Identity and Access Management Services\nGoogle Inc.\nMountain View, CA\n\n(650) 214 3458\norest@google.com\n", "created_at": "2014-06-03T19:41:27Z", "updated_at": "2014-06-03T22:36:26Z", "html_url": "https://github.com/google/oauth2client/pull/15#discussion_r13354743", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/15", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13354743"}, "html": {"href": "https://github.com/google/oauth2client/pull/15#discussion_r13354743"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/15"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13354743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13355525", "pull_request_review_id": null, "id": 13355525, "diff_hunk": "@@ -625,6 +628,18 @@ def set_store(self, store):\n     \"\"\"\n     self.store = store\n \n+  def _expires_in(self):\n+    \"\"\"Return the number of seconds until this token expires.\"\"\"\n+    if self.token_expiry:\n+      now = datetime.datetime.utcnow()\n+      if self.token_expiry > now:\n+        time_delta = self.token_expiry - now\n+        # TODO(orestica): return time_delta.total_seconds()\n+        # once dropping support for Python 2.6\n+        return time_delta.days * 86400 + time_delta.seconds\n+      else:", "path": "oauth2client/client.py", "position": 61, "original_position": 54, "commit_id": "95830b0a52be1e64d60b331e917b0e8618a559a9", "original_commit_id": "4bcd15ed0e0b672bdd6d17ef950366c7d8a9b157", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "Let me ask the question a different way: is there ever a case where you want to distinguish between `token_expiry == 0` and `token_expiry is None`? My suspicion is no; the only thing you'll ever hit are issues where someone thought they had an `int` and had `None` instead.\n", "created_at": "2014-06-03T19:55:38Z", "updated_at": "2014-06-03T22:36:26Z", "html_url": "https://github.com/google/oauth2client/pull/15#discussion_r13355525", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/15", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13355525"}, "html": {"href": "https://github.com/google/oauth2client/pull/15#discussion_r13355525"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/15"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13355525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13356098", "pull_request_review_id": null, "id": 13356098, "diff_hunk": "@@ -625,6 +628,18 @@ def set_store(self, store):\n     \"\"\"\n     self.store = store\n \n+  def _expires_in(self):\n+    \"\"\"Return the number of seconds until this token expires.\"\"\"\n+    if self.token_expiry:\n+      now = datetime.datetime.utcnow()\n+      if self.token_expiry > now:\n+        time_delta = self.token_expiry - now\n+        # TODO(orestica): return time_delta.total_seconds()\n+        # once dropping support for Python 2.6\n+        return time_delta.days * 86400 + time_delta.seconds\n+      else:", "path": "oauth2client/client.py", "position": 61, "original_position": 54, "commit_id": "95830b0a52be1e64d60b331e917b0e8618a559a9", "original_commit_id": "4bcd15ed0e0b672bdd6d17ef950366c7d8a9b157", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Look at the tests for appengine and gce and their implementations of\n_refresh() method.\nThe current implementations of how they get access tokens throw away the\nexpires_in information and thus token_expiry remains None.\nReturning None instead of 0 (for the _expires_in() private method), when\nthere is no actual token_expiry, conveys additional information (ie, that\nthere was no token_expiry set).\n\nThink of it this way: the fact that the token_expiry was not set, does not\nmean the token has expired (which would be implied by expires_in being 0\nseconds). For all practical purposes, the token may still be valid. We just\ndon't know.\n\nOn Tue, Jun 3, 2014 at 12:55 PM, Craig Citro notifications@github.com\nwrote:\n\n> In oauth2client/client.py:\n> \n> > @@ -625,6 +628,18 @@ def set_store(self, store):\n> >      \"\"\"\n> >      self.store = store\n> > -  def _expires_in(self):\n> > -    \"\"\"Return the number of seconds until this token expires.\"\"\"\n> > -    if self.token_expiry:\n> > -      now = datetime.datetime.utcnow()\n> > -      if self.token_expiry > now:\n> > -        time_delta = self.token_expiry - now\n> > -        # TODO(orestica): return time_delta.total_seconds()\n> > -        # once dropping support for Python 2.6\n> > -        return time_delta.days \\* 86400 + time_delta.seconds\n> > -      else:\n> \n> Let me ask the question a different way: is there ever a case where you\n> want to distinguish between token_expiry == 0 and token_expiry is None?\n> My suspicion is no; the only thing you'll ever hit are issues where someone\n> thought they had an int and had None instead.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/oauth2client/pull/15/files#r13355525.\n\n## \n\nOrest Bolohan\n\nSoftware Engineer\nCloud/TI Identity and Access Management Services\nGoogle Inc.\nMountain View, CA\n\n(650) 214 3458\norest@google.com\n", "created_at": "2014-06-03T20:07:51Z", "updated_at": "2014-06-03T22:36:26Z", "html_url": "https://github.com/google/oauth2client/pull/15#discussion_r13356098", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/15", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13356098"}, "html": {"href": "https://github.com/google/oauth2client/pull/15#discussion_r13356098"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/15"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13356098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13363259", "pull_request_review_id": null, "id": 13363259, "diff_hunk": "@@ -625,6 +628,18 @@ def set_store(self, store):\n     \"\"\"\n     self.store = store\n \n+  def _expires_in(self):\n+    \"\"\"Return the number of seconds until this token expires.\"\"\"\n+    if self.token_expiry:\n+      now = datetime.datetime.utcnow()\n+      if self.token_expiry > now:\n+        time_delta = self.token_expiry - now\n+        # TODO(orestica): return time_delta.total_seconds()\n+        # once dropping support for Python 2.6\n+        return time_delta.days * 86400 + time_delta.seconds\n+      else:", "path": "oauth2client/client.py", "position": 61, "original_position": 54, "commit_id": "95830b0a52be1e64d60b331e917b0e8618a559a9", "original_commit_id": "4bcd15ed0e0b672bdd6d17ef950366c7d8a9b157", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "I added a more detailed docstring for the OAuth2Credentials._expires_in()\nmethod, explaining what values are to be expected when token_expiry is in\nthe past or None.\n\nOn Tue, Jun 3, 2014 at 1:07 PM, Orest Bolohan orest@google.com wrote:\n\n> Look at the tests for appengine and gce and their implementations of\n> _refresh() method.\n> The current implementations of how they get access tokens throw away the\n> expires_in information and thus token_expiry remains None.\n> Returning None instead of 0 (for the _expires_in() private method), when\n> there is no actual token_expiry, conveys additional information (ie, that\n> there was no token_expiry set).\n> \n> Think of it this way: the fact that the token_expiry was not set, does not\n> mean the token has expired (which would be implied by expires_in being 0\n> seconds). For all practical purposes, the token may still be valid. We just\n> don't know.\n> \n> On Tue, Jun 3, 2014 at 12:55 PM, Craig Citro notifications@github.com\n> wrote:\n> \n> > In oauth2client/client.py:\n> > \n> > > @@ -625,6 +628,18 @@ def set_store(self, store):\n> > >      \"\"\"\n> > >      self.store = store\n> > > -  def _expires_in(self):\n> > > -    \"\"\"Return the number of seconds until this token expires.\"\"\"\n> > > -    if self.token_expiry:\n> > > -      now = datetime.datetime.utcnow()\n> > > -      if self.token_expiry > now:\n> > > -        time_delta = self.token_expiry - now\n> > > -        # TODO(orestica): return time_delta.total_seconds()\n> > > -        # once dropping support for Python 2.6\n> > > -        return time_delta.days \\* 86400 + time_delta.seconds\n> > > -      else:\n> > \n> > Let me ask the question a different way: is there ever a case where you\n> > want to distinguish between token_expiry == 0 and token_expiry is None?\n> > My suspicion is no; the only thing you'll ever hit are issues where someone\n> > thought they had an int and had None instead.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/google/oauth2client/pull/15/files#r13355525.\n> \n> ## \n> \n> Orest Bolohan\n> \n> Software Engineer\n> Cloud/TI Identity and Access Management Services\n> Google Inc.\n> Mountain View, CA\n> \n> (650) 214 3458\n> orest@google.com\n\n## \n\nOrest Bolohan\n\nSoftware Engineer\nCloud/TI Identity and Access Management Services\nGoogle Inc.\nMountain View, CA\n\n(650) 214 3458\norest@google.com\n", "created_at": "2014-06-03T22:37:32Z", "updated_at": "2014-06-03T22:37:32Z", "html_url": "https://github.com/google/oauth2client/pull/15#discussion_r13363259", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/15", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13363259"}, "html": {"href": "https://github.com/google/oauth2client/pull/15#discussion_r13363259"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/15"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13363259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13370487", "pull_request_review_id": null, "id": 13370487, "diff_hunk": "@@ -625,6 +628,18 @@ def set_store(self, store):\n     \"\"\"\n     self.store = store\n \n+  def _expires_in(self):\n+    \"\"\"Return the number of seconds until this token expires.\"\"\"\n+    if self.token_expiry:\n+      now = datetime.datetime.utcnow()\n+      if self.token_expiry > now:\n+        time_delta = self.token_expiry - now\n+        # TODO(orestica): return time_delta.total_seconds()\n+        # once dropping support for Python 2.6\n+        return time_delta.days * 86400 + time_delta.seconds\n+      else:", "path": "oauth2client/client.py", "position": 61, "original_position": 54, "commit_id": "95830b0a52be1e64d60b331e917b0e8618a559a9", "original_commit_id": "4bcd15ed0e0b672bdd6d17ef950366c7d8a9b157", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "ah, that's what i was curious about -- so `None` means \"let's try using this credential, since we don't know any better\", but `0` means \"it's dead, Jim -- let's refresh\".\n", "created_at": "2014-06-04T04:11:07Z", "updated_at": "2014-06-04T04:11:07Z", "html_url": "https://github.com/google/oauth2client/pull/15#discussion_r13370487", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/15", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13370487"}, "html": {"href": "https://github.com/google/oauth2client/pull/15#discussion_r13370487"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/15"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13370487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13966650", "pull_request_review_id": null, "id": 13966650, "diff_hunk": "@@ -1656,7 +1660,7 @@ def step2_exchange(self, code, http=None):\n \n @util.positional(2)\n def flow_from_clientsecrets(filename, scope, redirect_uri=None,\n-                            message=None, cache=None):\n+                            login_hint=None, message=None, cache=None):", "path": "oauth2client/client.py", "position": null, "original_position": 30, "commit_id": "a319800de3c40738c04bdad35aaaa14b9db505ed", "original_commit_id": "6fae0b95cc085da0d48cc3ba9862c4c629985a20", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "body": "A new parameter needs to go on the end, in case people were not naming their args when using this function.\n", "created_at": "2014-06-19T13:17:26Z", "updated_at": "2014-06-19T13:33:49Z", "html_url": "https://github.com/google/oauth2client/pull/18#discussion_r13966650", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/18", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13966650"}, "html": {"href": "https://github.com/google/oauth2client/pull/18#discussion_r13966650"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/18"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13966650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13966674", "pull_request_review_id": null, "id": 13966674, "diff_hunk": "@@ -1504,6 +1504,7 @@ class OAuth2WebServerFlow(Flow):\n   @util.positional(4)\n   def __init__(self, client_id, client_secret, scope,\n                redirect_uri=None,\n+               login_hint=None,", "path": "oauth2client/client.py", "position": null, "original_position": 4, "commit_id": "a319800de3c40738c04bdad35aaaa14b9db505ed", "original_commit_id": "6fae0b95cc085da0d48cc3ba9862c4c629985a20", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "body": "A new parameter needs to go on the end.\n", "created_at": "2014-06-19T13:18:06Z", "updated_at": "2014-06-19T13:33:49Z", "html_url": "https://github.com/google/oauth2client/pull/18#discussion_r13966674", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/18", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/13966674"}, "html": {"href": "https://github.com/google/oauth2client/pull/18#discussion_r13966674"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/18"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/13966674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14742812", "pull_request_review_id": null, "id": 14742812, "diff_hunk": "@@ -919,7 +921,8 @@ class GoogleCredentials(OAuth2Credentials):\n   PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n   ZONE = 'us-central1-a'          # replace this with the zone you care about\n \n-  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+  service = build('compute', 'v1',\n+                  credentials=GoogleCredentials.get_application_default())", "path": "oauth2client/client.py", "position": null, "original_position": 51, "commit_id": "df59cadb0398bae43b762d45dfa229127ffa734d", "original_commit_id": "e5df46e4e610568294504bb488fe08fdabf3d8b8", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "Now that it no longer fits on one line, I would make this 2 lines rather than wrap it:\ncredentials = GoogleCredentials.get_application_default()\nservice = build('compute', 'v1', credentials)\n\nThis aligns better with the Java sample also.\n", "created_at": "2014-07-09T23:32:39Z", "updated_at": "2014-07-11T20:11:10Z", "html_url": "https://github.com/google/oauth2client/pull/24#discussion_r14742812", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/24", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/14742812"}, "html": {"href": "https://github.com/google/oauth2client/pull/24#discussion_r14742812"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/24"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14742812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14742887", "pull_request_review_id": null, "id": 14742887, "diff_hunk": "@@ -1,13 +1,14 @@\n-# To be used to test GoogleCredential.GetDefaultCredential()\n+# To be used to test GoogleCredentials.get_application_default()\n # from local machine and GCE.\n \n from googleapiclient.discovery import build\n from oauth2client.client import GoogleCredentials\n \n-PROJECT = \"bamboo-machine-422\"  # Provide your own GCE project here\n-ZONE = \"us-central1-a\"          # Put here a zone which has some VMs\n+PROJECT = 'bamboo-machine-422'  # Provide your own GCE project here\n+ZONE = 'us-central1-a'          # Put here a zone which has some VMs\n \n-service = build(\"compute\", \"v1\", credentials=GoogleCredentials.get_default())\n+service = build('compute', 'v1',\n+                credentials=GoogleCredentials.get_application_default())", "path": "samples/call_compute_service.py", "position": null, "original_position": 15, "commit_id": "df59cadb0398bae43b762d45dfa229127ffa734d", "original_commit_id": "e5df46e4e610568294504bb488fe08fdabf3d8b8", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "As above, suggest use 2 lines.\n", "created_at": "2014-07-09T23:35:13Z", "updated_at": "2014-07-11T20:11:10Z", "html_url": "https://github.com/google/oauth2client/pull/24#discussion_r14742887", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/24", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/14742887"}, "html": {"href": "https://github.com/google/oauth2client/pull/24#discussion_r14742887"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/24"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14742887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14742894", "pull_request_review_id": null, "id": 14742894, "diff_hunk": "@@ -1,15 +1,16 @@\n-# To be used to test GoogleCredential.GetDefaultCredential()\n+# To be used to test GoogleCredentials.get_application_default()\n # from devel GAE (ie, dev_appserver.py).\n \n import webapp2\n from googleapiclient.discovery import build\n from oauth2client.client import GoogleCredentials\n \n-PROJECT = \"bamboo-machine-422\"  # Provide your own GCE project here\n-ZONE = \"us-central1-a\"          # Put here a zone which has some VMs\n+PROJECT = 'bamboo-machine-422'  # Provide your own GCE project here\n+ZONE = 'us-central1-a'          # Put here a zone which has some VMs\n \n def get_instances():\n-  service = build(\"compute\", \"v1\", credentials=GoogleCredentials.get_default())\n+  service = build('compute', 'v1',", "path": "samples/googleappengine/call_compute_service_from_gae.py", "position": null, "original_position": 16, "commit_id": "df59cadb0398bae43b762d45dfa229127ffa734d", "original_commit_id": "e5df46e4e610568294504bb488fe08fdabf3d8b8", "user": {"login": "anthmgoogle", "id": 6653712, "avatar_url": "https://avatars0.githubusercontent.com/u/6653712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthmgoogle", "html_url": "https://github.com/anthmgoogle", "followers_url": "https://api.github.com/users/anthmgoogle/followers", "following_url": "https://api.github.com/users/anthmgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/anthmgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthmgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthmgoogle/subscriptions", "organizations_url": "https://api.github.com/users/anthmgoogle/orgs", "repos_url": "https://api.github.com/users/anthmgoogle/repos", "events_url": "https://api.github.com/users/anthmgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/anthmgoogle/received_events", "type": "User", "site_admin": false}, "body": "As above, use 2 lines.\n", "created_at": "2014-07-09T23:35:38Z", "updated_at": "2014-07-11T20:11:10Z", "html_url": "https://github.com/google/oauth2client/pull/24#discussion_r14742894", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/24", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/14742894"}, "html": {"href": "https://github.com/google/oauth2client/pull/24#discussion_r14742894"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/24"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14742894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14744230", "pull_request_review_id": null, "id": 14744230, "diff_hunk": "@@ -919,7 +921,8 @@ class GoogleCredentials(OAuth2Credentials):\n   PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n   ZONE = 'us-central1-a'          # replace this with the zone you care about\n \n-  service = build('compute', 'v1', credentials=GoogleCredentials.get_default())\n+  service = build('compute', 'v1',\n+                  credentials=GoogleCredentials.get_application_default())", "path": "oauth2client/client.py", "position": null, "original_position": 51, "commit_id": "df59cadb0398bae43b762d45dfa229127ffa734d", "original_commit_id": "e5df46e4e610568294504bb488fe08fdabf3d8b8", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-07-10T00:14:53Z", "updated_at": "2014-07-11T20:11:10Z", "html_url": "https://github.com/google/oauth2client/pull/24#discussion_r14744230", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/24", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/14744230"}, "html": {"href": "https://github.com/google/oauth2client/pull/24#discussion_r14744230"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/24"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14744230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14829906", "pull_request_review_id": null, "id": 14829906, "diff_hunk": "@@ -1098,14 +1107,17 @@ def _get_well_known_file():\n     return default_config_path\n \n \n-def _get_default_credential_from_file(default_credential_filename):\n-  \"\"\"Build the Default Credentials from file.\"\"\"\n+def _get_application_default_credential_from_file(\n+    application_default_credential_filename):\n+  \"\"\"Build the Application Default Credentials from file.\"\"\"\n \n   import service_account\n \n   # read the credentials from the file\n-  with open(default_credential_filename) as default_credential:\n-    client_credentials = service_account.simplejson.load(default_credential)\n+  with open(application_default_credential_filename) as (\n+      application_default_credential):\n+    client_credentials = (", "path": "oauth2client/client.py", "position": null, "original_position": 221, "commit_id": "df59cadb0398bae43b762d45dfa229127ffa734d", "original_commit_id": "85b50aba184f59aedfb35f130c8675a276165d89", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "nit: i'd rather have just the arg on the next line, and skip the wrapping parens:\n\n```\nclient_credentials = service_account.simplejson.load(\n    application_default_credential)\n```\n", "created_at": "2014-07-11T16:31:01Z", "updated_at": "2014-07-11T20:11:10Z", "html_url": "https://github.com/google/oauth2client/pull/24#discussion_r14829906", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/24", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/14829906"}, "html": {"href": "https://github.com/google/oauth2client/pull/24#discussion_r14829906"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/24"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14829906/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14829960", "pull_request_review_id": null, "id": 14829960, "diff_hunk": "@@ -1142,25 +1154,26 @@ def _get_default_credential_from_file(default_credential_filename):\n \n \n def _raise_exception_for_missing_fields(missing_fields):\n-  raise DefaultCredentialsError('The following field(s): ' +\n-                                ', '.join(missing_fields) + ' must be defined.')\n+  raise ApplicationDefaultCredentialsError(\n+      'The following field(s): ' + ', '.join(missing_fields) +", "path": "oauth2client/client.py", "position": null, "original_position": 246, "commit_id": "df59cadb0398bae43b762d45dfa229127ffa734d", "original_commit_id": "85b50aba184f59aedfb35f130c8675a276165d89", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "one more nit: the printed message will be easier to read as\n\n```\n'The following field(s) must be defined:' + ', '.join(missing_fields)\n```\n", "created_at": "2014-07-11T16:32:26Z", "updated_at": "2014-07-11T20:11:10Z", "html_url": "https://github.com/google/oauth2client/pull/24#discussion_r14829960", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/24", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/14829960"}, "html": {"href": "https://github.com/google/oauth2client/pull/24#discussion_r14829960"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/24"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14829960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14831565", "pull_request_review_id": null, "id": 14831565, "diff_hunk": "@@ -1098,14 +1107,17 @@ def _get_well_known_file():\n     return default_config_path\n \n \n-def _get_default_credential_from_file(default_credential_filename):\n-  \"\"\"Build the Default Credentials from file.\"\"\"\n+def _get_application_default_credential_from_file(\n+    application_default_credential_filename):\n+  \"\"\"Build the Application Default Credentials from file.\"\"\"\n \n   import service_account\n \n   # read the credentials from the file\n-  with open(default_credential_filename) as default_credential:\n-    client_credentials = service_account.simplejson.load(default_credential)\n+  with open(application_default_credential_filename) as (\n+      application_default_credential):\n+    client_credentials = (", "path": "oauth2client/client.py", "position": null, "original_position": 221, "commit_id": "df59cadb0398bae43b762d45dfa229127ffa734d", "original_commit_id": "85b50aba184f59aedfb35f130c8675a276165d89", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-07-11T17:04:10Z", "updated_at": "2014-07-11T20:11:10Z", "html_url": "https://github.com/google/oauth2client/pull/24#discussion_r14831565", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/24", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/14831565"}, "html": {"href": "https://github.com/google/oauth2client/pull/24#discussion_r14831565"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/24"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14831565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14831576", "pull_request_review_id": null, "id": 14831576, "diff_hunk": "@@ -1142,25 +1154,26 @@ def _get_default_credential_from_file(default_credential_filename):\n \n \n def _raise_exception_for_missing_fields(missing_fields):\n-  raise DefaultCredentialsError('The following field(s): ' +\n-                                ', '.join(missing_fields) + ' must be defined.')\n+  raise ApplicationDefaultCredentialsError(\n+      'The following field(s): ' + ', '.join(missing_fields) +", "path": "oauth2client/client.py", "position": null, "original_position": 246, "commit_id": "df59cadb0398bae43b762d45dfa229127ffa734d", "original_commit_id": "85b50aba184f59aedfb35f130c8675a276165d89", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-07-11T17:04:23Z", "updated_at": "2014-07-11T20:11:10Z", "html_url": "https://github.com/google/oauth2client/pull/24#discussion_r14831576", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/24", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/14831576"}, "html": {"href": "https://github.com/google/oauth2client/pull/24#discussion_r14831576"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/24"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14831576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14970751", "pull_request_review_id": null, "id": 14970751, "diff_hunk": "@@ -1,5 +1,6 @@\n # To be used to test GoogleCredentials.get_application_default()\n # from local machine and GCE.\n+# The GCE virtual machine needs to have the Compute API enabled.", "path": "samples/call_compute_service.py", "position": null, "original_position": 3, "commit_id": "0e01b2a0bc680312d86f295db8ff35520d1e3885", "original_commit_id": "c5cc7ea83a867d3078217b7d692ea78917e22d72", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "I think we need to at _least_ say \"service account\" here; better yet would be a pointer to some docs.\n", "created_at": "2014-07-15T23:12:04Z", "updated_at": "2014-07-15T23:22:10Z", "html_url": "https://github.com/google/oauth2client/pull/26#discussion_r14970751", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/26", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/14970751"}, "html": {"href": "https://github.com/google/oauth2client/pull/26#discussion_r14970751"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/26"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14970751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14972560", "pull_request_review_id": null, "id": 14972560, "diff_hunk": "@@ -1,5 +1,6 @@\n # To be used to test GoogleCredentials.get_application_default()\n # from local machine and GCE.\n+# The GCE virtual machine needs to have the Compute API enabled.", "path": "samples/call_compute_service.py", "position": null, "original_position": 3, "commit_id": "0e01b2a0bc680312d86f295db8ff35520d1e3885", "original_commit_id": "c5cc7ea83a867d3078217b7d692ea78917e22d72", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-07-15T23:22:37Z", "updated_at": "2014-07-15T23:22:37Z", "html_url": "https://github.com/google/oauth2client/pull/26#discussion_r14972560", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/26", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/14972560"}, "html": {"href": "https://github.com/google/oauth2client/pull/26#discussion_r14972560"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/26"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/14972560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15085827", "pull_request_review_id": null, "id": 15085827, "diff_hunk": "@@ -985,6 +985,16 @@ def create_scoped(self, scopes):\n     \"\"\"\n     return self\n \n+  @property\n+  def serialization_data(self):\n+    \"\"\"Get the fields and their values identifying the current credentials.\"\"\"\n+    credentials_data = {}", "path": "oauth2client/client.py", "position": null, "original_position": 7, "commit_id": "df03c9c053335e1723b0c07a609a45b481de021a", "original_commit_id": "29305883339446e1b55fcddffe8eebcd3f444f6e", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "it's not a huge difference, but i'd rather see this as an inline literal, and probably even just return it -- something like\n\n```\nreturn {\n    'type': 'authorized_user',\n    'client_id': self.client_id,\n    ...\n}\n```\n", "created_at": "2014-07-17T21:36:39Z", "updated_at": "2014-07-18T00:54:45Z", "html_url": "https://github.com/google/oauth2client/pull/27#discussion_r15085827", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/27", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/15085827"}, "html": {"href": "https://github.com/google/oauth2client/pull/27#discussion_r15085827"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/27"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15085827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15085931", "pull_request_review_id": null, "id": 15085931, "diff_hunk": "@@ -1064,6 +1076,28 @@ def from_stream(credential_filename):\n           'method should point to a file.')\n \n \n+def save_to_well_known_file(credentials, test_well_known_file=None):", "path": "oauth2client/client.py", "position": null, "original_position": 30, "commit_id": "df03c9c053335e1723b0c07a609a45b481de021a", "original_commit_id": "29305883339446e1b55fcddffe8eebcd3f444f6e", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "why not just call it `well_known_file`?\n", "created_at": "2014-07-17T21:38:10Z", "updated_at": "2014-07-18T00:54:45Z", "html_url": "https://github.com/google/oauth2client/pull/27#discussion_r15085931", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/27", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/15085931"}, "html": {"href": "https://github.com/google/oauth2client/pull/27#discussion_r15085931"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/27"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15085931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15086032", "pull_request_review_id": null, "id": 15086032, "diff_hunk": "@@ -197,6 +197,10 @@ def _refresh(self, http_request):\n       raise AccessTokenRefreshError(str(e))\n     self.access_token = token\n \n+  @property\n+  def serialization_data(self):\n+    raise NotImplementedError('No credentials data for App Engine.')", "path": "oauth2client/appengine.py", "position": null, "original_position": 6, "commit_id": "df03c9c053335e1723b0c07a609a45b481de021a", "original_commit_id": "29305883339446e1b55fcddffe8eebcd3f444f6e", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "maybe `Cannot serialize credentials on App Engine`? actually, that's not true ... maybe `Cannot serialize credentials for AppEngine service accounts`?\n\n(same for GCE below)\n", "created_at": "2014-07-17T21:40:05Z", "updated_at": "2014-07-18T00:54:45Z", "html_url": "https://github.com/google/oauth2client/pull/27#discussion_r15086032", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/27", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/15086032"}, "html": {"href": "https://github.com/google/oauth2client/pull/27#discussion_r15086032"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/27"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15086032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15086080", "pull_request_review_id": null, "id": 15086080, "diff_hunk": "@@ -1064,6 +1076,28 @@ def from_stream(credential_filename):\n           'method should point to a file.')\n \n \n+def save_to_well_known_file(credentials, test_well_known_file=None):", "path": "oauth2client/client.py", "position": null, "original_position": 30, "commit_id": "df03c9c053335e1723b0c07a609a45b481de021a", "original_commit_id": "29305883339446e1b55fcddffe8eebcd3f444f6e", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "also, should we put this in `tools`?\n", "created_at": "2014-07-17T21:41:05Z", "updated_at": "2014-07-18T00:54:45Z", "html_url": "https://github.com/google/oauth2client/pull/27#discussion_r15086080", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/27", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/15086080"}, "html": {"href": "https://github.com/google/oauth2client/pull/27#discussion_r15086080"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/27"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15086080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15089770", "pull_request_review_id": null, "id": 15089770, "diff_hunk": "@@ -985,6 +985,16 @@ def create_scoped(self, scopes):\n     \"\"\"\n     return self\n \n+  @property\n+  def serialization_data(self):\n+    \"\"\"Get the fields and their values identifying the current credentials.\"\"\"\n+    credentials_data = {}", "path": "oauth2client/client.py", "position": null, "original_position": 7, "commit_id": "df03c9c053335e1723b0c07a609a45b481de021a", "original_commit_id": "29305883339446e1b55fcddffe8eebcd3f444f6e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-07-17T23:08:56Z", "updated_at": "2014-07-18T00:54:45Z", "html_url": "https://github.com/google/oauth2client/pull/27#discussion_r15089770", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/27", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/15089770"}, "html": {"href": "https://github.com/google/oauth2client/pull/27#discussion_r15089770"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/27"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15089770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15089858", "pull_request_review_id": null, "id": 15089858, "diff_hunk": "@@ -1064,6 +1076,28 @@ def from_stream(credential_filename):\n           'method should point to a file.')\n \n \n+def save_to_well_known_file(credentials, test_well_known_file=None):", "path": "oauth2client/client.py", "position": null, "original_position": 30, "commit_id": "df03c9c053335e1723b0c07a609a45b481de021a", "original_commit_id": "29305883339446e1b55fcddffe8eebcd3f444f6e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "I hope you were referring to the name of the parameter, not the name of the method.\nI had wanted to emphasize that it should be used for testing only.\nI changed it as you suggested.\n", "created_at": "2014-07-17T23:10:05Z", "updated_at": "2014-07-18T00:54:45Z", "html_url": "https://github.com/google/oauth2client/pull/27#discussion_r15089858", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/27", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/15089858"}, "html": {"href": "https://github.com/google/oauth2client/pull/27#discussion_r15089858"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/27"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15089858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15089890", "pull_request_review_id": null, "id": 15089890, "diff_hunk": "@@ -1064,6 +1076,28 @@ def from_stream(credential_filename):\n           'method should point to a file.')\n \n \n+def save_to_well_known_file(credentials, test_well_known_file=None):", "path": "oauth2client/client.py", "position": null, "original_position": 30, "commit_id": "df03c9c053335e1723b0c07a609a45b481de021a", "original_commit_id": "29305883339446e1b55fcddffe8eebcd3f444f6e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Regarding, the move to tools, it can't be done because of the argparse which is imported in tools.py and doesn't play nicely with Python 2.6: https://travis-ci.org/orestica/oauth2client/builds/30218894\n", "created_at": "2014-07-17T23:11:00Z", "updated_at": "2014-07-18T00:54:45Z", "html_url": "https://github.com/google/oauth2client/pull/27#discussion_r15089890", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/27", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/15089890"}, "html": {"href": "https://github.com/google/oauth2client/pull/27#discussion_r15089890"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/27"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15089890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15089895", "pull_request_review_id": null, "id": 15089895, "diff_hunk": "@@ -197,6 +197,10 @@ def _refresh(self, http_request):\n       raise AccessTokenRefreshError(str(e))\n     self.access_token = token\n \n+  @property\n+  def serialization_data(self):\n+    raise NotImplementedError('No credentials data for App Engine.')", "path": "oauth2client/appengine.py", "position": null, "original_position": 6, "commit_id": "df03c9c053335e1723b0c07a609a45b481de021a", "original_commit_id": "29305883339446e1b55fcddffe8eebcd3f444f6e", "user": {"login": "orestica", "id": 7377199, "avatar_url": "https://avatars2.githubusercontent.com/u/7377199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orestica", "html_url": "https://github.com/orestica", "followers_url": "https://api.github.com/users/orestica/followers", "following_url": "https://api.github.com/users/orestica/following{/other_user}", "gists_url": "https://api.github.com/users/orestica/gists{/gist_id}", "starred_url": "https://api.github.com/users/orestica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orestica/subscriptions", "organizations_url": "https://api.github.com/users/orestica/orgs", "repos_url": "https://api.github.com/users/orestica/repos", "events_url": "https://api.github.com/users/orestica/events{/privacy}", "received_events_url": "https://api.github.com/users/orestica/received_events", "type": "User", "site_admin": false}, "body": "Done.\n", "created_at": "2014-07-17T23:11:07Z", "updated_at": "2014-07-18T00:54:45Z", "html_url": "https://github.com/google/oauth2client/pull/27#discussion_r15089895", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/27", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/15089895"}, "html": {"href": "https://github.com/google/oauth2client/pull/27#discussion_r15089895"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/27"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15089895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15090336", "pull_request_review_id": null, "id": 15090336, "diff_hunk": "@@ -1064,6 +1076,28 @@ def from_stream(credential_filename):\n           'method should point to a file.')\n \n \n+def save_to_well_known_file(credentials, test_well_known_file=None):", "path": "oauth2client/client.py", "position": null, "original_position": 30, "commit_id": "df03c9c053335e1723b0c07a609a45b481de021a", "original_commit_id": "29305883339446e1b55fcddffe8eebcd3f444f6e", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "re: tools, that makes sense -- we need to fix the argparse thing (it can be optionally installed in 2.6), so maybe leave a TODO?\n", "created_at": "2014-07-17T23:22:59Z", "updated_at": "2014-07-18T00:54:45Z", "html_url": "https://github.com/google/oauth2client/pull/27#discussion_r15090336", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/27", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/15090336"}, "html": {"href": "https://github.com/google/oauth2client/pull/27#discussion_r15090336"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/27"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15090336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15090343", "pull_request_review_id": null, "id": 15090343, "diff_hunk": "@@ -1064,6 +1076,28 @@ def from_stream(credential_filename):\n           'method should point to a file.')\n \n \n+def save_to_well_known_file(credentials, test_well_known_file=None):", "path": "oauth2client/client.py", "position": null, "original_position": 30, "commit_id": "df03c9c053335e1723b0c07a609a45b481de021a", "original_commit_id": "29305883339446e1b55fcddffe8eebcd3f444f6e", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "re: naming, yes, the parameter.\n", "created_at": "2014-07-17T23:23:10Z", "updated_at": "2014-07-18T00:54:45Z", "html_url": "https://github.com/google/oauth2client/pull/27#discussion_r15090343", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/27", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/15090343"}, "html": {"href": "https://github.com/google/oauth2client/pull/27#discussion_r15090343"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/27"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15090343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15168288", "pull_request_review_id": null, "id": 15168288, "diff_hunk": "@@ -128,7 +128,7 @@ def from_string(key, password='notasecret'):\n       if parsed_pem_key:\n         pkey = crypto.load_privatekey(crypto.FILETYPE_PEM, parsed_pem_key)\n       else:\n-        pkey = crypto.load_pkcs12(key, password).get_privatekey()\n+        pkey = crypto.load_pkcs12(key, str(password)).get_privatekey()", "path": "oauth2client/crypt.py", "position": 5, "original_position": 5, "commit_id": "0b5b6175b288ae815a22b1c490317339647c4eab", "original_commit_id": "0b5b6175b288ae815a22b1c490317339647c4eab", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "body": "I'd say that that decision has been made for us by the crypto module.\n", "created_at": "2014-07-21T13:35:00Z", "updated_at": "2014-07-21T13:35:00Z", "html_url": "https://github.com/google/oauth2client/pull/9#discussion_r15168288", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/9", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/15168288"}, "html": {"href": "https://github.com/google/oauth2client/pull/9#discussion_r15168288"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/9"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/15168288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097432", "pull_request_review_id": null, "id": 16097432, "diff_hunk": "@@ -28,8 +28,22 @@\n import os\n import sys\n import time\n-import urllib\n-import urlparse\n+import six\n+try:\n+  from urllib.parse import urlparse, urlunparse, urlencode, parse_qsl\n+  from urllib.request import urlopen\n+  from urllib.error import URLError", "path": "oauth2client/client.py", "position": 19, "original_position": 19, "commit_id": "7267c226603c36b2cf07b953ffb30297466b9ee8", "original_commit_id": "7267c226603c36b2cf07b953ffb30297466b9ee8", "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "body": "If you use six, why not use `six.moves`?\nhttps://pythonhosted.org/six/#module-six.moves\n", "created_at": "2014-08-12T06:30:07Z", "updated_at": "2014-08-12T06:30:07Z", "html_url": "https://github.com/google/oauth2client/pull/34#discussion_r16097432", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/34", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097432"}, "html": {"href": "https://github.com/google/oauth2client/pull/34#discussion_r16097432"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/34"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097487", "pull_request_review_id": null, "id": 16097487, "diff_hunk": "@@ -207,6 +216,9 @@ def _to_json(self, strip):\n     # Add in information we will need later to reconsistitue this instance.\n     d['_class'] = t.__name__\n     d['_module'] = t.__module__\n+    for key in d.keys():\n+      if isinstance(d[key], bytes):\n+          d[key] = bytes.decode(d[key])", "path": "oauth2client/client.py", "position": 52, "original_position": 52, "commit_id": "7267c226603c36b2cf07b953ffb30297466b9ee8", "original_commit_id": "7267c226603c36b2cf07b953ffb30297466b9ee8", "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "body": "Oh, don't mix 2-space indent and 4-space indent.\n", "created_at": "2014-08-12T06:31:57Z", "updated_at": "2014-08-12T06:31:57Z", "html_url": "https://github.com/google/oauth2client/pull/34#discussion_r16097487", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/34", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097487"}, "html": {"href": "https://github.com/google/oauth2client/pull/34#discussion_r16097487"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/34"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097476", "pull_request_review_id": null, "id": 16097476, "diff_hunk": "@@ -207,6 +216,9 @@ def _to_json(self, strip):\n     # Add in information we will need later to reconsistitue this instance.\n     d['_class'] = t.__name__\n     d['_module'] = t.__module__\n+    for key in d.keys():\n+      if isinstance(d[key], bytes):\n+          d[key] = bytes.decode(d[key])", "path": "oauth2client/client.py", "position": 52, "original_position": 52, "commit_id": "7267c226603c36b2cf07b953ffb30297466b9ee8", "original_commit_id": "7267c226603c36b2cf07b953ffb30297466b9ee8", "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "body": "``` python\nfor k, v in six.iteritems(d):\n    if isinstance(v, bytes):\n        d[k] = v.decode()\n```\n", "created_at": "2014-08-12T06:31:36Z", "updated_at": "2014-08-12T06:32:19Z", "html_url": "https://github.com/google/oauth2client/pull/34#discussion_r16097476", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/34", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097476"}, "html": {"href": "https://github.com/google/oauth2client/pull/34#discussion_r16097476"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/34"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097737", "pull_request_review_id": null, "id": 16097737, "diff_hunk": "@@ -98,7 +101,7 @@ def loads(s):\n \n def _loadfile(filename):\n   try:\n-    fp = file(filename, 'r')\n+    fp = open(filename, 'r')\n     try:\n       obj = simplejson.load(fp)\n     finally:", "path": "oauth2client/clientsecrets.py", "position": 29, "original_position": 29, "commit_id": "7267c226603c36b2cf07b953ffb30297466b9ee8", "original_commit_id": "7267c226603c36b2cf07b953ffb30297466b9ee8", "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "body": "Use `with` statement.\n", "created_at": "2014-08-12T06:42:14Z", "updated_at": "2014-08-12T06:42:14Z", "html_url": "https://github.com/google/oauth2client/pull/34#discussion_r16097737", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/34", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097737"}, "html": {"href": "https://github.com/google/oauth2client/pull/34#discussion_r16097737"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/34"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097754", "pull_request_review_id": null, "id": 16097754, "diff_hunk": "@@ -214,6 +233,10 @@ def sign(self, message):\n       Returns:\n         string, The signature of the message for the given key.\n       \"\"\"\n+      try:\n+        message = str.encode(message)", "path": "oauth2client/crypt.py", "position": 51, "original_position": 51, "commit_id": "7267c226603c36b2cf07b953ffb30297466b9ee8", "original_commit_id": "7267c226603c36b2cf07b953ffb30297466b9ee8", "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "body": "`message.encode()`\n", "created_at": "2014-08-12T06:43:17Z", "updated_at": "2014-08-12T06:43:17Z", "html_url": "https://github.com/google/oauth2client/pull/34#discussion_r16097754", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/34", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097754"}, "html": {"href": "https://github.com/google/oauth2client/pull/34#discussion_r16097754"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/34"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097762", "pull_request_review_id": null, "id": 16097762, "diff_hunk": "@@ -341,12 +369,21 @@ def verify_signed_jwt_with_certs(jwt, certs, audience):\n     raise AppIdentityError(\n       'Wrong number of segments in token: %s' % jwt)\n   signed = '%s.%s' % (segments[0], segments[1])\n+  try:\n+      signed_bytes = str.encode(signed)", "path": "oauth2client/crypt.py", "position": 91, "original_position": 91, "commit_id": "7267c226603c36b2cf07b953ffb30297466b9ee8", "original_commit_id": "7267c226603c36b2cf07b953ffb30297466b9ee8", "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "body": "`signed.encode()`\n", "created_at": "2014-08-12T06:43:32Z", "updated_at": "2014-08-12T06:43:32Z", "html_url": "https://github.com/google/oauth2client/pull/34#discussion_r16097762", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/34", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097762"}, "html": {"href": "https://github.com/google/oauth2client/pull/34#discussion_r16097762"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/34"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097775", "pull_request_review_id": null, "id": 16097775, "diff_hunk": "@@ -341,12 +369,21 @@ def verify_signed_jwt_with_certs(jwt, certs, audience):\n     raise AppIdentityError(\n       'Wrong number of segments in token: %s' % jwt)\n   signed = '%s.%s' % (segments[0], segments[1])\n+  try:\n+      signed_bytes = str.encode(signed)\n+  except TypeError:\n+      signed_bytes = None\n+  try:\n+      signed_str = str(signed)\n+  except TypeError:\n+      signed_str = None\n \n   signature = _urlsafe_b64decode(segments[2])\n \n   # Parse token.\n   json_body = _urlsafe_b64decode(segments[1])\n   try:\n+    json_body = bytes.decode(json_body)\n     parsed = simplejson.loads(json_body)", "path": "oauth2client/crypt.py", "position": 105, "original_position": 105, "commit_id": "7267c226603c36b2cf07b953ffb30297466b9ee8", "original_commit_id": "7267c226603c36b2cf07b953ffb30297466b9ee8", "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "body": "`json_body.decode()`\n", "created_at": "2014-08-12T06:43:58Z", "updated_at": "2014-08-12T06:43:58Z", "html_url": "https://github.com/google/oauth2client/pull/34#discussion_r16097775", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/34", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097775"}, "html": {"href": "https://github.com/google/oauth2client/pull/34#discussion_r16097775"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/34"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097816", "pull_request_review_id": null, "id": 16097816, "diff_hunk": "@@ -37,9 +37,12 @@\n from oauth2client import util\n \n try:\n-  from urlparse import parse_qsl\n+  from urllib.parse import parse_qsl\n except ImportError:\n-  from cgi import parse_qsl\n+  try:\n+    from urlparse import parse_qsl\n+  except ImportError:\n+    from cgi import parse_qsl", "path": "oauth2client/tools.py", "position": 11, "original_position": 11, "commit_id": "7267c226603c36b2cf07b953ffb30297466b9ee8", "original_commit_id": "7267c226603c36b2cf07b953ffb30297466b9ee8", "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "body": "Use `six.moves`\n", "created_at": "2014-08-12T06:45:18Z", "updated_at": "2014-08-12T06:45:18Z", "html_url": "https://github.com/google/oauth2client/pull/34#discussion_r16097816", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/34", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097816"}, "html": {"href": "https://github.com/google/oauth2client/pull/34#discussion_r16097816"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/34"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16097816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16354439", "pull_request_review_id": null, "id": 16354439, "diff_hunk": "@@ -84,26 +77,25 @@ class ClientRedirectHandler(BaseHTTPServer.BaseHTTPRequestHandler):\n   into the servers query_params and then stops serving.\n   \"\"\"\n \n-  def do_GET(s):\n+  def do_GET(self):\n     \"\"\"Handle a GET request.\n \n     Parses the query parameters and prints a message\n     if the flow has completed. Note that we can't detect\n     if an error occurred.\n     \"\"\"\n-    s.send_response(200)\n-    s.send_header(\"Content-type\", \"text/html\")\n-    s.end_headers()\n-    query = s.path.split('?', 1)[-1]\n-    query = dict(parse_qsl(query))\n-    s.server.query_params = query\n-    s.wfile.write(\"<html><head><title>Authentication Status</title></head>\")\n-    s.wfile.write(\"<body><p>The authentication flow has completed.</p>\")\n-    s.wfile.write(\"</body></html>\")\n+    self.send_response(200)\n+    self.send_header(\"Content-type\", \"text/html\")\n+    self.end_headers()\n+    query = self.path.split('?', 1)[-1]\n+    query = dict(urlparse.parse_qsl(query))\n+    self.server.query_params = query\n+    self.wfile.write(\"<html><head><title>Authentication Status</title></head>\")", "path": "oauth2client/tools.py", "position": 73, "original_position": 73, "commit_id": "b02156b372fa844693cab312ed2d1527c1b7aca7", "original_commit_id": "5ac159ef22651e1e112cc62b0d2a4790c3b6d10a", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "body": "\"\"\"<html>..... \"\"\" ?\n", "created_at": "2014-08-18T14:06:50Z", "updated_at": "2014-08-18T17:29:51Z", "html_url": "https://github.com/google/oauth2client/pull/37#discussion_r16354439", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/37", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/16354439"}, "html": {"href": "https://github.com/google/oauth2client/pull/37#discussion_r16354439"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/37"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16354439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16367320", "pull_request_review_id": null, "id": 16367320, "diff_hunk": "@@ -84,26 +77,25 @@ class ClientRedirectHandler(BaseHTTPServer.BaseHTTPRequestHandler):\n   into the servers query_params and then stops serving.\n   \"\"\"\n \n-  def do_GET(s):\n+  def do_GET(self):\n     \"\"\"Handle a GET request.\n \n     Parses the query parameters and prints a message\n     if the flow has completed. Note that we can't detect\n     if an error occurred.\n     \"\"\"\n-    s.send_response(200)\n-    s.send_header(\"Content-type\", \"text/html\")\n-    s.end_headers()\n-    query = s.path.split('?', 1)[-1]\n-    query = dict(parse_qsl(query))\n-    s.server.query_params = query\n-    s.wfile.write(\"<html><head><title>Authentication Status</title></head>\")\n-    s.wfile.write(\"<body><p>The authentication flow has completed.</p>\")\n-    s.wfile.write(\"</body></html>\")\n+    self.send_response(200)\n+    self.send_header(\"Content-type\", \"text/html\")\n+    self.end_headers()\n+    query = self.path.split('?', 1)[-1]\n+    query = dict(urlparse.parse_qsl(query))\n+    self.server.query_params = query\n+    self.wfile.write(\"<html><head><title>Authentication Status</title></head>\")", "path": "oauth2client/tools.py", "position": 73, "original_position": 73, "commit_id": "b02156b372fa844693cab312ed2d1527c1b7aca7", "original_commit_id": "5ac159ef22651e1e112cc62b0d2a4790c3b6d10a", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "i'm going to do some multiline string cleanup in a few places as a follow-on.\n", "created_at": "2014-08-18T17:14:05Z", "updated_at": "2014-08-18T17:29:51Z", "html_url": "https://github.com/google/oauth2client/pull/37#discussion_r16367320", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/37", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/16367320"}, "html": {"href": "https://github.com/google/oauth2client/pull/37#discussion_r16367320"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/37"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16367320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/17122908", "pull_request_review_id": null, "id": 17122908, "diff_hunk": "@@ -1874,9 +1873,11 @@ def flow_from_clientsecrets(filename, scope, redirect_uri=None,\n         constructor_kwargs['revoke_uri'] = revoke_uri\n       if device_uri is not None:\n         constructor_kwargs['device_uri'] = device_uri\n+      if not redirect_uri and len(client_info['redirect_uris']) > 0:\n+          redirect_uri = client_info['redirect_uris'][0]", "path": "oauth2client/client.py", "position": 13, "original_position": 13, "commit_id": "b1345dc37d86810a7385593bee7e4193476ca2f4", "original_commit_id": "b1345dc37d86810a7385593bee7e4193476ca2f4", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "it seems odd to only use the first `redirect_uri` here -- and in particular might lead to some confusing failure modes ... do we even know anything about the order they're returned?\n", "created_at": "2014-09-04T16:02:35Z", "updated_at": "2014-09-04T16:02:35Z", "html_url": "https://github.com/google/oauth2client/pull/48#discussion_r17122908", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/48", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/17122908"}, "html": {"href": "https://github.com/google/oauth2client/pull/48#discussion_r17122908"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/48"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/17122908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/17123046", "pull_request_review_id": null, "id": 17123046, "diff_hunk": "@@ -1874,9 +1873,11 @@ def flow_from_clientsecrets(filename, scope, redirect_uri=None,\n         constructor_kwargs['revoke_uri'] = revoke_uri\n       if device_uri is not None:\n         constructor_kwargs['device_uri'] = device_uri\n+      if not redirect_uri and len(client_info['redirect_uris']) > 0:\n+          redirect_uri = client_info['redirect_uris'][0]", "path": "oauth2client/client.py", "position": 13, "original_position": 13, "commit_id": "b1345dc37d86810a7385593bee7e4193476ca2f4", "original_commit_id": "b1345dc37d86810a7385593bee7e4193476ca2f4", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "also -- rather than passing it as an extra arg, might as well just do\n\n```\nconstructor_kwargs['redirect_uri'] = ...\n```\n", "created_at": "2014-09-04T16:04:39Z", "updated_at": "2014-09-04T16:04:39Z", "html_url": "https://github.com/google/oauth2client/pull/48#discussion_r17123046", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/48", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/17123046"}, "html": {"href": "https://github.com/google/oauth2client/pull/48#discussion_r17123046"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/48"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/17123046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/17132429", "pull_request_review_id": null, "id": 17132429, "diff_hunk": "@@ -1874,9 +1873,11 @@ def flow_from_clientsecrets(filename, scope, redirect_uri=None,\n         constructor_kwargs['revoke_uri'] = revoke_uri\n       if device_uri is not None:\n         constructor_kwargs['device_uri'] = device_uri\n+      if not redirect_uri and len(client_info['redirect_uris']) > 0:\n+          redirect_uri = client_info['redirect_uris'][0]", "path": "oauth2client/client.py", "position": 13, "original_position": 13, "commit_id": "b1345dc37d86810a7385593bee7e4193476ca2f4", "original_commit_id": "b1345dc37d86810a7385593bee7e4193476ca2f4", "user": {"login": "bitle", "id": 285793, "avatar_url": "https://avatars0.githubusercontent.com/u/285793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitle", "html_url": "https://github.com/bitle", "followers_url": "https://api.github.com/users/bitle/followers", "following_url": "https://api.github.com/users/bitle/following{/other_user}", "gists_url": "https://api.github.com/users/bitle/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitle/subscriptions", "organizations_url": "https://api.github.com/users/bitle/orgs", "repos_url": "https://api.github.com/users/bitle/repos", "events_url": "https://api.github.com/users/bitle/events{/privacy}", "received_events_url": "https://api.github.com/users/bitle/received_events", "type": "User", "site_admin": false}, "body": "Very valid comment!\nLooks like it's possible to define multiple redirect URIs in APIs project console. This may explain why one has to provide redirect_uri separately.\nURIs are returned in the same order they are defined in the API project console.\n\nI see a few possible ways to move forward:\n1. Close this work, since it may cause confusion\n2. Raise an exception if there is more than one redirect URIs and one needs to be provided explicitly\n3. Log a warning message that the first uri was used\n", "created_at": "2014-09-04T18:25:43Z", "updated_at": "2014-09-04T18:25:43Z", "html_url": "https://github.com/google/oauth2client/pull/48#discussion_r17132429", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/48", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/17132429"}, "html": {"href": "https://github.com/google/oauth2client/pull/48#discussion_r17132429"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/48"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/17132429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/17287778", "pull_request_review_id": null, "id": 17287778, "diff_hunk": "@@ -1874,9 +1873,11 @@ def flow_from_clientsecrets(filename, scope, redirect_uri=None,\n         constructor_kwargs['revoke_uri'] = revoke_uri\n       if device_uri is not None:\n         constructor_kwargs['device_uri'] = device_uri\n+      if not redirect_uri and len(client_info['redirect_uris']) > 0:\n+          redirect_uri = client_info['redirect_uris'][0]", "path": "oauth2client/client.py", "position": 13, "original_position": 13, "commit_id": "b1345dc37d86810a7385593bee7e4193476ca2f4", "original_commit_id": "b1345dc37d86810a7385593bee7e4193476ca2f4", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "i'm torn -- i really like the idea of not needing to type the `redirect_uri` in the case that there's exactly one, but i wonder if it just leads to too many error cases if things go wrong.\n\nif you're still energetic, i'd say it's worth at least playing with (2) and see how easy it is to add helpful/sensible errors.\n", "created_at": "2014-09-09T08:27:02Z", "updated_at": "2014-09-09T08:27:02Z", "html_url": "https://github.com/google/oauth2client/pull/48#discussion_r17287778", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/48", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/17287778"}, "html": {"href": "https://github.com/google/oauth2client/pull/48#discussion_r17287778"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/48"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/17287778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/17320761", "pull_request_review_id": null, "id": 17320761, "diff_hunk": "@@ -167,7 +168,10 @@ def verify(self, message, signature):\n         return PKCS1_v1_5.new(self._pubkey).verify(\n             SHA256.new(message), signature)\n       except:\n-        return False\n+        lsignature = long(signature.encode('hex'), 16)", "path": "oauth2client/crypt.py", "position": null, "original_position": 13, "commit_id": "a9dc16bbb8ba5572711a568221ad1960dc57c3e9", "original_commit_id": "070e0e0164314f1d5eb825cd4a17d4808114d461", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "let's move this out of the `except` clause.\n", "created_at": "2014-09-09T19:06:02Z", "updated_at": "2014-09-09T22:43:12Z", "html_url": "https://github.com/google/oauth2client/pull/51#discussion_r17320761", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/51", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/17320761"}, "html": {"href": "https://github.com/google/oauth2client/pull/51#discussion_r17320761"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/17320761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/17323002", "pull_request_review_id": null, "id": 17323002, "diff_hunk": "@@ -189,7 +189,7 @@ class PEMCryptTestsPyCrypto(CryptTests):\n   def setUp(self):\n     self.format = 'pem'\n     self.signer = crypt.PyCryptoSigner\n-    self.verifier = crypt.OpenSSLVerifier\n+    self.verifier = crypt.PyCryptoVerifier", "path": "tests/test_jwt.py", "position": 5, "original_position": 5, "commit_id": "a9dc16bbb8ba5572711a568221ad1960dc57c3e9", "original_commit_id": "070e0e0164314f1d5eb825cd4a17d4808114d461", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "body": "Does this mean that the previous cert types will not be tested? I'd think making this addition would be one or more _new_ tests, rather than changing an existing one.\n", "created_at": "2014-09-09T19:43:28Z", "updated_at": "2014-09-09T22:43:12Z", "html_url": "https://github.com/google/oauth2client/pull/51#discussion_r17323002", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/51", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/17323002"}, "html": {"href": "https://github.com/google/oauth2client/pull/51#discussion_r17323002"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/17323002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/17333249", "pull_request_review_id": null, "id": 17333249, "diff_hunk": "@@ -167,7 +168,10 @@ def verify(self, message, signature):\n         return PKCS1_v1_5.new(self._pubkey).verify(\n             SHA256.new(message), signature)\n       except:\n-        return False\n+        lsignature = long(signature.encode('hex'), 16)", "path": "oauth2client/crypt.py", "position": null, "original_position": 13, "commit_id": "a9dc16bbb8ba5572711a568221ad1960dc57c3e9", "original_commit_id": "070e0e0164314f1d5eb825cd4a17d4808114d461", "user": {"login": "liujin-google", "id": 8702079, "avatar_url": "https://avatars3.githubusercontent.com/u/8702079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liujin-google", "html_url": "https://github.com/liujin-google", "followers_url": "https://api.github.com/users/liujin-google/followers", "following_url": "https://api.github.com/users/liujin-google/following{/other_user}", "gists_url": "https://api.github.com/users/liujin-google/gists{/gist_id}", "starred_url": "https://api.github.com/users/liujin-google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liujin-google/subscriptions", "organizations_url": "https://api.github.com/users/liujin-google/orgs", "repos_url": "https://api.github.com/users/liujin-google/repos", "events_url": "https://api.github.com/users/liujin-google/events{/privacy}", "received_events_url": "https://api.github.com/users/liujin-google/received_events", "type": "User", "site_admin": false}, "body": "Reverted the changes here since the current PKCS1_v1_5 turns out working well.\n", "created_at": "2014-09-09T22:44:22Z", "updated_at": "2014-09-09T22:44:22Z", "html_url": "https://github.com/google/oauth2client/pull/51#discussion_r17333249", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/51", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/17333249"}, "html": {"href": "https://github.com/google/oauth2client/pull/51#discussion_r17333249"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/17333249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/17333582", "pull_request_review_id": null, "id": 17333582, "diff_hunk": "@@ -189,7 +189,7 @@ class PEMCryptTestsPyCrypto(CryptTests):\n   def setUp(self):\n     self.format = 'pem'\n     self.signer = crypt.PyCryptoSigner\n-    self.verifier = crypt.OpenSSLVerifier\n+    self.verifier = crypt.PyCryptoVerifier", "path": "tests/test_jwt.py", "position": 5, "original_position": 5, "commit_id": "a9dc16bbb8ba5572711a568221ad1960dc57c3e9", "original_commit_id": "070e0e0164314f1d5eb825cd4a17d4808114d461", "user": {"login": "liujin-google", "id": 8702079, "avatar_url": "https://avatars3.githubusercontent.com/u/8702079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liujin-google", "html_url": "https://github.com/liujin-google", "followers_url": "https://api.github.com/users/liujin-google/followers", "following_url": "https://api.github.com/users/liujin-google/following{/other_user}", "gists_url": "https://api.github.com/users/liujin-google/gists{/gist_id}", "starred_url": "https://api.github.com/users/liujin-google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liujin-google/subscriptions", "organizations_url": "https://api.github.com/users/liujin-google/orgs", "repos_url": "https://api.github.com/users/liujin-google/repos", "events_url": "https://api.github.com/users/liujin-google/events{/privacy}", "received_events_url": "https://api.github.com/users/liujin-google/received_events", "type": "User", "site_admin": false}, "body": "The previous openssl verifier is tested in PEMCryptTestsOpenSSL tests. The existing assignment of crypt.OpenSSLVerifier to PEMCryptTestsPyCrypto.verifier is just a workaround to avoid the \"X509 not supported\" exception in PyCryptoVerifier. With this patch, that workaround is no longer needed.\n", "created_at": "2014-09-09T22:53:05Z", "updated_at": "2014-09-09T22:53:05Z", "html_url": "https://github.com/google/oauth2client/pull/51#discussion_r17333582", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/51", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/17333582"}, "html": {"href": "https://github.com/google/oauth2client/pull/51#discussion_r17333582"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/51"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/17333582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/17410641", "pull_request_review_id": null, "id": 17410641, "diff_hunk": "@@ -1429,7 +1429,7 @@ def _urlsafe_b64decode(b64string):\n   # Guard against unicode strings, which base64 can't handle.\n   if isinstance(b64string, six.text_type):\n     b64string = b64string.encode('ascii')\n-  padded = b64string + '=' * (4 - len(b64string) % 4)\n+  padded = b64string + '='.encode('ascii') * (4 - len(b64string) % 4)", "path": "oauth2client/client.py", "position": null, "original_position": 5, "commit_id": "55a2525570ea1d41e88d708c09325a4fc64d2748", "original_commit_id": "28561445e2f1c0e39df1a42c68ee9c048899e904", "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "body": "`b'='`\n", "created_at": "2014-09-11T09:00:27Z", "updated_at": "2014-09-11T09:06:11Z", "html_url": "https://github.com/google/oauth2client/pull/52#discussion_r17410641", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/52", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/17410641"}, "html": {"href": "https://github.com/google/oauth2client/pull/52#discussion_r17410641"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/52"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/17410641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16927463", "pull_request_review_id": null, "id": 16927463, "diff_hunk": "@@ -127,7 +134,15 @@ def from_string(key, password='notasecret'):\n       if parsed_pem_key:\n         pkey = crypto.load_privatekey(crypto.FILETYPE_PEM, parsed_pem_key)\n       else:\n-        pkey = crypto.load_pkcs12(key, password.encode('utf8')).get_privatekey()\n+        # OpenSSL 0.13 needs password to be str\n+        # OpenSSL 0.14 needs password to be bytes\n+        password = str(password)", "path": "oauth2client/crypt.py", "position": null, "original_position": 36, "commit_id": "aa573ee851a63cf4b09642f9fe2d1a42d38b2a6d", "original_commit_id": "692a544949c875e74ab4c58410d9c23fad078c42", "user": {"login": "methane", "id": 199592, "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "body": "This code is bad because `str(b'xyz') == \"b'xyz'\"` on Python 3.\n@craigcitro Can I drop supporting PyOpenSSL<0.14?\n", "created_at": "2014-08-30T02:42:03Z", "updated_at": "2014-10-19T15:59:20Z", "html_url": "https://github.com/google/oauth2client/pull/43#discussion_r16927463", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/43", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/16927463"}, "html": {"href": "https://github.com/google/oauth2client/pull/43#discussion_r16927463"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/43"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/16927463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/19769894", "pull_request_review_id": null, "id": 19769894, "diff_hunk": "@@ -1836,15 +1836,16 @@ def step2_exchange(self, code=None, http=None, device_flow_info=None):\n         token_expiry = datetime.datetime.utcnow() + datetime.timedelta(\n             seconds=int(d['expires_in']))\n \n+      extracted_id_token = None\n       if 'id_token' in d:\n-        d['id_token'] = _extract_id_token(d['id_token'])\n+        extracted_id_token = _extract_id_token(d['id_token'])", "path": "oauth2client/client.py", "position": null, "original_position": 7, "commit_id": "657383485a6cbafbdf4257ed47fcdfab45ef4819", "original_commit_id": "73d9246ac16945d9db5c69e2f200eeebb67be867", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "this seems wise, but now i wonder: is anyone already depending on getting the extracted token back in the `token_response` field below?\n\nmaybe add it into the response as `d['extracted_id_token']`?\n", "created_at": "2014-11-03T21:59:48Z", "updated_at": "2014-11-04T09:09:12Z", "html_url": "https://github.com/google/oauth2client/pull/65#discussion_r19769894", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/65", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/19769894"}, "html": {"href": "https://github.com/google/oauth2client/pull/65#discussion_r19769894"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/65"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/19769894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/19789681", "pull_request_review_id": null, "id": 19789681, "diff_hunk": "@@ -1836,15 +1836,16 @@ def step2_exchange(self, code=None, http=None, device_flow_info=None):\n         token_expiry = datetime.datetime.utcnow() + datetime.timedelta(\n             seconds=int(d['expires_in']))\n \n+      extracted_id_token = None\n       if 'id_token' in d:\n-        d['id_token'] = _extract_id_token(d['id_token'])\n+        extracted_id_token = _extract_id_token(d['id_token'])", "path": "oauth2client/client.py", "position": null, "original_position": 7, "commit_id": "657383485a6cbafbdf4257ed47fcdfab45ef4819", "original_commit_id": "73d9246ac16945d9db5c69e2f200eeebb67be867", "user": {"login": "avivien", "id": 239073, "avatar_url": "https://avatars0.githubusercontent.com/u/239073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avivien", "html_url": "https://github.com/avivien", "followers_url": "https://api.github.com/users/avivien/followers", "following_url": "https://api.github.com/users/avivien/following{/other_user}", "gists_url": "https://api.github.com/users/avivien/gists{/gist_id}", "starred_url": "https://api.github.com/users/avivien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avivien/subscriptions", "organizations_url": "https://api.github.com/users/avivien/orgs", "repos_url": "https://api.github.com/users/avivien/repos", "events_url": "https://api.github.com/users/avivien/events{/privacy}", "received_events_url": "https://api.github.com/users/avivien/received_events", "type": "User", "site_admin": false}, "body": "Yes it's a good idea, I can do that, it will avoid any problems if someone uses the d['id_token'] as the extracted_id_token.\nDo you want I submit an other Pull request?\n", "created_at": "2014-11-04T08:16:45Z", "updated_at": "2014-11-04T09:09:12Z", "html_url": "https://github.com/google/oauth2client/pull/65#discussion_r19789681", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/65", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/19789681"}, "html": {"href": "https://github.com/google/oauth2client/pull/65#discussion_r19789681"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/65"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/19789681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/19790696", "pull_request_review_id": null, "id": 19790696, "diff_hunk": "@@ -1836,15 +1836,16 @@ def step2_exchange(self, code=None, http=None, device_flow_info=None):\n         token_expiry = datetime.datetime.utcnow() + datetime.timedelta(\n             seconds=int(d['expires_in']))\n \n+      extracted_id_token = None\n       if 'id_token' in d:\n-        d['id_token'] = _extract_id_token(d['id_token'])\n+        extracted_id_token = _extract_id_token(d['id_token'])", "path": "oauth2client/client.py", "position": null, "original_position": 7, "commit_id": "657383485a6cbafbdf4257ed47fcdfab45ef4819", "original_commit_id": "73d9246ac16945d9db5c69e2f200eeebb67be867", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "no need for a new one -- just push to the same branch and it'll show up as part of this PR.\n", "created_at": "2014-11-04T08:50:06Z", "updated_at": "2014-11-04T09:09:12Z", "html_url": "https://github.com/google/oauth2client/pull/65#discussion_r19790696", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/65", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/19790696"}, "html": {"href": "https://github.com/google/oauth2client/pull/65#discussion_r19790696"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/65"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/19790696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/19811942", "pull_request_review_id": null, "id": 19811942, "diff_hunk": "@@ -1836,15 +1836,16 @@ def step2_exchange(self, code=None, http=None, device_flow_info=None):\n         token_expiry = datetime.datetime.utcnow() + datetime.timedelta(\n             seconds=int(d['expires_in']))\n \n+      extracted_id_token = None\n       if 'id_token' in d:\n-        d['id_token'] = _extract_id_token(d['id_token'])\n+        extracted_id_token = _extract_id_token(d['id_token'])", "path": "oauth2client/client.py", "position": null, "original_position": 7, "commit_id": "657383485a6cbafbdf4257ed47fcdfab45ef4819", "original_commit_id": "73d9246ac16945d9db5c69e2f200eeebb67be867", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "body": "Regarding on repending on the old token_response value, if someone did that they were already in for a bad time. BOTH forms will appear in the serialized credential store, depending on whether or not a refresh has ever happened.\n", "created_at": "2014-11-04T15:58:53Z", "updated_at": "2014-11-04T15:58:53Z", "html_url": "https://github.com/google/oauth2client/pull/65#discussion_r19811942", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/65", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/19811942"}, "html": {"href": "https://github.com/google/oauth2client/pull/65#discussion_r19811942"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/65"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/19811942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/19812001", "pull_request_review_id": null, "id": 19812001, "diff_hunk": "@@ -1836,15 +1836,16 @@ def step2_exchange(self, code=None, http=None, device_flow_info=None):\n         token_expiry = datetime.datetime.utcnow() + datetime.timedelta(\n             seconds=int(d['expires_in']))\n \n+      extracted_id_token = None\n       if 'id_token' in d:\n-        d['id_token'] = _extract_id_token(d['id_token'])\n+        extracted_id_token = _extract_id_token(d['id_token'])", "path": "oauth2client/client.py", "position": null, "original_position": 7, "commit_id": "657383485a6cbafbdf4257ed47fcdfab45ef4819", "original_commit_id": "73d9246ac16945d9db5c69e2f200eeebb67be867", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "body": "I only know this because a few days ago I was trying to figure out why something unrelated wasn't refreshing properly, and seeing the mismatched token_response in the before/after for the credential store was a bit of a red herring.\n", "created_at": "2014-11-04T15:59:34Z", "updated_at": "2014-11-04T15:59:34Z", "html_url": "https://github.com/google/oauth2client/pull/65#discussion_r19812001", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/65", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/19812001"}, "html": {"href": "https://github.com/google/oauth2client/pull/65#discussion_r19812001"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/65"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/19812001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/19823525", "pull_request_review_id": null, "id": 19823525, "diff_hunk": "@@ -1836,15 +1836,16 @@ def step2_exchange(self, code=None, http=None, device_flow_info=None):\n         token_expiry = datetime.datetime.utcnow() + datetime.timedelta(\n             seconds=int(d['expires_in']))\n \n+      extracted_id_token = None\n       if 'id_token' in d:\n-        d['id_token'] = _extract_id_token(d['id_token'])\n+        extracted_id_token = _extract_id_token(d['id_token'])", "path": "oauth2client/client.py", "position": null, "original_position": 7, "commit_id": "657383485a6cbafbdf4257ed47fcdfab45ef4819", "original_commit_id": "73d9246ac16945d9db5c69e2f200eeebb67be867", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "ah, so are you saying we _shouldn't_ keep the un-extracted version at all?\n", "created_at": "2014-11-04T18:24:21Z", "updated_at": "2014-11-04T18:24:21Z", "html_url": "https://github.com/google/oauth2client/pull/65#discussion_r19823525", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/65", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/19823525"}, "html": {"href": "https://github.com/google/oauth2client/pull/65#discussion_r19823525"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/65"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/19823525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/19823680", "pull_request_review_id": null, "id": 19823680, "diff_hunk": "@@ -1836,15 +1836,16 @@ def step2_exchange(self, code=None, http=None, device_flow_info=None):\n         token_expiry = datetime.datetime.utcnow() + datetime.timedelta(\n             seconds=int(d['expires_in']))\n \n+      extracted_id_token = None\n       if 'id_token' in d:\n-        d['id_token'] = _extract_id_token(d['id_token'])\n+        extracted_id_token = _extract_id_token(d['id_token'])", "path": "oauth2client/client.py", "position": null, "original_position": 7, "commit_id": "657383485a6cbafbdf4257ed47fcdfab45ef4819", "original_commit_id": "73d9246ac16945d9db5c69e2f200eeebb67be867", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "body": "I'm saying that a field named \"token_response\" should always have the same structure. having some extra info there doesn't bother me, but it seems like limited utility and we might be able to safely omit it.\n", "created_at": "2014-11-04T18:26:18Z", "updated_at": "2014-11-04T18:26:18Z", "html_url": "https://github.com/google/oauth2client/pull/65#discussion_r19823680", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/65", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/19823680"}, "html": {"href": "https://github.com/google/oauth2client/pull/65#discussion_r19823680"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/65"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/19823680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/19824687", "pull_request_review_id": null, "id": 19824687, "diff_hunk": "@@ -1836,15 +1836,16 @@ def step2_exchange(self, code=None, http=None, device_flow_info=None):\n         token_expiry = datetime.datetime.utcnow() + datetime.timedelta(\n             seconds=int(d['expires_in']))\n \n+      extracted_id_token = None\n       if 'id_token' in d:\n-        d['id_token'] = _extract_id_token(d['id_token'])\n+        extracted_id_token = _extract_id_token(d['id_token'])", "path": "oauth2client/client.py", "position": null, "original_position": 7, "commit_id": "657383485a6cbafbdf4257ed47fcdfab45ef4819", "original_commit_id": "73d9246ac16945d9db5c69e2f200eeebb67be867", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "i think i'm more just being wary about throwing it away on the off chance that people are using it -- though, as you point out, it could be that people are shooting themselves in the foot with it. ;)\n\nlet's go ahead and drop it for now, and i'll add a note in the `CHANGELOG` (so that someone who was looking for the old value can pipe up if it breaks them).\n", "created_at": "2014-11-04T18:40:43Z", "updated_at": "2014-11-04T18:40:43Z", "html_url": "https://github.com/google/oauth2client/pull/65#discussion_r19824687", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/65", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/19824687"}, "html": {"href": "https://github.com/google/oauth2client/pull/65#discussion_r19824687"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/65"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/19824687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/19825086", "pull_request_review_id": null, "id": 19825086, "diff_hunk": "@@ -1836,15 +1836,16 @@ def step2_exchange(self, code=None, http=None, device_flow_info=None):\n         token_expiry = datetime.datetime.utcnow() + datetime.timedelta(\n             seconds=int(d['expires_in']))\n \n+      extracted_id_token = None\n       if 'id_token' in d:\n-        d['id_token'] = _extract_id_token(d['id_token'])\n+        extracted_id_token = _extract_id_token(d['id_token'])", "path": "oauth2client/client.py", "position": null, "original_position": 7, "commit_id": "657383485a6cbafbdf4257ed47fcdfab45ef4819", "original_commit_id": "73d9246ac16945d9db5c69e2f200eeebb67be867", "user": {"login": "avivien", "id": 239073, "avatar_url": "https://avatars0.githubusercontent.com/u/239073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avivien", "html_url": "https://github.com/avivien", "followers_url": "https://api.github.com/users/avivien/followers", "following_url": "https://api.github.com/users/avivien/following{/other_user}", "gists_url": "https://api.github.com/users/avivien/gists{/gist_id}", "starred_url": "https://api.github.com/users/avivien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avivien/subscriptions", "organizations_url": "https://api.github.com/users/avivien/orgs", "repos_url": "https://api.github.com/users/avivien/repos", "events_url": "https://api.github.com/users/avivien/events{/privacy}", "received_events_url": "https://api.github.com/users/avivien/received_events", "type": "User", "site_admin": false}, "body": "I agree with you John, and in my initial fix I didn't modify the \"token_response\" structure, I've just let the token id in its original format, because in the current code, the token id of the \"token_response\" is overwritten.\nAnd like I said in the Pull request comment, there is an utility, the OAuth un-extracted token id is needed for the Amazon AWS Web identity federation.\nhttp://docs.aws.amazon.com/STS/latest/UsingSTS/web-identity-federation.html\nMaybe there is a better way to do that?\n", "created_at": "2014-11-04T18:46:03Z", "updated_at": "2014-11-04T18:46:03Z", "html_url": "https://github.com/google/oauth2client/pull/65#discussion_r19825086", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/65", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/19825086"}, "html": {"href": "https://github.com/google/oauth2client/pull/65#discussion_r19825086"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/65"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/19825086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/20325272", "pull_request_review_id": null, "id": 20325272, "diff_hunk": "@@ -51,17 +50,25 @@\n # argparser is an ArgumentParser that contains command-line options expected\n # by tools.run(). Pass it in as part of the 'parents' argument to your own\n # ArgumentParser.\n-argparser = argparse.ArgumentParser(add_help=False)\n-argparser.add_argument('--auth_host_name', default='localhost',\n-                       help='Hostname when running a local web server.')\n-argparser.add_argument('--noauth_local_webserver', action='store_true',\n-                       default=False, help='Do not run a local web server.')\n-argparser.add_argument('--auth_host_port', default=[8080, 8090], type=int,\n-                       nargs='*', help='Port web server should listen on.')\n-argparser.add_argument('--logging_level', default='ERROR',\n-                       choices=['DEBUG', 'INFO', 'WARNING', 'ERROR',\n-                                'CRITICAL'],\n-                       help='Set the logging level of detail.')\n+argparser = _CreateArgumentParser()", "path": "oauth2client/tools.py", "position": 23, "original_position": 23, "commit_id": "94bbf43b428f40c4ae696f853fc2cd1873ae4305", "original_commit_id": "94bbf43b428f40c4ae696f853fc2cd1873ae4305", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "body": "oops :) need to assign this after the function is defined\n", "created_at": "2014-11-13T21:39:24Z", "updated_at": "2014-11-13T21:39:24Z", "html_url": "https://github.com/google/oauth2client/pull/71#discussion_r20325272", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/71", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/20325272"}, "html": {"href": "https://github.com/google/oauth2client/pull/71#discussion_r20325272"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/71"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/20325272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/20325515", "pull_request_review_id": null, "id": 20325515, "diff_hunk": "@@ -51,17 +50,25 @@\n # argparser is an ArgumentParser that contains command-line options expected\n # by tools.run(). Pass it in as part of the 'parents' argument to your own\n # ArgumentParser.\n-argparser = argparse.ArgumentParser(add_help=False)\n-argparser.add_argument('--auth_host_name', default='localhost',\n-                       help='Hostname when running a local web server.')\n-argparser.add_argument('--noauth_local_webserver', action='store_true',\n-                       default=False, help='Do not run a local web server.')\n-argparser.add_argument('--auth_host_port', default=[8080, 8090], type=int,\n-                       nargs='*', help='Port web server should listen on.')\n-argparser.add_argument('--logging_level', default='ERROR',\n-                       choices=['DEBUG', 'INFO', 'WARNING', 'ERROR',\n-                                'CRITICAL'],\n-                       help='Set the logging level of detail.')\n+argparser = _CreateArgumentParser()", "path": "oauth2client/tools.py", "position": 23, "original_position": 23, "commit_id": "94bbf43b428f40c4ae696f853fc2cd1873ae4305", "original_commit_id": "94bbf43b428f40c4ae696f853fc2cd1873ae4305", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "... something tells me we also need more tests.\n", "created_at": "2014-11-13T21:42:32Z", "updated_at": "2014-11-13T21:42:32Z", "html_url": "https://github.com/google/oauth2client/pull/71#discussion_r20325515", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/71", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/20325515"}, "html": {"href": "https://github.com/google/oauth2client/pull/71#discussion_r20325515"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/71"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/20325515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21395513", "pull_request_review_id": null, "id": 21395513, "diff_hunk": "@@ -952,37 +972,19 @@ class GoogleCredentials(OAuth2Credentials):\n   Here is an example of how to use the Application Default Credentials for a\n   service that requires authentication:\n \n-  <code>", "path": "oauth2client/client.py", "position": 86, "original_position": 86, "commit_id": "a43fe58378e2784dc290c82627abc9c5200a175f", "original_commit_id": "a43fe58378e2784dc290c82627abc9c5200a175f", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "oh -- were these `<code>` tags in there for epydoc? (_sigh_ epydoc)\n", "created_at": "2014-12-05T19:52:28Z", "updated_at": "2014-12-05T19:52:28Z", "html_url": "https://github.com/google/oauth2client/pull/83#discussion_r21395513", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/83", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/21395513"}, "html": {"href": "https://github.com/google/oauth2client/pull/83#discussion_r21395513"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/83"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21395513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21395531", "pull_request_review_id": null, "id": 21395531, "diff_hunk": "@@ -952,37 +972,19 @@ class GoogleCredentials(OAuth2Credentials):\n   Here is an example of how to use the Application Default Credentials for a\n   service that requires authentication:\n \n-  <code>\n-  from __future__ import print_function  # unnecessary in python3\n-  from googleapiclient.discovery import build\n-  from oauth2client.client import GoogleCredentials\n-\n-  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n-  ZONE = 'us-central1-a'          # replace this with the zone you care about\n-\n-  credentials = GoogleCredentials.get_application_default()\n-  service = build('compute', 'v1', credentials=credentials)\n+      from googleapiclient.discovery import build\n+      from oauth2client.client import GoogleCredentials\n \n-  request = service.instances().list(project=PROJECT, zone=ZONE)\n-  response = request.execute()\n+      credentials = GoogleCredentials.get_application_default()\n+      service = build('compute', 'v1', credentials=credentials)\n \n-  print(response)\n-  </code>\n+      PROJECT = 'bamboo-machine-422'\n+      ZONE = 'us-central1-a'\n+      request = service.instances().list(project=PROJECT, zone=ZONE)\n+      response = request.execute()\n \n-  A service that does not require authentication does not need credentials", "path": "oauth2client/client.py", "position": 111, "original_position": 111, "commit_id": "a43fe58378e2784dc290c82627abc9c5200a175f", "original_commit_id": "a43fe58378e2784dc290c82627abc9c5200a175f", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "any reason not to keep this one?\n", "created_at": "2014-12-05T19:52:43Z", "updated_at": "2014-12-05T19:52:43Z", "html_url": "https://github.com/google/oauth2client/pull/83#discussion_r21395531", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/83", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/21395531"}, "html": {"href": "https://github.com/google/oauth2client/pull/83#discussion_r21395531"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/83"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21395531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21396059", "pull_request_review_id": null, "id": 21396059, "diff_hunk": "@@ -952,37 +972,19 @@ class GoogleCredentials(OAuth2Credentials):\n   Here is an example of how to use the Application Default Credentials for a\n   service that requires authentication:\n \n-  <code>\n-  from __future__ import print_function  # unnecessary in python3\n-  from googleapiclient.discovery import build\n-  from oauth2client.client import GoogleCredentials\n-\n-  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n-  ZONE = 'us-central1-a'          # replace this with the zone you care about\n-\n-  credentials = GoogleCredentials.get_application_default()\n-  service = build('compute', 'v1', credentials=credentials)\n+      from googleapiclient.discovery import build\n+      from oauth2client.client import GoogleCredentials\n \n-  request = service.instances().list(project=PROJECT, zone=ZONE)\n-  response = request.execute()\n+      credentials = GoogleCredentials.get_application_default()\n+      service = build('compute', 'v1', credentials=credentials)\n \n-  print(response)\n-  </code>\n+      PROJECT = 'bamboo-machine-422'\n+      ZONE = 'us-central1-a'\n+      request = service.instances().list(project=PROJECT, zone=ZONE)\n+      response = request.execute()\n \n-  A service that does not require authentication does not need credentials", "path": "oauth2client/client.py", "position": 111, "original_position": 111, "commit_id": "a43fe58378e2784dc290c82627abc9c5200a175f", "original_commit_id": "a43fe58378e2784dc290c82627abc9c5200a175f", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "Yes. It is in a credentials class, so discussing a service that doesn't require credentials is off-topic.\n", "created_at": "2014-12-05T20:00:06Z", "updated_at": "2014-12-05T20:00:06Z", "html_url": "https://github.com/google/oauth2client/pull/83#discussion_r21396059", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/83", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/21396059"}, "html": {"href": "https://github.com/google/oauth2client/pull/83#discussion_r21396059"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/83"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21396059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21396089", "pull_request_review_id": null, "id": 21396089, "diff_hunk": "@@ -952,37 +972,19 @@ class GoogleCredentials(OAuth2Credentials):\n   Here is an example of how to use the Application Default Credentials for a\n   service that requires authentication:\n \n-  <code>", "path": "oauth2client/client.py", "position": 86, "original_position": 86, "commit_id": "a43fe58378e2784dc290c82627abc9c5200a175f", "original_commit_id": "a43fe58378e2784dc290c82627abc9c5200a175f", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "I don't know anything about epydoc, so it's unclear. I hope not.\n", "created_at": "2014-12-05T20:00:30Z", "updated_at": "2014-12-05T20:00:30Z", "html_url": "https://github.com/google/oauth2client/pull/83#discussion_r21396089", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/83", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/21396089"}, "html": {"href": "https://github.com/google/oauth2client/pull/83#discussion_r21396089"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/83"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21396089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21396141", "pull_request_review_id": null, "id": 21396141, "diff_hunk": "@@ -952,37 +972,19 @@ class GoogleCredentials(OAuth2Credentials):\n   Here is an example of how to use the Application Default Credentials for a\n   service that requires authentication:\n \n-  <code>", "path": "oauth2client/client.py", "position": 86, "original_position": 86, "commit_id": "a43fe58378e2784dc290c82627abc9c5200a175f", "original_commit_id": "a43fe58378e2784dc290c82627abc9c5200a175f", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "can you try a quick `make docs` and see how they look?\n", "created_at": "2014-12-05T20:01:25Z", "updated_at": "2014-12-05T20:01:25Z", "html_url": "https://github.com/google/oauth2client/pull/83#discussion_r21396141", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/83", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/21396141"}, "html": {"href": "https://github.com/google/oauth2client/pull/83#discussion_r21396141"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/83"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21396141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21396149", "pull_request_review_id": null, "id": 21396149, "diff_hunk": "@@ -952,37 +972,19 @@ class GoogleCredentials(OAuth2Credentials):\n   Here is an example of how to use the Application Default Credentials for a\n   service that requires authentication:\n \n-  <code>\n-  from __future__ import print_function  # unnecessary in python3\n-  from googleapiclient.discovery import build\n-  from oauth2client.client import GoogleCredentials\n-\n-  PROJECT = 'bamboo-machine-422'  # replace this with one of your projects\n-  ZONE = 'us-central1-a'          # replace this with the zone you care about\n-\n-  credentials = GoogleCredentials.get_application_default()\n-  service = build('compute', 'v1', credentials=credentials)\n+      from googleapiclient.discovery import build\n+      from oauth2client.client import GoogleCredentials\n \n-  request = service.instances().list(project=PROJECT, zone=ZONE)\n-  response = request.execute()\n+      credentials = GoogleCredentials.get_application_default()\n+      service = build('compute', 'v1', credentials=credentials)\n \n-  print(response)\n-  </code>\n+      PROJECT = 'bamboo-machine-422'\n+      ZONE = 'us-central1-a'\n+      request = service.instances().list(project=PROJECT, zone=ZONE)\n+      response = request.execute()\n \n-  A service that does not require authentication does not need credentials", "path": "oauth2client/client.py", "position": 111, "original_position": 111, "commit_id": "a43fe58378e2784dc290c82627abc9c5200a175f", "original_commit_id": "a43fe58378e2784dc290c82627abc9c5200a175f", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "s'fair.\n", "created_at": "2014-12-05T20:01:30Z", "updated_at": "2014-12-05T20:01:30Z", "html_url": "https://github.com/google/oauth2client/pull/83#discussion_r21396149", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/83", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/21396149"}, "html": {"href": "https://github.com/google/oauth2client/pull/83#discussion_r21396149"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/83"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21396149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21396448", "pull_request_review_id": null, "id": 21396448, "diff_hunk": "@@ -952,37 +972,19 @@ class GoogleCredentials(OAuth2Credentials):\n   Here is an example of how to use the Application Default Credentials for a\n   service that requires authentication:\n \n-  <code>", "path": "oauth2client/client.py", "position": 86, "original_position": 86, "commit_id": "a43fe58378e2784dc290c82627abc9c5200a175f", "original_commit_id": "a43fe58378e2784dc290c82627abc9c5200a175f", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "http://google.github.io/oauth2client/doc/oauth2client.client.GoogleCredentials-class.html\nis the place it gets spit out and it puts the code block in a `<pre>` tag, which is a literal environment, so the tag does nothing (as you can see).\n\nOn re-build, the content is still in a `<pre>` environment.\n", "created_at": "2014-12-05T20:06:33Z", "updated_at": "2014-12-05T20:06:33Z", "html_url": "https://github.com/google/oauth2client/pull/83#discussion_r21396448", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/83", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/21396448"}, "html": {"href": "https://github.com/google/oauth2client/pull/83#discussion_r21396448"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/83"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21396448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21397827", "pull_request_review_id": null, "id": 21397827, "diff_hunk": "@@ -1037,49 +1037,123 @@ def serialization_data(self):\n     }\n \n   @staticmethod\n-  def get_application_default():\n-    \"\"\"Get the Application Default Credentials for the current environment.\n+  def _implicit_credentials_from_gae(env_name=None):\n+    \"\"\"Attempts to get implicit credentials in Google App Engine env.\n \n-    Exceptions:\n-      ApplicationDefaultCredentialsError: raised when the credentials fail\n-                                          to be retrieved.\n+    If the current environment is not detected as App Engine, returns None,\n+    indicating no Google App Engine credentials can be detected from the\n+    current environment.\n+\n+    Args:\n+        env_name: String, indicating current environment.\n+\n+    Returns:\n+        None, if not in GAE, else an appengine.AppAssertionCredentials object.\n     \"\"\"\n+    env_name = env_name or _get_environment()\n+    if env_name not in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return None\n \n-    env_name = _get_environment()\n+    return _get_application_default_credential_GAE()\n \n-    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n-      # if we are running inside Google App Engine\n-      # there is no need to look for credentials in local files\n-      application_default_credential_filename = None\n-      well_known_file = None\n-    else:\n-      application_default_credential_filename = _get_environment_variable_file()\n-      well_known_file = _get_well_known_file()\n-      if not os.path.isfile(well_known_file):\n-        well_known_file = None\n+  @staticmethod\n+  def _implicit_credentials_from_gce(env_name=None):\n+    \"\"\"Attempts to get implicit credentials in Google Compute Engine env.\n \n-    if application_default_credential_filename:\n-      try:\n-        return _get_application_default_credential_from_file(\n-            application_default_credential_filename)\n-      except (ApplicationDefaultCredentialsError, ValueError) as error:\n-        extra_help = (' (pointed to by ' + GOOGLE_APPLICATION_CREDENTIALS +\n-                      ' environment variable)')\n-        _raise_exception_for_reading_json(\n-            application_default_credential_filename, extra_help, error)\n-    elif well_known_file:\n-      try:\n-        return _get_application_default_credential_from_file(well_known_file)\n-      except (ApplicationDefaultCredentialsError, ValueError) as error:\n+    If the current environment is not detected as Compute Engine, returns None,\n+    indicating no Google Compute Engine credentials can be detected from the\n+    current environment.\n+\n+    Args:\n+        env_name: String, indicating current environment.\n+\n+    Returns:\n+        None, if not in GCE, else a gce.AppAssertionCredentials object.\n+    \"\"\"\n+    env_name = env_name or _get_environment()\n+    if env_name != 'GCE_PRODUCTION':\n+      return None\n+\n+    return _get_application_default_credential_GCE()\n+\n+  @staticmethod\n+  def _implicit_credentials_from_files(env_name=None):\n+    \"\"\"Attempts to get implicit credentials from local credential files.\n+\n+    First checks if the environment variable GOOGLE_APPLICATION_CREDENTIALS\n+    is set with a filename and then falls back to a configuration file (the\n+    \"well known\" file) associated with the 'gcloud' command line tool.\n+\n+    Args:\n+        env_name: Unused argument.\n+\n+    Returns:\n+        Credentials object associated with the GOOGLE_APPLICATION_CREDENTIALS\n+            file or the \"well known\" file if either exist. If neither file is\n+            define, returns None, indicating no credentials from a file can\n+            detected from the current environment.\n+    \"\"\"\n+    credentials_filename = _get_environment_variable_file()\n+    if not credentials_filename:\n+      credentials_filename = _get_well_known_file()\n+      if os.path.isfile(credentials_filename):\n         extra_help = (' (produced automatically when running'\n                       ' \"gcloud auth login\" command)')\n-        _raise_exception_for_reading_json(well_known_file, extra_help, error)\n-    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n-      return _get_application_default_credential_GAE()\n-    elif env_name == 'GCE_PRODUCTION':\n-      return _get_application_default_credential_GCE()\n+      else:\n+        credentials_filename = None\n     else:\n-      raise ApplicationDefaultCredentialsError(ADC_HELP_MSG)\n+      extra_help = (' (pointed to by ' + GOOGLE_APPLICATION_CREDENTIALS +\n+                    ' environment variable)')\n+\n+    if not credentials_filename:\n+      return\n+\n+    try:\n+      return _get_application_default_credential_from_file(credentials_filename)\n+    except (ApplicationDefaultCredentialsError, ValueError) as error:\n+      _raise_exception_for_reading_json(credentials_filename, extra_help, error)\n+\n+  def _get_implicit_credentials():", "path": "oauth2client/client.py", "position": 115, "original_position": 115, "commit_id": "3953ca51a4772e827ce3a5163839a4807262cd44", "original_commit_id": "3953ca51a4772e827ce3a5163839a4807262cd44", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "why does this need to be a separate function?\n", "created_at": "2014-12-05T20:27:10Z", "updated_at": "2014-12-05T20:27:10Z", "html_url": "https://github.com/google/oauth2client/pull/84#discussion_r21397827", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/84", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/21397827"}, "html": {"href": "https://github.com/google/oauth2client/pull/84#discussion_r21397827"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/84"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21397827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21397900", "pull_request_review_id": null, "id": 21397900, "diff_hunk": "@@ -1037,49 +1037,123 @@ def serialization_data(self):\n     }\n \n   @staticmethod\n-  def get_application_default():\n-    \"\"\"Get the Application Default Credentials for the current environment.\n+  def _implicit_credentials_from_gae(env_name=None):\n+    \"\"\"Attempts to get implicit credentials in Google App Engine env.\n \n-    Exceptions:\n-      ApplicationDefaultCredentialsError: raised when the credentials fail\n-                                          to be retrieved.\n+    If the current environment is not detected as App Engine, returns None,\n+    indicating no Google App Engine credentials can be detected from the\n+    current environment.\n+\n+    Args:\n+        env_name: String, indicating current environment.\n+\n+    Returns:\n+        None, if not in GAE, else an appengine.AppAssertionCredentials object.\n     \"\"\"\n+    env_name = env_name or _get_environment()\n+    if env_name not in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return None\n \n-    env_name = _get_environment()\n+    return _get_application_default_credential_GAE()\n \n-    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n-      # if we are running inside Google App Engine\n-      # there is no need to look for credentials in local files\n-      application_default_credential_filename = None\n-      well_known_file = None\n-    else:\n-      application_default_credential_filename = _get_environment_variable_file()\n-      well_known_file = _get_well_known_file()\n-      if not os.path.isfile(well_known_file):\n-        well_known_file = None\n+  @staticmethod\n+  def _implicit_credentials_from_gce(env_name=None):\n+    \"\"\"Attempts to get implicit credentials in Google Compute Engine env.\n \n-    if application_default_credential_filename:\n-      try:\n-        return _get_application_default_credential_from_file(\n-            application_default_credential_filename)\n-      except (ApplicationDefaultCredentialsError, ValueError) as error:\n-        extra_help = (' (pointed to by ' + GOOGLE_APPLICATION_CREDENTIALS +\n-                      ' environment variable)')\n-        _raise_exception_for_reading_json(\n-            application_default_credential_filename, extra_help, error)\n-    elif well_known_file:\n-      try:\n-        return _get_application_default_credential_from_file(well_known_file)\n-      except (ApplicationDefaultCredentialsError, ValueError) as error:\n+    If the current environment is not detected as Compute Engine, returns None,\n+    indicating no Google Compute Engine credentials can be detected from the\n+    current environment.\n+\n+    Args:\n+        env_name: String, indicating current environment.\n+\n+    Returns:\n+        None, if not in GCE, else a gce.AppAssertionCredentials object.\n+    \"\"\"\n+    env_name = env_name or _get_environment()\n+    if env_name != 'GCE_PRODUCTION':\n+      return None\n+\n+    return _get_application_default_credential_GCE()\n+\n+  @staticmethod\n+  def _implicit_credentials_from_files(env_name=None):\n+    \"\"\"Attempts to get implicit credentials from local credential files.\n+\n+    First checks if the environment variable GOOGLE_APPLICATION_CREDENTIALS\n+    is set with a filename and then falls back to a configuration file (the\n+    \"well known\" file) associated with the 'gcloud' command line tool.\n+\n+    Args:\n+        env_name: Unused argument.\n+\n+    Returns:\n+        Credentials object associated with the GOOGLE_APPLICATION_CREDENTIALS\n+            file or the \"well known\" file if either exist. If neither file is\n+            define, returns None, indicating no credentials from a file can\n+            detected from the current environment.\n+    \"\"\"\n+    credentials_filename = _get_environment_variable_file()\n+    if not credentials_filename:\n+      credentials_filename = _get_well_known_file()\n+      if os.path.isfile(credentials_filename):\n         extra_help = (' (produced automatically when running'\n                       ' \"gcloud auth login\" command)')\n-        _raise_exception_for_reading_json(well_known_file, extra_help, error)\n-    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n-      return _get_application_default_credential_GAE()\n-    elif env_name == 'GCE_PRODUCTION':\n-      return _get_application_default_credential_GCE()\n+      else:\n+        credentials_filename = None\n     else:\n-      raise ApplicationDefaultCredentialsError(ADC_HELP_MSG)\n+      extra_help = (' (pointed to by ' + GOOGLE_APPLICATION_CREDENTIALS +\n+                    ' environment variable)')\n+\n+    if not credentials_filename:\n+      return\n+\n+    try:\n+      return _get_application_default_credential_from_file(credentials_filename)\n+    except (ApplicationDefaultCredentialsError, ValueError) as error:\n+      _raise_exception_for_reading_json(credentials_filename, extra_help, error)\n+\n+  def _get_implicit_credentials():", "path": "oauth2client/client.py", "position": 115, "original_position": 115, "commit_id": "3953ca51a4772e827ce3a5163839a4807262cd44", "original_commit_id": "3953ca51a4772e827ce3a5163839a4807262cd44", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "Good point. More future creep.\n\nHowever, I think it's fine as-is since the plan is to add the 3LO extensibility in to `_get_implicit_credentials` as an optional code path.\n", "created_at": "2014-12-05T20:28:31Z", "updated_at": "2014-12-05T20:28:31Z", "html_url": "https://github.com/google/oauth2client/pull/84#discussion_r21397900", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/84", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/21397900"}, "html": {"href": "https://github.com/google/oauth2client/pull/84#discussion_r21397900"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/84"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21397900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21398434", "pull_request_review_id": null, "id": 21398434, "diff_hunk": "@@ -1037,49 +1037,123 @@ def serialization_data(self):\n     }\n \n   @staticmethod\n-  def get_application_default():\n-    \"\"\"Get the Application Default Credentials for the current environment.\n+  def _implicit_credentials_from_gae(env_name=None):\n+    \"\"\"Attempts to get implicit credentials in Google App Engine env.\n \n-    Exceptions:\n-      ApplicationDefaultCredentialsError: raised when the credentials fail\n-                                          to be retrieved.\n+    If the current environment is not detected as App Engine, returns None,\n+    indicating no Google App Engine credentials can be detected from the\n+    current environment.\n+\n+    Args:\n+        env_name: String, indicating current environment.\n+\n+    Returns:\n+        None, if not in GAE, else an appengine.AppAssertionCredentials object.\n     \"\"\"\n+    env_name = env_name or _get_environment()\n+    if env_name not in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return None\n \n-    env_name = _get_environment()\n+    return _get_application_default_credential_GAE()\n \n-    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n-      # if we are running inside Google App Engine\n-      # there is no need to look for credentials in local files\n-      application_default_credential_filename = None\n-      well_known_file = None\n-    else:\n-      application_default_credential_filename = _get_environment_variable_file()\n-      well_known_file = _get_well_known_file()\n-      if not os.path.isfile(well_known_file):\n-        well_known_file = None\n+  @staticmethod\n+  def _implicit_credentials_from_gce(env_name=None):\n+    \"\"\"Attempts to get implicit credentials in Google Compute Engine env.\n \n-    if application_default_credential_filename:\n-      try:\n-        return _get_application_default_credential_from_file(\n-            application_default_credential_filename)\n-      except (ApplicationDefaultCredentialsError, ValueError) as error:\n-        extra_help = (' (pointed to by ' + GOOGLE_APPLICATION_CREDENTIALS +\n-                      ' environment variable)')\n-        _raise_exception_for_reading_json(\n-            application_default_credential_filename, extra_help, error)\n-    elif well_known_file:\n-      try:\n-        return _get_application_default_credential_from_file(well_known_file)\n-      except (ApplicationDefaultCredentialsError, ValueError) as error:\n+    If the current environment is not detected as Compute Engine, returns None,\n+    indicating no Google Compute Engine credentials can be detected from the\n+    current environment.\n+\n+    Args:\n+        env_name: String, indicating current environment.\n+\n+    Returns:\n+        None, if not in GCE, else a gce.AppAssertionCredentials object.\n+    \"\"\"\n+    env_name = env_name or _get_environment()\n+    if env_name != 'GCE_PRODUCTION':\n+      return None\n+\n+    return _get_application_default_credential_GCE()\n+\n+  @staticmethod\n+  def _implicit_credentials_from_files(env_name=None):\n+    \"\"\"Attempts to get implicit credentials from local credential files.\n+\n+    First checks if the environment variable GOOGLE_APPLICATION_CREDENTIALS\n+    is set with a filename and then falls back to a configuration file (the\n+    \"well known\" file) associated with the 'gcloud' command line tool.\n+\n+    Args:\n+        env_name: Unused argument.\n+\n+    Returns:\n+        Credentials object associated with the GOOGLE_APPLICATION_CREDENTIALS\n+            file or the \"well known\" file if either exist. If neither file is\n+            define, returns None, indicating no credentials from a file can\n+            detected from the current environment.\n+    \"\"\"\n+    credentials_filename = _get_environment_variable_file()\n+    if not credentials_filename:\n+      credentials_filename = _get_well_known_file()\n+      if os.path.isfile(credentials_filename):\n         extra_help = (' (produced automatically when running'\n                       ' \"gcloud auth login\" command)')\n-        _raise_exception_for_reading_json(well_known_file, extra_help, error)\n-    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n-      return _get_application_default_credential_GAE()\n-    elif env_name == 'GCE_PRODUCTION':\n-      return _get_application_default_credential_GCE()\n+      else:\n+        credentials_filename = None\n     else:\n-      raise ApplicationDefaultCredentialsError(ADC_HELP_MSG)\n+      extra_help = (' (pointed to by ' + GOOGLE_APPLICATION_CREDENTIALS +\n+                    ' environment variable)')\n+\n+    if not credentials_filename:\n+      return\n+\n+    try:\n+      return _get_application_default_credential_from_file(credentials_filename)\n+    except (ApplicationDefaultCredentialsError, ValueError) as error:\n+      _raise_exception_for_reading_json(credentials_filename, extra_help, error)\n+\n+  def _get_implicit_credentials():", "path": "oauth2client/client.py", "position": 115, "original_position": 115, "commit_id": "3953ca51a4772e827ce3a5163839a4807262cd44", "original_commit_id": "3953ca51a4772e827ce3a5163839a4807262cd44", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "i'm happy with cleaning up/refactoring the logic here.\n\ni guess i'm confused about where we want this to go -- i thought we wanted to add a new function that amounted to\n\n```\ncreds = GoogleCredentials.get_application_default()\nif creds is None:\n  # try 3LO\nraise NoCreds(\"can't get any credentials\")\n```\n\ni don't know why we need to refactor this to do that?\n\ni can see one good argument, namely that my first call above will `raise` right now. but that doesn't seem to be what we're fixing here.\n", "created_at": "2014-12-05T20:37:08Z", "updated_at": "2014-12-05T20:37:08Z", "html_url": "https://github.com/google/oauth2client/pull/84#discussion_r21398434", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/84", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/21398434"}, "html": {"href": "https://github.com/google/oauth2client/pull/84#discussion_r21398434"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/84"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21398434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21402643", "pull_request_review_id": null, "id": 21402643, "diff_hunk": "@@ -1037,49 +1037,123 @@ def serialization_data(self):\n     }\n \n   @staticmethod\n-  def get_application_default():\n-    \"\"\"Get the Application Default Credentials for the current environment.\n+  def _implicit_credentials_from_gae(env_name=None):\n+    \"\"\"Attempts to get implicit credentials in Google App Engine env.\n \n-    Exceptions:\n-      ApplicationDefaultCredentialsError: raised when the credentials fail\n-                                          to be retrieved.\n+    If the current environment is not detected as App Engine, returns None,\n+    indicating no Google App Engine credentials can be detected from the\n+    current environment.\n+\n+    Args:\n+        env_name: String, indicating current environment.\n+\n+    Returns:\n+        None, if not in GAE, else an appengine.AppAssertionCredentials object.\n     \"\"\"\n+    env_name = env_name or _get_environment()\n+    if env_name not in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n+      return None\n \n-    env_name = _get_environment()\n+    return _get_application_default_credential_GAE()\n \n-    if env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n-      # if we are running inside Google App Engine\n-      # there is no need to look for credentials in local files\n-      application_default_credential_filename = None\n-      well_known_file = None\n-    else:\n-      application_default_credential_filename = _get_environment_variable_file()\n-      well_known_file = _get_well_known_file()\n-      if not os.path.isfile(well_known_file):\n-        well_known_file = None\n+  @staticmethod\n+  def _implicit_credentials_from_gce(env_name=None):\n+    \"\"\"Attempts to get implicit credentials in Google Compute Engine env.\n \n-    if application_default_credential_filename:\n-      try:\n-        return _get_application_default_credential_from_file(\n-            application_default_credential_filename)\n-      except (ApplicationDefaultCredentialsError, ValueError) as error:\n-        extra_help = (' (pointed to by ' + GOOGLE_APPLICATION_CREDENTIALS +\n-                      ' environment variable)')\n-        _raise_exception_for_reading_json(\n-            application_default_credential_filename, extra_help, error)\n-    elif well_known_file:\n-      try:\n-        return _get_application_default_credential_from_file(well_known_file)\n-      except (ApplicationDefaultCredentialsError, ValueError) as error:\n+    If the current environment is not detected as Compute Engine, returns None,\n+    indicating no Google Compute Engine credentials can be detected from the\n+    current environment.\n+\n+    Args:\n+        env_name: String, indicating current environment.\n+\n+    Returns:\n+        None, if not in GCE, else a gce.AppAssertionCredentials object.\n+    \"\"\"\n+    env_name = env_name or _get_environment()\n+    if env_name != 'GCE_PRODUCTION':\n+      return None\n+\n+    return _get_application_default_credential_GCE()\n+\n+  @staticmethod\n+  def _implicit_credentials_from_files(env_name=None):\n+    \"\"\"Attempts to get implicit credentials from local credential files.\n+\n+    First checks if the environment variable GOOGLE_APPLICATION_CREDENTIALS\n+    is set with a filename and then falls back to a configuration file (the\n+    \"well known\" file) associated with the 'gcloud' command line tool.\n+\n+    Args:\n+        env_name: Unused argument.\n+\n+    Returns:\n+        Credentials object associated with the GOOGLE_APPLICATION_CREDENTIALS\n+            file or the \"well known\" file if either exist. If neither file is\n+            define, returns None, indicating no credentials from a file can\n+            detected from the current environment.\n+    \"\"\"\n+    credentials_filename = _get_environment_variable_file()\n+    if not credentials_filename:\n+      credentials_filename = _get_well_known_file()\n+      if os.path.isfile(credentials_filename):\n         extra_help = (' (produced automatically when running'\n                       ' \"gcloud auth login\" command)')\n-        _raise_exception_for_reading_json(well_known_file, extra_help, error)\n-    elif env_name in ('GAE_PRODUCTION', 'GAE_LOCAL'):\n-      return _get_application_default_credential_GAE()\n-    elif env_name == 'GCE_PRODUCTION':\n-      return _get_application_default_credential_GCE()\n+      else:\n+        credentials_filename = None\n     else:\n-      raise ApplicationDefaultCredentialsError(ADC_HELP_MSG)\n+      extra_help = (' (pointed to by ' + GOOGLE_APPLICATION_CREDENTIALS +\n+                    ' environment variable)')\n+\n+    if not credentials_filename:\n+      return\n+\n+    try:\n+      return _get_application_default_credential_from_file(credentials_filename)\n+    except (ApplicationDefaultCredentialsError, ValueError) as error:\n+      _raise_exception_for_reading_json(credentials_filename, extra_help, error)\n+\n+  def _get_implicit_credentials():", "path": "oauth2client/client.py", "position": 115, "original_position": 115, "commit_id": "3953ca51a4772e827ce3a5163839a4807262cd44", "original_commit_id": "3953ca51a4772e827ce3a5163839a4807262cd44", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "The idea is that `_implicit_credentials_from_files` would actually handle the 3LO (in `checkers` below).\n\nThis is done in #80, but it is super hacky because the files are in a different format than the JSON files used by `flow_from_clientsecrets`. This is due to inheriting the `gcloud` format. I also had to hack around `run_flow` requiring storage, when none was needed.\n", "created_at": "2014-12-05T21:46:39Z", "updated_at": "2014-12-05T21:46:39Z", "html_url": "https://github.com/google/oauth2client/pull/84#discussion_r21402643", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/84", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/21402643"}, "html": {"href": "https://github.com/google/oauth2client/pull/84#discussion_r21402643"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/84"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/21402643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22020753", "pull_request_review_id": null, "id": 22020753, "diff_hunk": "@@ -1,18 +1,15 @@\n [tox]\n-envlist = py26openssl13, py26openssl14,\n-          py27openssl13, py27openssl14,\n-                         py33openssl14,\n-                         py34openssl14,\n-          pypyopenssl13, pypyopenssl14,\n-          cover\n+envlist = py26,py27,py33,py34,pypy,cover\n \n [testenv]\n-deps = keyring\n-       mox3\n-       pycrypto==2.6\n-       django>=1.5,<1.6\n-       webtest\n-       nose\n+basedeps = keyring\n+           mox3\n+           pycrypto==2.6\n+           django>=1.5,<1.6\n+           webtest\n+           nose\n+deps = {[testenv]basedeps}\n+       pyopenssl==0.14\n setenv = PYTHONPATH=../google_appengine", "path": "tox.ini", "position": 25, "original_position": 25, "commit_id": "4823cc900c4b3f8f498db6731d68275f60ecbd4d", "original_commit_id": "4823cc900c4b3f8f498db6731d68275f60ecbd4d", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "Note this still isn't being tested on Travis. It'd be nice to download the SDK and unzip the directory somewhere.\n", "created_at": "2014-12-18T02:29:27Z", "updated_at": "2014-12-18T02:29:27Z", "html_url": "https://github.com/google/oauth2client/pull/95#discussion_r22020753", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/95", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22020753"}, "html": {"href": "https://github.com/google/oauth2client/pull/95#discussion_r22020753"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/95"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22020753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22020771", "pull_request_review_id": null, "id": 22020771, "diff_hunk": "@@ -1,18 +1,15 @@\n [tox]\n-envlist = py26openssl13, py26openssl14,\n-          py27openssl13, py27openssl14,\n-                         py33openssl14,\n-                         py34openssl14,\n-          pypyopenssl13, pypyopenssl14,\n-          cover\n+envlist = py26,py27,py33,py34,pypy,cover\n \n [testenv]\n-deps = keyring\n-       mox3\n-       pycrypto==2.6\n-       django>=1.5,<1.6\n-       webtest\n-       nose\n+basedeps = keyring\n+           mox3\n+           pycrypto==2.6\n+           django>=1.5,<1.6\n+           webtest\n+           nose\n+deps = {[testenv]basedeps}\n+       pyopenssl==0.14\n setenv = PYTHONPATH=../google_appengine", "path": "tox.ini", "position": 25, "original_position": 25, "commit_id": "4823cc900c4b3f8f498db6731d68275f60ecbd4d", "original_commit_id": "4823cc900c4b3f8f498db6731d68275f60ecbd4d", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "totally agree -- filing an issue.\n", "created_at": "2014-12-18T02:30:02Z", "updated_at": "2014-12-18T02:30:02Z", "html_url": "https://github.com/google/oauth2client/pull/95#discussion_r22020771", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/95", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22020771"}, "html": {"href": "https://github.com/google/oauth2client/pull/95#discussion_r22020771"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/95"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22020771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22026267", "pull_request_review_id": null, "id": 22026267, "diff_hunk": "@@ -0,0 +1,59 @@\n+#!/bin/bash\n+\n+# Copyright 2014 Google Inc. All rights reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+set -ev\n+\n+###########################################\n+# Install dependencies for building docs. #\n+###########################################\n+sudo apt-get install -y graphviz", "path": "scripts/update_docs.sh", "position": 22, "original_position": 22, "commit_id": "09b4314696128e5eb96aee293eb913156bee5afe", "original_commit_id": "09b4314696128e5eb96aee293eb913156bee5afe", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "oh noes -- this won't work with travis+docker, right?\n\n**sigh** epydoc.\n", "created_at": "2014-12-18T07:05:56Z", "updated_at": "2014-12-18T07:05:56Z", "html_url": "https://github.com/google/oauth2client/pull/98#discussion_r22026267", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/98", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22026267"}, "html": {"href": "https://github.com/google/oauth2client/pull/98#discussion_r22026267"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/98"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22026267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22026626", "pull_request_review_id": null, "id": 22026626, "diff_hunk": "@@ -0,0 +1,59 @@\n+#!/bin/bash\n+\n+# Copyright 2014 Google Inc. All rights reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+set -ev\n+\n+###########################################\n+# Install dependencies for building docs. #\n+###########################################\n+sudo apt-get install -y graphviz", "path": "scripts/update_docs.sh", "position": 22, "original_position": 22, "commit_id": "09b4314696128e5eb96aee293eb913156bee5afe", "original_commit_id": "09b4314696128e5eb96aee293eb913156bee5afe", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "Ha that is correct. Quickly googling around I'm not sure what to do, it seems to have a ton of deps to install from source.\n\nInstalling a deb without root:\nhttp://askubuntu.com/questions/339/how-can-i-install-a-package-without-root-access\n\nDebs for download:\nhttp://www.graphviz.org/Download_linux_ubuntu.php\n\nFWIW the images it creates are not particularly useful.\n", "created_at": "2014-12-18T07:23:17Z", "updated_at": "2014-12-18T07:23:17Z", "html_url": "https://github.com/google/oauth2client/pull/98#discussion_r22026626", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/98", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22026626"}, "html": {"href": "https://github.com/google/oauth2client/pull/98#discussion_r22026626"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/98"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22026626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22026729", "pull_request_review_id": null, "id": 22026729, "diff_hunk": "@@ -0,0 +1,59 @@\n+#!/bin/bash\n+\n+# Copyright 2014 Google Inc. All rights reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+set -ev\n+\n+###########################################\n+# Install dependencies for building docs. #\n+###########################################\n+sudo apt-get install -y graphviz", "path": "scripts/update_docs.sh", "position": 22, "original_position": 22, "commit_id": "09b4314696128e5eb96aee293eb913156bee5afe", "original_commit_id": "09b4314696128e5eb96aee293eb913156bee5afe", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "making a quick pass at a conversion to sphinx. `;)`\n", "created_at": "2014-12-18T07:28:25Z", "updated_at": "2014-12-18T07:28:25Z", "html_url": "https://github.com/google/oauth2client/pull/98#discussion_r22026729", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/98", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22026729"}, "html": {"href": "https://github.com/google/oauth2client/pull/98#discussion_r22026729"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/98"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22026729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22026818", "pull_request_review_id": null, "id": 22026818, "diff_hunk": "@@ -0,0 +1,59 @@\n+#!/bin/bash\n+\n+# Copyright 2014 Google Inc. All rights reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+set -ev\n+\n+###########################################\n+# Install dependencies for building docs. #\n+###########################################\n+sudo apt-get install -y graphviz", "path": "scripts/update_docs.sh", "position": 22, "original_position": 22, "commit_id": "09b4314696128e5eb96aee293eb913156bee5afe", "original_commit_id": "09b4314696128e5eb96aee293eb913156bee5afe", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "I like it.\n", "created_at": "2014-12-18T07:32:21Z", "updated_at": "2014-12-18T07:32:21Z", "html_url": "https://github.com/google/oauth2client/pull/98#discussion_r22026818", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/98", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22026818"}, "html": {"href": "https://github.com/google/oauth2client/pull/98#discussion_r22026818"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/98"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22026818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22124885", "pull_request_review_id": null, "id": 22124885, "diff_hunk": "@@ -930,12 +931,22 @@ def _detect_gce_environment(urlopen=None):\n           Compute Engine.\n   \"\"\"\n   urlopen = urlopen or urllib.request.urlopen\n-\n+  # Note: the explicit `timeout` below is a potentially-short-term", "path": "oauth2client/client.py", "position": null, "original_position": 13, "commit_id": "9722b3206f8e6e2c326f039513bac176487fabe3", "original_commit_id": "c502d264ca38e3fc85d98f22c14cc72bdc8e8154", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "Pretty silly to call it short-term and not give a date. I'd suggest either not mentioning that it's short term or giving it a timestamp (I know a `git blame` or other could locate the time, but people won't do that).\n", "created_at": "2014-12-19T19:51:35Z", "updated_at": "2014-12-19T23:15:44Z", "html_url": "https://github.com/google/oauth2client/pull/101#discussion_r22124885", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/101", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22124885"}, "html": {"href": "https://github.com/google/oauth2client/pull/101#discussion_r22124885"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/101"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22124885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22124992", "pull_request_review_id": null, "id": 22124992, "diff_hunk": "@@ -930,12 +931,22 @@ def _detect_gce_environment(urlopen=None):\n           Compute Engine.\n   \"\"\"\n   urlopen = urlopen or urllib.request.urlopen\n-\n+  # Note: the explicit `timeout` below is a potentially-short-term", "path": "oauth2client/client.py", "position": null, "original_position": 13, "commit_id": "9722b3206f8e6e2c326f039513bac176487fabe3", "original_commit_id": "c502d264ca38e3fc85d98f22c14cc72bdc8e8154", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "s'fair. dropped \"potentially-short-term\".\n", "created_at": "2014-12-19T19:53:35Z", "updated_at": "2014-12-19T23:15:44Z", "html_url": "https://github.com/google/oauth2client/pull/101#discussion_r22124992", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/101", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22124992"}, "html": {"href": "https://github.com/google/oauth2client/pull/101#discussion_r22124992"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/101"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22124992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125009", "pull_request_review_id": null, "id": 22125009, "diff_hunk": "@@ -930,12 +931,22 @@ def _detect_gce_environment(urlopen=None):\n           Compute Engine.\n   \"\"\"\n   urlopen = urlopen or urllib.request.urlopen\n-\n+  # Note: the explicit `timeout` below is a potentially-short-term\n+  # workaround. The underlying issue is that resolving an unknown host\n+  # on some networks will take 20-30 seconds; making this timeout\n+  # short fixes the issue, but could lead to false negatives in the\n+  # event that we are on GCE, but the metadata resolution was\n+  # particularly slow. The latter case is \"unlikely\".\n   try:\n-    response = urlopen('http://metadata.google.internal')\n+    response = urlopen('http://metadata.google.internal/', timeout=1)", "path": "oauth2client/client.py", "position": null, "original_position": 21, "commit_id": "9722b3206f8e6e2c326f039513bac176487fabe3", "original_commit_id": "c502d264ca38e3fc85d98f22c14cc72bdc8e8154", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "It just occurred to me that only headers are necessary. Worth filing a bug to make this a `HEAD` request?\n", "created_at": "2014-12-19T19:53:53Z", "updated_at": "2014-12-19T23:15:44Z", "html_url": "https://github.com/google/oauth2client/pull/101#discussion_r22125009", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/101", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125009"}, "html": {"href": "https://github.com/google/oauth2client/pull/101#discussion_r22125009"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/101"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125065", "pull_request_review_id": null, "id": 22125065, "diff_hunk": "@@ -4,6 +4,7 @@ envlist = py26,py27,py33,py34,pypy,cover\n [testenv]\n basedeps = keyring\n            mox3\n+           mock", "path": "tox.ini", "position": 4, "original_position": 4, "commit_id": "9722b3206f8e6e2c326f039513bac176487fabe3", "original_commit_id": "c502d264ca38e3fc85d98f22c14cc72bdc8e8154", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "Mox and mock? At the very least you should file an admittedly aspirational bug to choose one ~~ring~~ mocking library to rule them all.\n", "created_at": "2014-12-19T19:55:04Z", "updated_at": "2014-12-19T23:15:44Z", "html_url": "https://github.com/google/oauth2client/pull/101#discussion_r22125065", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/101", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125065"}, "html": {"href": "https://github.com/google/oauth2client/pull/101#discussion_r22125065"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/101"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125139", "pull_request_review_id": null, "id": 22125139, "diff_hunk": "@@ -208,37 +206,19 @@ def test_get_environment_gae_local(self):\n \n   def test_get_environment_gce_production(self):\n     os.environ['SERVER_SOFTWARE'] = ''\n-    mockResponse = MockResponse(['Metadata-Flavor: Google\\r\\n'])\n-\n-    m = mox.Mox()\n-\n-    urllib2_urlopen = m.CreateMock(object)\n-    urllib2_urlopen.__call__(('http://metadata.google.internal'\n-                             )).AndReturn(mockResponse)\n-\n-    m.ReplayAll()\n-\n-    self.assertEqual('GCE_PRODUCTION', _get_environment(urllib2_urlopen))\n-\n-    m.UnsetStubs()\n-    m.VerifyAll()\n+    with mock.patch.object(urllib.request, 'urlopen') as urlopen:", "path": "tests/test_oauth2client.py", "position": 34, "original_position": 34, "commit_id": "9722b3206f8e6e2c326f039513bac176487fabe3", "original_commit_id": "c502d264ca38e3fc85d98f22c14cc72bdc8e8154", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "Sorry for being a weenie but why are these necessary? What's wrong with `mox`?\n", "created_at": "2014-12-19T19:56:14Z", "updated_at": "2014-12-19T23:15:44Z", "html_url": "https://github.com/google/oauth2client/pull/101#discussion_r22125139", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/101", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125139"}, "html": {"href": "https://github.com/google/oauth2client/pull/101#discussion_r22125139"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/101"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125207", "pull_request_review_id": null, "id": 22125207, "diff_hunk": "@@ -930,12 +931,22 @@ def _detect_gce_environment(urlopen=None):\n           Compute Engine.\n   \"\"\"\n   urlopen = urlopen or urllib.request.urlopen\n-\n+  # Note: the explicit `timeout` below is a potentially-short-term\n+  # workaround. The underlying issue is that resolving an unknown host\n+  # on some networks will take 20-30 seconds; making this timeout\n+  # short fixes the issue, but could lead to false negatives in the\n+  # event that we are on GCE, but the metadata resolution was\n+  # particularly slow. The latter case is \"unlikely\".\n   try:\n-    response = urlopen('http://metadata.google.internal')\n+    response = urlopen('http://metadata.google.internal/', timeout=1)", "path": "oauth2client/client.py", "position": null, "original_position": 21, "commit_id": "9722b3206f8e6e2c326f039513bac176487fabe3", "original_commit_id": "c502d264ca38e3fc85d98f22c14cc72bdc8e8154", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "we could -- but the response would only be large in the case of something like a captive portal, where i'm downloading a whole page, right? in that case, might be more work than it's worth.\n", "created_at": "2014-12-19T19:57:10Z", "updated_at": "2014-12-19T23:15:44Z", "html_url": "https://github.com/google/oauth2client/pull/101#discussion_r22125207", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/101", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125207"}, "html": {"href": "https://github.com/google/oauth2client/pull/101#discussion_r22125207"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/101"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125323", "pull_request_review_id": null, "id": 22125323, "diff_hunk": "@@ -930,12 +931,22 @@ def _detect_gce_environment(urlopen=None):\n           Compute Engine.\n   \"\"\"\n   urlopen = urlopen or urllib.request.urlopen\n-\n+  # Note: the explicit `timeout` below is a potentially-short-term\n+  # workaround. The underlying issue is that resolving an unknown host\n+  # on some networks will take 20-30 seconds; making this timeout\n+  # short fixes the issue, but could lead to false negatives in the\n+  # event that we are on GCE, but the metadata resolution was\n+  # particularly slow. The latter case is \"unlikely\".\n   try:\n-    response = urlopen('http://metadata.google.internal')\n+    response = urlopen('http://metadata.google.internal/', timeout=1)", "path": "oauth2client/client.py", "position": null, "original_position": 21, "commit_id": "9722b3206f8e6e2c326f039513bac176487fabe3", "original_commit_id": "c502d264ca38e3fc85d98f22c14cc72bdc8e8154", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "Yes after writing I thought \"probably more work than it's worth\" :)\n", "created_at": "2014-12-19T19:58:20Z", "updated_at": "2014-12-19T23:15:44Z", "html_url": "https://github.com/google/oauth2client/pull/101#discussion_r22125323", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/101", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125323"}, "html": {"href": "https://github.com/google/oauth2client/pull/101#discussion_r22125323"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/101"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125346", "pull_request_review_id": null, "id": 22125346, "diff_hunk": "@@ -4,6 +4,7 @@ envlist = py26,py27,py33,py34,pypy,cover\n [testenv]\n basedeps = keyring\n            mox3\n+           mock", "path": "tox.ini", "position": 4, "original_position": 4, "commit_id": "9722b3206f8e6e2c326f039513bac176487fabe3", "original_commit_id": "c502d264ca38e3fc85d98f22c14cc72bdc8e8154", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "#102 \n", "created_at": "2014-12-19T19:58:41Z", "updated_at": "2014-12-19T23:15:44Z", "html_url": "https://github.com/google/oauth2client/pull/101#discussion_r22125346", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/101", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125346"}, "html": {"href": "https://github.com/google/oauth2client/pull/101#discussion_r22125346"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/101"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125392", "pull_request_review_id": null, "id": 22125392, "diff_hunk": "@@ -208,37 +206,19 @@ def test_get_environment_gae_local(self):\n \n   def test_get_environment_gce_production(self):\n     os.environ['SERVER_SOFTWARE'] = ''\n-    mockResponse = MockResponse(['Metadata-Flavor: Google\\r\\n'])\n-\n-    m = mox.Mox()\n-\n-    urllib2_urlopen = m.CreateMock(object)\n-    urllib2_urlopen.__call__(('http://metadata.google.internal'\n-                             )).AndReturn(mockResponse)\n-\n-    m.ReplayAll()\n-\n-    self.assertEqual('GCE_PRODUCTION', _get_environment(urllib2_urlopen))\n-\n-    m.UnsetStubs()\n-    m.VerifyAll()\n+    with mock.patch.object(urllib.request, 'urlopen') as urlopen:", "path": "tests/test_oauth2client.py", "position": 34, "original_position": 34, "commit_id": "9722b3206f8e6e2c326f039513bac176487fabe3", "original_commit_id": "c502d264ca38e3fc85d98f22c14cc72bdc8e8154", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "my brain can also only keep one mocking library loaded, and `mock` seems to be the future (it's in the stdlib as of 3.3). might as well start moving that way.\n", "created_at": "2014-12-19T19:59:21Z", "updated_at": "2014-12-19T23:15:44Z", "html_url": "https://github.com/google/oauth2client/pull/101#discussion_r22125392", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/101", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125392"}, "html": {"href": "https://github.com/google/oauth2client/pull/101#discussion_r22125392"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/101"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125453", "pull_request_review_id": null, "id": 22125453, "diff_hunk": "@@ -208,37 +206,19 @@ def test_get_environment_gae_local(self):\n \n   def test_get_environment_gce_production(self):\n     os.environ['SERVER_SOFTWARE'] = ''\n-    mockResponse = MockResponse(['Metadata-Flavor: Google\\r\\n'])\n-\n-    m = mox.Mox()\n-\n-    urllib2_urlopen = m.CreateMock(object)\n-    urllib2_urlopen.__call__(('http://metadata.google.internal'\n-                             )).AndReturn(mockResponse)\n-\n-    m.ReplayAll()\n-\n-    self.assertEqual('GCE_PRODUCTION', _get_environment(urllib2_urlopen))\n-\n-    m.UnsetStubs()\n-    m.VerifyAll()\n+    with mock.patch.object(urllib.request, 'urlopen') as urlopen:", "path": "tests/test_oauth2client.py", "position": 34, "original_position": 34, "commit_id": "9722b3206f8e6e2c326f039513bac176487fabe3", "original_commit_id": "c502d264ca38e3fc85d98f22c14cc72bdc8e8154", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "It's your mess, but that seems like a terrible idea without a clear plan.\n", "created_at": "2014-12-19T20:00:22Z", "updated_at": "2014-12-19T23:15:44Z", "html_url": "https://github.com/google/oauth2client/pull/101#discussion_r22125453", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/101", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125453"}, "html": {"href": "https://github.com/google/oauth2client/pull/101#discussion_r22125453"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/101"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22125453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22131394", "pull_request_review_id": null, "id": 22131394, "diff_hunk": "@@ -208,37 +206,19 @@ def test_get_environment_gae_local(self):\n \n   def test_get_environment_gce_production(self):\n     os.environ['SERVER_SOFTWARE'] = ''\n-    mockResponse = MockResponse(['Metadata-Flavor: Google\\r\\n'])\n-\n-    m = mox.Mox()\n-\n-    urllib2_urlopen = m.CreateMock(object)\n-    urllib2_urlopen.__call__(('http://metadata.google.internal'\n-                             )).AndReturn(mockResponse)\n-\n-    m.ReplayAll()\n-\n-    self.assertEqual('GCE_PRODUCTION', _get_environment(urllib2_urlopen))\n-\n-    m.UnsetStubs()\n-    m.VerifyAll()\n+    with mock.patch.object(urllib.request, 'urlopen') as urlopen:", "path": "tests/test_oauth2client.py", "position": 34, "original_position": 34, "commit_id": "9722b3206f8e6e2c326f039513bac176487fabe3", "original_commit_id": "c502d264ca38e3fc85d98f22c14cc72bdc8e8154", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "going to push a change to drop mox shortly. otherwise anything else on this one?\n", "created_at": "2014-12-19T21:52:20Z", "updated_at": "2014-12-19T23:15:44Z", "html_url": "https://github.com/google/oauth2client/pull/101#discussion_r22131394", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/101", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22131394"}, "html": {"href": "https://github.com/google/oauth2client/pull/101#discussion_r22131394"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/101"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22131394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22142755", "pull_request_review_id": null, "id": 22142755, "diff_hunk": "@@ -159,13 +159,9 @@ def test_raise_correct_type_of_exception(self):\n       'memcache', memcache_stub.MemcacheServiceStub())\n \n     scope = 'http://www.googleapis.com/scope'\n-    try:\n-      credentials = AppAssertionCredentials(scope)\n-      http = httplib2.Http()\n-      credentials.refresh(http)\n-      self.fail('Should have raised an AccessTokenRefreshError')\n-    except AccessTokenRefreshError:\n-      pass\n+    credentials = AppAssertionCredentials(scope)\n+    http = httplib2.Http()\n+    self.assertRaises(AccessTokenRefreshError, credentials.refresh, http)", "path": "tests/test_appengine.py", "position": 22, "original_position": 22, "commit_id": "ec26d89ce15e26604add7c87ff881b2091115f12", "original_commit_id": "ec26d89ce15e26604add7c87ff881b2091115f12", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "Why was `self.fail` ever used? Sigh.\n", "created_at": "2014-12-20T17:31:19Z", "updated_at": "2014-12-20T17:31:19Z", "html_url": "https://github.com/google/oauth2client/pull/103#discussion_r22142755", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/103", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22142755"}, "html": {"href": "https://github.com/google/oauth2client/pull/103#discussion_r22142755"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22142755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22143080", "pull_request_review_id": null, "id": 22143080, "diff_hunk": "@@ -159,13 +159,9 @@ def test_raise_correct_type_of_exception(self):\n       'memcache', memcache_stub.MemcacheServiceStub())\n \n     scope = 'http://www.googleapis.com/scope'\n-    try:\n-      credentials = AppAssertionCredentials(scope)\n-      http = httplib2.Http()\n-      credentials.refresh(http)\n-      self.fail('Should have raised an AccessTokenRefreshError')\n-    except AccessTokenRefreshError:\n-      pass\n+    credentials = AppAssertionCredentials(scope)\n+    http = httplib2.Http()\n+    self.assertRaises(AccessTokenRefreshError, credentials.refresh, http)", "path": "tests/test_appengine.py", "position": 22, "original_position": 22, "commit_id": "ec26d89ce15e26604add7c87ff881b2091115f12", "original_commit_id": "ec26d89ce15e26604add7c87ff881b2091115f12", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "there are plenty left -- i just cleaned up the ones i ran into. ;)\n", "created_at": "2014-12-20T18:10:23Z", "updated_at": "2014-12-20T18:10:23Z", "html_url": "https://github.com/google/oauth2client/pull/103#discussion_r22143080", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22143080"}, "html": {"href": "https://github.com/google/oauth2client/pull/103#discussion_r22143080"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/103"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22143080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22599877", "pull_request_review_id": null, "id": 22599877, "diff_hunk": "@@ -22,7 +22,10 @@\n import sys\n \n if sys.version_info <= (2, 6):", "path": "setup.py", "position": null, "original_position": 3, "commit_id": "85b06e15ead3b648757a2f01cde7d55226bcb692", "original_commit_id": "ea15430148612685f93619defcbb9956e62301c6", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "So you've never support Python 2.6? I am surprised by this but SGTM.\n", "created_at": "2015-01-07T17:18:04Z", "updated_at": "2015-01-07T18:09:25Z", "html_url": "https://github.com/google/oauth2client/pull/107#discussion_r22599877", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/107", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22599877"}, "html": {"href": "https://github.com/google/oauth2client/pull/107#discussion_r22599877"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/107"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22599877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22602116", "pull_request_review_id": null, "id": 22602116, "diff_hunk": "@@ -22,7 +22,10 @@\n import sys\n \n if sys.version_info <= (2, 6):", "path": "setup.py", "position": null, "original_position": 3, "commit_id": "85b06e15ead3b648757a2f01cde7d55226bcb692", "original_commit_id": "ea15430148612685f93619defcbb9956e62301c6", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "oh, this actually does the right thing -- the version tuple for `2.6` will always have a third component.\n\nthat said, i agree it reads awkwardly, so i'm tweaking.\n", "created_at": "2015-01-07T17:54:29Z", "updated_at": "2015-01-07T18:09:25Z", "html_url": "https://github.com/google/oauth2client/pull/107#discussion_r22602116", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/107", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22602116"}, "html": {"href": "https://github.com/google/oauth2client/pull/107#discussion_r22602116"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/107"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22602116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22994474", "pull_request_review_id": null, "id": 22994474, "diff_hunk": "@@ -0,0 +1,73 @@\n+# Copyright 2014 Google Inc. All rights reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+import mock\n+import os\n+import sys\n+import unittest\n+\n+try:\n+  reload\n+except NameError:\n+  # For Python3 (though importlib should be used, silly 3.3).\n+  from imp import reload\n+\n+from oauth2client.client import HAS_OPENSSL\n+from oauth2client.client import SignedJwtAssertionCredentials\n+from oauth2client import crypt\n+\n+\n+def datafile(filename):\n+  f = open(os.path.join(os.path.dirname(__file__), 'data', filename), 'rb')", "path": "tests/test_crypt.py", "position": 32, "original_position": 32, "commit_id": "4d020992b36b4afd753cc5e69646c70d1ac2a7c2", "original_commit_id": "4d020992b36b4afd753cc5e69646c70d1ac2a7c2", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "why not just `pkgutil.get_data`?\n", "created_at": "2015-01-15T07:42:11Z", "updated_at": "2015-01-15T07:42:11Z", "html_url": "https://github.com/google/oauth2client/pull/115#discussion_r22994474", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/115", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22994474"}, "html": {"href": "https://github.com/google/oauth2client/pull/115#discussion_r22994474"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/115"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22994474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22994685", "pull_request_review_id": null, "id": 22994685, "diff_hunk": "@@ -0,0 +1,73 @@\n+# Copyright 2014 Google Inc. All rights reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+import mock\n+import os\n+import sys\n+import unittest\n+\n+try:\n+  reload\n+except NameError:\n+  # For Python3 (though importlib should be used, silly 3.3).\n+  from imp import reload\n+\n+from oauth2client.client import HAS_OPENSSL\n+from oauth2client.client import SignedJwtAssertionCredentials\n+from oauth2client import crypt\n+\n+\n+def datafile(filename):\n+  f = open(os.path.join(os.path.dirname(__file__), 'data', filename), 'rb')", "path": "tests/test_crypt.py", "position": 32, "original_position": 32, "commit_id": "4d020992b36b4afd753cc5e69646c70d1ac2a7c2", "original_commit_id": "4d020992b36b4afd753cc5e69646c70d1ac2a7c2", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "This is copy pasta from `test_jwt`. Also `pkgutil.get_data` would not accomplish anything close to what this method does.\n\nThis runs from `tests/` and opens files in `tests/data/` via the relative path given by `filename`.\n", "created_at": "2015-01-15T07:51:14Z", "updated_at": "2015-01-15T07:51:14Z", "html_url": "https://github.com/google/oauth2client/pull/115#discussion_r22994685", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/115", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22994685"}, "html": {"href": "https://github.com/google/oauth2client/pull/115#discussion_r22994685"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/115"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22994685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22995152", "pull_request_review_id": null, "id": 22995152, "diff_hunk": "@@ -0,0 +1,73 @@\n+# Copyright 2014 Google Inc. All rights reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+import mock\n+import os\n+import sys\n+import unittest\n+\n+try:\n+  reload\n+except NameError:\n+  # For Python3 (though importlib should be used, silly 3.3).\n+  from imp import reload\n+\n+from oauth2client.client import HAS_OPENSSL\n+from oauth2client.client import SignedJwtAssertionCredentials\n+from oauth2client import crypt\n+\n+\n+def datafile(filename):\n+  f = open(os.path.join(os.path.dirname(__file__), 'data', filename), 'rb')", "path": "tests/test_crypt.py", "position": 32, "original_position": 32, "commit_id": "4d020992b36b4afd753cc5e69646c70d1ac2a7c2", "original_commit_id": "4d020992b36b4afd753cc5e69646c70d1ac2a7c2", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "pretty sure this whole function is just `pkgutil.get_data(__name__, os.path.join('data', filename))`. go ahead and give it a try before you decide it's unrelated. `;)`\n\nnot deeply important though, this code all needs some spring cleaning.\n", "created_at": "2015-01-15T08:08:46Z", "updated_at": "2015-01-15T08:08:46Z", "html_url": "https://github.com/google/oauth2client/pull/115#discussion_r22995152", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/115", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22995152"}, "html": {"href": "https://github.com/google/oauth2client/pull/115#discussion_r22995152"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/115"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22995152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22995188", "pull_request_review_id": null, "id": 22995188, "diff_hunk": "@@ -0,0 +1,73 @@\n+# Copyright 2014 Google Inc. All rights reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+import mock\n+import os\n+import sys\n+import unittest\n+\n+try:\n+  reload\n+except NameError:\n+  # For Python3 (though importlib should be used, silly 3.3).\n+  from imp import reload\n+\n+from oauth2client.client import HAS_OPENSSL\n+from oauth2client.client import SignedJwtAssertionCredentials\n+from oauth2client import crypt\n+\n+\n+def datafile(filename):\n+  f = open(os.path.join(os.path.dirname(__file__), 'data', filename), 'rb')", "path": "tests/test_crypt.py", "position": 32, "original_position": 32, "commit_id": "4d020992b36b4afd753cc5e69646c70d1ac2a7c2", "original_commit_id": "4d020992b36b4afd753cc5e69646c70d1ac2a7c2", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "Interesting. My bad.\n", "created_at": "2015-01-15T08:09:49Z", "updated_at": "2015-01-15T08:09:49Z", "html_url": "https://github.com/google/oauth2client/pull/115#discussion_r22995188", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/115", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/22995188"}, "html": {"href": "https://github.com/google/oauth2client/pull/115#discussion_r22995188"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/115"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/22995188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/23859933", "pull_request_review_id": null, "id": 23859933, "diff_hunk": "@@ -970,7 +974,7 @@ def _get_environment(urlopen=None):\n     SETTINGS.env_name = 'GAE_PRODUCTION'\n   elif server_software.startswith('Development/'):\n     SETTINGS.env_name = 'GAE_LOCAL'\n-  elif _detect_gce_environment(urlopen=urlopen):\n+  elif NO_GCE_CHECK is not 'True' and _detect_gce_environment(urlopen=urlopen):", "path": "oauth2client/client.py", "position": null, "original_position": 16, "commit_id": "933e1d0073d676d6a80d39616405b19fc6f7ccbd", "original_commit_id": "7d3743d617c116ac192f205cd334da54715f6bad", "user": {"login": "craigcitro", "id": 468559, "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "body": "for strings, we want to use `==` instead of `is`. \n", "created_at": "2015-01-30T18:10:48Z", "updated_at": "2015-01-30T18:47:30Z", "html_url": "https://github.com/google/oauth2client/pull/111#discussion_r23859933", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/111", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/23859933"}, "html": {"href": "https://github.com/google/oauth2client/pull/111#discussion_r23859933"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/111"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/23859933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/23926878", "pull_request_review_id": null, "id": 23926878, "diff_hunk": "@@ -0,0 +1,30 @@\n+\"\"\"Unit tests for oauth2client.tools.\"\"\"\n+\n+import unittest\n+from oauth2client import tools\n+from six.moves.urllib import request\n+import threading\n+\n+class TestClientRedirectServer(unittest.TestCase):\n+    \"\"\"Test the ClientRedirectServer and ClientRedirectHandler classes.\"\"\"\n+\n+    def test_ClientRedirectServer(self):\n+        # create a ClientRedirectServer and run it in a thread to listen\n+        # for a mock GET request with the access token\n+        # the server should return a 200 message and store the token\n+        httpd = tools.ClientRedirectServer(('localhost', 0), tools.ClientRedirectHandler)\n+        code = 'foo'\n+        url = 'http://localhost:%i?code=%s' % (httpd.server_address[1], code)\n+        t = threading.Thread(target = httpd.handle_request)\n+        t.setDaemon(True)", "path": "tests/test_tools.py", "position": 19, "original_position": 19, "commit_id": "927589bf06a1ed140612babf92e8469f2f013859", "original_commit_id": "927589bf06a1ed140612babf92e8469f2f013859", "user": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "body": "Why mark the thread as daemon?\n", "created_at": "2015-02-02T14:21:00Z", "updated_at": "2015-02-02T14:21:00Z", "html_url": "https://github.com/google/oauth2client/pull/122#discussion_r23926878", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/122", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/23926878"}, "html": {"href": "https://github.com/google/oauth2client/pull/122#discussion_r23926878"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/122"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/23926878/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/23929955", "pull_request_review_id": null, "id": 23929955, "diff_hunk": "@@ -0,0 +1,30 @@\n+\"\"\"Unit tests for oauth2client.tools.\"\"\"\n+\n+import unittest\n+from oauth2client import tools\n+from six.moves.urllib import request\n+import threading\n+\n+class TestClientRedirectServer(unittest.TestCase):\n+    \"\"\"Test the ClientRedirectServer and ClientRedirectHandler classes.\"\"\"\n+\n+    def test_ClientRedirectServer(self):\n+        # create a ClientRedirectServer and run it in a thread to listen\n+        # for a mock GET request with the access token\n+        # the server should return a 200 message and store the token\n+        httpd = tools.ClientRedirectServer(('localhost', 0), tools.ClientRedirectHandler)\n+        code = 'foo'\n+        url = 'http://localhost:%i?code=%s' % (httpd.server_address[1], code)\n+        t = threading.Thread(target = httpd.handle_request)\n+        t.setDaemon(True)", "path": "tests/test_tools.py", "position": 19, "original_position": 19, "commit_id": "927589bf06a1ed140612babf92e8469f2f013859", "original_commit_id": "927589bf06a1ed140612babf92e8469f2f013859", "user": {"login": "kcs", "id": 10776166, "avatar_url": "https://avatars1.githubusercontent.com/u/10776166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kcs", "html_url": "https://github.com/kcs", "followers_url": "https://api.github.com/users/kcs/followers", "following_url": "https://api.github.com/users/kcs/following{/other_user}", "gists_url": "https://api.github.com/users/kcs/gists{/gist_id}", "starred_url": "https://api.github.com/users/kcs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kcs/subscriptions", "organizations_url": "https://api.github.com/users/kcs/orgs", "repos_url": "https://api.github.com/users/kcs/repos", "events_url": "https://api.github.com/users/kcs/events{/privacy}", "received_events_url": "https://api.github.com/users/kcs/received_events", "type": "User", "site_admin": false}, "body": "I think I was just too overcautious, normally the thread crashes if there is an error, but I wanted to avoid hanging. Of course this doesn't make too much sense because of the join later on.\n", "created_at": "2015-02-02T15:08:11Z", "updated_at": "2015-02-02T15:08:11Z", "html_url": "https://github.com/google/oauth2client/pull/122#discussion_r23929955", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/122", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/23929955"}, "html": {"href": "https://github.com/google/oauth2client/pull/122#discussion_r23929955"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/122"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/23929955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/23937003", "pull_request_review_id": null, "id": 23937003, "diff_hunk": "@@ -0,0 +1,30 @@\n+\"\"\"Unit tests for oauth2client.tools.\"\"\"\n+\n+import unittest\n+from oauth2client import tools\n+from six.moves.urllib import request\n+import threading\n+\n+class TestClientRedirectServer(unittest.TestCase):\n+    \"\"\"Test the ClientRedirectServer and ClientRedirectHandler classes.\"\"\"\n+\n+    def test_ClientRedirectServer(self):\n+        # create a ClientRedirectServer and run it in a thread to listen\n+        # for a mock GET request with the access token\n+        # the server should return a 200 message and store the token\n+        httpd = tools.ClientRedirectServer(('localhost', 0), tools.ClientRedirectHandler)\n+        code = 'foo'\n+        url = 'http://localhost:%i?code=%s' % (httpd.server_address[1], code)\n+        t = threading.Thread(target = httpd.handle_request)\n+        t.setDaemon(True)", "path": "tests/test_tools.py", "position": 19, "original_position": 19, "commit_id": "927589bf06a1ed140612babf92e8469f2f013859", "original_commit_id": "927589bf06a1ed140612babf92e8469f2f013859", "user": {"login": "kcs", "id": 10776166, "avatar_url": "https://avatars1.githubusercontent.com/u/10776166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kcs", "html_url": "https://github.com/kcs", "followers_url": "https://api.github.com/users/kcs/followers", "following_url": "https://api.github.com/users/kcs/following{/other_user}", "gists_url": "https://api.github.com/users/kcs/gists{/gist_id}", "starred_url": "https://api.github.com/users/kcs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kcs/subscriptions", "organizations_url": "https://api.github.com/users/kcs/orgs", "repos_url": "https://api.github.com/users/kcs/repos", "events_url": "https://api.github.com/users/kcs/events{/privacy}", "received_events_url": "https://api.github.com/users/kcs/received_events", "type": "User", "site_admin": false}, "body": "Thinking of it a little more, it helps if the main thread crashes before finishing connection to the handler thread, in which case the test app will not wait forever for the thread to close.\n", "created_at": "2015-02-02T16:40:11Z", "updated_at": "2015-02-02T16:40:11Z", "html_url": "https://github.com/google/oauth2client/pull/122#discussion_r23937003", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/122", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/23937003"}, "html": {"href": "https://github.com/google/oauth2client/pull/122#discussion_r23937003"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/122"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/23937003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/25126746", "pull_request_review_id": null, "id": 25126746, "diff_hunk": "@@ -29,7 +29,11 @@\n import time\n import unittest\n import urllib\n-import urlparse\n+\n+try:\n+  import urlparse\n+except ImportError:\n+  from urllib.parse import urlparse", "path": "tests/test_appengine.py", "position": 9, "original_position": 9, "commit_id": "f41eb746a3ae27ab46db7cea493485d6ed3b4e7d", "original_commit_id": "f41eb746a3ae27ab46db7cea493485d6ed3b4e7d", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "You should use `six.moves`.\n", "created_at": "2015-02-21T22:55:44Z", "updated_at": "2015-02-21T22:55:44Z", "html_url": "https://github.com/google/oauth2client/pull/136#discussion_r25126746", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/136", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/25126746"}, "html": {"href": "https://github.com/google/oauth2client/pull/136#discussion_r25126746"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/25126746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/25126749", "pull_request_review_id": null, "id": 25126749, "diff_hunk": "@@ -397,9 +397,32 @@ def delete(self):\n     finally:\n       self.release_lock()\n \n+# Since strings ARE unicode in Python3, \"cleaning\" the string doesn't mean\n+# just converting to str.\n+#\n+#  As per the httplib2 documentation:\n+#\n+#    ** THE RESPONSE HEADERS ARE STRINGS, BUT THE CONTENT BODY IS BYTES **\n+#\n+def _clean_header(s):\n+  \"\"\"Always returns something of type str.  Raise UnicodeEncodeError if", "path": "oauth2client/client.py", "position": 12, "original_position": 12, "commit_id": "f41eb746a3ae27ab46db7cea493485d6ed3b4e7d", "original_commit_id": "f41eb746a3ae27ab46db7cea493485d6ed3b4e7d", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "Stay under 80 chars.\n", "created_at": "2015-02-21T22:55:57Z", "updated_at": "2015-02-21T22:55:57Z", "html_url": "https://github.com/google/oauth2client/pull/136#discussion_r25126749", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/136", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/25126749"}, "html": {"href": "https://github.com/google/oauth2client/pull/136#discussion_r25126749"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/25126749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/25126751", "pull_request_review_id": null, "id": 25126751, "diff_hunk": "@@ -397,9 +397,32 @@ def delete(self):\n     finally:\n       self.release_lock()\n \n+# Since strings ARE unicode in Python3, \"cleaning\" the string doesn't mean\n+# just converting to str.\n+#\n+#  As per the httplib2 documentation:\n+#\n+#    ** THE RESPONSE HEADERS ARE STRINGS, BUT THE CONTENT BODY IS BYTES **\n+#", "path": "oauth2client/client.py", "position": 10, "original_position": 10, "commit_id": "f41eb746a3ae27ab46db7cea493485d6ed3b4e7d", "original_commit_id": "f41eb746a3ae27ab46db7cea493485d6ed3b4e7d", "user": {"login": "dhermes", "id": 520669, "avatar_url": "https://avatars3.githubusercontent.com/u/520669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhermes", "html_url": "https://github.com/dhermes", "followers_url": "https://api.github.com/users/dhermes/followers", "following_url": "https://api.github.com/users/dhermes/following{/other_user}", "gists_url": "https://api.github.com/users/dhermes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhermes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhermes/subscriptions", "organizations_url": "https://api.github.com/users/dhermes/orgs", "repos_url": "https://api.github.com/users/dhermes/repos", "events_url": "https://api.github.com/users/dhermes/events{/privacy}", "received_events_url": "https://api.github.com/users/dhermes/received_events", "type": "User", "site_admin": false}, "body": "This comment should be in the docstring.\n", "created_at": "2015-02-21T22:56:07Z", "updated_at": "2015-02-21T22:56:07Z", "html_url": "https://github.com/google/oauth2client/pull/136#discussion_r25126751", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/136", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/25126751"}, "html": {"href": "https://github.com/google/oauth2client/pull/136#discussion_r25126751"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/136"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/25126751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/25570668", "pull_request_review_id": null, "id": 25570668, "diff_hunk": "@@ -47,7 +47,7 @@ def _force_bytes(s):\n \n \n @util.positional(2)\n-def generate_token(key, user_id, action_id=\"\", when=None):\n+def generate_token(key, user_id, action_id=\"\", when=None, digestmod=None):", "path": "oauth2client/xsrfutil.py", "position": 5, "original_position": 5, "commit_id": "86bb60bc8ab7dbd6a369446e2d3c07f6612a3b8f", "original_commit_id": "30ebebab658a8178cba489f87fc7123c8ee570f2", "user": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "body": "Don't you need to update the \"Args:\" section of the function doc string?\n", "created_at": "2015-03-01T20:02:36Z", "updated_at": "2015-03-02T05:04:07Z", "html_url": "https://github.com/google/oauth2client/pull/139#discussion_r25570668", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/139", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/25570668"}, "html": {"href": "https://github.com/google/oauth2client/pull/139#discussion_r25570668"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/139"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/25570668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/25570674", "pull_request_review_id": null, "id": 25570674, "diff_hunk": "@@ -75,7 +75,7 @@ def generate_token(key, user_id, action_id=\"\", when=None):\n \n \n @util.positional(3)\n-def validate_token(key, token, user_id, action_id=\"\", current_time=None):\n+def validate_token(key, token, user_id, action_id=\"\", current_time=None, digestmod=None):", "path": "oauth2client/xsrfutil.py", "position": 32, "original_position": 23, "commit_id": "86bb60bc8ab7dbd6a369446e2d3c07f6612a3b8f", "original_commit_id": "30ebebab658a8178cba489f87fc7123c8ee570f2", "user": {"login": "nathanielmanistaatgoogle", "id": 10131044, "avatar_url": "https://avatars0.githubusercontent.com/u/10131044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanielmanistaatgoogle", "html_url": "https://github.com/nathanielmanistaatgoogle", "followers_url": "https://api.github.com/users/nathanielmanistaatgoogle/followers", "following_url": "https://api.github.com/users/nathanielmanistaatgoogle/following{/other_user}", "gists_url": "https://api.github.com/users/nathanielmanistaatgoogle/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanielmanistaatgoogle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanielmanistaatgoogle/subscriptions", "organizations_url": "https://api.github.com/users/nathanielmanistaatgoogle/orgs", "repos_url": "https://api.github.com/users/nathanielmanistaatgoogle/repos", "events_url": "https://api.github.com/users/nathanielmanistaatgoogle/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanielmanistaatgoogle/received_events", "type": "User", "site_admin": false}, "body": "Doc string update here too?\n", "created_at": "2015-03-01T20:03:04Z", "updated_at": "2015-03-02T05:04:07Z", "html_url": "https://github.com/google/oauth2client/pull/139#discussion_r25570674", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/139", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/25570674"}, "html": {"href": "https://github.com/google/oauth2client/pull/139#discussion_r25570674"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/139"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/25570674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/25578618", "pull_request_review_id": null, "id": 25578618, "diff_hunk": "@@ -75,7 +75,7 @@ def generate_token(key, user_id, action_id=\"\", when=None):\n \n \n @util.positional(3)\n-def validate_token(key, token, user_id, action_id=\"\", current_time=None):\n+def validate_token(key, token, user_id, action_id=\"\", current_time=None, digestmod=None):", "path": "oauth2client/xsrfutil.py", "position": 32, "original_position": 23, "commit_id": "86bb60bc8ab7dbd6a369446e2d3c07f6612a3b8f", "original_commit_id": "30ebebab658a8178cba489f87fc7123c8ee570f2", "user": {"login": "eyalfink", "id": 827090, "avatar_url": "https://avatars0.githubusercontent.com/u/827090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eyalfink", "html_url": "https://github.com/eyalfink", "followers_url": "https://api.github.com/users/eyalfink/followers", "following_url": "https://api.github.com/users/eyalfink/following{/other_user}", "gists_url": "https://api.github.com/users/eyalfink/gists{/gist_id}", "starred_url": "https://api.github.com/users/eyalfink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eyalfink/subscriptions", "organizations_url": "https://api.github.com/users/eyalfink/orgs", "repos_url": "https://api.github.com/users/eyalfink/repos", "events_url": "https://api.github.com/users/eyalfink/events{/privacy}", "received_events_url": "https://api.github.com/users/eyalfink/received_events", "type": "User", "site_admin": false}, "body": "Good point.\nDone.\nPTAL.\n", "created_at": "2015-03-02T05:09:19Z", "updated_at": "2015-03-02T05:09:19Z", "html_url": "https://github.com/google/oauth2client/pull/139#discussion_r25578618", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/139", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/25578618"}, "html": {"href": "https://github.com/google/oauth2client/pull/139#discussion_r25578618"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/139"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/25578618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/26120557", "pull_request_review_id": null, "id": 26120557, "diff_hunk": "@@ -0,0 +1,139 @@\n+# Copyright 2015 Google Inc. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"OAuth 2.0 utitilies for Google Developer Shell environment.\"\"\"\n+\n+import json\n+import os\n+\n+from oauth2client import client\n+\n+\n+DEVSHELL_ENV = 'DEVSHELL_CLIENT_PORT'\n+\n+\n+class Error(Exception):\n+  \"\"\"Errors for this module.\"\"\"\n+  pass\n+\n+\n+class CommunicationError(Error):\n+  \"\"\"Errors for communication with the Developer Shell server.\"\"\"\n+\n+\n+class NoDevshellServer(Error):\n+  \"\"\"Error when no Developer Shell server can be contacted.\"\"\"\n+\n+\n+# The request for credential information to the Developer Shell client socket is\n+# always an empty PBLite-formatted JSON object, so just define it as a constant.\n+CREDENTIAL_INFO_REQUEST_JSON = '[]'\n+\n+\n+class CredentialInfoResponse(object):\n+  \"\"\"Credential information response from Developer Shell server.\n+\n+  The credential information response from Developer Shell socket is a\n+  PBLite-formatted JSON array with fields encoded by their index in the array:\n+    * Index 0 - user email\n+    * Index 1 - default project ID. None if the project context is not known.\n+    * Index 2 - OAuth2 access token. None if there is no valid auth context.\n+  \"\"\"\n+\n+  def __init__(self, json_string):\n+    \"\"\"Initialize the response data from JSON PBLite array.\"\"\"\n+    pbl = json.loads(json_string)\n+    if not isinstance(pbl, list):\n+      raise ValueError('Not a list: ' + str(pbl))\n+    self.user_email = pbl[0] if len(pbl) else None\n+    self.project_id = pbl[1] if len(pbl) > 1 else None\n+    self.access_token = pbl[2] if len(pbl) > 2 else None\n+\n+\n+def _SendRecv():\n+  \"\"\"Communicate with the Developer Shell server socket.\"\"\"\n+\n+  port = int(os.getenv(DEVSHELL_ENV, 0))\n+  if port == 0:\n+    raise NoDevshellServer()\n+\n+  # pylint:disable=g-import-not-at-top, Delay for performance.", "path": "oauth2client/devshell.py", "position": null, "original_position": 71, "commit_id": "c8eaffae9edc82044956ea995a0ecea3061c81fa", "original_commit_id": "701abfd2cc96f2a6073269447e2f95de78bb5d90", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "body": "pylint comments can go\n", "created_at": "2015-03-10T13:26:12Z", "updated_at": "2015-03-11T05:27:45Z", "html_url": "https://github.com/google/oauth2client/pull/143#discussion_r26120557", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/143", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/26120557"}, "html": {"href": "https://github.com/google/oauth2client/pull/143#discussion_r26120557"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/143"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/26120557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/26120615", "pull_request_review_id": null, "id": 26120615, "diff_hunk": "@@ -0,0 +1,139 @@\n+# Copyright 2015 Google Inc. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"OAuth 2.0 utitilies for Google Developer Shell environment.\"\"\"\n+\n+import json\n+import os\n+\n+from oauth2client import client\n+\n+\n+DEVSHELL_ENV = 'DEVSHELL_CLIENT_PORT'\n+\n+\n+class Error(Exception):\n+  \"\"\"Errors for this module.\"\"\"\n+  pass\n+\n+\n+class CommunicationError(Error):\n+  \"\"\"Errors for communication with the Developer Shell server.\"\"\"\n+\n+\n+class NoDevshellServer(Error):\n+  \"\"\"Error when no Developer Shell server can be contacted.\"\"\"\n+\n+\n+# The request for credential information to the Developer Shell client socket is\n+# always an empty PBLite-formatted JSON object, so just define it as a constant.\n+CREDENTIAL_INFO_REQUEST_JSON = '[]'\n+\n+\n+class CredentialInfoResponse(object):\n+  \"\"\"Credential information response from Developer Shell server.\n+\n+  The credential information response from Developer Shell socket is a\n+  PBLite-formatted JSON array with fields encoded by their index in the array:\n+    * Index 0 - user email\n+    * Index 1 - default project ID. None if the project context is not known.\n+    * Index 2 - OAuth2 access token. None if there is no valid auth context.\n+  \"\"\"\n+\n+  def __init__(self, json_string):\n+    \"\"\"Initialize the response data from JSON PBLite array.\"\"\"\n+    pbl = json.loads(json_string)\n+    if not isinstance(pbl, list):\n+      raise ValueError('Not a list: ' + str(pbl))\n+    self.user_email = pbl[0] if len(pbl) else None", "path": "oauth2client/devshell.py", "position": null, "original_position": 59, "commit_id": "c8eaffae9edc82044956ea995a0ecea3061c81fa", "original_commit_id": "701abfd2cc96f2a6073269447e2f95de78bb5d90", "user": {"login": "skelterjohn", "id": 334294, "avatar_url": "https://avatars2.githubusercontent.com/u/334294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelterjohn", "html_url": "https://github.com/skelterjohn", "followers_url": "https://api.github.com/users/skelterjohn/followers", "following_url": "https://api.github.com/users/skelterjohn/following{/other_user}", "gists_url": "https://api.github.com/users/skelterjohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelterjohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelterjohn/subscriptions", "organizations_url": "https://api.github.com/users/skelterjohn/orgs", "repos_url": "https://api.github.com/users/skelterjohn/repos", "events_url": "https://api.github.com/users/skelterjohn/events{/privacy}", "received_events_url": "https://api.github.com/users/skelterjohn/received_events", "type": "User", "site_admin": false}, "body": "error if len(pbl) != 3?\n", "created_at": "2015-03-10T13:27:04Z", "updated_at": "2015-03-11T05:27:45Z", "html_url": "https://github.com/google/oauth2client/pull/143#discussion_r26120615", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/143", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/26120615"}, "html": {"href": "https://github.com/google/oauth2client/pull/143#discussion_r26120615"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/143"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/26120615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}, {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/26123919", "pull_request_review_id": null, "id": 26123919, "diff_hunk": "@@ -0,0 +1,139 @@\n+# Copyright 2015 Google Inc. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+\"\"\"OAuth 2.0 utitilies for Google Developer Shell environment.\"\"\"\n+\n+import json\n+import os\n+\n+from oauth2client import client\n+\n+\n+DEVSHELL_ENV = 'DEVSHELL_CLIENT_PORT'\n+\n+\n+class Error(Exception):\n+  \"\"\"Errors for this module.\"\"\"\n+  pass\n+\n+\n+class CommunicationError(Error):\n+  \"\"\"Errors for communication with the Developer Shell server.\"\"\"\n+\n+\n+class NoDevshellServer(Error):\n+  \"\"\"Error when no Developer Shell server can be contacted.\"\"\"\n+\n+\n+# The request for credential information to the Developer Shell client socket is\n+# always an empty PBLite-formatted JSON object, so just define it as a constant.\n+CREDENTIAL_INFO_REQUEST_JSON = '[]'\n+\n+\n+class CredentialInfoResponse(object):\n+  \"\"\"Credential information response from Developer Shell server.\n+\n+  The credential information response from Developer Shell socket is a\n+  PBLite-formatted JSON array with fields encoded by their index in the array:\n+    * Index 0 - user email\n+    * Index 1 - default project ID. None if the project context is not known.\n+    * Index 2 - OAuth2 access token. None if there is no valid auth context.\n+  \"\"\"\n+\n+  def __init__(self, json_string):\n+    \"\"\"Initialize the response data from JSON PBLite array.\"\"\"\n+    pbl = json.loads(json_string)\n+    if not isinstance(pbl, list):\n+      raise ValueError('Not a list: ' + str(pbl))\n+    self.user_email = pbl[0] if len(pbl) else None", "path": "oauth2client/devshell.py", "position": null, "original_position": 59, "commit_id": "c8eaffae9edc82044956ea995a0ecea3061c81fa", "original_commit_id": "701abfd2cc96f2a6073269447e2f95de78bb5d90", "user": {"login": "aalexand", "id": 1519040, "avatar_url": "https://avatars1.githubusercontent.com/u/1519040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aalexand", "html_url": "https://github.com/aalexand", "followers_url": "https://api.github.com/users/aalexand/followers", "following_url": "https://api.github.com/users/aalexand/following{/other_user}", "gists_url": "https://api.github.com/users/aalexand/gists{/gist_id}", "starred_url": "https://api.github.com/users/aalexand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aalexand/subscriptions", "organizations_url": "https://api.github.com/users/aalexand/orgs", "repos_url": "https://api.github.com/users/aalexand/repos", "events_url": "https://api.github.com/users/aalexand/events{/privacy}", "received_events_url": "https://api.github.com/users/aalexand/received_events", "type": "User", "site_admin": false}, "body": "It's in the proto spirit to ignore extra fields so I did that.\n", "created_at": "2015-03-10T14:07:34Z", "updated_at": "2015-03-11T05:27:45Z", "html_url": "https://github.com/google/oauth2client/pull/143#discussion_r26123919", "pull_request_url": "https://api.github.com/repos/google/oauth2client/pulls/143", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/google/oauth2client/pulls/comments/26123919"}, "html": {"href": "https://github.com/google/oauth2client/pull/143#discussion_r26123919"}, "pull_request": {"href": "https://api.github.com/repos/google/oauth2client/pulls/143"}}, "reactions": {"url": "https://api.github.com/repos/google/oauth2client/pulls/comments/26123919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}}]}}}